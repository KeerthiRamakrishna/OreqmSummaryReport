<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_CanTSyn_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_Native/asc_CanTSyn_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_Native/asc_CanTSyn_requirements_AUTOSAR_SWS_TimeSyncOverCAN.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_Native/asc_CanTSyn_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_Native/asc_CanTSyn_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/common_req/CanTSyn_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:44:31 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_CanTSyn_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_Native/asc_CanTSyn_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_Native/asc_CanTSyn_requirements_AUTOSAR_SWS_TimeSyncOverCAN.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_Native/asc_CanTSyn_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_Native/asc_CanTSyn_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/common_req/CanTSyn_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">

    <specobject>
      <id>lim.CanTSyn.EB_INTREQ_CanTSyn_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      <!-- class: major, long term -->
      <!-- class-reason:
           * this is the designed functionality of the module -->
       A certain <application>CanTSyn</application> time domain needs to be configured to a partition
       that is on the same core as the Can controller that handles the PDU for that time domain. 
      </description>
      <rationale>
       Both the MainFunctions and the indications from the CanDrv need to be executed on the same core
       to ensure data consistency.
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_MulticoreHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_MulticoreHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    
    <specobject>
      <id>lim.CanTSyn.EB_INTREQ_CanTSyn_0002</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      <!-- class: major, long term -->
      <!-- class-reason:
           * this is the designed functionality of the module -->
       The <application>Csm</application> Main function must not interrupt the <application>CanTSyn</application> 
       Main function.
      </description>
      <rationale>
        The CanTSyn_IcvGenerationIndication() API triggered by the Csm main function should not interrupt the CanTSyn_GenerateIcv() function
        execution triggered by the CanTSyn main function because an unwanted state transition might occur.
        The two main functions could be configured to run on the same OS task or have the same priority.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>


  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSyn calls an API of the StbM, it shall use the Time Base ID
        of the Time Base referenced via the parameter CanTSynSynchronizedTimeBaseRef
        of the corresponding Time Domain. (RS_TS_20032, RS_TS_20038)
      </description>
      <furtherinfo> 
        Justifying rule: WRN.impl.needscoverage.count violation.
        CanTSyn calls an API of the StbM more than 10 times in the source code
      </furtherinfo>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2880</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4305</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4409</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4423</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4660</srcid><srcstatus/><internalId>872</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5022</srcid><srcstatus/><internalId>907</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5037</srcid><srcstatus/><internalId>909</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5242</srcid><srcstatus/><internalId>927</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5289</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6085</srcid><srcstatus/><internalId>984</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6807</srcid><srcstatus/><internalId>1120</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6829</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7066</srcid><srcstatus/><internalId>1161</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7224</srcid><srcstatus/><internalId>1180</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_001_Successful_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1584</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        A call to CanTSyn_Init() initializes all internal variables and sets the Time Synchronization over
        CAN to the initialized state. (RS_TS_00003, RS_TS_00004)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2171</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Sequence Counter (SC) shall be initialized with 0. (RS_TS_20033)
      </description>
      <comment>
       How to test:
         Verify that after initialization the Sequence Counter (SC) is set to 1 after calling CanIf_Transmit()
         for the SYNC message.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2181</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2217</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_011_ReinitializeInternalVariables_AtSecondCallOfCanTSyn_Init</srcid><srcstatus/><internalId>1555</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00088</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        On errors and exceptions, the CanTSyn module shall not modify its current
        module state but shall simply report the error event. (RS_TS_20034, SRS_BSW_00323)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_1995</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2332</srcid><srcstatus/><internalId>618</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2545</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3020</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3032</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_Det010_NoStateChanged</srcid><srcstatus/><internalId>1554</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_006_NoStateChanged_ReportDet</srcid><srcstatus/><internalId>1572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The byte order for time value signals in Time Synchronization messages is “Big Endian”. (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3667</srcid><srcstatus/><internalId>766</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3763</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4032</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4089</srcid><srcstatus/><internalId>817</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6628</srcid><srcstatus/><internalId>1098</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6689</srcid><srcstatus/><internalId>1103</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7031</srcid><srcstatus/><internalId>1157</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7133</srcid><srcstatus/><internalId>1170</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7180</srcid><srcstatus/><internalId>1174</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_008_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToSubDomain</srcid><srcstatus/><internalId>1552</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_015_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToGTM</srcid><srcstatus/><internalId>1559</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The DLC of SYNC, FUP, OFS and OFNS messages is 8 for classic CAN.
        The DLC of SYNC, FUP, OFS and OFNS messages is 16 for CAN FD if
        CanTSynUseExtendedMsgFormat is TRUE. (RS_TS_20035, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00010</srcid><srcstatus/><internalId>242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Depending on its type Time Synchronization messages may contain User Data
        according to the given message format. (RS_TS_20035, RS_TS_20037)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4322</srcid><srcstatus/><internalId>840</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4689</srcid><srcstatus/><internalId>875</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        User Data shall be read consistently from incoming
        Time Synchronization messages that contain User Data Fields. (RS_TS_20037)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3663</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        User Data shall be written consistently to outgoing
        Time Synchronization messages that contain User Data Fields.
        If the number of User Data Fields in a Time Synchronization message
        is greater than the number of User Data Bytes provided by the StbM,
        the remaining User Data Fields shall be set to 0 (default value).
        (RS_TS_20037)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4323</srcid><srcstatus/><internalId>841</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4690</srcid><srcstatus/><internalId>876</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        User Data shall be mapped to the StbM_UserDataType, whereas the byte number given in
        the message and by the StbM_UserDataType shall match (User Byte 0 mapped to StbM_UserDataType.userByte0 etc.).
        StbM_UserDataType.userDataLength shall be set to the Time Synchronization message type specific number of User Bytes.
        (RS_TS_20037)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4324</srcid><srcstatus/><internalId>842</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4691</srcid><srcstatus/><internalId>877</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        SYNC not CRC secured message format:
        Byte 0: Type = 0x10
        Byte 1: User Byte 1, default: 0
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: User Byte 0, default: 0
        Byte 4-7: SyncTimeSec = 32 bit LSB of the 48 bits Seconds part of the time
        If CanTSynUseExtendedMsgFormat = TRUE:
        Byte 8-15: reserved, always 0
        (RS_TS_20033, RS_TS_20035, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00015.NormalMessage</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00015.ExtendedMessage</srcid><srcstatus/><internalId>282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        FUP not CRC secured message format:
        Byte 0: Type = 0x18
        Byte 1: User Byte 2, default: 0
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 3), default: 0
           SGW (Bit 2)
            SyncToGTM = 0
            SyncToSubDomain = 1
           OVS = Overflow of seconds (Bit 1 to Bit 0)
        Byte 4-7: SyncTimeNSec = 32 Bit time stamp in nanoseconds
        If CanTSynUseExtendedMsgFormat = TRUE:
        Byte 8-15: reserved, always 0
        (RS_TS_20033, RS_TS_20035, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00016.NormalMessage</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00016.ExtendedMessage</srcid><srcstatus/><internalId>284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        SYNC CRC secured message format:
        Byte 0: Type = 0x20
        Byte 1: CRC
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: User Byte 0, default: 0
        Byte 4-7: SyncTimeSec = 32 bit LSB of the 48 bits Seconds part of the time
        If CanTSynUseExtendedMsgFormat = TRUE:
        Byte 8-15: reserved, always 0
        (RS_TS_20033, RS_TS_20035, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00017.NormalMessage</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00017.ExtendedMessage</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        FUP CRC secured message format:
        Byte 0: Type = 0x28
        Byte 1: CRC
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 3), default: 0
          SGW (Bit 2)
            SyncToGTM = 0
            SyncToSubDomain = 1
          OVS = Overflow of seconds (Bit 1 to Bit 0)
        Byte 4-7: SyncTimeNSec = 32 Bit time stamp in nanoseconds
        If CanTSynUseExtendedMsgFormat = TRUE:
        Byte 8-15: reserved, always 0
        (RS_TS_20033, RS_TS_20035, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00018.NormalMessage</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00018.ExtendedMessage</srcid><srcstatus/><internalId>288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        CanTSynUseExtendedMsgFormat shall always be FALSE for CAN 2.0 buses.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_753</srcid><srcstatus/><internalId>1383</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_936</srcid><srcstatus/><internalId>1387</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE, then the
        Normal Offset Message Format shall be used, i.e., Offset Messages with message Type 0x34, 0x44, 0x3C and 0x4C(RS_TS_20068).
      </description>
      <comment>
        For Normal Offset Message Format refer to chapter 7.3.2.1
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6184</srcid><srcstatus/><internalId>990</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6213</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6260</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7436</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_001_Successful_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1584</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is TRUE, then the Extended Offset Message Format shall be used, i.e.,
        Offset Messages with message Type 0x54 and 0x64.(RS_TS_20068)
      </description>
      <comment>
        For Extended Offset Message Format refer to chapter 7.3.2.2
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00131</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00126</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        OFS not CRC secured message format:
        Byte 0: Type = 0x34
        Byte 1: User Byte 1, default: 0
        Byte 2: D = Time Domain 16 to 31 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: User Byte 0, default: 0
        Byte 4-7: OfsTimeSec = 32 Bit offset time value in seconds
        (RS_TS_20033, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4000</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4057</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_002_MasterSendsOFS_TxConfirmation_After3s_Result_NotOK_SendNewOFS</srcid><srcstatus/><internalId>1568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00127</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        OFNS not CRC secured message format:
        Byte 0: Type = 0x3C
        Byte 1: User Byte 2, default: 0
        Byte 2: D = Time Domain 16 to 31 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 1), default: 0
                SGW (Bit 0)
                   - SyncToGTM = 0
                   - SyncToSubDomain = 1
        Byte 4-7: OfsTimeNSec = 32 Bit offset time value in nanoseconds
        (RS_TS_20033, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4114</srcid><srcstatus/><internalId>822</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00128</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        OFS CRC secured message format:
        Byte 0: Type = 0x44
        Byte 1: CRC
        Byte 2: D = Time Domain 16 to 31 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: User Byte 0, default: 0
        Byte 4-7: OfsTimeSec = 32 Bit offset time value in seconds
        (RS_TS_20033, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3982</srcid><srcstatus/><internalId>803</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4042</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        OFNS CRC secured message format:
        Byte 0: Type = 0x4C
        Byte 1: CRC
        Byte 2: D = Time Domain 16 to 31 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 1), default: 0
                SGW (Bit 0)
                   - SyncToGTM = 0
                   - SyncToSubDomain = 1
        Byte 4-7: OfsTimeNSec = 32 Bit offset time stamp in nanoseconds
        (RS_TS_20033, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4099</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf,R21-11</source>
      <version>1</version>
      <description>
        OFS not CRC secured message format for CAN FD PDUs:
        Byte 0: Type = 0x54
        Byte 1: User Byte 2, default: 0
        Byte 2: D = Time Domain 16 to 31 (Bit 7 to Bit 4)
        SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 1), default: 0
        SGW (Bit 0)
        SyncToGTM = 0
        SyncToSubDomain = 1
        Byte 4: User Byte 0, default: 0
        Byte 5: User Byte 1, default: 0
        Byte 6: reserved, default: 0
        Byte 7: reserved, default: 0
        Byte 8-11: OfsTimeSec = 32 Bit offset time value in seconds
        Byte 12-15: OfsTimeNSec = 32 Bit offset time value in nanoseconds
        (RS_TS_20033, RS_TS_20036, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3999</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_011_MasterSendsOFS_TxConfirmationArrives_Extended</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        OFS CRC secured message format for CAN FD PDUs:
        Byte 0: Type = 0x64
        Byte 1: CRC
        Byte 2: D = Time Domain 16 to 31 (Bit 7 to Bit 4)
        SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 1), default: 0
        SGW (Bit 0)
        SyncToGTM = 0
        SyncToSubDomain = 1
        Byte 4: User Byte 0, default: 0
        Byte 5: User Byte 1, default: 0
        Byte 6: reserved, default: 0
        Byte 7: reserved, default: 0
        Byte 8-11: OfsTimeSec = 32 Bit offset time value in seconds
        Byte 12-15: OfsTimeNSec = 32 Bit offset time value in nanoseconds
        (RS_TS_20033, RS_TS_20036, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3979</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_002_Successful_OFS_Extended_Transmission</srcid><srcstatus/><internalId>1585</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_025_ExtOfsMaster_CRC_NoIcv</srcid><srcstatus/><internalId>1704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        A master shall transmit SYNC, FUP, OFS and OFNS messages by calling CanIf_Transmit with
        the PduId derived via CanTSynGlobalTimePduRef of the corresponding Time Domain. (RS_TS_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4202</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4728</srcid><srcstatus/><internalId>883</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4975</srcid><srcstatus/><internalId>903</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_016_StbM_GetCurrentVirtualLocalTime_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1560</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_007_CanIf_Transmit_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1573</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        A Time Master shall start each Time Synchronization sequence for a Synchronized Time Base
        with a SYNC message. (RS_TS_20031, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3890</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_024_ExtSyncMaster_ExtFupMaster_CRC_NoIcv</srcid><srcstatus/><internalId>1703</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        A Time Master shall finish each Time Synchronization sequence for a Synchronized Time Base
        with a FUP message. (RS_TS_20031, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5267</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_024_ExtSyncMaster_ExtFupMaster_CRC_NoIcv</srcid><srcstatus/><internalId>1703</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If a transmission of a SYNC or FUP message fails (CanTSyn_TxConfirmation() is called with E_NOT_OK),
        CanTSyn shall reset the state machine to start with a new SYNC transmission again once it is due.
        (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3081</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_009_MasterSendsSyncFramesPeriodically_SC_WrapsAround</srcid><srcstatus/><internalId>1553</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest14_001_MasterSendsSync_TxConfirmationNOK</srcid><srcstatus/><internalId>1650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If configured as Time Master of a Synchronized Time Domain (refer to CanTSynGlobalTimeDomain)
        the CanTSyn module shall periodically transmit SYNC messages with the cycle CanTSynGlobalTimeTxPeriod (ECUC_CanTSyn_00017)
        if the GLOBAL_TIME_BASE bit within the timeBaseStatus is set and CanTSynGlobalTimeTxPeriod is
        unequal to 0 and if the associated cyclicMsgResumeCounter is not running (see 7.4.5).
        The cyclic transmission shall be started in the earliest possible CanTSyn_MainFunction()
        call once the requirements above are fulfilled.
        (RS_TS_20031, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4747</srcid><srcstatus/><internalId>887</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5054</srcid><srcstatus/><internalId>912</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5065</srcid><srcstatus/><internalId>913</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_006_MasterSendsSyncFrames_TxConfirmation_After3s_Result_E_NOT_OK</srcid><srcstatus/><internalId>1550</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_018_SYNC_FUP_CyclicTransmission</srcid><srcstatus/><internalId>1562</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_019_GlobalTimeBaseBit_StopsCyclicTxSYNCFrame</srcid><srcstatus/><internalId>1563</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_002_Immediate_Transmission</srcid><srcstatus/><internalId>1637</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_002_ImmediateTransmission_SYNC_TxPeriod_Zero</srcid><srcstatus/><internalId>1641</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest12_001_ConfirmTxFromCanIfTransmit</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The SYNC and FUP sequence shall not be interrupted, neither by time synchronization messages of the same Time
        Domain nor by time synchronization messages of other Time Domains if the same CAN ID is used for the
        Time Synchronization messages. (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00029.SameTimeDomain</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00029.DiffTimeDomain</srcid><srcstatus/><internalId>324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Depending on CanTSynGlobalTimeTxCrcSecured the SYNC / FUP message shall be of type:
        CanTSynGlobalTimeTxCrcSecured     SYNC                              FUP
        CRC_NOT_SUPPORTED                 0x10                              0x18
                                      SYNC not CRC secured message      FUP not CRC secured message
        CRC_SUPPORTED                     0x20                              0x28
                                      SYNC CRC secured message          FUP CRC secured message
       (RS_TS_20033, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_80</srcid><srcstatus/><internalId>597</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        A transmitter of FUP messages (Time Master) is using as trigger condition for SYNC
        to FUP that the debounceCounter value reaches 0. (RS_TS_20031, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4388</srcid><srcstatus/><internalId>846</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5005</srcid><srcstatus/><internalId>905</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5192</srcid><srcstatus/><internalId>920</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5262</srcid><srcstatus/><internalId>928</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Each transmission request of a SYNC message shall be monitored for a transmit confirmation timeout.
        If CanTSyn_TxConfirmation() is not called within 3 sec after transmission request,
        CanTSyn shall wait until CanTSyn_TxConfirmation() is called (with E_OK or E_NOT_OK) and
        send no FUP message and instead
        reset the state machine to start with a new SYNC transmission once it is due. (RS_TS_20034, RS_TS_20035)
      </description>
      <comment>
        A timeout of 3 sec is used to avoid an overflow of the SyncTimeNSec value in the FUP message
        (value range: 0 .. 2(pow)32 - 1 ns), if CanTSyn_TxConfirmation() is called late.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.NotReceivedIn3s.Wait</srcid><srcstatus/><internalId>430</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_OK.Reset</srcid><srcstatus/><internalId>431</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</srcid><srcstatus/><internalId>432</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        A Time Master shall start each Time Synchronization sequence for an Offset Time Base with an OFS message.
        (RS_TS_20031, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3920</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_011_MasterSendsOFS_TxConfirmationArrives_Extended</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE, a Time Master shall finish each
        Time Synchronization sequence for an Offset Time Base with an OFNS message.
        (RS_TS_20031, RS_TS_20036, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4559</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the transmission of an OFS or an OFNS message fails
        (i.e., CanTSyn_TxConfirmation() for the corresponding PDU
        is called with parameter result set to E_NOT_OK), the state machine shall be reset
        to start with a new OFS transmission again (once it is due).
        (RS_TS_20034, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3057</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest15_001_MasterSendsOFS_TxConfirmationNOK</srcid><srcstatus/><internalId>1654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If configured as Time Master of an Offset Time Domain (refer to CanTSynGlobalTimeDomain)
        the CanTSyn module shall periodically transmit OFS messages with the cycle CanTSynGlobalTimeTxPeriod
        if the GLOBAL_TIME_BASE bit within the timeBaseStatus of the referenced Time Base CanTSynSynchronizedTimeBaseRef
        is set and CanTSynGlobalTimeTxPeriod is unequal to 0
        and if the associated cyclicMsgResumeCounter is not running. 
        The cyclic transmission shall be started in the earliest possible CanTSyn_MainFunction call once the requirements above are fulfilled.(RS_TS_20031, RS_TS_20036)
      </description>
      <comment>
        earliest possible” means:
        In the next CanTSyn_MainFunction(), because GLOBAL_TIME_BASE is set outside the CanTSyn_MainFunction().
        In the current CanTSyn_MainFunction(), when switching from immediate to cyclic transmission
        (because this decision is made inside the CanTSyn_MainFunction()).
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4219</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4437</srcid><srcstatus/><internalId>853</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4451</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_003_MasterSendsOFS_TxConfirmation_After3s_Result_OK_LoadDebounce_SendNewOFS</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_009_OFS_OFNS_CyclicTransmission</srcid><srcstatus/><internalId>1575</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_010_GlobalTimeBaseBit_StopsCyclicTxOFSFrame</srcid><srcstatus/><internalId>1576</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_002_Immediate_Transmission</srcid><srcstatus/><internalId>1637</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_004_GlobalTimeBaseBit_StopsImmediateTransmission</srcid><srcstatus/><internalId>1639</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_001_ImmediateTransmission_OFS_TxPeriod_Zero</srcid><srcstatus/><internalId>1640</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest12_001_ConfirmTxFromCanIfTransmit</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The OFS and OFNS sequence shall not be interrupted, neither by time synchronization messages of the same Time
        Domain nor by time synchronization messages of other Time Domains
        if the same CAN ID is used for the Time Synchronization messages. (RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00039.SameTimeDomain</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00039.DiffTimeDomain</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        A transmitter of OFNS messages (Time Master) is using as trigger condition for OFS
        to OFNS that the debounceCounter value reaches 0. (RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4577</srcid><srcstatus/><internalId>863</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5348</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Depending on CanTSynGlobalTimeTxCrcSecured (ECUC_CanTSyn_00015) the OFS / OFNS message shall be of type:
                                      CanTSynGlobalTimeTxCrcSecured             OFS                          OFNS
        CAN                           CRC_NOT_SUPPORTED                         0x34                         0x3C
                                                                     OFS not CRC secured message  OFNS not CRC secured message
                                      CRC_SUPPORTED                             0x44                         0x4C
                                                                       OFS CRC secured message      OFNS CRC secured message
        CAN FD                        CRC_NOT_SUPPORTED                         0x54                      Not available
        (CanTSynUseExtendedMsgFormat                                 OFS not CRC secured message
        = TRUE)                       CRC_SUPPORTED                             0x64                      Not available
                                                                       OFS CRC secured message
        (RS_TS_20033, RS_TS_20036, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_91</srcid><srcstatus/><internalId>598</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_003_MasterSendsOFS_TxConfirmation_After3s_Result_OK_LoadDebounce_SendNewOFS</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_017_Invalid_OFNS_NanosecondsAboveDefinedRange</srcid><srcstatus/><internalId>1607</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_020_Invalid_OFS_extended</srcid><srcstatus/><internalId>1612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Each OFS transmission request shall be monitored with the transmit confirmation timeout.
        If CanTSyn_TxConfirmation() is not called within 3 sec after transmission request, CanTSyn shall
        wait until CanTSyn_TxConfirmation() is called (with E_OK or E_NOT_OK) and
        send no OFNS message and
        instead reset the state machine to start with a new OFS transmission once it is due.
        (RS_TS_20034, RS_TS_20036)
      </description>
      <comment>
        A reset of the state machine in the event of a timeout avoids, that a possibly outdated Offset Time is sent.
        Instead the latest Offset Time via StbM_GetOffset() is retrieved.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait</srcid><srcstatus/><internalId>433</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset</srcid><srcstatus/><internalId>434</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSyn_SetTransmissionMode(Controller, Mode) is called and parameter Mode equals
        CANTSYN_TX_OFF, all transmit request from CanTSyn shall be omitted on this CAN channel.
        (RS_TS_20031, RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3170</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3216</srcid><srcstatus/><internalId>741</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_007_TransmissionMode_OFF</srcid><srcstatus/><internalId>1551</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_TransmissionMode_ON_OFF</srcid><srcstatus/><internalId>1587</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_TransmissionMode_ON_OFF_Extended</srcid><srcstatus/><internalId>1588</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSyn_SetTransmissionMode(Controller, Mode) is called and parameter Mode equals
        CANTSYN_TX_ON, all transmit request from CanTSyn on this CAN channel shall be able to
        be transmitted. (RS_TS_20031, RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3169</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3215</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_006_MasterSendsSyncFrames_TxConfirmation_After3s_Result_E_NOT_OK</srcid><srcstatus/><internalId>1550</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_013_CanIf_Transmit_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1557</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_022_MasterSendsSync_TransmitionRetriesLimit</srcid><srcstatus/><internalId>1566</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_TransmissionMode_ON_OFF</srcid><srcstatus/><internalId>1587</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_TransmissionMode_ON_OFF_Extended</srcid><srcstatus/><internalId>1588</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynGlobalTimeDebounceTime (ECUC_CanTSyn_00045) is greater
        than 0 for a Time Base, CanTSyn shall always do debouncing for the corresponding
        Timesync PDUs as described below, otherwise CanTSyn shall not do any debouncing. (RS_TS_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4387</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4581</srcid><srcstatus/><internalId>864</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5004</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5190</srcid><srcstatus/><internalId>918</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest12_001_ConfirmTxFromCanIfTransmit</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        CanTSynGlobalTimeDebounceTime (ECUC_CanTSyn_00045) represents the
        debounce value of a PDU specific debounceCounter that shall be started after the
        Timesync PDU has been sent (i.e., CanTSyn_TxConfirmation() for the corresponding PDU
        is called with parameter result set to E_OK).
        CanTSyn shall decrement the debounceCounter value on each invocation of CanTSyn_MainFunction().
        (RS_TS_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3049</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3073</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4391</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4576</srcid><srcstatus/><internalId>862</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5008</srcid><srcstatus/><internalId>906</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5175</srcid><srcstatus/><internalId>917</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5263</srcid><srcstatus/><internalId>929</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5300</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5349</srcid><srcstatus/><internalId>944</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5391</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_Det010_NoStateChanged</srcid><srcstatus/><internalId>1554</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00125</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        A new Timesync PDU shall only be sent if the corresponding debounceCounter
        has a value equal or less than 0.(RS_TS_20031)
      </description>
      <comment>
        Since the decrement of the debounceCounter takes place in the CanTSyn_MainFunction()
        call but the start of the counter takes place when the Timesync PDU has been sent
        (either in the subsequent CanTSyn_MainFunction() call or in the transmit confirmation callback function)
        the effective debounce time will be equal or larger than CanTSynGlobalTimeDebounceTime.
        The extension of the debounce time shall be limited to the value of CanTSynMainFunctionPeriod.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4396</srcid><srcstatus/><internalId>848</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4582</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5191</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynImmediateTimeSync (ECUC_CanTSyn_00043) is set to TRUE for a
        Time Base, CanTSyn shall check on each CanTSyn_MainFunction() call by
        calling StbM_GetTimeBaseUpdateCounter(), if the timeBaseUpdateCounter
        of the corresponding Time Base has changed.(RS_TS_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4427</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest10_001_Immediate_Transmission</srcid><srcstatus/><internalId>1636</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_003_Immediate_Transmission</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       If
       • CanTSynImmediateTimeSync is set to TRUE and
       • the timeBaseUpdateCounter of a Time Base has changed and
       • the GLOBAL_TIME_BASE bit of the timeBaseStatus is set and
       • the debounceCounter is 0 and
       • no transmission of the corresponding PDU is pending (CanTSyn_TxConfirmation has been called with E_OK or E_NOT_OK),
         CanTSyn shall trigger an immediate transmission of Time Synchronization messages
         for the corresponding Time Base.(RS_TS_20031)
      </description>
      <comment>
        timeBaseStatus can be obtained by StbM_GetTimeBaseStatus(),
        StbM_BusGetCurrentTime() or StbM_GetCurrentTime().
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4417</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5031</srcid><srcstatus/><internalId>908</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest10_001_Immediate_Transmission</srcid><srcstatus/><internalId>1636</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_003_Immediate_Transmission</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynImmediateTimeSync (ECUC_CanTSyn_00043) is set to TRUE,
        cyclicMsgResumeCounter and CanTSynCyclicMsgResumeTime
        (ECUC_CanTSyn_00044) shall be considered.(RS_TS_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4213</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4438</srcid><srcstatus/><internalId>854</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4737</srcid><srcstatus/><internalId>884</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest10_002_Immediate_Transmission</srcid><srcstatus/><internalId>1637</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_003_Immediate_Transmission</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        CanTSynCyclicMsgResumeTime (ECUC_CanTSyn_00044) represents the
        timeout value of a cyclicMsgResumeCounter that shall be started after
        an immediate transmission of a SYNC or an OFS message has been successfully completed
        (i.e., CanTSyn_TxConfirmation() for the corresponding PDU is called with parameter result set to E_OK),
        asynchronously to the cyclic Timesync message transmission.
        CanTSynCyclicMsgResumeTime shall be decremented on each invocation
        of CanTSyn_MainFunction(), if no Timesync PDU is transmitted asynchronously.(RS_TS_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00120.SYNC</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00120.OFS</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the cyclicMsgResumeCounter has reached a value equal or less than zero,
        CanTSyn shall resume cyclic Timesync message transmission by sending either a
        SYNC or OFS message.(RS_TS_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00121.SYNC</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00121.OFS</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the cyclicMsgResumeCounter is started CanTSyn shall stop cyclic Timesync
        message transmission.(RS_TS_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4739</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5053</srcid><srcstatus/><internalId>911</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest10_002_Immediate_Transmission</srcid><srcstatus/><internalId>1637</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_003_Immediate_Transmission</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The transmitter of an Offset Time Base (Time Master) shall perform the following steps
        to distribute the Offset Time Base exactly:
        1. Retrieve current Offset Time via StbM_GetOffset()
        2. Write second portion of the Offset Time to OfsTimeSec
        3. Write nanosecond portion of the Offset Time to OfsTimeNSec (RS_TS_20036)
      </description>
      <comment>
        OFS and OFNS messages shall not be time stamped.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4301</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest12_001_ConfirmTxFromCanIfTransmit</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        OVS has to set within FUP messages if the transmitter detects a nanosecond overflow greater than the defined range
        of StbM_TimeStampType.nanoseconds [SWS_CanTSyn_00045] whereas the left over part of seconds which does not fit into
        StbM_TimeStampType.nanoseconds will be written to OVS. (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4857</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_014_OverflowOfSecond_WhenMasterSendsSyncFrame</srcid><srcstatus/><internalId>1558</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The SGW value (Time Gateway synchronization status) shall be retrieved from the time base synchronization status.
        If the SYNC_TO_GATEWAY bit within timeBaseStatus is not set the SGW value shall be SyncToGTM. Otherwise the
        SGW value shall be set to SyncToSubDomain. (RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00030.SyncToGTM.SGW</srcid><srcstatus/><internalId>327</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00030.SyncToSubDomain.SGW</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        A Sequence Counter (SC) of 4bit is representing numbers from 0 to 15 per Time Domain. The Sequence Counter shall be
        independent between SYNC and OFS messages and shall be incremented by 1 continuously on every transmission request
        of a SYNC or OFS message. It wraps around at 15 to 0 again. (RS_TS_20033, RS_TS_20035, RS_TS_20036)
      </description>
      <comment>
        How to test:
        CanTSyn shall send SYNC messages and OFS messages until SC reaches 15 and it shall check if the SC is re-initialized with 0
        meaning that when sending next message the counter shall be again 1.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4333</srcid><srcstatus/><internalId>843</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4720</srcid><srcstatus/><internalId>881</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_009_MasterSendsSyncFramesPeriodically_SC_WrapsAround</srcid><srcstatus/><internalId>1553</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_005_SC_WrapsAround_15To0</srcid><srcstatus/><internalId>1571</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_001_SC_Wraps_Around</srcid><srcstatus/><internalId>1635</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Sequence Counter (SC) value for a FUP message shall be set to the SC value
        of the corresponding SYNC message. The SC value for an OFNS message shall be
        set to the SC value of the corresponding OFS message.
        (RS_TS_20033, RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00049.FUP.SCUnchanged</srcid><srcstatus/><internalId>329</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00049_OFNS_SCUnchanged</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC8H2F() as defined in [5] shall be used to calculate the CRC if
        configured. (RS_TS_20033, RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3705</srcid><srcstatus/><internalId>775</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3806</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4050</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4107</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5444</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_001_Successful_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1584</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The DataID will be calculated as DataID = DataIDList[SC], where DataIDList (ECUC_CanTSyn_00024 :
        ECUC_CanTSyn_00025 : ECUC_CanTSyn_00026 : ECUC_CanTSyn_00041 : )
        is given by configuration for each message Type. (RS_TS_20033, RS_TS_20035, RS_TS_20036)
      </description>
      <comment>
        A specific DataID out of a predefined DataIDList ensures the identification of data elements
        of Time Synchronization messages.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3691</srcid><srcstatus/><internalId>772</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3778</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4046</srcid><srcstatus/><internalId>813</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4103</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5438</srcid><srcstatus/><internalId>953</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_001_Successful_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1584</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE, the CRC shall be calculated over
        Time Synchronization message Byte 2 to Byte 7 and DataID, where Byte 2 is
        applied first, followed by the other bytes in ascending order, and DataID
        last.
        If CanTSynUseExtendedMsgFormat is TRUE, the CRC shall be calculated over
        Time Synchronization message Byte 2 to Byte 15 and DataID for Extended
        Timesync message formats, where Byte 2 is applied first, followed by the
        other bytes in ascending order, and DataID last.
        (RS_TS_20033, RS_TS_20035, RS_TS_20036, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.IcvAuthExtendedCRC</srcid><srcstatus/><internalId>578</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00055.CRC.NormalMessage</srcid><srcstatus/><internalId>397</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00055.CRC.ExtendedMessage</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00055.CRC.AuthenticatedExtendedMessage</srcid><srcstatus/><internalId>399</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        For each transmission of a Time Synchronization message the CanTSyn module
        shall assemble the message as follows:
        1. Calculate OVS (FUP only)
        2. Calculate SGW (FUP, OFNS and Extended OFS)
        3. Calculate SC
        4. Copy all data to the appropriate position within the related message
        5. Calculate CRC (configuration dependent)
        (RS_TS_20033, RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00056</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept SYNC message with Type equal to 0x20 and a correct CRC value if
        CanTSynRxCrcValidated is configured to CRC_VALIDATED. (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00057.SYNC.ValidTypeAndCRC</srcid><srcstatus/><internalId>331</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidType</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidCRC</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept SYNC message with Type equal to 0x10 if CanTSynRxCrcValidated is configured
        to CRC_NOT_VALIDATED. (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00058.SYNC.ValidType</srcid><srcstatus/><internalId>334</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00058.SYNC.InvalidType</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept SYNC message with Type equal to 0x10 or 0x20 if CanTSynRxCrcValidated is
        configured to CRC_IGNORED. (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00059.SYNC.ValidType</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00059.SYNC.InvalidType</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00109</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept a SYNC message with Type equal to 0x10
        or a SYNC message with Type equal to 0x20 and a correct CRC value
        if CanTSynRxCrcValidated is configured to CRC_OPTIONAL. (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00109.ValidSYNCMessage.NoCRC</srcid><srcstatus/><internalId>338</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00109.ValidSYNCMessage.CRC</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00109.InvalidType.SYNCMessage</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00109.InvalidCRC.SYNCMessage</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept FUP message with an identical Sequence Counter to the value of the corresponding
        SYNC message and Type equal to 0x28 and a correct CRC value if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
        (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00060.ValidFUPMessage</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00060.InvalidSC.FUPMessage</srcid><srcstatus/><internalId>343</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00060.InvalidType.FUPMessage</srcid><srcstatus/><internalId>344</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00060.InvalidCRC.FUPMessage</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept FUP message with an identical Sequence Counter to the value of the corresponding
        SYNC message and Type equal to 0x18 if CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED. (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00061.ValidFUPMessage</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00061.InvalidSC.FUPMessage</srcid><srcstatus/><internalId>347</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00061.InvalidType.FUPMessage</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept FUP message with an identical sequence counter to the value of the corresponding SYNC
        message and Type equal to 0x18 or 0x28 if CanTSynRxCrcValidated is configured to CRC_IGNORED. (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00062.ValidFUPMessage</srcid><srcstatus/><internalId>349</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00062.InvalidSC.FUPMessage</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00062.InvalidType.FUPMessage</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept FUP message with an identical sequence counter to the value of the corresponding SYNC
        message and Type equal to 0x18 or or a FUP message with an identical sequence counter to the value of the corresponding
        SYNC message and Type equal to 0x28 and a correct CRC value if CanTSynRxCrcValidated is
        configured to CRC_OPTIONAL. (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00110</srcid><srcstatus/><internalId>248</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        For each configured Time Slave (CanTSynGlobalTimeSlave) the CanTSyn module shall observe the reception timeout
        CanTSynGlobalTimeFollowUpTimeout (ECUC_CanTSyn_00006) between the SYNC and its FUP message. If the reception
        timeout occurs the sequence shall be reset (i.e. waiting for a new SYNC message). (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3360</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_006_FUP_OFNS_ignored</srcid><srcstatus/><internalId>1594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        For a valid pair of SYNC and FUP messages with successfully validated set of values SyncTimeSec, OVS and SyncTimeNSec
        a new Synclocal Time Tuple [TLSync;T3VLT] (refer to [5]),consisting of the Global Time value and the associated value of the Virtual Local Time, 
        shall be calculated (refer to[SWS_CanTSyn_00146], [SWS_CanTSyn_00147], [SWS_CanTSyn_00148]) and forwarded to the StbM 
        module via StbM_BusSetGlobalTime.
        (RS_TS_20032, RS_TS_20034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6806</srcid><srcstatus/><internalId>1119</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept an OFS message with Type equal to 0x44 or 0x64 and a correct
        CRC value if CanTSynRxCrcValidated is configured to CRC_VALIDATED. (RS_TS_20034, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00065.Valid.NormalOFSMessage</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00065.InvalidType.NormalOFSMessage</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00065.InvalidCRC.NormalOFSMessage</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept an OFS message with Type equal to 0x34 or 0x54
        if CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED. (RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00066.Valid.NormalOFSMessage</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00066.InvalidType.NormalOFSMessage</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept an OFS message with Type equal to 0x34, 0x44,
        0x54 or 0x64 if CanTSynRxCrcValidated is configured to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00067.Valid.OFSMessage</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00067.InvalidType.OFSMessage</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept an OFS message with Type equal to 0x34 or 0x54
        or an OFS message with Type equal to 0x44 or 0x64 and a correct CRC value
        if CanTSynRxCrcValidated is configured to CRC_OPTIONAL. (RS_TS_20034, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.NoCRC</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.CRC</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00113.InvalidCRC.OFSMessage</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00113.InvalidType.OFSMessage</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept an OFNS message with an identical Sequence
        Counter to the value of the corresponding OFS message and Type equal to 0x4C
        and a correct CRC value if CanTSynRxCrcValidated is configured to
        CRC_VALIDATED. (RS_TS_20034, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00068.ValidOFNSMessage</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00068.InvalidSC.OFNSMessage</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00068.InvalidType.OFNSMessage</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00068.InvalidCRC.OFNSMessage</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept an OFNS message with an identical Sequence
        Counter to the value of the corresponding OFS message and Type equal to 0x3C if
        CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED. (RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00069.ValidOFNSMessage</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00069.InvalidSC.OFNSMessage</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00069.InvalidType.OFNSMessage</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept an OFNS message with an identical Sequence
        Counter to the value of the corresponding OFS message and Type equal to 0x3C or
        0x4C if CanTSynRxCrcValidated is configured to CRC_IGNORED. (RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00070.ValidOFNSMessage</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00070.InvalidSC.OFNSMessage</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00070.InvalidType.OFNSMessage</srcid><srcstatus/><internalId>393</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall only accept an OFNS message with an identical Sequence Counter
        to the value of the corresponding OFS message and Type equal to 0x3C
        or an OFNS message with an identical Sequence Counter to the value
        of the corresponding OFS message and Type equal to 0x4C and a correct CRC value
        if CanTSynRxCrcValidated is configured to CRC_OPTIONAL. (RS_TS_20034, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00114.ValidOFNSMessage.NoCRC</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00114.ValidOFNSMessage.CRC</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00114.InvalidType.OFNSMessage</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00114.InvalidCRC.OFNSMessage</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00114.InvalidSC.OFNSMessage</srcid><srcstatus/><internalId>390</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE, the CanTSyn shall observe for each
        configured Time Slave (CanTSynGlobalTimeSlave) the reception timeout
        CanTSynGlobalTimeFollowUpTimeout (ECUC_CanTSyn_00006 : ) between
        the OFS and its OFNS message. If the reception timeout occurs the sequence shall
        be reset (i.e. waiting for a new OFS message).
        (RS_TS_20034, RS_TS_20036, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3535</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        For a valid pair of OFS and OFNS messages and if CanTSynUseExtendedMsgFormat is FALSE, the
        CanTSyn shall calculate a new Time Tuple, consisting of the Offset Time value and the associated
        value of the Virtual Local Time(according to [SWS_CanTSyn_00074]) and forward it to the StbM module via
        StbM_BusSetGlobalTime().
        If CanTSynUseExtendedMsgFormat is TRUE, the CanTSyn shall calculate a new Time Tuple, consisting of the
        Offset Time value and associated value of the Virtual Local Time(according to [SWS_CanTSyn_00074]) after
        receiving a valid OFS message and forward the new Offset Time value to the StbM module via
        StbM_BusSetGlobalTime().
        (RS_TS_20032, RS_TS_20034, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00072.StbM.NormalMessage</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00072.StbM.ExtendedMessage</srcid><srcstatus/><internalId>405</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        On an invocation of StbM_BusSetGlobalTime() the parameter pathDelay of the
        measureDataPtr structure shall be set to 0. (RS_TS_20034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7025</srcid><srcstatus/><internalId>1155</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7065</srcid><srcstatus/><internalId>1160</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7174</srcid><srcstatus/><internalId>1172</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7223</srcid><srcstatus/><internalId>1179</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The receiver of an Offset Time Base shall perform the following steps to assemble
        the Offset Time:
          1. Get second portion of the Offset Time out of OfsTimeSec
          2. Get nanosecond portion of the Offset Time out of OfsTimeNSec
          3. Retrieve current Virtual Local Time value via StbM_GetCurrentVirtualLocalTime()
          (RS_TS_20036)
      </description>
      <comment>
        OFS and OFNS messages are not time stamped.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7029</srcid><srcstatus/><internalId>1156</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7132</srcid><srcstatus/><internalId>1169</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7178</srcid><srcstatus/><internalId>1173</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_006_NoHyteresis_Stuck_SC</srcid><srcstatus/><internalId>1678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        OVS (FUP only) has to be considered on the receiver side to retrieve the second portion of the received
        Synchronized Time Base. (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6781</srcid><srcstatus/><internalId>1115</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_015_OVS_Overflow_SecondsPortion</srcid><srcstatus/><internalId>1605</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the SGW value (FUP, OFNS and Extended OFS) is set to SyncToSubDomain, the
        SYNC_TO_GATEWAY bit within timeBaseStatus shall be set to TRUE. Otherwise, it
        shall be set to FALSE.
        (RS_TS_20032, RS_TS_20034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00133.SyncToGTM.SGW</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00133.SyncToSubDomain.SGW</srcid><srcstatus/><internalId>407</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Sequence Counter of each SYNC message must match to the Sequence Counter of the next incoming
        FUP message of the same Time Domain. Otherwise, the contents of the already received SYNC message
        shall be discarded and the received FUP message shall be ignored. (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00076.SYNCMatchFUP.SC</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00076.NoMatchSYNC_FUP.SC</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE, the Sequence Counter of each OFS
        message must match to the Sequence Counter of the next incoming OFNS message
        of the same Time Domain. If the SCs do not match, the received OFNS message
        shall be ignored and the contents of the already received OFS message shall be
        discarded.
        (RS_TS_20034, RS_TS_20036, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00077.OFSMatchOFNS.SC</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00077.NoMatchOFS_OFNS.SC</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Sequence Counter Jump Width between two consecutive SYNC or two
        consecutive OFS messages of the same Time Domain shall be greater than 0 and
        smaller than or equal to CanTSynGlobalTimeSequenceCounterJumpWidth.
        Otherwise, a Time Slave shall ignore the respective SYNC / OFS message.
        If the CanTSynGlobalTimeSequenceCounterJumpWidth value is set to 0, the
        Time Slave shall not do Sequence Counter Jump Width checks.(RS_TS_20034, RS_-
        TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.SequenceCounter</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00079</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon reception of a SYNC (or OFS) message a Time Slave shall check the Sequence Counter
        of the received message per Time Domain against the configured value
        CanTSynGlobalTimeSequenceCounterJumpWidth (according to [SWS_CanTSyn_00078]),
        unless it is the first message at Startup or
        after a Time Base update timeout has been detected (TIMEOUT bit set in Time Base synchronization status timeBaseStatus).
        (RS_TS_20034, RS_TS_20035, RS_TS_20036)
      </description>
      <comment>
          There are scenarios when it makes sense to skip the check of the Sequence Counter Jump Width, e.g. at startup
        (Time Slaves start asynchronously to the Time Master) or after a message timeout to allow for Sequence Counter
        (re-)synchronization. In case of a timeout the error has been detected already by the timeout monitoring,
        there is no benefit in generating a subsequent error by the jump width check.
          According to [SWS_CanTSyn_00078] the Sequence Counter validation will still discard messages with a Sequence Counter Jump Width
        being zero (i.e., stuck Sequence Counter) during Time Base update timeout.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.SequenceCounter</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00143</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        While a Time Base Timeout is present (TIMEOUT bit is
        set in Time Base synchronization status timeBaseStatus), CanTSyn shall discard
        SYNC/FUP (or OFS/OFNS) messages until it has successfully validated (refer to
        [SWS_CanTSyn_00078]) n consecutive SYNC/FUP (or OFS/OFNS) message pairs (n
        is given by the parameter CanTSynGlobalTimeSequenceCounterHysteresis).
       (RS_TS_20034)
      </description>
      <comment>
          Note: [SWS_CanTSyn_00143] improves robustness against a scenario with a buggy
          master implementation or injection of invalid master messages (sequence counter
          increments greater than CanTSynGlobalTimeSequenceCounterJumpWidth. In
          such a scenario any valid message pair would cause the Time Slave to leave the
          Timeout state (refer to [SWS_CanTSyn_00079]) although the sequence counter is not
          incremented correctly. An additional hysteresis avoids this.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.SequenceCounter</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon SYNC message RX indication for a Synchronized Time Domain, the Time Slave shall within the RX indication routine (
        CanTSyn_RxIndication)
        1. • If HW timestamping is enabled,
            – Retrieve T2CAN as ingress timestamp from CAN controller HW value via CanIf_GetIngressTimestamp
           • else
            – Retrieve T2VLT as ingress timestamp by reading current Virtual Local Time value via StbM_GetCurrentVirtualLocalTime
        2. Retrieve T0 from the SYNC message data
          (RS_TS_20035, RS_TS_20070)
      </description>
      <comment>
          If SW timestamping is used, SW should immediately establish a protection
          against interruptions in the RX indication callback until T2VLT is retrieved (if called in
          context of the RX interrupt with interrupt nesting disabled, interrupt protection is typically implicitly ensured by the controller).
          Immediately protecting against interruptions means that there shall be no frame checks before. Once the interrupts are locked, it is
          ok to check whether the received message is a SYNC message for which a snapshot of
          the Virtual Local Time shall be taken, but no other frame checks (e.g., CRC validation,
          SC validation, etc.) shall be done before taking T2VLT. Once T2VLT has been sampled
          it is ok to remove the protection against interruptions and to make the necessary validations. This means that T2VLT will be taken 
          even if the succeeding validations fail and thus making the snapshot superfluous.
          It is replaced by CanTSyn.ASR22-11.SWS_CanTSyn_00144.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00144</srcid><srcstatus/><internalId>182</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.SyncReceptionDelay</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>       

      <specobject>
      <id>CanTSyn.SWS_CanTSyn_00145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon reception of a FUP message, CanTSyn shall
         1. retrieve the following data from the FUP message
            • the OVS field and
            • the SyncTimeNSec field
         2. calculate T4 = OVS + SyncTimeNSec
         in the RX indication routine (CanTSyn_RxIndication).(RS_TS_20035)
         Based on the ingress timestamp T2VLT (or T2CAN respectively), CanTSyn can determine
         the value for the local instance of the Global Time for the Time Slave, TLSync.
         TLSync is calculated in 3 different ways depending on
              • whether HW timestamping is enabled or not and
              • whether StbM is using for internal time measurement the same time source as
         the CanTSyn for Virtual Local Time
         This can be done either in the TX confirmation routine (CanTSyn_TxConfirmation)
         or in the subsequent CanTSyn_MainFunction invocation.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00145</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.SyncReceptionDelay</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       If
        • HW timestamping is disabled,
        CanTSyn shall after successful capture of T4 (refer to [SWS_CanTSyn_00145]):
          1. capture the current Virtual Local Time via StbM_GetCurrentVirtualLocalTime from StbM as T3VLT and
          2. calculate TLSync = (T0 + T4) + (T3VLT - T2VLT)
          (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00146</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.SyncReceptionDelay</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       If
       • HW timestamping is enabled and
       • CanTSyn is using for internal time measurement the same time source as the
         StbM for Virtual Local Time,
       CanTSyn shall after successful capture of T4 (refer to [SWS_CanTSyn_00145]):
        1. retrieve current time from CAN controller HW value via CanIf_GetCurrentTime as T3CAN,
        2. set T2VLT = T2CAN,
        3. set T3VLT = T3CAN and
        4. calculate TLSync = (T0 + T4) + (T3VLT - T2VLT)
       (RS_TS_20035, RS_TS_20070)
      </description>
      <comment>
      In case CanTSyn uses for internal time measurement the same time source as
      the StbM for Virtual Local Time, i.e., Virtual Local Time is read from CAN controller
      HW, T3VLT and T2VLT equal T3CAN and T2CAN, respectively
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00147</srcid><srcstatus/><internalId>185</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.SyncReceptionDelay</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       If
       • HW timestamping is enabled and
       • CanTSyn is using for internal time measurement a different time source as the StbM for Virtual Local Time,
       CanTSyn shall after successful capture of T4 (refer to [SWS_CanTSyn_00145]):
        1. establish a protection against interruptions
        2. retrieve current time from CAN controller HW value via CanIf_GetCurrentTime as T3CAN,
        3. capture the current Virtual Local Time via StbM_GetCurrentVirtualLocalTime from StbM as T3VLT
        4. release the protection against interruptions
        5. calculate T2VLT = T3VLT - (T3CAN - T2CAN),
        6. calculate TLSync = (T0 + T4) + (T3CAN - T2CAN)
        (RS_TS_20035, RS_TS_20070)
      </description>
      <comment>
      In the above sequence protection against interruptions is important, because
      any interruption of the sequence of step 2 and step 3 would worsen the precision of
      local instance of the Global Time, which depends on time tuple [TLSync;T3VLT].
      It is replaced by CanTSyn.ASR22-11.SWS_CanTSyn_00148.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00148</srcid><srcstatus/><internalId>186</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.SyncReceptionDelay</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       If for a Synchronized Time Domain a cyclic or immediate transmission of a SYNC message is requested,
       the Time Master shall
        1. get current Synchronized Time Base’s Time Tuple as [T0SYNC;T0VLT] via StbM_-
           BusGetCurrentTime and
        2. call CanIf_Transmit with the seconds portion of T0SYNC written to SyncTimeSec field of the message data.
         (RS_TS_20035)
       After a successful transmission of the SYNC message the CanTSyn captures the
       egress timestamp of the SYNC message.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4654</srcid><srcstatus/><internalId>869</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_008_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToSubDomain</srcid><srcstatus/><internalId>1552</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_014_OverflowOfSecond_WhenMasterSendsSyncFrame</srcid><srcstatus/><internalId>1558</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_015_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToGTM</srcid><srcstatus/><internalId>1559</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_015_OVS_Overflow_SecondsPortion</srcid><srcstatus/><internalId>1605</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest12_001_ConfirmTxFromCanIfTransmit</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       Upon successful SYNC message TX confirmation
       for a Synchronized Time Domain and if no TX confirmation timeout has occurred (refer
       to [SWS_CanTSyn_00033]) the Time Master shall within the TX confirmation routine (CanTSyn_TxConfirmation)
       • if HW timestamping is enabled,
        – Retrieve T1CAN as egress timestamp from CAN controller HW value via CanIf_GetEgressTimestamp
       • else
        – Retrieve T1VLT as egress timestamp by reading current Virtual Local Time value via StbM_GetCurrentVirtualLocalTime
      (RS_TS_20035, RS_TS_20070)
      </description>
      <comment>
      If SW timestamping is used, SW should immediately establish a protection
      against interruptions in the TX confirmation callback - unless interrupt nesting is disabled (when this is typically done implicitly by the controller). Any delay of StbM_-
      GetCurrentVirtualLocalTime would impair precision.
      Based on the egress timestamps T1CAN and T1VLT, respectively, CanTSyn can calculate
      the delay between reading the tuple [T0SYNC;T0VLT] from StbM via StbM_BusGetCurrentTime and actual transmission of T0SYNC in the SYNC message on the bus.
      T4, which accounts for that delay, is calculated in 3 different ways depending on
      • whether HW timestamping is enabled or not and
      • whether the StbM is using for internal time measurement the same time source as the CanTSyn for Virtual Local Time
      This can be done either in the TX confirmation routine (CanTSyn_TxConfirmation)
      or in the subsequent CanTSyn_MainFunction invocation.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00150.SwTimeStamp</srcid><srcstatus/><internalId>417</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00150.HwTimeStamp</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       If
       • HW timestamping is disabled,
       CanTSyn shall after successful capture of the egress timestamp (refer to
       [SWS_CanTSyn_00150]):
        • calculate T4 = T0SYNC_ns + (T1VLT - T0VLT)(RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6683</srcid><srcstatus/><internalId>1101</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_008_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToSubDomain</srcid><srcstatus/><internalId>1552</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_014_OverflowOfSecond_WhenMasterSendsSyncFrame</srcid><srcstatus/><internalId>1558</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_015_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToGTM</srcid><srcstatus/><internalId>1559</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_015_OVS_Overflow_SecondsPortion</srcid><srcstatus/><internalId>1605</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest12_001_ConfirmTxFromCanIfTransmit</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00152</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       If
       • HW timestamping is enabled and
       • CanTSyn is using for internal time measurement the same time source as the StbM for Virtual Local Time,
       CanTSyn shall after successful capture of the egress timestamp (refer to [SWS_CanTSyn_00150])
       • calculate T4 = T0SYNC_ns + T1VLT - T0VLT, with T1VLT = T1CAN
       (RS_TS_20035, RS_TS_20070)

      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.HWtimeStamp</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    
        <specobject>
      <id>CanTSyn.SWS_CanTSyn_00153</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       If
        • HW timestamping is enabled and
        • CanTSyn is using for internal time measurement a different time source as the StbM for Virtual Local Time,
       CanTSyn shall after successful capture of the egress timestamp (refer to
       [SWS_CanTSyn_00150]):
        1. establish a protection against interruptions
        2. read TcurrentTime_CAN via CanIf_GetCurrentTime,
        3. read T1VLT via StbM_GetCurrentVirtualLocalTime,
        4. release the protection against interruptions and
        5. calculate T4 = T0SYNC_ns + (T1VLT - T0VLT) - (TcurrentTime_CAN - T1CAN)
        (RS_TS_20035, RS_TS_20070)

      </description>
      <comment>
      In the above sequence protection against interruptions is important, because
      any interruption of the sequence of step 2 and step 3 would worsen the precision of T4
      and hence the Global Time.
      The term TcurrentTime_CAN - T1CAN compensates the interrupt delay from egress
      timestamping in HW until T1VLT can be sampled in CanTSyn_TxConfirmation via
      StbM_GetCurrentVirtualLocalTime.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.HWtimeStamp</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00154</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       If for a Synchronized Time Domain a FUP message is due, the Time Master shall
       1. call CanIf_Transmit and
       2. write the following data to the message:
         a) seconds portion of T4 (T4 &gt;= 1s) to the OVS field and
        (b) nanoseconds portion of T4 to the SyncTimeNSec field
        (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4855</srcid><srcstatus/><internalId>889</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_008_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToSubDomain</srcid><srcstatus/><internalId>1552</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_014_OverflowOfSecond_WhenMasterSendsSyncFrame</srcid><srcstatus/><internalId>1558</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_015_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToGTM</srcid><srcstatus/><internalId>1559</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_015_OVS_Overflow_SecondsPortion</srcid><srcstatus/><internalId>1605</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest12_001_ConfirmTxFromCanIfTransmit</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00080</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC8H2F() as defined in [5] shall be used to validate the CRC if configured.
        (RS_TS_20034, RS_TS_20035و RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6326</srcid><srcstatus/><internalId>1002</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The DataID shall be calculated as DataID = DataIDList[SC], where DataIDList
        is given by configuration for each message Type. (RS_TS_20034, RS_TS_20035)
      </description>
      <comment>
        A specific DataID out of a predefined DataIDList ensures the identification
        of data elements of time synchronization messages.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6196</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6236</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6273</srcid><srcstatus/><internalId>1000</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6292</srcid><srcstatus/><internalId>1001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE, the CRC shall be calculated over
        Time Synchronization message Byte 2 to Byte 7 and DataID, where Byte 2 is
        applied first, followed by the other Bytes in ascending order, and DataID last.
        If CanTSynUseExtendedMsgFormat is TRUE, the CRC shall be calculated over
        Time Synchronization message Byte 2 to Byte 15 and DataID for Extended
        Timesync message formats, where Byte 2 is applied first, followed by the other bytes
        in ascending order, and DataID last.
        (RS_TS_20034, RS_TS_20035, RS_TS_20036, RS_TS_20068)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</srcid><srcstatus/><internalId>400</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00085.CRC.ExtendedMessage</srcid><srcstatus/><internalId>401</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00086</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        For each received Time Synchronization message the CanTSyn shall validate the
        message as follows (all conditions must match):
        1. Type matches depending on the CanTSynRxCrcValidated parameter
        2. SC value is within the accepted range (refer to [SWS_CanTSyn_00078] and
        [SWS_CanTSyn_00079])
        3. D matches to the defined Time Domain range for each Type
        4. D matches to one of the configured Time Domains (given by parameter
        CanTSynGlobalTimeDomainId)
        5. SyncTimeNSec (FUP / OFNS / Extended OFS only) matches the defined
        range of StbM_TimeStampType.nanoseconds.
        6. CRC (including DataID) matches depending on the
        CanTSynRxCrcValidated parameter
        (RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR23-11.SWS_CanTSyn_00086</srcid><srcstatus/><internalId>271</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.SequenceCounter</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        For each received time synchronization message the CanTSyn module shall disassemble
        the message after successful validation (refer to [SWS_CanTSyn_00086]).
        (RS_TS_20034, RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00087</srcid><srcstatus/><internalId>245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        On an invocation of StbM_BusSetGlobalTime() the parameter pathDelay of the
        measureDataPtr structure shall be set to 0. (RS_TS_20034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6684</srcid><srcstatus/><internalId>1102</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall support Time Validation, if CanTSynTimeValidationSupport
        (ECUC_CanTSyn_00050) set to TRUE. (RS_TS_00034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5270</srcid><srcstatus/><internalId>932</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6811</srcid><srcstatus/><internalId>1123</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_003_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1581</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_004_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynTimeValidationSupport is enabled and
        CanTSynEnableTimeValidation for the Time Domain is enabled,
        CanTSyn shall do time recording for Time Validation for that Time Domain. (RS_TS_00034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5271</srcid><srcstatus/><internalId>933</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6812</srcid><srcstatus/><internalId>1124</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_003_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1581</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_004_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If time recording for Time Validation is enabled for a Time Domain
        (refer to [SWS_CanTSyn_00115] and [SWS_CanTSyn_00116]) and
        CanTSyn is configured as Time Slave for that Time Domain,
        CanTSyn shall call StbM_CanSetSlaveTimingData() upon successful reception of a FUP message. 
        StbM_CanSetSlaveTimingData() shall be called after StbM_BusSetGlobalTime().
        (RS_TS_00034)
      </description>
      <comment>
        StbM_BusSetGlobalTime() shall be called first,
        because it updates the Synclocal Time Tuple (refer to [4]),
        which is required by StbM_CanSetSlaveTimingData().
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6814</srcid><srcstatus/><internalId>1125</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00140</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetSlaveTimingData()
        CanTSyn shall pass following values
        the sequence counter value from the transmitter (Time Master),
        the segment id of the physical channel on which the Sync message has been
        received (refer to parameter CanTSynGlobalTimeNetworkSegmentId
        T2VLT as syncIngressTimestamp for the SYNC Message (refer to step 1 in
        [SWS_CanTSyn_00144], [SWS_CanTSyn_00147] and [SWS_CanTSyn_00148]),
        T0 + T4 as preciseOriginTimestamp received from the Time Master (refer to
        [SWS_CanTSyn_00144] and [SWS_CanTSyn_00145])
        to the function by the parameter measureDataPtr.
        Struct members
        measureDataPtr-&gt;referenceLocalTimestamp and
        measureDataPtr-&gt;refrenceGlobalTimestamp
        shall be passed as 0.
        (RS_TS_00034)
      </description>
      <comment>
        The CanTSyn passes 0 to avoid undefined values.
        The structure members referenceLocalTimestamp and referenceGlobalTimestamp
        will be set by the StbM via StbM_CanSetSlaveTimingData() internally.(refer to [SWS_StbM_00471]in [5]).
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00140.SequenceCounter</srcid><srcstatus/><internalId>408</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00140.syncIngressTimestamp</srcid><srcstatus/><internalId>409</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00140.preciseOriginTimestamp</srcid><srcstatus/><internalId>410</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00140.UnusedData</srcid><srcstatus/><internalId>411</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00140.segmentId</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00141</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If time recording for Time Validation is enabled for a Time Domain
        (refer to [SWS_CanTSyn_00115] and [SWS_CanTSyn_00116]) and
        CanTSyn is configured as Time Master for that Time Domain,
        CanTSyn shall call StbM_CanSetMasterValidationData()
        upon successful transmission of a SYNC message message (refer to Figure 4).
        (RS_TS_00034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5273</srcid><srcstatus/><internalId>934</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_003_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1581</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_004_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetMasterValidationData() CanTSyn shall
        pass the following data
        the sequence counter as sent in the Sync message
        the segment id of the physical channel on which the Sync message has been
        sent (refer to parameter CanTSynGlobalTimeNetworkSegmentId)
        T1vlt as the syncEgressTimestamp of SYNC Message (refer to [SWS_CanTSyn_00149], [SWS_CanTSyn_00152] and
        [SWS_CanTSyn_00153]), 
        T0SYN + (T1VLT - T0VLT) as preciseOriginTimestamp (refer to [SWS_CanTSyn_00149], [SWS_CanTSyn_00151], [SWS_CanTSyn_00152]
        and [SWS_CanTSyn_00153]), 
        to the function by the parameter measureDataPtr. (RS_TS_00034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00142.SequenceCounter</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00142.syncEgressTimestamp</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00142.preciseOriginTimestamp</srcid><srcstatus/><internalId>415</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00142.segmentId</srcid><srcstatus/><internalId>416</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00089</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        CanTSyn shall use following errors:
        Type or error                                   Related error code             Error value
        API service called
        with wrong PDU or SDU.                          CANTSYN_E_INVALID_PDUID        0x01
        API service used in
        un-initialized state                            CANTSYN_E_UNINIT               0x02
        A pointer is NULL                               CANTSYN_E_NULL_POINTER         0x03
        CanTSyn initialization failed                   CANTSYN_E_INIT_FAILED          0x04
        API called with invalid parameter               CANTSYN_E_PARAM                0x05
        Invalid Controller index                        CANTSYN_E_INV_CTRL_IDX         0x06
        (SRS_BSW_00385)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_1996</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_Det010_NoStateChanged</srcid><srcstatus/><internalId>1554</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_006_NoStateChanged_ReportDet</srcid><srcstatus/><internalId>1572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00090</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Module              Header File           Imported Type
        ComStack_Types      ComStack_Types.h      PduIdType
                            ComStack_Types.h      PduInfoType
                            ComStack_Types.h      PduLengthType
        StbM                Rte_StbM_Type.h       StbM_CanTimeMasterMeasurementType
                            Rte_StbM_Type.h       StbM_CanTimeSlaveMeasurementType
                            Rte_StbM_Type.h       StbM_SynchronizedTimeBaseType
                            Rte_StbM_Type.h       StbM_TimeBaseStatusType
                            Rte_StbM_Type.h       StbM_TimeStampShortType
                            Rte_StbM_Type.h       StbM_TimeStampType
                            Rte_StbM_Type.h       StbM_UserDataType
                            StbM.h                StbM_MeasurementType
                            StbM.h                StbM_VirtualLocalTimeType
        Std                 Std_Types.h           Std_ReturnType
                            Std_Types.h           Std_VersionInfoType
        (RS_TS_20035)
      </description>
      <comment>
        This requirement is informational only. See CanTSyn.ASR22-11.SWS_CanTSyn_00090 for R22-11 version of this requirement.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00091</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:             CanTSyn_ConfigType
        Kind:             Structure
        Elements:         implementation specific          Type          --          Comment      --
        Description:      This is the base type for the configuration
                          of the Time Synchronization over CAN. A pointer to an instance
                          of this structure will be used in the initialization of
                          the Time Synchronization over CAN. The content of this structure
                          is defined in chapter 10 Configuration specification.
        Available via:    CanTSyn.h
        (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Types.h_51</srcid><srcstatus/><internalId>595</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00092</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:             CanTSyn_TransmissionModeType
        Kind:             Enumeration
        Range:            CANTSYN_TX_OFF - Transmission Disabled
                          CANTSYN_TX_ON - Transmission Enabled
        Description:      Handles the enabling and disabling of the transmission mode
        Available via:    CanTSyn.h
        (RS_TS_20035)
      </description>
      <comment>
        Verify that CanTSyn_TransmissionModeType is available for other modules.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Types.h_26</srcid><srcstatus/><internalId>594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00093</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_Init
        Syntax: void CanTSyn_Init(
                                    const CanTSyn_ConfigType* configPtr
                                 )
        Service ID[hex]: 0x01
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): configPtr - Pointer to selected configuration structure
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: This function initializes the Time Synchronization over CAN.
        Available via: CanTSyn.h
        (RS_TS_20035)
      </description>
      <furtherinfo> 
        Justifying rule: WRN.swuts.needscoverage.count violation.
        The error code CanTSyn_Init() is called in more than 10 test cases.
      </furtherinfo>
      <comment>
        CANTSYN_E_INIT_FAILED is reported as specified in
        [reference to SWS BSW General] by SWS_BSW_00050.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2134</srcid><srcstatus/><internalId>608</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest02_APISyntax</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest03_APISyntax</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest04_APISyntax</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest05_APISyntax</srcid><srcstatus/><internalId>1496</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest06_APISyntax</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest07_APISyntax</srcid><srcstatus/><internalId>1498</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest08_APISyntax</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest09_APISyntax</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest10_APISyntax</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest_13_OnlySyncM_OnlySyncS_DET_OFF_IDSM_OFF</srcid><srcstatus/><internalId>1504</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_006_MasterSendsSyncFrames_TxConfirmation_After3s_Result_E_NOT_OK</srcid><srcstatus/><internalId>1550</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_GetVersionInfo
        Syntax: void CanTSyn_GetVersionInfo(
                                              Std_VersionInfoType* versioninfo
                                           )
        Service ID[hex]: 0x02
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): None
        Parameters (inout): None
        Parameters (out): versioninfo - Pointer to where to store the version information of this module.
        Return value: None
        Description: Returns the version information of this module.
        Available via: CanTSyn.h
        (RS_TS_20035)
      </description>
      <furtherinfo> 
        Justifying rule: WRN.swuts.needscoverage.count violation.
        The error code CanTSyn_GetVersionInfo() is tested in more than 10 test cases.
      </furtherinfo>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_1982</srcid><srcstatus/><internalId>600</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest02_APISyntax</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest03_APISyntax</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest04_APISyntax</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest05_APISyntax</srcid><srcstatus/><internalId>1496</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest06_APISyntax</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest07_APISyntax</srcid><srcstatus/><internalId>1498</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest08_APISyntax</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest09_APISyntax</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest10_APISyntax</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest_13_OnlySyncM_OnlySyncS_DET_OFF_IDSM_OFF</srcid><srcstatus/><internalId>1504</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_Det002_GetVersionInfo_InvalidParam</srcid><srcstatus/><internalId>1546</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_012_ValidModuleVersion</srcid><srcstatus/><internalId>1556</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_SetTransmissionMode
        Syntax: void CanTSyn_SetTransmissionMode(
                                                   uint8 CtrlIdx,
                                                   CanTSyn_TransmissionModeType Mode
                                                )
        Service ID[hex]: 0x03
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): CtrlIdx - Index of the CAN channel
                         Mode - CANTSYN_TX_OFF, CANTSYN_TX_ON
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: This API is used to turn on and off the TX capabilities of the CanTSyn.
        Available via: CanTSyn.h
       (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2319</srcid><srcstatus/><internalId>616</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest02_APISyntax</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest03_APISyntax</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest04_APISyntax</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest05_APISyntax</srcid><srcstatus/><internalId>1496</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest10_APISyntax</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest_13_OnlySyncM_OnlySyncS_DET_OFF_IDSM_OFF</srcid><srcstatus/><internalId>1504</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1545</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_009_MasterSendsSyncFramesPeriodically_SC_WrapsAround</srcid><srcstatus/><internalId>1553</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function CanTSyn_SetTransmissionMode() shall inform the DET,
        if development error detection is enabled (CanTSynDevErrorDetect is set to TRUE)
        and if function call has failed because of the following reasons:
          - Invalid CtrlIdx (CANTSYN_E_INV_CTRL_IDX)
          - Invalid Mode (CANTSYN_E_PARAM)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2337</srcid><srcstatus/><internalId>619</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2365</srcid><srcstatus/><internalId>620</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_Det004__SetTransmissionMode_InvalidParam_InvalidCtrl</srcid><srcstatus/><internalId>1548</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_RxIndication
        Syntax: void CanTSyn_RxIndication(
                                            PduIdType RxPduId,
                                            const PduInfoType* PduInfoPtr
                                         )
        Service ID[hex]: 0x42
        Sync/Async: Synchronous
        Reentrancy: Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in): RxPduId - ID of the received I-PDU.
                         PduInfoPtr - Contains the length (SduLength) of the received PDU,
                         a pointer to a buffer (SduDataPtr) containing the PDU,
                         and the MetaData related to this PDU.
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: Indication of a received I-PDU from a lower layer communication interface module.
        Available via: CanTSyn.h
        (RS_TS_20035)
      </description>
      <furtherinfo> 
        Justifying rule: WRN.swuts.needscoverage.count violation.
        The error code CanTSyn_RxIndication() is tested in more than 10 test cases.
      </furtherinfo>
      <comment>
        The callback function CanTSyn_RxIndication() called by the CAN Interface and implemented by the CanTSyn module.
        It is called in case of a receive indication event of the CAN Driver.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2845</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest02_APISyntax</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest03_APISyntax</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest04_APISyntax</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest05_APISyntax</srcid><srcstatus/><internalId>1496</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest06_APISyntax</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest07_APISyntax</srcid><srcstatus/><internalId>1498</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest08_APISyntax</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest09_APISyntax</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest10_APISyntax</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest_13_OnlySyncM_OnlySyncS_DET_OFF_IDSM_OFF</srcid><srcstatus/><internalId>1504</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00097</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The callback function CanTSyn_RxIndication() shall inform the DET, if development error detection
        is enabled (CANTSYN_DEV_ERROR_DETECT is set to TRUE) and if function call has failed because of
        the following reasons:
        - Invalid PDU ID (CANTSYN_E_INVALID_PDUID)
        - PduInfoPtr or SduDataPtr equals NULL_PTR (CANTSYN_E_NULL_POINTER)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
        Until this service returns, the CAN Interface will not access canSduPtr.
        The canSduPtr is only valid and can be used by upper layers until the indication returns.
        The CAN Interface guarantees that the number of configured bytes for this CanTSynRxPduId is valid.
        The call context is either on interrupt level (interrupt mode) or on task level (polling mode).
        This callback service is re-entrant for multiple CAN controller usage.
        Using polling mode as call context significantly increases the latency and thus reduces the precision.
        It is therefore highly recommended to only use interrupt mode.
        The CanTSyn module must be initialized correctly bofore calling this API.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00097.PduInfoPtr.E_NULL_POINTER.RxIndication</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00097.SduDataPtr.E_NULL_POINTER.RxIndication</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00097.INVALID_PDUID.RxIndication</srcid><srcstatus/><internalId>363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00099</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_TxConfirmation
        Syntax: void CanTSyn_TxConfirmation(
                                              PduIdType TxPduId,
                                              Std_ReturnType result
                                           )
        Service ID[hex]: 0x40
        Sync/Async: Synchronous
        Reentrancy: Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in): TxPduId - ID of the I-PDU that has been transmitted.
                         result - E_OK: The PDU was transmitted. E_NOT_OK: Transmission of the PDU failed.
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: The lower layer communication interface module confirms the transmission
                     of an I-PDU.
        Available via: CanTSyn.h
        (RS_TS_20035)
      </description>
      <furtherinfo> 
        Justifying rule: WRN.swuts.needscoverage.count violation.
        The error code CanTSyn_TxConfirmation() is tested in more than 10 test cases.
      </furtherinfo>
      <comment>
        The callback function CanTSyn_TxConfirmation() is called by
        the CAN Interface and implemented by the CanTSyn module.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3004</srcid><srcstatus/><internalId>719</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest02_APISyntax</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest03_APISyntax</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest04_APISyntax</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest05_APISyntax</srcid><srcstatus/><internalId>1496</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest06_APISyntax</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest07_APISyntax</srcid><srcstatus/><internalId>1498</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest08_APISyntax</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest09_APISyntax</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest10_APISyntax</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest_13_OnlySyncM_OnlySyncS_DET_OFF_IDSM_OFF</srcid><srcstatus/><internalId>1504</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1545</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_Det010_NoStateChanged</srcid><srcstatus/><internalId>1554</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_011_ReinitializeInternalVariables_AtSecondCallOfCanTSyn_Init</srcid><srcstatus/><internalId>1555</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00100</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The callback function CanTSyn_TxConfirmation() shall inform the DET, if development error detection
        is enabled (CANTSYN_DEV_ERROR_DETECT is set to TRUE) and if function call has failed because of the
        following reasons:
        - Invalid PDU ID (CANTSYN_E_INVALID_PDUID) i.e., a PDU ID not configured by parameter
          CanTSynGlobalTimeMasterConfirmationHandleId
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
        The call context is either on interrupt level (interrupt mode) or on task level (polling mode).
        This callback service is re-entrant for multiple CAN controller usage.
        Using polling mode as call context significantly increases the latency and thus reduces the precision.
        It is therefore highly recommended to only use interrupt mode.
        The CanTSyn module is initialized correctly before calling this API.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3031</srcid><srcstatus/><internalId>722</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_Det003__TxConfirmation_InvalidParam</srcid><srcstatus/><internalId>1547</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_Det010_NoStateChanged</srcid><srcstatus/><internalId>1554</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_006_NoStateChanged_ReportDet</srcid><srcstatus/><internalId>1572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00102</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_MainFunction
        Syntax: void CanTSyn_MainFunction(
                                            void
                                         )
        Service ID[hex]: 0x06
        Description: Main function for cyclic call / resp. Timesync message transmission
        Available via: CanTSyn_SchM.h
        (RS_TS_20035)
      </description>
      <furtherinfo> 
        Justifying rule: WRN.swuts.needscoverage.count violation.
        The error code CanTSyn_MainFunction() is called in more than 10 test cases.
      </furtherinfo>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3102</srcid><srcstatus/><internalId>734</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest02_APISyntax</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest03_APISyntax</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest04_APISyntax</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest05_APISyntax</srcid><srcstatus/><internalId>1496</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest06_APISyntax</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest07_APISyntax</srcid><srcstatus/><internalId>1498</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest08_APISyntax</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest09_APISyntax</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest10_APISyntax</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest_13_OnlySyncM_OnlySyncS_DET_OFF_IDSM_OFF</srcid><srcstatus/><internalId>1504</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_Det010_NoStateChanged</srcid><srcstatus/><internalId>1554</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_011_ReinitializeInternalVariables_AtSecondCallOfCanTSyn_Init</srcid><srcstatus/><internalId>1555</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_006_NoStateChanged_ReportDet</srcid><srcstatus/><internalId>1572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00103</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The frequency of invocations of CanTSyn_MainFunction() is determined by the configuration parameter
        CanTSynMainFunctionPeriod (refer to ECUC_CanTSyn_00019 : ). (RS_TS_20035)
      </description>
      <comment>
        This requirement is informational only.
        Rationale:
        This requirement gives information about the call of the function,
        which is not part of the implementation of this module.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00105</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        API function                          Header File        Description
        StbM_GetCurrentVirtualLocalTime       StbM.h             Returns the Virtual Local Time
                                                                 of the referenced Time Base.
        (RS_TS_20035)
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00106</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        API function                     Header File        Description                
        CanIf_Transmit                   CanIf.h            Requests transmission of a PDU.
        Crc_CalculateCRC8H2F             Crc.h              This service makes a CRC8 calculation
                                                            with the Polynomial 0x2F on Crc_Length.
        Det_ReportError                  Det.h              Service to report development errors.
        Det_ReportRuntimeError           Det.h              Service to report runtime errors. If a callout has 
                                                            been configured then this callout shall be called.
        StbM_BusGetCurrentTime           StbM.h             Returns the current Time Tuple, status
                                                            and User Data of the Time Base.
        StbM_BusSetGlobalTime            StbM.h             Allows the Timebase Provider Modules
                                                            to forward a new Global Time to the StbM.
        StbM_CanSetMasterTimingData      StbM_CanTSyn.h     Provides CAN Timesyn module specific data 
                                                            for a Time Master to the StbM.
        StbM_CanSetSlaveTimingData       StbM_CanTSyn.h     Provides CAN Timesyn module specific data 
                                                            for a Time Slave to the StbM.
        StbM_GetCurrentTime              StbM.h             Returns a time value (Local Time Base derived
                                                            from Global Time Base) in standard format.
                                                            Note: This API shall be called with locked
                                                            interrupts / within an Exclusive Area to prevent interruption
                                                            (i.e., the risk that the time stamp is outdated on return of the function call).
        StbM_GetOffset                   StbM.h             Allows the Timesync Modules to get the current Offset Time and
                                                            User Data.
        StbM_GetTimeBaseStatus           StbM.h             Returns detailed status information for a Synchronized
                                                            (or Pure Local) Time Base and, if called for an Offset Time Base,
                                                            for the Offset Time Base and the underlying Synchronized Time Base.
        StbM_GetTimeBaseUpdateCounter    StbM.h             Allows the Timesync Modules to detect, whether a Time Base should
                                                            be transmitted immediately in the subsequent "Bus"TSyn_Main
                                                            Function() cycle.
        (RS_TS_20035)
      </description>
      <comment>
        This requirement is informational only. See CanTSyn.ASR22-11.SWS_CanTSyn_00106 for the R22-11 version of this requirement.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00108</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Time Synchronization over CAN shall support the configuration for Time Master,
        Time Slave and Time Gateway. (RS_TS_20038)
      </description>
      <comment>
        This requirement is informational only.
        Rationale: The ability for this configuration is given by the configuration parameters and
        the existence is checked via VSMD
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Module Name CanTSyn
        Module Description              Configuration of the Synchronized Time-base Manager (StbM)
                                        module with respect to global time handling on CAN.
        Post-Build Variant Support      true
        Supported Config Variants       VARIANT-PRE-COMPILE
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name            CanTSynGeneral
        Description               This container holds the general parameters of the CAN-specific
                                  Synchronized Time-base Manager
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynDevErrorDetect
        Parent Container           CanTSynGeneral
        Description                Switches the development error detection and notification on or off.
                                     - true: detection and notification is enabled.
                                     - false: detection and notification is disabled.
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              false
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X  All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Cfg.h_22</srcid><srcstatus/><internalId>580</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Cfg.h_240</srcid><srcstatus/><internalId>582</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest02_APISyntax</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest06_APISyntax</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest07_APISyntax</srcid><srcstatus/><internalId>1498</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest08_APISyntax</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest09_APISyntax</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest10_APISyntax</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest_13_OnlySyncM_OnlySyncS_DET_OFF_IDSM_OFF</srcid><srcstatus/><internalId>1504</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynHardwareTimestampSupport
        Parent Container           CanTSynGeneral
        Description                Activate/Deactivate the hardware time stamping functionality of the
                                   CAN hardware. True: Timestamp is retrieved from the CAN hardware
                                   False: Timestamp is retrieved from the StbM
                                   Tags:
                                   atp.Status=draft
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value               --
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X  All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                          CanTSynMainFunctionPeriod
        Parent Container              CanTSynGeneral
        Description                   Schedule period of the main function CanTSyn_MainFunction. Unit: s.
        Multiplicity                  1
        Type                          EcucFloatParamDef
        Range                         0 .. INF
        Default value                 --
        Post-Build Variant Value      false
        Value Configuration Class
                                      Pre-compile time  X    All Variants
                                      Link time         --
                                      Post-build time   --
        Scope / Dependency scope:     local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                            CanTSynTimeValidationSupport
        Parent Container                CanTSynGeneral
        Description                     Switches support for Time Validation on or off.
                                        true: Time Validation is enabled.
                                        false: Time Validation is disabled.
        Type                            EcucBooleanParamDef
        Multiplicity                    1
        Post-Build Variant Support      false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynVersionInfo
        Parent Container           CanTSynGeneral
        Description                Activate/Deactivate the version information API (CanTSyn_GetVersionInfo).
                                   True: version information API activated False: version information API deactivated.
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              false
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Cfg.h_118</srcid><srcstatus/><internalId>581</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest06_APISyntax</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest07_APISyntax</srcid><srcstatus/><internalId>1498</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest08_APISyntax</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest09_APISyntax</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ComTest10_APISyntax</srcid><srcstatus/><internalId>1501</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name      CanTSynGlobalTimeDomain
        Description         This represents the existence of a global time domain on CAN. The CanTSyn module can
                            administrate several global time domains at the  same time that in itself form a hierarchy
                            of domains and sub-domains. If the CanTSyn exists it is assumed that at least one global
                            time domain exists.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                            CanTSynEnableTimeValidation
        Parent Container                CanTSynGlobalTimeDomain
        Description                     Enables/disables time recording for Time Validation
                                        for a specific Time Domain.
        Type                            EcucBooleanParamDef
        Multiplicity                    0..1
        Post-Build Variant Support      false
        Scope / Dependency              scope: local
                                        dependency:  Only valid if CanTSynTimeValidationSupport is TRUE.
                                        Value set according to parameter StbMEnableTimeValidation of the 
                                        referenced Time Base in the StbM.

      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeDomainId
        Parent Container           CanTSynGlobalTimeDomain
        Description                The global time domain ID.
        Multiplicity               1
        Type                       EcucIntegerParamDef
        Range                      0..31
        Default value              --
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynGlobalTimeNetworkSegmentId
        Parent Container                  CanTSynGlobalTimeDomain
        Description                       This represents the numerical identifier of the network on system level
                                          scope where this Global Time has been communicated on.
        Type                              EcucIntegerParamDef
        Multiplicity                      0..1
        Post-Build Variant Support        true
        Post-Build Variant Multiplicity   false
        Multiplicity Configuration Class  Pre-compile time X All Variants
                                          Link time        --
                                          Post-build time  --
        Value Configuration Class         Pre-compile time X All Variants
                                          Link time        --
                                          Post-build time  --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeSecureTmacLength
        Parent Container           CanTSynGlobalTimeDomain
        Description                Represents the number of bytes for the used Truncated Message Authentication Code (TMAC).
                                   If 0, no message authentication will be used.
        Multiplicity               1
        Type                       EcucIntegerParamDef
        Range                      0..16
        Default value              --
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynUseExtendedMsgFormat
        Parent Container           CanTSynGlobalTimeDomain
        Description                Switches support for 16 Byte Timesync messages on or off (for CAN FD only)
                                    - true: CAN FD support is active: use at least 16 byte for Timesync messages (depending on configuration)
                                    - false: Classic CAN support is active: use always 8 byte for Timesync messages
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              --
        Post-Build Variant Value   false
        Value Configuration Class  Pre-compile time  X  All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynSynchronizedTimeBaseRef
        Parent Container           CanTSynGlobalTimeDomain
        Description                Mandatory reference to the required synchronized time-base.
        Multiplicity               1
        Type                       Symbolic name reference to [StbMSynchronizedTimeBase]
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_519</srcid><srcstatus/><internalId>1378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_INVALID_STBM_REFERENCE</srcid><srcstatus/><internalId>1514</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name                     CanTSynGlobalTimeSyncDataIDList
        Description                        The DataIDList for SYNC messages ensures the
                                           identification of data elements due to CRC
                                           calculation and message authentication process.
        Post-Build Variant Multiplicity    true
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name                     CanTSynGlobalTimeSyncDataIDListElement
        Description                        Element of the DataIDList for SYNC messages ensures the identification of
                                           data elements due to CRC calculation and message authentication process.
        Post-Build Variant Multiplicity    true
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                        CanTSynGlobalTimeSyncDataIDListIndex
        Parent Container            CanTSynGlobalTimeSyncDataIDListElement
        Description                 Index for the DataIDList for SYNC messages ensures the identification of
                                    data elements due to CRC calculation and message authentication process.
        Multiplicity                1
        Type                        EcucIntegerParamDef
        Range                       0..15
        Default value               --
        Post-Build Variant Value    true
        Value Configuration Class   Pre-compile time  X   All Variants
                                    Link time         --
                                    Post-build time   --
      </description>
      <comment>
        This is a configuration parameter shall be 0-based and consecutive.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_461</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_GAPS_BETWEEN_SYNC_DATAIDs</srcid><srcstatus/><internalId>1508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                        CanTSynGlobalTimeSyncDataIDListValue
        Parent Container            CanTSynGlobalTimeSyncDataIDListElement
        Description                 Value for the DataIDList for SYNC messages ensures the identification of
                                    data elements due to CRC calculation and message authentication process.
        Multiplicity                1
        Type                        EcucIntegerParamDef
        Range                       0..255
        Default value               --
        Post-Build Variant Value    true
        Value Configuration Class   Pre-compile time  X   All Variants
                                    Link time         --
                                    Post-build time   --
        Scope/Dependency            scope:local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name                     CanTSynGlobalTimeFupDataIDList
        Parent Container                   CanTSynGlobalTimeDomain
        Description                        The DataIDList for FUP messages ensures the
                                           identification of data elements due to CRC
                                           calculation and message authentication process.
        Post-Build Variant Multiplicity    true
        Multiplicity
        Value Configuration Class   Pre-compile time  X   All Variants
                                    Link time         --
                                    Post-build time   --
        Scope/Dependency            scope:local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name       CanTSynGlobalTimeFupDataIDListElement
        Parent Container     CanTSynGlobalTimeFupDataIDList
        Description          Element of the DataIDList for FUP messages
                             ensures the identification of data elements
                             due to CRC calculation and message authentication process.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeFupDataIDListIndex
        Parent Container           CanTSynGlobalTimeFupDataIDListElement
        Description                Index of the DataIDList for FUP messages ensures the identification
                                   of data elements due to CRC calculation and message authentication process.
        Multiplicity               1
        Type                       EcucIntegerParamDef
        Range                      0..15
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter shall be 0-based and consecutive.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_264</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01002_GAPS_BETWEEN_FUP_DATAIDs</srcid><srcstatus/><internalId>1509</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeFupDataIDListValue
        Parent Container           CanTSynGlobalTimeFupDataIDListElement
        Description                Value of the DataIDList for FUP messages ensures the identification
                                   of data elements due to CRC calculation and message authentication process.
        Multiplicity               1
        Type                       EcucIntegerParamDef
        Range                      0..255
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name                     CanTSynGlobalTimeOfsDataIDList
        Parent Container                   CanTSynGlobalTimeDomain
        Description                        The DataIDList for OFS messages ensures the identification of data
                                           elements due to CRC calculation and message authentication process.
        Post-Build Variant Multiplicity    true
        Value Configuration Class   Pre-compile time  X   All Variants
                                    Link time         --
                                    Post-build time   --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name       CanTSynGlobalTimeOfsDataIDListElement
        Parent Container     CanTSynGlobalTimeOfsDataIDList
        Description          Element of the DataIDList for OFS messages ensures the identification of
                             data elements due to CRC calculation and message authentication process.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                        CanTSynGlobalTimeOfsDataIDListIndex
        Parent Container            CanTSynGlobalTimeOfsDataIDListElement
        Description                 Index for the DataIDList for OFS messages ensures the identification of
                                    data elements due to CRC calculation and message authentication process.
        Multiplicity                1
        Type                        EcucIntegerParamDef
        Range                       0..15
        Default value               --
        Post-Build Variant Value    true
        Value Configuration Class   Pre-compile time  X   All Variants
                                    Link time         --
                                    Post-build time   --
        Scope/Dependency            scope:local
      </description>
      <comment>
        This is a configuration parameter shall be 0-based and consecutive.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_396</srcid><srcstatus/><internalId>1376</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01003_GAPS_BETWEEN_OFS_DATAIDs</srcid><srcstatus/><internalId>1510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeOfsDataIDListValue
        Parent Container           CanTSynGlobalTimeOfsDataIDListElement
        Description                Value of the DataIDList for OFS messages ensures the identification of
                                   data elements due to CRC calculation and message authentication process.
        Multiplicity               1
        Type                       EcucIntegerParamDef
        Range                      0..255
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name                     CanTSynGlobalTimeOfnsDataIDList
        Description                        The DataIDList for OFNS messages ensures the identification of data
                                           elements due to CRC calculation and message authentication process.
        Post-Build Variant Multiplicity    true
        Multiplicity Configuration Class   Pre-compile time  X   All Variants
                                           Link time         --
                                           Post-build time   --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name      CanTSynGlobalTimeOfnsDataIDListElement
        Description         Element of the DataIDList for OFNS messages ensures the identification
                            of data elements due to CRC calculation and message authentication process.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name              CanTSynGlobalTimeOfnsDataIDListIndex
        Parent Container            CanTSynGlobalTimeOfnsDataIDListElement
        Description                 Index for the DataIDList for OFNS messages ensures the identification of
                                    data elements due to CRC calculation and message authentication process.
        Multiplicity                1
        Type                        EcucIntegerParamDef
        Range                       0..15
        Default value               --
        Post-Build Variant Value    true
        Value Configuration Class   Pre-compile time  X   All Variants
                                    Link time         --
                                    Post-build time   --
        Scope/Dependency            scope:local
      </description>
      <comment>
        This is a configuration parameter shall be 0-based and consecutive.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_329</srcid><srcstatus/><internalId>1375</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01004_GAPS_BETWEEN_OFNS_DATAIDs</srcid><srcstatus/><internalId>1511</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                        CanTSynGlobalTimeOfnsDataIDListValue
        Parent Container            CanTSynGlobalTimeOfnsDataIDListElement
        Description                 Value of the DataIDList for OFNS messages ensures the identification of data elements due to
                                    CRC calculation and message authentication process.
        Multiplicity                1
        Type                        EcucIntegerParamDef
        Range                       0..255
        Default value              --
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name                     CanTSynGlobalTimeMaster
        Parent Container                   CanTSynGlobalTimeDomain
        Description                        Configuration of the global time master. Each global time domain is required
                                           to have exactly one global time master. This master may or may  not exist
                                           on the configured ECU.
        Post-Build Variant Multiplicity    true
        Multiplicity Configuration Class   Pre-compile time  X   All Variants
                                           Link time         --
                                           Post-build time   --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynCyclicMsgResumeTime
        Parent Container           CanTSynGlobalTimeMaster
        Description                Defines the time where the 1st regular cycle time based message
                                   transmission takes place, after an immediate transmission before.
                                   Unit:seconds
        Multiplicity               1
        Type                       EcucFloatParamDef
        Range                      0..INF
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeDebounceTime
        Parent Container           CanTSynGlobalTimeMaster
        Description                This represents the configuration of a TX debounce time for SYNC, FUP,
                                   OFS and OFNS messages compared to a message before with the same PDU.
                                   Unit:seconds
        Multiplicity               1
        Type                       EcucFloatParamDef
        Range                      0..INF
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This configuration parameter shall be greater than the CanTSynMainFunctionPeriod and the CanTSynGlobalTimeTxPeriod.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_607</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_TimerDependencies</srcid><srcstatus/><internalId>1512</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeTxCrcSecured
        Parent Container           CanTSynGlobalTimeMaster
        Description                This represents the configuration of whether or not CRC is supported.
        Range                      CRC_NOT_SUPPORTED
                                      This represents a configuration where  CRC is not supported.
                                   CRC_SUPPORTED
                                      This represents a configuration where  CRC is supported.
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeTxPeriod
        Parent Container           CanTSynGlobalTimeMaster
        Description                This represents configuration of the TX period. Unit: seconds.
        Multiplicity               1
        Type                       EcucFloatParamDef
        Range                      0..INF
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_006_MasterSendsSyncFrames_TxConfirmation_After3s_Result_E_NOT_OK</srcid><srcstatus/><internalId>1550</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynImmediateTimeSync
        Parent Container           CanTSynGlobalTimeMaster
        Description                Enables/Disables the cyclic polling of StbM_GetTimeBaseUpdateCounter()
                                   within CanTSyn_MainFunction().
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynTxTmacCalculated
        Parent Container           CanTSynGlobalTimeMaster
        Description                This parameter controls whether or not TMAC calculation shall be supported.
        Multiplicity               1
        Type                       EcucEnumerationParamDef
        Range                      TMAC_CALCULATED
                                    The Timesync module shall calculate the TMAC.
                                   TMAC_NOT_CALCULATED
                                    The Timesync module shall not calculate the TMAC.
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name      CanTSynGlobalTimeMasterPdu
        Parent Container    CanTSynGlobalTimeMaster
        Description         This container encloses the configuration of the PDU that is supposed to
                            contain the global time information.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeMasterConfirmationHandleId
        Parent Container           CanTSynGlobalTimeMasterPdu
        Description                This represents the handle ID of the PDU that contains the global time information.
        Multiplicity               1
        Type                       EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range                      0..65535
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Cfg.h_633</srcid><srcstatus/><internalId>584</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ECUC_CanTSyn_00008.vc01</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimePduRef
        Parent Container           CanTSynGlobalTimeMasterPdu
        Description                This represents the reference to the Pdu taken to transmit the global
                                   time information.
                                   The global time master of a global time domain acts as the sender of
                                   the Pdu while all the time slaves are supposed to receive the Pdu.
        Multiplicity               1
        Type                       Reference to [Pdu]
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_752</srcid><srcstatus/><internalId>1382</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Checks.m_29</srcid><srcstatus/><internalId>1388</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_NO_REFERENCE_FROM_CANIF</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name      CanTSynGlobalTimeSlave
        Parent Container    CanTSynGlobalTimeDomain
        Description         Configuration of a global time slave. Each global time domain is required to
                            have at least one time slave. The configured ECU may or may not represent a
                            time slave.
        Multiplicity Configuration Class
                            Pre-compile time  X   All Variants
                            Link time         --
                            Post-build time   --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeFollowUpTimeout
        Parent Container           CanTSynGlobalTimeSlave
        Description                Rx timeout for the follow-up message. This is only relevant for selected bus systems.
                                   Unit:seconds
        Multiplicity               1
        Type                       EcucFloatParamDef
        Range                      0 .. INF
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This configuration parameter shall be greater than the CanTSynMainFunctionPeriod.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.CanTSynGlobalTimeFollowUpTimeout</srcid><srcstatus/><internalId>574</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ECUC_CanTSyn_00006_CanTSynGlobalTimeFollowUpTimeout_NotAllowedToBeZero</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00006_CanTSynGlobalTimeFollowUpTimeout_NotAllowedToBeZero</id>
      <status>approved</status>
      <source>EB refinement</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeFollowUpTimeout
        Parent Container           CanTSynGlobalTimeSlave
        Description                Rx timeout for the follow-up message. This is only relevant for selected bus systems
                                   The value of CanTSynGlobalTimeFollowUpTimeout shall be greater than 0.
                                   Unit:seconds
        Multiplicity               1
        Type                       EcucFloatParamDef
        Range                      CanTSynMainFunctionPeriod .. INF
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This configuration parameter shall be greater than the CanTSynMainFunctionPeriod.
        The value of CanTSynGlobalTimeFollowUpTimeout shall be greater than 0. (see ASCCANTSYN-313)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_799</srcid><srcstatus/><internalId>1384</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_RX_FollowUp_SmallerThan_MainFunctionPeriod</srcid><srcstatus/><internalId>1513</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
             <linksto>CanTSyn.ECUC_CanTSyn_00006</linksto>
             <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeMinMsgGap
        Parent Container           CanTSynGlobalTimeSlave
        Description                This parameter represents the configuration of a minimum message
                                   gap time for received Timesync messages compared to a message before
                                   with the same PDU. If PDUs are received more often in between than this parameter allows,
                                   they shall be ignored.
                                   Unit: seconds
        Multiplicity               1
        Type                       EcucFloatParamDef
        Range                      0..INF
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    
      <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeSequenceCounterHysteresis
        Parent Container           CanTSynGlobalTimeSlave
        Description                CanTSynGlobalTimeSequenceCounterHysteresis specifies the
        number of consecutive valid message pairs that are required by the
        Time Slave while being in Timeout state until a Time Tuple is forwarded
        to the StbM.
        Multiplicity               1
        Type                       EcucIntegerParamDef
        Range                      0..15
        Default value              0
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeSequenceCounterJumpWidth
        Parent Container           CanTSynGlobalTimeSlave
        Description                The SequenceCounterJumpWidth specifies the maximum allowed gap of  the Sequence Counter
                                   between two SYNC resp. two OFS messages.
        Multiplicity               1
        Type                       EcucIntegerParamDef
        Range                      0..15
        Default value              0
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynRxCrcValidated
        Parent Container           CanTSynGlobalTimeSlave
        Description                Definition of whether or not validation of the CRC is supported.
        Multiplicity               1
        Type                       EcucEnumerationParamDef
        Range                      CRC_IGNORED
                                   The Timesync module accepts Time Synchronization messages,
                                   which are CRC secured Types(without actually validating the CRC)
                                   and those, which are not CRC secured. That means, the Timesync
                                   module ignores the CRC.
                                   CRC_NOT_VALIDATED
                                   The Timesync module accepts only Time Synchronization messages,
                                   which are not CRC secured. All other time
                                   synchronization messages are ignored.
                                   CRC_OPTIONAL
                                   The Timesync module accepts only Time Synchronization messages
                                   which are not CRC secured and Time Synchronization messages
                                   CRC secured and have the correct CRC. All other Time
                                   Synchronization messages are ignored.
                                   CRC_VALIDATED
                                   The Timesync module accepts only Time Synchronization messages,
                                   which are CRC secured and have the correct CRC. All other time
                                   synchronization messages are ignored.
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
         <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynRxTmacValidated
        Parent Container           CanTSynGlobalTimeSlave
        Description                This parameter controls whether or not TMAC validation shall be supported.
        Multiplicity               1
        Type                       EcucEnumerationParamDef
        Range                      TMAC_NOT_VALIDATED
                                   The Timesync module shall not validate the TMAC.
                                   TMAC_VALIDATED
                                   The Timesync module shall validate the TMAC.
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
         <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name         CanTSynGlobalTimeSlavePdu
        Parent Container       CanTSynGlobalTimeSlave
        Description            This container encloses the configuration of the PDU that is supposed to contain
                               the global time information.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <sourceline>1611</sourceline>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeSlaveHandleId
        Parent Container           CanTSynGlobalTimeSlavePdu
        Description                This represents the handle ID of the PDU that contains the global time information.
        Multiplicity               1
        Type                       EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range                      0..65535
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Cfg.h_643</srcid><srcstatus/><internalId>585</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ECUC_CanTSyn_00013.vc01</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>CanTSyn.ECUC_CanTSyn_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimePduRef
        Parent Container           CanTSynGlobalTimeSlavePdu
        Description                This represents the reference to the Pdu taken to transmit the global time information.
                                   The global time master of a global time domain acts as the sender of the Pdu while all
                                   the time slaves are supposed to receive the Pdu.
        Multiplicity               1
        Type                       Reference to [Pdu]
        Post-Build Variant Value   true
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_935</srcid><srcstatus/><internalId>1386</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Checks.m_54</srcid><srcstatus/><internalId>1389</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_RX_NO_REFERENCE_FROM_CANIF</srcid><srcstatus/><internalId>1506</internalId></linkedfrom><linkedfrom><srcid>TS_CANTSYN_GEN_01002_RX_MISSING_REFERENCE</srcid><srcstatus/><internalId>1507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a SYNC message, and if CanTSynHardwareTimestampSupport
        is set to FALSE, CanTSyn shall
        1. immediately establish a protection against interruption
        2. and directly afterwards retrieve the reference time T1VLT for the SYNC message
          via StbM_GetCurrentVirtualLocalTimeTime from the StbM
          Note: Once T1VLT has been retrieved, protection against interruptions may be released
        3. set the T2VLT part of the Rx Time Tuple to the value of T1VLT (i.e., T2VLT = T1VLT)
        4. set the SYNC reception delay TSRD to 0
        5. retrieve T0 from the SyncTimeSec field of the SYNC message
        (RS_TS_20035, RS_TS_20070)
      </description>
      <comment>
        Immediate protection against interruptions means that there shall be no frame
      checks before (if called in context of the RX interrupt with interrupt nesting disabled,
      interrupt protection is typically implicitly ensured by the controller). Once the interrupts
      are locked, it is ok to check whether the received message is a SYNC message for
      which a snapshot of the Virtual Local Time shall be taken, but no other frame checks
      (e.g., CRC validation, SC validation, etc.) shall be done before taking T1VLT. Once
      T1VLT has been sampled it is ok to remove the protection against interruptions and
      to make the necessary validations. This means that T1VLT will be taken even if the
      succeeding validations fail and thus making the snapshot superfluous.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00144.InterruptProtection</srcid><srcstatus/><internalId>419</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT1VLT</srcid><srcstatus/><internalId>420</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00144.SetT2VLT</srcid><srcstatus/><internalId>421</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT0</srcid><srcstatus/><internalId>422</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
      
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a SYNC message,
        and if CanTSynHardwareTimestampSupport is set to TRUE, CanTSyn shall
        • retrieve T1VLT from the ingress timestamp of the SYNC message via CanIf_GetIngressTimestamp
        • convert T1VLT to a representation in ns
        • retrieve T0 from the SyncTimeSec field of the SYNC message
        (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.HWtimeStamp</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a SYNC message
        • and if CanTSynHardwareTimestampSupport is set to TRUE
        • and if the StbM uses the CAN controller hardware counter as Virtual Local Time
        source for the Time Base (refer to StbMLocalTimeClock), 
        CanTSyn shall
        • set T2VLT part of the Rx Time Tuple to the value of T1VLT (i.e., T2VLT = T1VLT)
        • and set the SYNC reception delay TSRD to 0.
        (RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.HWtimeStamp</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
  
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a SYNC message,
        • and if CanTSynHardwareTimestampSupport is set to TRUE
        • and if the StbM does not use the CAN controller hardware counter as Virtual
        Local Time source for the Time Base (refer to StbMLocalTimeClock)
        CanTSyn shall correlate the CAN HW time and the Virtual Local Time of the StbM by
        applying the following sequence:
        1. protect the following two steps against interruptions
        2. retrieve the current time of the CAN controller hardware counter via CanIf_GetCurrentTime
        and convert it to the Virtual Local Time T3VLT,
        3. retrieve the current value of the Virtual Local Time of the corresponding Time
        Base in the StbM via StbM_GetCurrentVirtualTime as T2VLT,
        4. calculate the SYNC reception delay TSRD as (T3VLT - T1VLT)
        (RS_TS_20035, RS_TS_20070)
      </description>
      <comment>
        In the above sequence protection against interruptions is important, because
      any interruption of the sequence of step 2 and step 3 would worsen the precision of
      the local instance of the Global Time.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.HWtimeStamp</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a FUP message, CanTSyn shall
        1. retrieve the following data from the FUP message
        • the OVS field
        • and the SyncTimeSec field
        2. and calculate T4 = OVS + SyncTimeSec
        Either in the same Rx indication routine (CanTSyn_RxIndication) or in the subsequent CanTSyn_MainFunction
        invocation CanTSyn shall
        1. calculate TLSYNC as TLSYNC = (T0 + T4 + TSRD)
        2. and forward the new Rx Time Tuple [TLSYNC; T2VLT] to the StbM via StbM_BusSetGlobalTime.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00148.RetrieveData</srcid><srcstatus/><internalId>423</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ComputeT4</srcid><srcstatus/><internalId>424</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00148.CalculateTLSYNC</srcid><srcstatus/><internalId>425</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ForwardRxTimeTuple</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_91001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Type of error                       Related error code              Error value
        No FV available from the FVM        CANTSYN_E_FRESHNESSFAILURE         0x01
        (SRS_BSW_00385)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8301</srcid><srcstatus/><internalId>1290</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1681</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_006_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1685</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_003_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
  
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_91003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_IcvVerificationIndication
        Syntax: void CanTSyn_IcvVerificationIndication (
                                                        uint32 jobId,
                                                        Crypto_ResultType result
                                                        )
        Service ID[hex]: 0x8
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): jobId - JobID of the operation that caused the callback.
                         result - Contains the result of the cryptographic operation.
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: By this API service the CanTSyn gets an indication and the result
                     of ICV verification.
        Available via: CanTSyn.h
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.CsmSignature</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_91003.Signature</srcid><srcstatus/><internalId>427</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_IcvGenerationIndication
        Syntax: void CanTSyn_IcvGenerationIndication (
                                                      uint32 jobId,
                                                      Crypto_ResultType result
                                                      )
        Service ID[hex]: 0x7
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): jobId - JobID of the operation that caused the callback.
                         result - Contains the result of the cryptographic operation.
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: By this API service the CanTSyn gets an indication and the result
                     of ICV generation.
        Available via: CanTSyn.h
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.CsmSignature</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_91002.Signature</srcid><srcstatus/><internalId>428</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00155</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        FUP not CRC secured, ICV secured message format:
        Byte 0: Type = 0x78
        Byte 1: User Byte 2, default: 0
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 3), default: 0
          SGW (Bit 2)
            SyncToGTM = 0
            SyncToSubDomain = 1
          OVS = Overflow of seconds (Bit 1 to Bit 0)
        Byte 4-7: SyncTimeNSec = 32 Bit time value in nanoseconds
        If CanTSynUseExtendedMsgFormat = TRUE:
        Byte 8: reserved, always 0 (Bit 7)
          FVL = FV Length in Bits 0 to 64 (Bit 6 to Bit 0)
        Byte 9: reserved, always 0 (Bit 7 to Bit 6)
          ICVL = ICV Length in Bytes 0 to 54 (Bit 5 to Bit 0)
        Byte 10: FV
        Bytes 10+FVL(in bytes): ICV
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3819</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8059</srcid><srcstatus/><internalId>1250</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8128</srcid><srcstatus/><internalId>1257</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8155</srcid><srcstatus/><internalId>1265</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8272</srcid><srcstatus/><internalId>1279</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8294</srcid><srcstatus/><internalId>1285</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8322</srcid><srcstatus/><internalId>1294</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_035_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmOK_VerInd_BUSY</srcid><srcstatus/><internalId>1739</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_037_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmVERNOTOK_VerIndOK</srcid><srcstatus/><internalId>1741</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest23_001_SecureTime_RX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1747</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        FUP CRC secured, ICV secured message format:
        Byte 0: Type = 0x88
        Byte 1: CRC
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 3), default: 0
          SGW (Bit 2)
            SyncToGTM = 0
            SyncToSubDomain = 1
          OVS = Overflow of seconds (Bit 1 to Bit 0)
        Byte 4-7: SyncTimeNSec = 32 Bit time value in nanoseconds
        If CanTSynUseExtendedMsgFormat = TRUE:
        Byte 8: reserved, always 0 (Bit 7)
          FVL = FV Length in Bits 0 to 64 (Bit 6 to Bit 0)
        Byte 9: reserved, always 0 (Bit 7 to Bit 6)
          ICVL = ICV Length in Bytes 0 to 54 (Bit 5 to Bit 0)
        Byte 10: FV
        Bytes 10+FVL(in bytes): ICV
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3786</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3791</srcid><srcstatus/><internalId>787</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3816</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8060</srcid><srcstatus/><internalId>1251</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8129</srcid><srcstatus/><internalId>1258</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8156</srcid><srcstatus/><internalId>1266</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8273</srcid><srcstatus/><internalId>1280</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8295</srcid><srcstatus/><internalId>1286</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8323</srcid><srcstatus/><internalId>1295</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_010_SYNC_CRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_038_SYNC_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00157</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        OFS not CRC secured, ICV secured message format for CAN FD PDUs:
        Byte 0: Type = 0x94
        Byte 1: User Byte 2, default: 0
        Byte 2: D = Time Domain 16 to 31 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 1), default: 0
          SGW (Bit 0)
            SyncToGTM = 0
            SyncToSubDomain = 1
        Byte 4: User Byte 0, default: 0
        Byte 5: User Byte 1, default: 0
        Byte 6: reserved, default: 0
        Byte 7: reserved, default: 0
        If CanTSynUseExtendedMsgFormat = TRUE:
        Byte 8-11: OfsTimeSec = 32 Bit offset time value in seconds
        Byte 12-15: OfsTimeNSec = 32 Bit offset time value in nanoseconds
        Byte 16: reserved (Bit 7), always 0
          FVL = FV Length in Bits 0 to 64 (Bit 6 to Bit 0)
        Byte 17: reserved, always 0 (Bit 7 to Bit 6)
          ICVL = ICV Length in Bytes 0 to 46 (Bit 5 to Bit 0)
        Byte 18: FV
        Bytes 18+FVL(in bytes): ICV
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4005</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8061</srcid><srcstatus/><internalId>1252</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8130</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8157</srcid><srcstatus/><internalId>1267</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8274</srcid><srcstatus/><internalId>1281</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8296</srcid><srcstatus/><internalId>1287</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8324</srcid><srcstatus/><internalId>1296</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_012_OFS_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_036_StdOFS_NoCRC_NoIcv</srcid><srcstatus/><internalId>1740</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest25_001_SecureTime_RxOFSExt_NoCRC</srcid><srcstatus/><internalId>1749</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00158</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        OFS CRC secured, ICV secured message format for CANFD PDUs::
        Byte 0: Type = 0xA4
        Byte 1: CRC
        Byte 2: D = Time Domain 16 to 31 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 1), default: 0
          SGW (Bit 0)
            SyncToGTM = 0
            SyncToSubDomain = 1
        Byte 4: User Byte 0, default: 0
        Byte 5: User Byte 1, default: 0
        Byte 6: reserved, default: 0
        Byte 7: reserved, default: 0
        If CanTSynUseExtendedMsgFormat = TRUE:
        Byte 8-11: OfsTimeSec = 32 Bit offset time value in seconds
        Byte 12-15: OfsTimeNSec = 32 Bit offset time value in nanoseconds
        Byte 16: reserved (Bit 7), always 0
          FVL = FV Length in Bits 0 to 64 (Bit 6 to Bit 0)
        Byte 17: reserved, always 0 (Bit 7 to Bit 6)
          ICVL = ICV Length in Bytes 0 to 46 (Bit 5 to Bit 0)
        Byte 18: FV
        Bytes 18+FVL(in bytes): ICV
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3987</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8062</srcid><srcstatus/><internalId>1253</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8131</srcid><srcstatus/><internalId>1260</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8158</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8275</srcid><srcstatus/><internalId>1282</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8297</srcid><srcstatus/><internalId>1288</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8325</srcid><srcstatus/><internalId>1297</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1695</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_021_OFS_CRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_039_OFS_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1743</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the CanTSynGlobalTimeTxIcvSecured is ICV_SUPPORTED and CanTSynUseExtendedMsgFormat is true,
        then depending on CanTSynGlobalTimeTxCrcSecured the SYNC / FUP message shall be of type:
        CanTSynGlobalTimeTxCrcSecured     SYNC                              FUP
        CRC_NOT_SUPPORTED                 0x10                              0x78
                                      SYNC not CRC secured message      FUP not CRC,ICV 
                                                                        authenticated message
        CRC_SUPPORTED                     0x20                              0x88
                                      SYNC CRC secured message          FUP CRC,ICV 
                                                                        authenticated message
       (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3792</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3820</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_010_SYNC_CRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_035_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmOK_VerInd_BUSY</srcid><srcstatus/><internalId>1739</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_037_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmVERNOTOK_VerIndOK</srcid><srcstatus/><internalId>1741</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_038_SYNC_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1742</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest23_001_SecureTime_RX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1747</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00160</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the CanTSynGlobalTimeTxIcvSecured is ICV_SUPPORTED and CanTSynUseExtendedMsgFormat is true,
        then depending on CanTSynGlobalTimeTxCrcSecured the extended OFS message shall be of type:
        CanTSynGlobalTimeTxCrcSecured     OFS                              
        CRC_NOT_SUPPORTED                 0x94                              
                                      Ext OFS not CRC
                                      authenticated message      
                                                                        
        CRC_SUPPORTED                     0xA4                                                    
                                      Ext OFS CRC
                                      authenticated message          
                                                                     
       (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3988</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4006</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1695</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_012_OFS_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_021_OFS_CRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_036_StdOFS_NoCRC_NoIcv</srcid><srcstatus/><internalId>1740</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_039_OFS_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1743</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest25_001_SecureTime_RxOFSExt_NoCRC</srcid><srcstatus/><internalId>1749</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The ICV shall be calculated over SYNC payload, FUP payload and FV (based on configuration
        CanTSynIcvGenerationFvIdRef) and is included in the FUP message.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00161.Payload</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00161.ICVinFUP</srcid><srcstatus/><internalId>290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The ICV shall be calculated over Extended OFS payload and FV (based on configuration
        CanTSynIcvGenerationFvIdRef) and is included in the Extended OFS message.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00162.Payload</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00162.ICVinOFS</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the FV is referenced (refer CanTSynIcvGenerationFvIdRef) and the configured
        truncated FV length (StbMFreshnessValueTruncLength) == FV length (StbMFreshnessValueLength)
        in StbM, the Time Master shall call the StbM_GetTxFreshness Api to obtain the FV by using
        the StbMFreshnessValueId.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8244</srcid><srcstatus/><internalId>1276</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_023_ParalelTransmission_ExtSyncMaster_ExtOfsMaster_noCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1702</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest22_001_ExtSync_SecFup_CRC_IcvSecured_RefToFV_Gateway</srcid><srcstatus/><internalId>1745</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest22_002_SecOfs_CRC_IcvSecured_RefToFV_Gateway</srcid><srcstatus/><internalId>1746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00164</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the FV is referenced (refer CanTSynIcvGenerationFvIdRef) and the configured truncated
        FV length (StbMFreshnessValueTruncLength) &lt; FV length (StbMFreshnessValueLength), the Time
        Master shall call the StbM_GetTxFreshnessTruncData Api to obtain the FV and the truncated FV
        by using the StbMFreshnessValueId.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8220</srcid><srcstatus/><internalId>1275</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_006_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1685</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_007_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1686</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_011_ParalelTransmission_ExtSyncICV_ExtSyncICV_ExtSyncNoICV_StdSyncNoICV</srcid><srcstatus/><internalId>1690</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1695</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_017_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1696</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_018_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1697</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_019_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1698</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_022_ParalelTransmission_ExtOfsICV_ExtOfsICV_ExtOfsNoICV_StdOfsNoICV</srcid><srcstatus/><internalId>1701</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00165</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the FV is not referenced (refer CanTSynIcvGenerationFvIdRef), the Time Master shall not
        include the FV in the ICV generation and fill 0 for FVL field in message types 0x78, 0x88, 
        0x94, 0xA4.
       (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8063</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8326</srcid><srcstatus/><internalId>1298</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_009_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1688</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_010_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1689</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_020_ExtOfsMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1699</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_021_ExtOfsMaster_CRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00166</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness returns E_OK, the Time Master shall construct the message types 0x78,
        0x88, 0x94, 0xA4 with the full FV, set the FVL to StbMFreshnessValueLength and use the full FV
        in ICV generation.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFV</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00166.SetFVL</srcid><srcstatus/><internalId>294</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFVinICV</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00167</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshnessTruncData returns E_OK, the Time Master shall construct the message types
        0x78, 0x88, 0x94, 0xA4 with truncated FV, set the FVL to StbMFreshnessValueTruncLength and use
        the full FV in ICV generation.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00167.TruncatedFV</srcid><srcstatus/><internalId>296</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00167.SetFVL</srcid><srcstatus/><internalId>297</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00167.UseFullFV</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00168</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness or StbM_GetTxFreshnessTruncData returns E_NOT_OK, the Time Master shall:
        - stop the ICV generation and accordingly fill 0 for FVL and ICVL fields in message
          types 0x78, 0x88, 0x94, 0xA4,
        - call Det_ReportRuntimeError with the parameter ErrorId := CANTSYN_E_-FRESHNESSFAILURE (refer [SWS_CanTSyn_xxx05]),
        - call IdsM_SetSecurityEventWithContextData with the parameters EventId := CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE (refer
        [SWS_CanTSyn_00204])
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00168.StopICVGeneration</srcid><srcstatus/><internalId>299</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallDet</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallIdsM</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00169</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynIcvGenerationBase for the Time Domain is configured to ICV_MAC, the Time Master shall call Csm_MacGenerate to
        generate the ICV value.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8101</srcid><srcstatus/><internalId>1255</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_010_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1689</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_021_ExtOfsMaster_CRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00170</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynIcvGenerationBase for the Time Domain is configured to ICV_SIGNATURE, the Time Master shall call Csm_SignatureGenerate
        to generate the ICV value.
        (RS_TS_20073)
      </description>
      <comment>
        The mode parameter is intentionally left open for the implementer to choose (i.e. CRYPTO_OPERATIONMODE_SINGLECALL would
        possibly be the best option since it does not require further calls to Csm).
        The CSM job used to generate the ICV can be configured to synchronous or asynchronous behaviour.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8116</srcid><srcstatus/><internalId>1256</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_006_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1685</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_007_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1686</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_009_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1688</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1695</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_017_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1696</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_018_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1697</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_020_ExtOfsMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00171</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the CSM job used to generate ICV is configured in synchronous behaviour, the Time Master shall disable ICV generation timeout
        monitoring.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8166</srcid><srcstatus/><internalId>1271</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1695</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the CanTSynIcvGenerationTimeout is set to 0, the Time Master shall not do the ICV generation timeout monitoring.
        (RS_TS_-20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8145</srcid><srcstatus/><internalId>1264</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1695</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynIcvGenerationTimeout is set to any value &gt; 0 and Csm_MacGenerate or Csm_SignatureGenerate returns E_OK,
        the Time Master shall start the CanTSynIcvGenerationTimeout.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8173</srcid><srcstatus/><internalId>1273</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_010_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1689</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_014_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1693</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_015_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynIcvGenerationTimeout is set to any value &gt; 0 and the CanTSyn_IcvGenerationIndication callback is called, the
        Time Master shall stop the running CanTSynIcvGenerationTimeout.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7706</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7794</srcid><srcstatus/><internalId>1233</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacGenerate / Csm_SignatureGenerate returns E_NOT_OK or CanTSynIcvGenerationTimeout expires before the notification
        of the CanTSyn_IcvGenerationIndication callback, the Time Master shall:
        - stop the ICV generation and accordingly fill 0 for ICVL field in message types 0x78, 0x88, 0x94, 0xA4,
        - call IdsM_SetSecurityEventWithContextData with the parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED (refer
        [SWS_CanTSyn_00204])
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</srcid><srcstatus/><internalId>302</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        With the notification of the CanTSyn_IcvGenerationIndication callback and successful generation of ICV, the Time Master shall
        add the generated ICV to ICV field in message types 0x78, 0x88, 0x94, 0xA4 and transmit the FUP, Extended OFS message.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7882</srcid><srcstatus/><internalId>1239</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00177</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The Time Master shall notify the successful transmission of messages of types 0x78, 0x88, 0x94, 0xA4 to FVM by calling 
        StbM_SPduTxConfirmation.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5310</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5363</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00178</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_VERIFIED, the CanTSyn shall perform ICV verification for FUP messages
        with ICV (Message type: 0x78, 0x88).
        The CanTSyn shall consider ICV verification as failed for FUP messages without ICV (Message type: Type: 0x18, 0x28).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00178.ICVVerified</srcid><srcstatus/><internalId>304</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00178.FailedVerification</srcid><srcstatus/><internalId>305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00179</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_NOT_VERIFIED, the CanTSyn shall not perform the ICV verification and
        the FUP messages shall not contain an ICV value (Message type: 0x18, 0x28). 
        The CanTSyn shall consider ICV verification as failed for FUP messages with ICV (Message Type: 0x78, 0x88).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00179.ICVNotVerified</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00179.FailedVerification</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_IGNORED, the CanTSyn shall not perform the ICV verification.
        The CanTSyn shall ignore the ICV in FUP messages with ICV (Message type: 0x78,0x88).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6394</srcid><srcstatus/><internalId>1007</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_025_SYNC_MessageFiltering_When_ICV_IGNORED</srcid><srcstatus/><internalId>1733</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_028_OFS_MessageFiltering_When_ICV_IGNORED</srcid><srcstatus/><internalId>1736</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_OPTIONAL, the CanTSyn shall perform ICV verification for FUP messages
        with ICV (Message type: 0x78, 0x88).
        The CanTSyn shall not perform ICV verification for FUP messages without ICV (Message type: 0x18, 0x28).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00181.ICVOptional</srcid><srcstatus/><internalId>308</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00181.FUPNoICV</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00182</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the SYNC message is received while the CanTSynGlobalTimeFollowUpTimeout is running, the Time Slave shall discard
        the received SYNC message, reset the sequence (i.e. waiting for a new SYNC) and raise the security event
        CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR (refer [SWS_CanTSyn_00204]).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5923</srcid><srcstatus/><internalId>976</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_002_SYNC_NoCRC_IcvSecured_RefToFV_FVL_Zero</srcid><srcstatus/><internalId>1706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00183</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        During CanTSynGlobalTimeRxDebounceTime if any SYNC or FUP message received, the Time Slave shall discard the
        received message, reset the sequence (i.e. waiting for a new SYNC) and raise the security event
        CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR (refer [SWS_CanTSyn_00204]).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00183.AlsoLoadDebounce</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00184</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_VERIFIED, the CanTSyn shall perform ICV verification for Extended OFS
        messages with ICV messages (Message type: 0x94, 0xA4). The CanTSyn shall consider ICV verification as failed for Extended
        OFS messages without ICV (Message type: 0x54, 0x64).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ICVVerified</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ExtendedOFSNoICV</srcid><srcstatus/><internalId>311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00185</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_NOT_VERIFIED, the CanTSyn shall not perform the ICV verification and
        the Extended OFS messages shall not contain an ICV value (Message type: 0x54,0x64). The CanTSyn shall consider ICV
        verification as failed for Extended OFS messages with ICV (Type: 0x94, 0xA4).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00185.ICVNotVerified</srcid><srcstatus/><internalId>312</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00185.FailedVerification</srcid><srcstatus/><internalId>313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00186</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_IGNORED, the CanTSyn shall not perform the ICV verification. The CanTSyn shall
        ignore the ICV in Extended OFS messages with ICV (Message type: 0x94, 0xA4).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6395</srcid><srcstatus/><internalId>1008</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_025_SYNC_MessageFiltering_When_ICV_IGNORED</srcid><srcstatus/><internalId>1733</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00187</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_OPTIONAL, the CanTSyn shall perform ICV verification for Extended OFS
        messages with ICV (Message type: 0x94, 0xA4). The CanTSyn shall not perform ICV verification for Extended OFS messages 
        without ICV (Message type: 0x54, 0x64).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00187.ICVOptional</srcid><srcstatus/><internalId>314</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00187.OFSNoICV</srcid><srcstatus/><internalId>315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the FV is referenced (refer CanTSynIcvVerificationFvIdRef) and FVL &gt; 0 in the received FUP or Extended OFS
        message, the Time Slave shall call the StbM_GetRxFreshness Api to obtain the Freshness Value by using
        - the StbMFreshnessValueId from the reference CanTSynIcvVerificationFvIdRef
        - the StbMTruncatedFreshnessValue as received in the FV field of the FUP message
        - the StbMTruncatedFreshnessValueLength as received in the FVL field of the FUP message
        - the StbMAuthVerifyAttempts as the number of failed verification attempts for the current message (ICV verification
        attempt counter)
        - the StbMFreshnessValueLength from the reference CanTSynIcvVerificationFvIdRef
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8594</srcid><srcstatus/><internalId>1317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00189</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the FVL is 0 in the received FUP or Extended OFS message, the Time Slave shall not include the FV in the ICV verification.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8723</srcid><srcstatus/><internalId>1322</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_002_SYNC_NoCRC_IcvSecured_RefToFV_FVL_Zero</srcid><srcstatus/><internalId>1706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00190</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the FV is not referenced (refer CanTSynIcvVerificationFvIdRef) and FVL &gt; 0 in the received FUP or Extended OFS message,
        the Time Slave shall stop the ICV verification and consider ICV verification as failed.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8737</srcid><srcstatus/><internalId>1323</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_029_SYNC_NoCRC_NoRefToFV_ICVVerification</srcid><srcstatus/><internalId>1716</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00191</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetRxFreshness returns E_OK, the Time Slave shall use the FV in ICV verification.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8628</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetRxFreshness returns E_NOT_OK, the current ICV verification of the received FUP or Extended OFS
        message is considered to be failed, and the Time Slave shall
        - retry calling StbM_GetRxFreshness in the next Main Function
        - increment the ICV verification attempt counter for this FUP or Extended OFS message
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00192.StbMCallRetry</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00192.IncrementAttemptCounter</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00193</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached CanTSynIcvVerificationAttempts, then the
        ICV verification of received FUP or Extended OFS message is considered to be failed and the
        Time Slave shall :
        - stop the ICV verification and consider the ICV verification as failed,
        - call Det_ReportRuntimeError with the parameter ErrorId set to CANTSYN_E_FRESHNESSFAILURE 
        (refer [SWS_CanTSyn_91001]),
        - call IdsM_SetSecurityEventWithContextData with the parameter EventId set to 
        CANTSYN_SEV_ICV_VERIFICATION_FAILED ( refer to[SWS_CanTSyn_00204] )
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00193.StopICVVerification</srcid><srcstatus/><internalId>318</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallDet</srcid><srcstatus/><internalId>319</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallIdsM</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00194</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynIcvVerificationBase for the Time Domain is configured to ICV_MAC, the Time Slave shall
        call Csm_MacVerify to verify the ICV value.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8780</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_008_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotOk</srcid><srcstatus/><internalId>1712</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_030_SYNC_CRC_NoRefToFV_ICVVerification</srcid><srcstatus/><internalId>1717</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_013_OFS_NoCRC_IcvSecured_RefToFV_FVL_Zero</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_016_OFS_NoCRC_IcvSecured_RefToFV_FVOk_CsmBusy_CsmQueueFull_RetrySuccessful</srcid><srcstatus/><internalId>1722</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_017_OFS_NoCRC_IcvSecured_RefToFV_FVOk_CsmBusy_CsmQueueFull_RetryNotSuccessful</srcid><srcstatus/><internalId>1723</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_019_OFS_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotOk</srcid><srcstatus/><internalId>1725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00195</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
          If CanTSynIcvVerificationBase for the Time Domain is configured to ICV_SIGNATURE, the Time Slave
          shall call Csm_SignatureVerify to verify the ICV value.
          (RS_TS_20073)
      </description>
      <comment>
          The mode parameter is intentionally left open for the implementer to choose (i.e. CRYPTO_OPERATIONMODE_SINGLECALL
          would possibly be the best option since it does not require further calls to Csm).
          The CSM job used to generate the ICV can be configured to synchronous or asynchronous behaviour.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8797</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_010_SYNC_CRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_029_SYNC_NoCRC_NoRefToFV_ICVVerification</srcid><srcstatus/><internalId>1716</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_021_OFS_CRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_031_OFS_NoCRC_NoRefToFV_ICVVerification</srcid><srcstatus/><internalId>1729</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_032_OFS_CRC_NoRefToFV_ICVVerification</srcid><srcstatus/><internalId>1730</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_038_SYNC_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1742</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_039_OFS_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1743</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00196</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The ICV verification timeout observation is disabled, when the CSM job to verify ICV is configured in synchronous behaviour.
        In this case, the CanTSynIcvVerificationTimeout shall be set to 0.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8813</srcid><srcstatus/><internalId>1327</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_002_SYNC_NoCRC_IcvSecured_RefToFV_FVL_Zero</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_003_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00197</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacVerify or Csm_SignatureVerify returns E_OK, the Time Slave shall start the CanTSynIcvVerificationTimeout.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8836</srcid><srcstatus/><internalId>1332</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_003_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00198</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The CanTSynIcvVerificationTimeout shall be stopped with the notification of the CanTSyn_IcvVerificationIndication
        callback.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8416</srcid><srcstatus/><internalId>1303</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8433</srcid><srcstatus/><internalId>1307</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8521</srcid><srcstatus/><internalId>1311</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8538</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_003_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00199</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacVerify or Csm_SignatureVerify returns recoverable error code (e.g., CRYPTO_E_BUSY), the verification of received
        FUP or Extended OFS message is considered to be failed and the verification attempt counter for this PDU shall be incremented.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8422</srcid><srcstatus/><internalId>1304</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8527</srcid><srcstatus/><internalId>1312</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8843</srcid><srcstatus/><internalId>1333</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_035_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmOK_VerInd_BUSY</srcid><srcstatus/><internalId>1739</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If one of the following conditions is true:
          - the ICV verification attempt counter has reached the configuration value CanTSynIcvVerificationTimeout
          - the verification of the ICV (CanTSyn_IcvVerificationIndication or Csm_MacVerify / Csm_SignatureVerify
          when synchronous behavior is used) has returned a non-recoverable error such as returning E_NOT_OK or
          KEY_FAILURE
          - CanTSynIcvVerificationTimeout expires before the notification of the CanTSyn_IcvVerificationIndication callback,
        the Time Slave shall:
          - stop the ICV verification and consider the ICV verification as failed,
          - call IdsM_SetSecurityEventWithContextData with the parameters EventId set to CANTSYN_SEV_ICV_VERIFICATION_FAILED
          (refer to [SWS_CanTSyn_00204])
          (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</srcid><srcstatus/><internalId>321</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00201</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If security event reporting has been enabled for the CanTSyn module (CanTSynEnableSecurityEventReporting = true)
        the respective security events shall be reported to the IdsM [8] via the interfaces defined in BSWGeneral.
        (RS_Ids_00810)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2519</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4925</srcid><srcstatus/><internalId>897</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5924</srcid><srcstatus/><internalId>977</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5959</srcid><srcstatus/><internalId>980</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6716</srcid><srcstatus/><internalId>1108</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7000</srcid><srcstatus/><internalId>1151</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7976</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8139</srcid><srcstatus/><internalId>1263</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8313</srcid><srcstatus/><internalId>1293</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1681</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The function CanTSyn_IcvGenerationIndication() shall inform the DET, if development error detection is enabled
        (CanTSynDevErrorDetect is set to TRUE) and if function call has failed because of the following reasons:
        - jobId is invalid (CANTSYN_E_PARAM)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7731</srcid><srcstatus/><internalId>1232</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7819</srcid><srcstatus/><internalId>1236</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The function CanTSyn_IcvVerificationIndication() shall inform the DET, if development error detection is enabled
        (CanTSynDevErrorDetect is set to TRUE) and if function call has failed because of the following reasons:
        - jobId is invalid (CANTSYN_E_PARAM)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8447</srcid><srcstatus/><internalId>1308</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8552</srcid><srcstatus/><internalId>1316</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_035_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmOK_VerInd_BUSY</srcid><srcstatus/><internalId>1739</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Security events for CanTSyn:
        Name                                  Description                                               ID
        CANTSYN_SEV_ICV_GENERATION_FAILED     ICV generation for a Follow_Up message failed             66
        CANTSYN_SEV_ICV_VERIFICATION_FAILED   ICV verification of a received Follow_Up message failed   67
        CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE   Failed to get freshness value from FvM                    68
        CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR   Failed to receive correct sequence of SYNC and FUP or     69
                                              OFS and OFNS from the TimeMaster within (CanTSyn
                                               GlobalTimeFollowUpTimeout).
      (RS_Ids_00810)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2520</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5925</srcid><srcstatus/><internalId>978</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5960</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1681</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_003_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1682</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_029_SYNC_NoCRC_NoRefToFV_ICVVerification</srcid><srcstatus/><internalId>1716</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Context data of respective Security events of CanTSyn :
        Security Event                        Context Data                                              
        CANTSYN_SEV_ICV_GENERATION_FAILED     Context Data (1 Byte) - GlobalTimeDomainId            
        CANTSYN_SEV_ICV_VERIFICATION_FAILED   Context Data (1 Byte) - GlobalTimeDomainId  
        CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE   Context Data (1 Byte) - GlobalTimeDomainId                    
        CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR   Context Data (1 Byte) - GlobalTimeDomainId     
      (RS_Ids_00810)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Int_Cfg.h_58</srcid><srcstatus/><internalId>593</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1681</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_003_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1682</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_029_SYNC_NoCRC_NoRefToFV_ICVVerification</srcid><srcstatus/><internalId>1716</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the validation of the received Time Synchronization message has failed (refer to [SWS_CanTSyn_00086]),
        the CanTSyn shall discard the received Time Synchronization message.
        (RS_TS_20035, RS_TS_20036, RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2954</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2993</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6723</srcid><srcstatus/><internalId>1109</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7007</srcid><srcstatus/><internalId>1152</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For classic CAN the DLC of SYNC, FUP, OFS and OFNS messages shall be 8.
        For CAN FD, if
          - CanTSynUseExtendedMsgFormat is TRUE
          - and if CanTSynGlobalTimeTxIcvSecured is ICV_NOT_SUPPORTED and CanTSynRxIcvVerificationType is ICV_NOT_SUPPORTED,
          the DLC of SYNC, FUP, OFS and OFNS messages shall be 16.
        For CAN FD, if
          - CanTSynUseExtendedMsgFormat is TRUE
          - and if CanTSynGlobalTimeTxIcvSecured is ICV_SUPPORTED or CanTSynRxIcvVerificationType is ICV_SUPPORTED,
          the DLC of SYNC, FUP, OFS and OFNS messages shall be variable up to 64.
          (RS_TS_20035, RS_TS_20068, RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</srcid><srcstatus/><internalId>394</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</srcid><srcstatus/><internalId>395</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVSupported</srcid><srcstatus/><internalId>396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is TRUE, then the Extended Offset Message Format shall be used, i.e.,
        Offset Messages with message Type 0x54, 0x64, 0x94 and 0xA4 .(RS_TS_20068)
      </description>
      <comment>
        For Extended Offset Message Format refer to chapter 7.3.2.2
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6185</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6214</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6261</srcid><srcstatus/><internalId>998</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7437</srcid><srcstatus/><internalId>1220</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_002_Successful_OFS_Extended_Transmission</srcid><srcstatus/><internalId>1585</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_012_OFS_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_021_OFS_CRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_036_StdOFS_NoCRC_NoIcv</srcid><srcstatus/><internalId>1740</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_039_OFS_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1743</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest25_001_SecureTime_RxOFSExt_NoCRC</srcid><srcstatus/><internalId>1749</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For each transmission of a Time Synchronization message the CanTSyn module
        shall assemble the message as follows:
        1. Calculate OVS (FUP only)
        2. Calculate SGW (FUP, OFNS and Extended OFS)
        3. Calculate SC
        4. Copy all data to the appropriate position within the related message
        5. Calculate CRC (configuration dependent)
        6. Fetch FV (configuration dependent) and append FVL, ICVL
        and FV in the appropriate position within the related message
        7. Calculate ICV (configuration dependent) and append in the appropriate position
        within the related message.
        (RS_TS_20033, RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4302</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4655</srcid><srcstatus/><internalId>870</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_008_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToSubDomain</srcid><srcstatus/><internalId>1552</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_015_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToGTM</srcid><srcstatus/><internalId>1559</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_001_Successful_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1584</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the validation of received Time Synchronization message
        is successful (refer to [SWS_CanTSyn_00086]), the CanTSyn shall disassemble the
        message and forward the global time via StbM_BusSetGlobalTime to StbM.
        (RS_TS_20034, RS_TS_20035, RS_TS_20036, RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00087.DissasembleMessage</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00087.ForwardGlobalTime</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00106</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        API function                     Header File        Description                
        CanIf_Transmit                   CanIf.h            Requests transmission of a PDU.
        Crc_CalculateCRC8H2F             Crc.h              This service makes a CRC8 calculation
                                                            with the Polynomial 0x2F on Crc_Length.
        Det_ReportError                  Det.h              Service to report development errors.
        Det_ReportRuntimeError           Det.h              Service to report runtime errors. If a callout has 
                                                            been configured then this callout shall be called.
        StbM_BusGetCurrentTime           StbM.h             Returns the current Time Tuple, status
                                                            and User Data of the Time Base.
        StbM_BusSetGlobalTime            StbM.h             Allows the Timebase Provider Modules
                                                            to forward a new Global Time to the StbM.
        StbM_CanSetMasterTimingData      StbM_CanTSyn.h     Provides CAN Timesyn module specific data 
                                                            for a Time Master to the StbM.
        StbM_CanSetSlaveTimingData       StbM_CanTSyn.h     Provides CAN Timesyn module specific data 
                                                            for a Time Slave to the StbM.
        StbM_GetCurrentTime              StbM.h             Returns a time value (Local Time Base derived
                                                            from Global Time Base) in standard format.
                                                            Note: This API shall be called with locked
                                                            interrupts / within an Exclusive Area to prevent interruption
                                                            (i.e., the risk that the time stamp is outdated on return of the function call).
        StbM_GetOffset                   StbM.h             Allows the Timesync Modules to get the current Offset Time and
                                                            User Data.
        StbM_GetTimeBaseStatus           StbM.h             Returns detailed status information for a Synchronized
                                                            (or Pure Local) Time Base and, if called for an Offset Time Base,
                                                            for the Offset Time Base and the underlying Synchronized Time Base.
        StbM_GetTimeBaseUpdateCounter    StbM.h             Allows the Timesync Modules to detect, whether a Time Base should
                                                            be transmitted immediately in the subsequent "Bus"TSyn_Main
                                                            Function() cycle.
        StbM_GetTxFreshness              StbM.h             Allows the Timesync Modules to fetch the FV required for ICV generation.
        StbM_GetTxFreshnessTruncData     StbM.h             Allows the Timesync Modules to fetch the FV required for ICV generation and the
                                                            truncated FV required to send on bus.
        StbM_GetRxFreshness              StbM.h             Allows the Timesync Modules to fetch FV required for ICV verification.
        StbM_SPduTxConfirmation          StbM.h             Allows the Timesync Modules to confirm the successful transmission of ICV
                                                            protected FUP message on the CAN bus.
        Csm_MacGenerate                  Csm.h              Allows the Timesync Modules to
                                                            request the CSM to generate the ICV (MAC).
        Csm_SignatureGenerate            Csm.h              Allows the Timesync Modules to
                                                            request the CSM to generate the ICV (Signature).
        Csm_MacVerify                    Csm.h              Allows the Timesync Modules to
                                                            request the CSM to verify the ICV (MAC).
        Csm_SignatureVerify              Csm.h              Allows the Timesync Modules to
                                                            request the CSM to verify the ICV (Signature).
        (RS_TS_20035)
      </description>
      <comment>
        This requirement is informational only.
        Rationale: This requirement only informs about the APIs provided by other modules.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00090</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Module              Header File           Imported Type
        ComStack_Types      ComStack_Types.h      PduIdType
                            ComStack_Types.h      PduInfoType
                            ComStack_Types.h      PduLengthType
        Csm                 Rte_Csm_Type.h        Crypto_OperationModeType
                            Rte_Csm_Type.h        Crypto_ResultType
                            Rte_Csm_Type.h        Crypto_VerifyResultType
        IdsM                IdsM_Types.h          IdsM_SecurityEventIdType
        StbM                Rte_StbM_Type.h       StbM_CanTimeMasterMeasurementType
                            Rte_StbM_Type.h       StbM_CanTimeSlaveMeasurementType
                            Rte_StbM_Type.h       StbM_SynchronizedTimeBaseType
                            Rte_StbM_Type.h       StbM_TimeBaseStatusType
                            Rte_StbM_Type.h       StbM_TimeStampShortType
                            Rte_StbM_Type.h       StbM_TimeStampType
                            Rte_StbM_Type.h       StbM_UserDataType
                            StbM.h                StbM_MeasurementType
                            StbM.h                StbM_VirtualLocalTimeType
        Std                 Std_Types.h           Std_ReturnType
                            Std_Types.h           Std_VersionInfoType
        (RS_TS_20035)
      </description>
      <comment>
        This requirement is informational only.
        Rationale: This requirement only informs about the types provided by other modules.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxCrcValidated is configured to CRC_OPTIONAL, the CanTSyn shall only accept
          - a FUP message with an identical Sequence Counter to the value of the corresponding SYNC
            message and Type equal to 0x18 or 0x78
          - or a FUP message with an identical sequence counter to the value of the corresponding SYNC
            message and Type equal to 0x28 or 0x88 and a correct CRC value.
            (RS_TS_20034, RS_TS_20035)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00110.ValidFUPMessage.NoCRC</srcid><srcstatus/><internalId>352</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00110.ValidFUPMessage.CRC</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidType.FUPMessage</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidCRC.FUPMessage</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidSC.FUPMessage</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_CONSTR_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the CSM job used to generate ICV is configured in synchronous behaviour, the CanTSynIcvGenerationTimeout shall
        be set to 0.
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8167</srcid><srcstatus/><internalId>1272</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                          CanTSynEnableSecurityEventReporting
        Parent Container              CanTSynGeneral
        Description                   Switches the reporting of security events to the IdsM: - true: reporting is enabled. -
                                      false: reporting is disabled.
        Multiplicity                  1
        Type                          EcucBooleanParamDef
        Default value                 false
        Post-Build Variant Value      false
        Value Configuration Class     
                                      Pre-compile time  X    All Variants
                                      Link time         --
                                      Post-build time   --
        Scope / Dependency            scope: local
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Cfg.h_596</srcid><srcstatus/><internalId>583</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_13_OnlySyncM_OnlySyncS_DET_OFF_IDSM_OFF</srcid><srcstatus/><internalId>1504</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1681</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Container Name                    CanTSynSecurityEventRefs
        Parent Container                  CanTSynGeneral
        Description                       Container for the references to IdsMEvent elements representing the security events
                                          that the CanTSyn module shall report to the IdsM in case the coresponding security
                                          related event occurs (and if CanTSynEnableSecurityEventReporting is set to "true").
                                          The standardized security events in this container can be extended by vendor-specific
                                          security events.
        Post-Build Variant Multiplicity   false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE
        Parent Container                  CanTSynSecurityEventRefs
        Description                       FV not available from FVM. Context data provides the respective domain ID.
        Multiplicity                      0..1
        Type                              Symbolic name reference to IdsMEvent
        Post-Build Variant Multiplicity   false
        Post-Build Variant Value          false
        Multiplicity Configuration Class
                                          Pre-compile time  X    All Variants
                                          Link time         –-
                                          Post-build time   --
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CANTSYN_SEV_ICV_GENERATION_FAILED
        Parent Container                  CanTSynSecurityEventRefs
        Description                       ICV generation for Follow_Up message failed. Context data provides the respective
                                          domain ID.
        Multiplicity                      0..1
        Type                              Symbolic name reference to IdsMEvent
        Post-Build Variant Multiplicity   false
        Post-Build Variant Value          false
        Multiplicity Configuration Class
                                          Pre-compile time  X    All Variants
                                          Link time         –-
                                          Post-build time   --
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CANTSYN_SEV_ICV_VERIFICATION_FAILED
        Parent Container                  CanTSynSecurityEventRefs
        Description                       ICV verification for Follow_Up message failed. Context data provides the respective
                                          domain ID.
        Multiplicity                      0..1
        Type                              Symbolic name reference to IdsMEvent
        Post-Build Variant Multiplicity   false
        Post-Build Variant Value          false
        Multiplicity Configuration Class
                                          Pre-compile time  X    All Variants
                                          Link time         –-
                                          Post-build time   --
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynGlobalTimeTxIcvSecured
        Parent Container                  CanTSynGlobalTimeMaster
        Description                       This parameter controls whether or not ICV generation shall be supported.
        Multiplicity                      1
        Type                              EcucEnumerationParamDef
        Range
                                          ICV_NOT_SUPPORTED         The Timesync module shall not generate the ICV.
                                          ICV_SUPPORTED             The Timesync module shall generate the ICV.
        Default Value                     ICV_NOT_SUPPORTED                                  
        Post-Build Variant Value          false
        Multiplicity Configuration Class
                                          Pre-compile time  X    All Variants
                                          Link time         –-
                                          Post-build time   --
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Container Name                    CanTSynGlobalTimeTxIcvGeneration
        Parent Container                  CanTSynGlobalTimeMaster
        Description                       This container collects configuration that shall be used for ICV generation.  
        Post-Build Variant Multiplicity   false
        Multiplicity Configuration Class
                                          Pre-compile time  X    All Variants
                                          Link time         –-
                                          Post-build time   --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvGenerationBase
        Parent Container                  CanTSynGlobalTimeTxIcvGeneration
        Description                       Symmetric or asymmetric cryptography selection for the ICV generation
        Multiplicity                      1
        Type                              EcucEnumerationParamDef
        Range
                                          ICV_MAC               Symmetric cryptography selection for the ICV
                                                                generation.
                                          ICV_SIGNATURE         Asymmetric cryptography selection for the ICV
                                                                generation.                                 
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvGenerationTimeout
        Parent Container                  CanTSynGlobalTimeTxIcvGeneration
        Description                       Timeout of ICV generation (respective CSM job completion in asynchronous
                                          behaviour). Unit: Seconds
        Multiplicity                      1
        Type                              EcucFloatParamDef
        Range                             ]0 .. INF[                                
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvTxLength
        Parent Container                  CanTSynGlobalTimeTxIcvGeneration
        Description                       Length of ICV to be transmitted within Follow_Up Message on the bus (in bytes).
        Multiplicity                      1
        Type                              EcucIntegerParamDef
        Range                             0 ... 54     
        Default value                     --
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvGenerationFvIdRef
        Parent Container                  CanTSynGlobalTimeTxIcvGeneration
        Description                       This represents the reference to the FV taken to generate the ICV generation.
        Multiplicity                      0..1
        Type                              Symbolic name reference to  StbMFreshnessValue
        Post-Build Variant Multiplicity   false
        Post-Build Variant Value          false
        Multiplicity Configuration Class
                                          Pre-compile time  X    All Variants
                                          Link time         –-
                                          Post-build time   --
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvGenerationJobRef
        Parent Container                  CanTSynGlobalTimeTxIcvGeneration
        Description                       This represents the reference to the CSM job to fetch the CSM job ID.
        Multiplicity                      1
        Type                              Symbolic name reference to CsmJob
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynGlobalTimeRxDebounceTime
        Parent Container                  CanTSynGlobalTimeSlave
        Description                       This represents the configuration of a RX debounce time for the Sync and FUP, OFS
                                          and OFNS. Unit: seconds
        Multiplicity                      1
        Type                              EcucFloatParamDef
        Range                             [0 .. 4]     
        Default value                     --
        Post-Build Variant Value          true
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynRxIcvVerificationType
        Parent Container                  CanTSynGlobalTimeSlave
        Description                       This parameter controls whether or not ICV verification shall be supported.
        Multiplicity                      1
        Type                              EcucEnumerationParamDef
        Range                             
                                          ICV_IGNORED           The Timesync module accepts Time
                                                                Synchronization messages, which are ICV
                                                                secured (without actually validating the ICV) and
                                                                those which are not ICV secured. That means,
                                                                the Timesync module ignores the ICV.
                                          ICV_NOT_VERIFIED      The Timesync module accepts only Time
                                                                Synchronization messages, which are not ICV
                                                                secured. All other Time Synchronization
                                                                messages are ignored.
                                          ICV_OPTIONAL          The Timesync module accepts only Time
                                                                Synchronization messages which are not ICV
                                                                secured and Time Synchronization messages
                                                                which are ICV secured and have the correct ICV.
                                                                All other Time Synchronization messages are
                                                                ignored.
                                          ICV_VERIFIED          The Timesync module accepts only Time
                                                                Synchronization messages, which are ICV
                                                                secured and have the correct ICV. All other Time
                                                                Synchronization messages are ignored.
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Container Name                    CanTSynGlobalTimeRxIcvVerification
        Parent Container                  CanTSynGlobalTimeSlave
        Description                       This container collects configuration required for ICV verification.
        Post-Build Variant Multiplicity   false
        Multiplicity Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00079</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvRxLength
        Parent Container                  CanTSynGlobalTimeRxIcvVerification
        Description                       Length of ICV to be used for verification of received ICV within FUP Message in Bytes.
        Multiplicity                      1
        Type                              EcucIntegerParamDef
        Range                             0 .. 54     
        Default value                     --
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00082</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvVerificationAttempts
        Parent Container                  CanTSynGlobalTimeRxIcvVerification
        Description                       This parameter specifies the number of ICV verification attempts that are to be carried
                                          out when the verification of the ICV failed for a given FUP message. If zero is set, then
                                          only one ICV verification attempt is done.
        Multiplicity                      1
        Type                              EcucIntegerParamDef
        Range                             0 .. 65535     
        Default value                     0
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvVerificationBase
        Parent Container                  CanTSynGlobalTimeRxIcvVerification
        Description                       Symmetric or asymmetric cryptography selection for the ICV generation
        Multiplicity                      1
        Type                              EcucEnumerationParamDef
        Range                             
                                          ICV_MAC             Symmetric cryptography selection for the ICV
                                                              verification.
                                          ICV_SIGNATURE       Asymmetric cryptography selection for the ICV
                                                              verification.
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00081</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvVerificationTimeout
        Parent Container                  CanTSynGlobalTimeRxIcvVerification
        Description                       Timeout of ICV verification (respective CSM job completion in asynchronous
                                          behaviour). Unit: Seconds
        Multiplicity                      1
        Type                              EcucFloatParamDef
        Range                             [0 .. INF[
        Default value                     –-
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvVerificationFvIdRef
        Parent Container                  CanTSynGlobalTimeRxIcvVerification
        Description                       This represents the reference to the FV taken to generate the ICV generation.
        Multiplicity                      0 .. 1
        Type                              Symbolic name reference to StbMFreshnessValue
        Post-Build Variant Multiplicity   false
        Post-Build Variant Value          false
        Multiplicity Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.ECUC_CanTSyn_00080</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CanTSynIcvVerificationJobRef
        Parent Container                  CanTSynGlobalTimeRxIcvVerification
        Description                       This represents the reference to the CSM job to fetch the CSM job ID.
        Multiplicity                      1
        Type                              Symbolic name reference to CsmJob
        Post-Build Variant Value          false
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR23-11.SWS_CanTSyn_00086</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R23-11</source>
      <version>1</version>
      <description>
        For each received Time Synchronization message the CanTSyn shall validate the
        message as follows (all conditions must match):
        1. Type matches depending on the CanTSynRxCrcValidated parameter
        2. SC value is valid (refer to [SWS_CanTSyn_00221], [SWS_CanTSyn_00222],
        [SWS_CanTSyn_00223], [SWS_CanTSyn_00224], [SWS_CanTSyn_00225],
        [SWS_CanTSyn_00226], [SWS_CanTSyn_00227])
        3. D matches to the defined Time Domain range for each Type
        4. D matches to one of the configured Time Domains (given by parameter
        CanTSynGlobalTimeDomainId)
        5. SyncTimeNSec (FUP / OFNS / Extended OFS only) matches the defined
        range of StbM_TimeStampType.nanoseconds.
        6. CRC (including DataID) matches depending on the
        CanTSynRxCrcValidated parameter
        7. ICV matches depending on the CanTSynRxIcvVerificationType parameter
        (RS_TS_20035, RS_TS_20036)
      </description>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2559</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2639</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2894</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6695</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6744</srcid><srcstatus/><internalId>1112</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6978</srcid><srcstatus/><internalId>1148</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7038</srcid><srcstatus/><internalId>1158</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7184</srcid><srcstatus/><internalId>1175</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7368</srcid><srcstatus/><internalId>1202</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7450</srcid><srcstatus/><internalId>1221</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_020_Invalid_OFS_extended</srcid><srcstatus/><internalId>1612</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_004_RxFupFrame_NsecInRange</srcid><srcstatus/><internalId>1621</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_005_RxFupFrame_NsecInRange</srcid><srcstatus/><internalId>1622</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_006_RxFupFrame_NsecOutOfRange</srcid><srcstatus/><internalId>1623</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_007_RxFupFrame_OutOfRange</srcid><srcstatus/><internalId>1624</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR23-11.SWS_CanTSyn_00221</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R23-11</source>
      <version>1</version>
      <description>
        Upon reception of a SYNC (or OFS) message, if the message is the first SYNC (or OFS) message 
        after startup, a Time Slave shall consider the Sequence Counter value of the SYNC (or OFS) 
        message as valid. (RS_TS_20033, RS_TS_20034)
      </description>
      <comment>
        Rationale: After startup it makes sense to skip the Sequence Counter check and allow the
        Sequence Counter of the Time Slave to synchronize to the one of the Time Master.
      </comment>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6066</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR23-11.SWS_CanTSyn_00222</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R23-11</source>
      <version>1</version>
      <description>
        Upon reception of a SYNC (or OFS) message, if the Sequence Counter check is disabled for SYNC 
        (or OFS) messages (i.e., CanTSynGlobalTimeSequenceCounterJumpWidth == 0), a Time Slave shall 
        consider the Sequence Counter value  of the SYNC (or OFS) message as valid. 
        (RS_TS_20033, RS_TS_20034)
      </description>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6067</srcid><srcstatus/><internalId>983</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest09_003_SC_JumpWidth_Disabled</srcid><srcstatus/><internalId>1675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    
    <specobject> 
      <id>CanTSyn.ASR23-11.SWS_CanTSyn_00223</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R23-11</source>
      <version>1</version>
      <description>
        Upon reception of a SYNC (or OFS) message, if
        • the message is not the first SYNC (or OFS) message after startup
        • and Sequence Counter check is enabled (i.e., CanTSynGlobalTimeSequenceCounterJumpWidth &gt; 0)
        • and the Time Domain is not in timeout (i.e., TIMEOUT bit not set in Time Base synchronization 
        status timeBaseStatus)
        then a Time Slave shall check the difference value between the Sequence Counter of the current 
        message and the Sequence Counter of the previous SYNC (or respectively OFS) message.
        If the difference value is greater than 0 and less or equal than CanTSynGlobalTimeSequenceCounterJumpWidth,
        a Time Slave shall consider the Sequence Counter value as valid, else as invalid.
        (RS_TS_20033, RS_TS_20034)
      </description>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6157</srcid><srcstatus/><internalId>989</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_019_Successful_SYNC_FUP_OFS_Extended_Reception</srcid><srcstatus/><internalId>1611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR23-11.SWS_CanTSyn_00224</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R23-11</source>
      <version>1</version>
      <description>
        Upon reception of a SYNC (or OFS) message, if
        • Sequence Counter check is enabled (i.e., CanTSynGlobalTimeSequenceCounterJumpWidth &gt; 0)
        • and the Time Domain is in timeout (i.e., TIMEOUT bit set in Time Base synchronization
        status timeBaseStatus)
        • and the Sequence Counter is stuck, i.e., the value of the difference between the Sequence
        Counter of the current message and the Sequence Counter of the previous SYNC (or respectively
        OFS) message is 0, then a Time Slave shall consider the Sequence Counter jump as invalid. 
        (RS_TS_20033, RS_TS_20034)
      </description>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6102</srcid><srcstatus/><internalId>985</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_014_ReceptionOf_SYNC_WithSameSC_TIMEOUTBitSet_Ignored</srcid><srcstatus/><internalId>1633</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_006_NoHyteresis_Stuck_SC</srcid><srcstatus/><internalId>1678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR23-11.SWS_CanTSyn_00225</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R23-11</source>
      <version>1</version>
      <description>
        Upon reception of a SYNC (or OFS) message, if
        • Sequence Counter check is enabled (i.e., CanTSynGlobalTimeSequenceCounterJumpWidth &gt; 0)
        • and the Time Domain is in timeout (i.e., TIMEOUT bit set in Time Base synchronization 
        status timeBaseStatus)
        • and the message is the first SYNC (or OFS) message in Timeout for which the Sequence 
        Counter is not stuck, 
        a Time Slave shall consider the  Sequence Counter jump as valid. 
      </description>
      <comment>
        Rationale: After a Timeout (e.g., due to a reset or disconnect of the Time Master) it is very
        likely that the Sequence Counter of the first received Timesync message is out of sync, i.e., 
        the Sequence Counter difference exceeds CanTSynGlobalTimeSequenceCounterJumpWidth. To allow for
        faster re-synchronization of the Sequence Counter to the Time Master, the Sequence Counter of 
        the first Timesync message is not checked for CanTSynGlobalTimeSequenceCounterJumpWidth.
        However, a stuck Sequence Counter will always, i.e., also in this situation, be considered as 
        invalid (refer to [SWS_CanTSyn_00224]).
      </comment>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6119</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_016_TIMEOUT_bitWithinTimeBaseStatus_isSet_NoneStuck_SC</srcid><srcstatus/><internalId>1606</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_001_Sync_Hysteresis</srcid><srcstatus/><internalId>1673</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_002_Ofs_Hysteresis</srcid><srcstatus/><internalId>1674</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_004_Sync_ResetHysteresis_Invalid_SC</srcid><srcstatus/><internalId>1676</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_005_Ofs_ResetHysteresis_Invalid_SC</srcid><srcstatus/><internalId>1677</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_006_NoHyteresis_Stuck_SC</srcid><srcstatus/><internalId>1678</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_008_Sync_ResetHysteresis_Stuck_SC</srcid><srcstatus/><internalId>1679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR23-11.SWS_CanTSyn_00226</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R23-11</source>
      <version>1</version>
      <description>
        Upon reception of a SYNC (or OFS) message, if
        • Sequence Counter check is enabled (i.e., CanTSynGlobalTimeSequenceCounterJumpWidth &gt; 0)
        • and the Time Domain is in timeout (i.e., TIMEOUT bit set in Time Base synchronization
        status timeBaseStatus)
        • and the Sequence Counter is not stuck, i.e., the value of the difference between the 
        Sequence Counter of the current message  and the Sequence Counter of the previous message 
        is not 0
        • and the message is not the first SYNC (or OFS) message in Timeout for which the Sequence 
        Counter is not stuck,
        then a Time Slave shall check if value of the difference between the Sequence 
        Counter of the current message and the Sequence Counter of the previous SYNC (or respectively 
        OFS) message exceeds the threshold CanTSynGlobalTimeSequenceCounterJumpWidth.
        If  the difference value exceeds the threshold CanTSynGlobalTimeSequenceCounterJumpWidth, 
        a Time Slave shall consider the Sequence Counter jump as invalid, else as valid.
        (RS_TS_20033, RS_TS_20034) 
      </description>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6123</srcid><srcstatus/><internalId>987</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest09_001_Sync_Hysteresis</srcid><srcstatus/><internalId>1673</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_002_Ofs_Hysteresis</srcid><srcstatus/><internalId>1674</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_004_Sync_ResetHysteresis_Invalid_SC</srcid><srcstatus/><internalId>1676</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_005_Ofs_ResetHysteresis_Invalid_SC</srcid><srcstatus/><internalId>1677</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_008_Sync_ResetHysteresis_Stuck_SC</srcid><srcstatus/><internalId>1679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR23-11.SWS_CanTSyn_00227</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R23-11</source>
      <version>1</version>
      <description>
        Upon reception of a SYNC (or OFS) message, if
        • Sequence Counter check is enabled (i.e., CanTSynGlobalTimeSequenceCounterJumpWidth &gt; 0)
        • and the Time Domain is in timeout (i.e., TIMEOUT bit set in Time Base synchronization
        status timeBaseStatus)
        a Time Slave shall check the number of consecutive valid Sequence Counter jumps (refer to 
        requirements [SWS_CanTSyn_00224], [SWS_CanTSyn_00225] and [SWS_CanTSyn_00226])
        If the number of consecutive valid Sequence Counter jumps exceeds the value
        CanTSynGlobalTimeSequenceCounterHysteresis, a Time Slave shall consider the Sequence Counter
        value as valid, else as invalid.c(RS_TS_20033, RS_TS_20034)  
      </description>
      <comment>
        The hysteresis improves robustness against a scenario with a buggy master implementation or injection 
        of invalid master messages, i.e., when the Sequence Counter increments by more than CanTSynGlobalTimeSequenceCounterJumpWidth. 
        In such a scenario (without any hysteresis) a message with any (also invalid) Sequence
        Counter value would cause the Time Slave to leave the Timeout state although the
        Sequence Counter is not incremented correctly. A hysteresis avoids this
      </comment>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6124</srcid><srcstatus/><internalId>988</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest09_001_Sync_Hysteresis</srcid><srcstatus/><internalId>1673</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_002_Ofs_Hysteresis</srcid><srcstatus/><internalId>1674</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_004_Sync_ResetHysteresis_Invalid_SC</srcid><srcstatus/><internalId>1676</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_005_Ofs_ResetHysteresis_Invalid_SC</srcid><srcstatus/><internalId>1677</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest09_008_Sync_ResetHysteresis_Stuck_SC</srcid><srcstatus/><internalId>1679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
    

  </specobjects>
    <specobjects doctype="swuvc">

    <specobject>
       <id>CanTSyn.ECUC_CanTSyn_00008.vc01</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>1</version>
       <description>
          EC valid: Tested symbolic names   - CanTSynGlobalTimeMasterConfirmationHandleId symbolic names
                    Test's purpose          - For each configured CanTSynGlobalTimeMasterConfirmationHandleId
                                              CanTSyn module shall define a macro representing its symbolic name.
                                              -- CanTSyn_ComTest_12_HandleIdCheck
                    Config Param            - CanTSynGlobalTimeMaster shall exist
                                              CanTSynGlobalTimeMasterConfirmationHandleIds have correct values (generated through HandleID Wizard)
                    Tested handle ID        - CanTSynGlobalTimeMasterConfirmationHandleId
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_12_HandleIdCheck</srcid><srcstatus/><internalId>1502</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.ECUC_CanTSyn_00008</linksto>
             <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
       <id>CanTSyn.ECUC_CanTSyn_00013.vc01</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>1</version>
       <description>
          EC valid: Tested symbolic names   - CanTSynGlobalTimeSlaveHandleId symbolic names
                    Test's purpose          - For each configured CanTSynGlobalTimeSlaveHandleId
                                              CanTSyn module shall define a macro representing its symbolic name.
                                              -- CanTSyn_ComTest_12_HandleIdCheck
                    Config Param            - CanTSynGlobalTimeSlave shall exist
                                              CanTSynGlobalTimeSlaveHandleIds have correct values (generated through HandleID Wizard)
                    Tested handle ID        - CanTSynGlobalTimeSlaveHandleId
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_12_HandleIdCheck</srcid><srcstatus/><internalId>1502</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.ECUC_CanTSyn_00013</linksto>
             <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00015.NormalMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        SYNC not CRC secured not extended message format:
         Byte 0: Type = 0x10
         Byte 1: User Byte 1, default: 0
         Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                 SC = Sequence Counter (Bit 3 to Bit 0)
         Byte 3: User Byte 0, default: 0
         Byte 4-7: SyncTimeSec = 32 bit LSB of the 48 bits Seconds part of the time
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3668</srcid><srcstatus/><internalId>767</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3714</srcid><srcstatus/><internalId>777</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00015.ExtendedMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        SYNC not CRC secured extended message format:
         Byte 0: Type = 0x10
         Byte 1: User Byte 1, default: 0
         Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                 SC = Sequence Counter (Bit 3 to Bit 0)
         Byte 3: User Byte 0, default: 0
         Byte 4-7: SyncTimeSec = 32 bit LSB of the 48 bits Seconds part of the time
         Byte 8-15: reserved, always 0
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3676</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_020_MasterSendsSync_TxConfirmationArrives_TransmitFup_Extended</srcid><srcstatus/><internalId>1564</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00016.NormalMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        FUP not CRC secured not extended message format:
        Byte 0: Type = 0x18
        Byte 1: User Byte 2, default: 0
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 3), default: 0
           SGW (Bit 2)
            SyncToGTM = 0
            SyncToSubDomain = 1
           OVS = Overflow of seconds (Bit 1 to Bit 0)
        Byte 4-7: SyncTimeNSec = 32 Bit time stamp in nanoseconds
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3764</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3826</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00016.ExtendedMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        FUP not CRC secured extended message format:
        Byte 0: Type = 0x18
        Byte 1: User Byte 2, default: 0
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 3), default: 0
           SGW (Bit 2)
            SyncToGTM = 0
            SyncToSubDomain = 1
           OVS = Overflow of seconds (Bit 1 to Bit 0)
        Byte 4-7: SyncTimeNSec = 32 Bit time stamp in nanoseconds
        Byte 8-15: reserved, always 0
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3833</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_020_MasterSendsSync_TxConfirmationArrives_TransmitFup_Extended</srcid><srcstatus/><internalId>1564</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00017.NormalMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        SYNC CRC secured not extended message format:
        Byte 0: Type = 0x20
        Byte 1: CRC
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: User Byte 0, default: 0
        Byte 4-7: SyncTimeSec = 32 bit LSB of the 48 bits Seconds part of the time
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3669</srcid><srcstatus/><internalId>768</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3688</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00017.ExtendedMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        SYNC CRC secured extended message format:
        Byte 0: Type = 0x20
        Byte 1: CRC
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: User Byte 0, default: 0
        Byte 4-7: SyncTimeSec = 32 bit LSB of the 48 bits Seconds part of the time
        Byte 8-15: reserved, always 0
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3677</srcid><srcstatus/><internalId>770</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3695</srcid><srcstatus/><internalId>773</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3782</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00018.NormalMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        FUP CRC secured not extended message format:
        Byte 0: Type = 0x28
        Byte 1: CRC
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 3), default: 0
          SGW (Bit 2)
            SyncToGTM = 0
            SyncToSubDomain = 1
          OVS = Overflow of seconds (Bit 1 to Bit 0)
        Byte 4-7: SyncTimeNSec = 32 Bit time stamp in nanoseconds
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3774</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00018.ExtendedMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        FUP CRC secured extended message format:
        Byte 0: Type = 0x28
        Byte 1: CRC
        Byte 2: D = Time Domain 0 to 15 (Bit 7 to Bit 4)
                SC = Sequence Counter (Bit 3 to Bit 0)
        Byte 3: reserved (Bit 7 to Bit 3), default: 0
          SGW (Bit 2)
            SyncToGTM = 0
            SyncToSubDomain = 1
          OVS = Overflow of seconds (Bit 1 to Bit 0)
        Byte 4-7: SyncTimeNSec = 32 Bit time stamp in nanoseconds
        Byte 8-15: reserved, always 0
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3834</srcid><srcstatus/><internalId>797</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_002_Successful_OFS_Extended_Transmission</srcid><srcstatus/><internalId>1585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00161.Payload</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The ICV shall be calculated over SYNC payload, FUP payload and FV (based on configuration
        CanTSynIcvGenerationFvIdRef).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3727</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7912</srcid><srcstatus/><internalId>1240</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7936</srcid><srcstatus/><internalId>1244</internalId></linkedfrom></coveredby></needscov>  
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_009_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1688</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest22_001_ExtSync_SecFup_CRC_IcvSecured_RefToFV_Gateway</srcid><srcstatus/><internalId>1745</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00161.ICVinFUP</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The ICV is included in the FUP message.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4940</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7880</srcid><srcstatus/><internalId>1237</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8159</srcid><srcstatus/><internalId>1269</internalId></linkedfrom></coveredby></needscov>  
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_009_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1688</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest22_001_ExtSync_SecFup_CRC_IcvSecured_RefToFV_Gateway</srcid><srcstatus/><internalId>1745</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00162.Payload</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The ICV shall be calculated over Extended OFS payload and FV (based on configuration
        CanTSynIcvGenerationFvIdRef).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7913</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7937</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_020_ExtOfsMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1699</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest22_002_SecOfs_CRC_IcvSecured_RefToFV_Gateway</srcid><srcstatus/><internalId>1746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00162.ICVinOFS</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The ICV is included in the Extended OFS message.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7881</srcid><srcstatus/><internalId>1238</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7990</srcid><srcstatus/><internalId>1249</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8160</srcid><srcstatus/><internalId>1270</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_020_ExtOfsMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</srcid><srcstatus/><internalId>1699</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest22_002_SecOfs_CRC_IcvSecured_RefToFV_Gateway</srcid><srcstatus/><internalId>1746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFV</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness returns E_OK, the Time Master shall construct the message types 0x78,
        0x88, 0x94, 0xA4 with the full FV.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8287</srcid><srcstatus/><internalId>1284</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_008_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1687</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00166.SetFVL</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness returns E_OK, the Time Master shall set the FVL to StbMFreshnessValueLength.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8263</srcid><srcstatus/><internalId>1277</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_008_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1687</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFVinICV</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness returns E_OK, the Time Master shall use the full FV in ICV generation.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7922</srcid><srcstatus/><internalId>1242</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1681</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_008_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1687</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00167.TruncatedFV</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshnessTruncData returns E_OK, the Time Master shall construct the message types
        0x78, 0x88, 0x94, 0xA4 with truncated FV.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8281</srcid><srcstatus/><internalId>1283</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00167.SetFVL</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshnessTruncData returns E_OK, the Time Master shall set the FVL to StbMFreshnessValueTruncLength.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8264</srcid><srcstatus/><internalId>1278</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00167.UseFullFV</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshnessTruncData returns E_OK, the Time Master shall use
        the full FV in ICV generation.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7923</srcid><srcstatus/><internalId>1243</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00168.StopICVGeneration</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness or StbM_GetTxFreshnessTruncData returns E_NOT_OK, the Time Master shall
        stop the ICV generation and accordingly fill 0 for FVL and ICVL fields in message types 0x78,
        0x88, 0x94, 0xA4.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8298</srcid><srcstatus/><internalId>1289</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1681</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_006_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1685</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_013_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1692</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_017_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallDet</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness or StbM_GetTxFreshnessTruncData returns E_NOT_OK, the Time Master shall
        call Det_ReportRuntimeError with the parameter ErrorId := CANTSYN_E_-FRESHNESSFAILURE
        (refer [SWS_CanTSyn_xxx05]).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8303</srcid><srcstatus/><internalId>1291</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1681</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_006_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1685</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_013_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1692</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_017_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness or StbM_GetTxFreshnessTruncData returns E_NOT_OK, the Time Master shall
        call IdsM_SetSecurityEventWithContextData with the parameters EventId := CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE
        (refer [SWS_CanTSyn_00204])
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8312</srcid><srcstatus/><internalId>1292</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1681</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_006_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1685</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_013_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1692</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_017_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</srcid><srcstatus/><internalId>1696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacGenerate / Csm_SignatureGenerate returns E_NOT_OK or CanTSynIcvGenerationTimeout expires before the notification
        of the CanTSyn_IcvGenerationIndication callback, the Time Master shall stop the ICV generation and accordingly fill 0 for 
        ICVL field in message types 0x78, 0x88, 0x94, 0xA4.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4917</srcid><srcstatus/><internalId>895</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7969</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8132</srcid><srcstatus/><internalId>1261</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_003_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1682</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_004_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1683</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_007_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1686</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_008_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1687</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_014_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1693</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_015_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1694</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_018_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1697</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_019_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacGenerate / Csm_SignatureGenerate returns E_NOT_OK or CanTSynIcvGenerationTimeout expires before the notification
        of the CanTSyn_IcvGenerationIndication callback, the Time Master shall call IdsM_SetSecurityEventWithContextData with the 
        parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED (refer [SWS_CanTSyn_00204]).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4924</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7975</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8138</srcid><srcstatus/><internalId>1262</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_003_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1682</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_004_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1683</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_007_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1686</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_008_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1687</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_014_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1693</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_015_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1694</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_018_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1697</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_019_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00178.ICVVerified</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_VERIFIED, the CanTSyn shall perform ICV verification for FUP messages
        with ICV (Message type: 0x78, 0x88).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6445</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_010_SYNC_CRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_035_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmOK_VerInd_BUSY</srcid><srcstatus/><internalId>1739</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_037_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmVERNOTOK_VerIndOK</srcid><srcstatus/><internalId>1741</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_038_SYNC_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1742</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest23_001_SecureTime_RX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1747</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00178.FailedVerification</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_VERIFIED, the CanTSyn shall consider
        ICV verification as failed for FUP messages without ICV (Message type: Type: 0x18, 0x28).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6461</srcid><srcstatus/><internalId>1019</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_023_SYNC_MessageFiltering_When_ICV_VERIFIED</srcid><srcstatus/><internalId>1731</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00179.ICVNotVerified</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_NOT_VERIFIED, the CanTSyn shall not perform the ICV verification and
        the FUP messages shall not contain an ICV value (Message type: 0x18, 0x28). 
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6415</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_011_SYNC_NoCRC_NoIcvSecured</srcid><srcstatus/><internalId>1715</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00179.FailedVerification</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_NOT_VERIFIED, the CanTSyn shall consider ICV verification as failed for FUP messages with ICV (Message Type: 0x78, 0x88).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6404</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_033_SYNC_MessageFiltering_When_ICV_NOT_VERIFIED</srcid><srcstatus/><internalId>1737</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00181.ICVOptional</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_OPTIONAL, the CanTSyn shall perform ICV verification for FUP messages
        with ICV (Message type: 0x78, 0x88).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6425</srcid><srcstatus/><internalId>1013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_024_SYNC_MessageFiltering_When_ICV_OPTIONAL</srcid><srcstatus/><internalId>1732</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00181.FUPNoICV</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_OPTIONAL, 
        the CanTSyn shall not perform ICV verification for FUP messages without ICV (Message type: 0x18, 0x28).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6436</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_024_SYNC_MessageFiltering_When_ICV_OPTIONAL</srcid><srcstatus/><internalId>1732</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ICVVerified</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_VERIFIED, the CanTSyn shall perform ICV verification for Extended OFS
        messages with ICV messages (Message type: 0x94, 0xA4). 
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6446</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_012_OFS_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_036_StdOFS_NoCRC_NoIcv</srcid><srcstatus/><internalId>1740</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest25_001_SecureTime_RxOFSExt_NoCRC</srcid><srcstatus/><internalId>1749</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ExtendedOFSNoICV</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_VERIFIED,
        the CanTSyn shall consider ICV verification as failed for Extended OFS messages without ICV (Message type: 0x54, 0x64).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6462</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_026_OFS_MessageFiltering_When_ICV_VERIFIED</srcid><srcstatus/><internalId>1734</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00185.ICVNotVerified</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_NOT_VERIFIED, the CanTSyn shall not perform the ICV verification and
        the Extended OFS messages shall not contain an ICV value (Message type: 0x54,0x64).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6416</srcid><srcstatus/><internalId>1012</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_022_OFS_NoCRC_NoIcvSecured</srcid><srcstatus/><internalId>1728</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00185.FailedVerification</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_NOT_VERIFIED, 
        the CanTSyn shall consider ICV verification as failed for Extended OFS messages with ICV (Type: 0x94, 0xA4).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6405</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_034_OFS_MessageFiltering_When_ICV_NOT_VERIFIED</srcid><srcstatus/><internalId>1738</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00187.ICVOptional</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_OPTIONAL, the CanTSyn shall perform ICV verification for Extended OFS
        messages with ICV (Message type: 0x94, 0xA4).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6426</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_027_OFS_MessageFiltering_When_ICV_OPTIONAL</srcid><srcstatus/><internalId>1735</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00187.OFSNoICV</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is configured to ICV_OPTIONAL, 
        the CanTSyn shall not perform ICV verification for Extended OFS messages without ICV (Message type: 0x54, 0x64).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6437</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_027_OFS_MessageFiltering_When_ICV_OPTIONAL</srcid><srcstatus/><internalId>1735</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00192.StbMCallRetry</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetRxFreshness returns E_NOT_OK, the current ICV verification of the received FUP or Extended OFS
        message is considered to be failed, and the Time Slave shall retry calling StbM_GetRxFreshness in the next Main Function.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8610</srcid><srcstatus/><internalId>1319</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8748</srcid><srcstatus/><internalId>1324</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_003_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_014_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1720</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00192.IncrementAttemptCounter</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetRxFreshness returns E_NOT_OK, the current ICV verification of the received FUP or Extended OFS
        message is considered to be failed, and the Time Slave shall increment the ICV verification attempt
        counter for this FUP or Extended OFS message.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8606</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_003_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_014_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1720</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00193.StopICVVerification</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached CanTSynIcvVerificationAttempts, then the
        ICV verification of received FUP or Extended OFS message is considered to be failed and the
        Time Slave shall stop the ICV verification and consider the ICV verification as failed.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8864</srcid><srcstatus/><internalId>1335</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_015_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1721</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallDet</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached CanTSynIcvVerificationAttempts, then the
        ICV verification of received FUP or Extended OFS message is considered to be failed and the
        Time Slave shall call Det_ReportRuntimeError with the parameter ErrorId set to CANTSYN_E_FRESHNESSFAILURE 
        (refer [SWS_CanTSyn_91001]).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8869</srcid><srcstatus/><internalId>1337</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_015_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1721</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached CanTSynIcvVerificationAttempts, then the
        ICV verification of received FUP or Extended OFS message is considered to be failed and the
        Time Slave shall call IdsM_SetSecurityEventWithContextData with the parameter EventId set to 
        CANTSYN_SEV_ICV_VERIFICATION_FAILED ( refer to[SWS_CanTSyn_00204] ).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6714</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6998</srcid><srcstatus/><internalId>1149</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_015_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1721</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If one of the following conditions is true:
          - the ICV verification attempt counter has reached the configuration value CanTSynIcvVerificationAttempts
          - the verification of the ICV (CanTSyn_IcvVerificationIndication or Csm_MacVerify / Csm_SignatureVerify
          when synchronous behavior is used) has returned a non-recoverable error such as returning E_NOT_OK or
          KEY_FAILURE
          - CanTSynIcvVerificationTimeout expires before the notification of the CanTSyn_IcvVerificationIndication callback,
        the Time Slave shall stop the ICV verification and consider the ICV verification as failed.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3614</srcid><srcstatus/><internalId>763</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8430</srcid><srcstatus/><internalId>1306</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8535</srcid><srcstatus/><internalId>1314</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8860</srcid><srcstatus/><internalId>1334</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_007_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmNotOk_CsmKeyFailure</srcid><srcstatus/><internalId>1711</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_009_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotReceived</srcid><srcstatus/><internalId>1713</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_015_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1721</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_018_OFS_NoCRC_IcvSecured_RefToFV_FVOk_CsmNotOk_CsmKeyFailure</srcid><srcstatus/><internalId>1724</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_020_OFS_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotReceived</srcid><srcstatus/><internalId>1726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If one of the following conditions is true:
          - the ICV verification attempt counter has reached the configuration value CanTSynIcvVerificationTimeout
          - the verification of the ICV (CanTSyn_IcvVerificationIndication or Csm_MacVerify / Csm_SignatureVerify
          when synchronous behavior is used) has returned a non-recoverable error such as returning E_NOT_OK or
          KEY_FAILURE
          - CanTSynIcvVerificationTimeout expires before the notification of the CanTSyn_IcvVerificationIndication callback,
        the Time Slave shall call IdsM_SetSecurityEventWithContextData with the parameters EventId set to CANTSYN_SEV_ICV_VERIFICATION_FAILED
        (refer to [SWS_CanTSyn_00204]).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6715</srcid><srcstatus/><internalId>1107</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6999</srcid><srcstatus/><internalId>1150</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_007_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmNotOk_CsmKeyFailure</srcid><srcstatus/><internalId>1711</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_009_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotReceived</srcid><srcstatus/><internalId>1713</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_015_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1721</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_018_OFS_NoCRC_IcvSecured_RefToFV_FVOk_CsmNotOk_CsmKeyFailure</srcid><srcstatus/><internalId>1724</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_020_OFS_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotReceived</srcid><srcstatus/><internalId>1726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00029.SameTimeDomain</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The SYNC and FUP sequence shall not be interrupted by time synchronization messages
        of the same Time Domain.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5195</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00029.DiffTimeDomain</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The SYNC and FUP sequence shall not be interrupted by time synchronization messages
        of other Time Domains if the same CAN ID is used for the Time Synchronization messages.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.UniquePDUs</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00039.SameTimeDomain</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The OFS and OFNS sequence shall not be interrupted by time synchronization messages
        of the same Time Domain.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4585</srcid><srcstatus/><internalId>866</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00039.DiffTimeDomain</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The OFS and OFNS sequence shall not be interrupted by time synchronization messages
        of other Time Domains if the same CAN ID is used for the Time Synchronization messages.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.UniquePDUs</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00030.SyncToGTM.SGW</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The SGW value (Time Gateway synchronization status) shall be retrieved from the time base synchronization status.
        If the STBM_SYNC_TO_GATEWAY bit within timeBaseStatus is not set the SGW value shall be SyncToGTM.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4684</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_015_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToGTM</srcid><srcstatus/><internalId>1559</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00030.SyncToSubDomain.SGW</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
         The SGW value (Time Gateway synchronization status) shall be retrieved from the time base synchronization status.
         If the STBM_SYNC_TO_GATEWAY bit within timeBaseStatus is set the SGW value shall be SyncToSubDomain.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4677</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_008_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToSubDomain</srcid><srcstatus/><internalId>1552</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00049.FUP.SCUnchanged</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Sequence Counter (SC) value for a FUP message shall be set to the SC value
        of the corresponding SYNC message.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5203</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_006_MasterSendsSyncFrames_TxConfirmation_After3s_Result_E_NOT_OK</srcid><srcstatus/><internalId>1550</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_008_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToSubDomain</srcid><srcstatus/><internalId>1552</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_009_MasterSendsSyncFramesPeriodically_SC_WrapsAround</srcid><srcstatus/><internalId>1553</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_015_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToGTM</srcid><srcstatus/><internalId>1559</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00049_OFNS_SCUnchanged</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The SC value for an OFNS message shall be set to the SC value
        of the corresponding OFS message.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3758</srcid><srcstatus/><internalId>779</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4334</srcid><srcstatus/><internalId>844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_004_SC_Unchanged_OnEveryOFNSTransmission</srcid><srcstatus/><internalId>1570</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00057.SYNC.ValidTypeAndCRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept SYNC message with Type equal to 0x20 and a correct CRC value if
        CanTSynRxCrcValidated is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6327</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidType</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore the SYNC message with a Type different from 0x20 if CanTSynRxCrcValidated
        is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6505</srcid><srcstatus/><internalId>1031</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6560</srcid><srcstatus/><internalId>1069</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_002_SYNC_OFS_invalid_TYPE_and_CRC</srcid><srcstatus/><internalId>1590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidCRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore the SYNC message with an incorrect CRC value if CanTSynRxCrcValidated
        is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6496</srcid><srcstatus/><internalId>1024</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6551</srcid><srcstatus/><internalId>1062</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_002_SYNC_OFS_invalid_TYPE_and_CRC</srcid><srcstatus/><internalId>1590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00058.SYNC.ValidType</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept SYNC message with Type equal to 0x10 if CanTSynRxCrcValidated is configured
        to CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5606</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00058.SYNC.InvalidType</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore SYNC message with a Type different from 0x10 if CanTSynRxCrcValidated is configured
        to CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6506</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6561</srcid><srcstatus/><internalId>1070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_002_SYNC_OFS_FUP_OFNS_invalid_TYPE</srcid><srcstatus/><internalId>1619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00059.SYNC.ValidType</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept SYNC message with Type equal to 0x10 or 0x20 if CanTSynRxCrcValidated is
        configured to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5607</srcid><srcstatus/><internalId>959</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_001_SYNC_OFS_FUP_OFNS_valid_type_SC</srcid><srcstatus/><internalId>1614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00059.SYNC.InvalidType</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore SYNC message with a Type different from 0x10 and 0x20 if CanTSynRxCrcValidated
        is configured to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6507</srcid><srcstatus/><internalId>1033</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6562</srcid><srcstatus/><internalId>1071</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_002_SYNC_OFS_FUP_OFNS_invalid_type</srcid><srcstatus/><internalId>1615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00109.ValidSYNCMessage.NoCRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept a SYNC message with a Type equal to 0x10
        if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5608</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_002_Successful_SYNC_FUP_OFS_OFNS_NOCRC_Reception</srcid><srcstatus/><internalId>1644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00109.ValidSYNCMessage.CRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept a SYNC message with a Type equal to 0x20
        and a correct CRC value if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5609</srcid><srcstatus/><internalId>961</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_006_Successful_SYNC_FUP_OFS_Extended_Reception</srcid><srcstatus/><internalId>1648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00109.InvalidType.SYNCMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore SYNC message with a Type different from 0x10 and 0x20
        if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5610</srcid><srcstatus/><internalId>962</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_003_SYNC_FUP_OFS_OFNS_Invalid_TYPE</srcid><srcstatus/><internalId>1645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00109.InvalidCRC.SYNCMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore a SYNC message with a Type equal to 0x20
        and an incorrect CRC value if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6495</srcid><srcstatus/><internalId>1023</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6550</srcid><srcstatus/><internalId>1061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_004_SYNC_FUP_OFS_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00060.ValidFUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept FUP message with an identical Sequence Counter to the value of the corresponding SYNC
        message and Type equal to 0x28 and a correct CRC value if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6328</srcid><srcstatus/><internalId>1004</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00060.InvalidSC.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore FUP message with a Sequence Counter different from the value of the corresponding SYNC
        message if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7339</srcid><srcstatus/><internalId>1196</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00060.InvalidType.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore FUP message with a Type different from 0x28 if CanTSynRxCrcValidated is configured to
        CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6508</srcid><srcstatus/><internalId>1034</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6563</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00060.InvalidCRC.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore FUP message with an incorrect CRC value if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6498</srcid><srcstatus/><internalId>1026</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6553</srcid><srcstatus/><internalId>1064</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_004_FUP_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00061.ValidFUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept FUP message with an identical Sequence Counter to the value of the corresponding
        SYNC message and Type equal to 0x18 if CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7314</srcid><srcstatus/><internalId>1189</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00061.InvalidSC.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore FUP message with a Sequence Counter different from the value of the corresponding
        SYNC message if CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7340</srcid><srcstatus/><internalId>1197</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_003_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00061.InvalidType.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept FUP message with a Type different from 0x18 if CanTSynRxCrcValidated is configured
        to CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6509</srcid><srcstatus/><internalId>1035</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6511</srcid><srcstatus/><internalId>1037</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6564</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6566</srcid><srcstatus/><internalId>1075</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_002_SYNC_OFS_FUP_OFNS_invalid_TYPE</srcid><srcstatus/><internalId>1619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00062.ValidFUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept FUP message with an identical sequence counter to the value of the corresponding SYNC
        message and Type equal to 0x18 or 0x28 if CanTSynRxCrcValidated is configured to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7316</srcid><srcstatus/><internalId>1191</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_001_SYNC_OFS_FUP_OFNS_valid_type_SC</srcid><srcstatus/><internalId>1614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00062.InvalidSC.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore FUP message with a sequence counter different from the value of the corresponding SYNC
        message if CanTSynRxCrcValidated is configured to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7341</srcid><srcstatus/><internalId>1198</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_003_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1616</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00062.InvalidType.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore FUP message with a Type different from 0x18 and 0x28 if CanTSynRxCrcValidated is configured
        to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6510</srcid><srcstatus/><internalId>1036</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6565</srcid><srcstatus/><internalId>1074</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_002_SYNC_OFS_FUP_OFNS_invalid_type</srcid><srcstatus/><internalId>1615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00110.ValidFUPMessage.NoCRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept a FUP message with an identical Sequence Counter
        to the value of the corresponding SYNC message and Type equal to 0x18 or 0x78
        if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5538</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_002_Successful_SYNC_FUP_OFS_OFNS_NOCRC_Reception</srcid><srcstatus/><internalId>1644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00110.ValidFUPMessage.CRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept an FUP message with an identical Sequence Counter
        to the value of the corresponding SYNC message and Type equal
        to 0x28 or 0x88 and a correct CRC value if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5539</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_006_Successful_SYNC_FUP_OFS_Extended_Reception</srcid><srcstatus/><internalId>1648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidType.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore FUP message with Type different from 0x18, 0x28,
        0x78 and 0x88 if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5540</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_003_SYNC_FUP_OFS_OFNS_Invalid_TYPE</srcid><srcstatus/><internalId>1645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidCRC.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore FUP message with Type equal
        to 0x28 or 0x88 and an incorrect CRC value if CanTSynRxCrcValidated
        is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6497</srcid><srcstatus/><internalId>1025</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6552</srcid><srcstatus/><internalId>1063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_004_SYNC_FUP_OFS_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidSC.FUPMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore FUP message with Sequence Counter different from the value of the
        corresponding SYNC message if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7338</srcid><srcstatus/><internalId>1195</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00076.SYNCMatchFUP.SC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Sequence Counter of each SYNC message must match to the Sequence Counter of the next incoming
        FUP message of the same Time Domain.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7315</srcid><srcstatus/><internalId>1190</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00076.NoMatchSYNC_FUP.SC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the Sequence Counter of each SYNC message does not match to the Sequence Counter of the next
        incoming FUP message of the same Time Domain, the contents of the already received SYNC message
        shall be discarded and the received FUP message shall be ignored.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7342</srcid><srcstatus/><internalId>1199</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1593</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00077.OFSMatchOFNS.SC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE, the Sequence Counter of each OFS message
        must match to the Sequence Counter of the next incoming OFNS message of the same Time Domain.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7399</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00077.NoMatchOFS_OFNS.SC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE and if the Sequence Counter of each OFS message
        does not match to the Sequence Counter of the next incoming OFNS message of the same
        Time Domain, the contents of the already received OFS message shall be discarded and
        the received OFNS message shall be ignored.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7407</srcid><srcstatus/><internalId>1210</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1593</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>


    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00097.PduInfoPtr.E_NULL_POINTER.RxIndication</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The callback function CanTSyn_RxIndication() shall inform the DET, if development error detection
        is enabled (CANTSYN_DEV_ERROR_DETECT is set to TRUE) and if function call has failed because
        PduInfoPtr equals NULL_PTR (CANTSYN_E_NULL_POINTER).
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2550</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_Det012_Rxindication_PduInfoPtr_Null_Pointer</srcid><srcstatus/><internalId>1600</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00097.SduDataPtr.E_NULL_POINTER.RxIndication</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The callback function CanTSyn_RxIndication() shall inform the DET, if development error detection
        is enabled (CANTSYN_DEV_ERROR_DETECT is set to TRUE) and if function call has failed because
        SduDataPtr equals NULL_PTR (CANTSYN_E_NULL_POINTER).
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2555</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_Det013_RxIndication_SduDataPtr_Null_Pointer</srcid><srcstatus/><internalId>1601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00097.INVALID_PDUID.RxIndication</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The callback function CanTSyn_RxIndication() shall inform the DET, if development error detection
        is enabled (CANTSYN_DEV_ERROR_DETECT is set to TRUE) and if function call has failed because of
        invalid PDU ID (CANTSYN_E_INVALID_PDUID).
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2562</srcid><srcstatus/><internalId>631</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_Det010_Rxindication_InvalidParam</srcid><srcstatus/><internalId>1598</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00120.SYNC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        CanTSynCyclicMsgResumeTime (CanTSyn.ASR43.ECUC_CanTSyn_00044) represents the
        timeout value of a cyclicMsgResumeCounter that shall be started when
        SYNC message has been sent immediately, asynchronous to the cyclic
        Timesync message transmission. CanTSynCyclicMsgResumeTime shall be
        decremented on each invocation of CanTSyn_MainFunction(), if no Timesync
        PDU is transmitted asynchronously.(RS_StbM_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4738</srcid><srcstatus/><internalId>885</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5099</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest10_001_Immediate_Transmission</srcid><srcstatus/><internalId>1636</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_003_Immediate_Transmission</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00120.OFS</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        CanTSynCyclicMsgResumeTime (CanTSyn.ASR43.ECUC_CanTSyn_00044) represents the
        timeout value of a cyclicMsgResumeCounter that shall be started when OFS message has been sent immediately,
        asynchronous to the cyclic Timesync message transmission. CanTSynCyclicMsgResumeTime shall be
        decremented on each invocation of CanTSyn_MainFunction(), if no Timesync
        PDU is transmitted asynchronously.(RS_StbM_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4440</srcid><srcstatus/><internalId>856</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4484</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest10_001_Immediate_Transmission</srcid><srcstatus/><internalId>1636</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_003_Immediate_Transmission</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00121.SYNC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the cyclicMsgResumeCounter has reached a value equal or less than zero,
        CanTSyn shall resume cyclic Timesync message transmission by sending a
        SYNC message.(RS_StbM_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5052</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest10_002_Immediate_Transmission</srcid><srcstatus/><internalId>1637</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_003_Immediate_Transmission</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00121.OFS</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the cyclicMsgResumeCounter has reached a value equal or less than zero,
        CanTSyn shall resume cyclic Timesync message transmission by sending an
        OFS message.(RS_StbM_20031)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4439</srcid><srcstatus/><internalId>855</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest10_002_Immediate_Transmission</srcid><srcstatus/><internalId>1637</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest10_003_Immediate_Transmission</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00065.Valid.NormalOFSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept OFS message with Type equal to 0x44 or 0x64
        and a correct CRC value if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5797</srcid><srcstatus/><internalId>969</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5864</srcid><srcstatus/><internalId>975</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6262</srcid><srcstatus/><internalId>999</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00065.InvalidType.NormalOFSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFS message with Type different from 0x44 or 0x64
        if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6533</srcid><srcstatus/><internalId>1050</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6587</srcid><srcstatus/><internalId>1088</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_002_SYNC_OFS_invalid_TYPE_and_CRC</srcid><srcstatus/><internalId>1590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00065.InvalidCRC.NormalOFSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFS message with an incorrect CRC value
        if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6525</srcid><srcstatus/><internalId>1044</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6579</srcid><srcstatus/><internalId>1082</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_002_SYNC_OFS_invalid_TYPE_and_CRC</srcid><srcstatus/><internalId>1590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00066.Valid.NormalOFSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept OFS message with Type equal to 0x34 or 0x54
        if CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5795</srcid><srcstatus/><internalId>967</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5862</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00066.InvalidType.NormalOFSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFS message with Type different from 0x34 or 0x54
        if CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6534</srcid><srcstatus/><internalId>1051</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6588</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_002_SYNC_OFS_FUP_OFNS_invalid_TYPE</srcid><srcstatus/><internalId>1619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00067.Valid.OFSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept an OFS message with Type equal to 0x34, 0x44,
        0x54, 0x64 if CanTSynRxCrcValidated is configured to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5796</srcid><srcstatus/><internalId>968</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5863</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_001_SYNC_OFS_FUP_OFNS_valid_type_SC</srcid><srcstatus/><internalId>1614</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest07_004_OFS_Extended_valid_type_SC</srcid><srcstatus/><internalId>1617</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00067.InvalidType.OFSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFS message with Type different from 0x34, 0x44
        0x54 and 0x64 if CanTSynRxCrcValidated is configured to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6535</srcid><srcstatus/><internalId>1052</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6538</srcid><srcstatus/><internalId>1055</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6589</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6592</srcid><srcstatus/><internalId>1093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_002_SYNC_OFS_FUP_OFNS_invalid_type</srcid><srcstatus/><internalId>1615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.NoCRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept an OFS message with a Type equal to 0x34 or 0x54
        if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5798</srcid><srcstatus/><internalId>970</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_002_Successful_SYNC_FUP_OFS_OFNS_NOCRC_Reception</srcid><srcstatus/><internalId>1644</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_007_OFS_extended</srcid><srcstatus/><internalId>1649</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.CRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept an OFS message with a Type equal to 0x44 or 0x64
        and a correct CRC value if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5799</srcid><srcstatus/><internalId>971</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_006_Successful_SYNC_FUP_OFS_Extended_Reception</srcid><srcstatus/><internalId>1648</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_007_OFS_extended</srcid><srcstatus/><internalId>1649</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00113.InvalidCRC.OFSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore an OFS message with a Type equal to 0x44 or 0x64
        and an incorrect CRC value if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6523</srcid><srcstatus/><internalId>1042</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6577</srcid><srcstatus/><internalId>1080</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_004_SYNC_FUP_OFS_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1646</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_007_OFS_extended</srcid><srcstatus/><internalId>1649</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00113.InvalidType.OFSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFS message with Type different from 0x34, 0x44
        0x54 and 0x64 if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5800</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_003_SYNC_FUP_OFS_OFNS_Invalid_TYPE</srcid><srcstatus/><internalId>1645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
	
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00068.ValidOFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept OFNS message with an identical Sequence Counter to the value of the
        corresponding OFS message and Type equal to 0x4C and a correct CRC value if CanTSynRxCrcValidated
        is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6329</srcid><srcstatus/><internalId>1005</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00068.InvalidSC.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with a different Sequence Counter than the value of the
        corresponding OFS message if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7409</srcid><srcstatus/><internalId>1212</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00068.InvalidType.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with a Type different from 0x4C if CanTSynRxCrcValidated
        is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6536</srcid><srcstatus/><internalId>1053</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6590</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00068.InvalidCRC.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with an incorrect CRC value if CanTSynRxCrcValidated
        is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6526</srcid><srcstatus/><internalId>1045</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6580</srcid><srcstatus/><internalId>1083</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_004_FUP_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>CanTSyn.SWS_CanTSyn_00068</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00069.ValidOFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept OFNS message with an identical Sequence Counter to the value of the
        corresponding OFS message and Type equal to 0x3C if CanTSynRxCrcValidated is configured to
        CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6330</srcid><srcstatus/><internalId>1006</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00069.InvalidSC.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with Sequence Counter different from the value of the
        corresponding OFS message if CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7410</srcid><srcstatus/><internalId>1213</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_003_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00069.InvalidType.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with a Type different from 0x3C if CanTSynRxCrcValidated
        is configured to CRC_NOT_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6537</srcid><srcstatus/><internalId>1054</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6591</srcid><srcstatus/><internalId>1092</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_002_SYNC_OFS_FUP_OFNS_invalid_TYPE</srcid><srcstatus/><internalId>1619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00114.ValidOFNSMessage.NoCRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept an OFNS message with an identical Sequence Counter
        to the value of the corresponding OFS message and Type equal to 0x3C
        if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5660</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_002_Successful_SYNC_FUP_OFS_OFNS_NOCRC_Reception</srcid><srcstatus/><internalId>1644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00114.ValidOFNSMessage.CRC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept an OFNS message with an identical Sequence Counter
        to the value of the corresponding OFS message and Type equal
        to 0x4C and a correct CRC value if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5661</srcid><srcstatus/><internalId>964</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00114.InvalidType.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with Type different from 0x3C
        and 0x4C if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5662</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_003_SYNC_FUP_OFS_OFNS_Invalid_TYPE</srcid><srcstatus/><internalId>1645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00114.InvalidCRC.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with Type equal
        to 0x4C and an incorrect CRC value if CanTSynRxCrcValidated
        is configured to CRC_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6524</srcid><srcstatus/><internalId>1043</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6578</srcid><srcstatus/><internalId>1081</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_004_SYNC_FUP_OFS_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>CanTSyn.SWS_CanTSyn_00114</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00114.InvalidSC.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with Sequence Counter different from the value of the
        corresponding OFS message if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7408</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest13_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00070.ValidOFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall accept OFNS message with an identical Sequence Counter to the value of the
        corresponding OFS message and Type equal to 0x3C or 0x4C if CanTSynRxCrcValidated is configured to
        CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5667</srcid><srcstatus/><internalId>966</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_001_SYNC_OFS_FUP_OFNS_valid_type_SC</srcid><srcstatus/><internalId>1614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00070.InvalidSC.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with Sequence Counter different from the value of the
        corresponding OFS message if CanTSynRxCrcValidated is configured to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7411</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_003_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1616</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00070.InvalidType.OFNSMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CanTSyn shall ignore OFNS message with a Type different from 0x3C and 0x4C if CanTSynRxCrcValidated
        is configured to CRC_IGNORED.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6539</srcid><srcstatus/><internalId>1056</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6593</srcid><srcstatus/><internalId>1094</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest07_002_SYNC_OFS_FUP_OFNS_invalid_type</srcid><srcstatus/><internalId>1615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        The DLC of SYNC, FUP, OFS and OFNS messages is 8 for classic CAN.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2623</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4162</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4705</srcid><srcstatus/><internalId>879</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4886</srcid><srcstatus/><internalId>894</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_011_ReinitializeInternalVariables_AtSecondCallOfCanTSyn_Init</srcid><srcstatus/><internalId>1555</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_002_MasterSendsOFS_TxConfirmation_After3s_Result_NotOK_SendNewOFS</srcid><srcstatus/><internalId>1568</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        For CAN FD, if CanTSynUseExtendedMsgFormat is TRUE and if CanTSynGlobalTimeTxIcvSecured is ICV_NOT_SUPPORTED and
        CanTSynRxIcvVerificationType is ICV_NOT_SUPPORTED, the DLC of SYNC, FUP, OFS and OFNS messages shall be 16.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2580</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4149</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4699</srcid><srcstatus/><internalId>878</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4875</srcid><srcstatus/><internalId>892</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4879</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_002_Successful_OFS_Extended_Transmission</srcid><srcstatus/><internalId>1585</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_012_OFS_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_035_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmOK_VerInd_BUSY</srcid><srcstatus/><internalId>1739</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_036_StdOFS_NoCRC_NoIcv</srcid><srcstatus/><internalId>1740</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_037_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmVERNOTOK_VerIndOK</srcid><srcstatus/><internalId>1741</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest23_001_SecureTime_RX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1747</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest25_001_SecureTime_RxOFSExt_NoCRC</srcid><srcstatus/><internalId>1749</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVSupported</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        For CAN FD, if CanTSynUseExtendedMsgFormat is TRUE and if CanTSynGlobalTimeTxIcvSecured is ICV_SUPPORTED
        or CanTSynRxIcvVerificationType is ICV_SUPPORTED, the DLC of SYNC, FUP, OFS and OFNS messages shall be variable up to 64.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2585</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4154</srcid><srcstatus/><internalId>824</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4870</srcid><srcstatus/><internalId>891</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00055.CRC.NormalMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE, the CRC shall be calculated over
        Time Synchronization message Byte 2 to Byte 7 and DataID, where Byte 2 is
        applied first, followed by the other bytes in ascending order, and DataID
        last.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5434</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00055.CRC.ExtendedMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is TRUE and ICV authentication is not supported,
        the CRC shall be calculated over Time Synchronization message Byte 2 to Byte 15
        and DataID for Extended Timesync message formats, where Byte 2 is applied first,
        followed by the other bytes in ascending order, and DataID last.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5433</srcid><srcstatus/><internalId>951</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_002_Successful_OFS_Extended_Transmission</srcid><srcstatus/><internalId>1585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00055.CRC.AuthenticatedExtendedMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is TRUE and ICV authentication is supported,
        the CRC shall be calculated over Time Synchronization message Byte 2 to Byte 7
        and DataID for Extended Timesync message formats, where Byte 2 is applied first,
        followed by the other bytes in ascending order, and DataID last.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3789</srcid><srcstatus/><internalId>786</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6221</srcid><srcstatus/><internalId>995</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</srcid><srcstatus/><internalId>1684</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_010_SYNC_CRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_038_SYNC_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is FALSE, the CRC shall be calculated over
        Time Synchronization message Byte 2 to Byte 7 and DataID, where Byte 2 is
        applied first, followed by the other bytes in ascending order, and DataID
        last.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3706</srcid><srcstatus/><internalId>776</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3807</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4051</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4108</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00085.CRC.ExtendedMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is TRUE, the CRC shall be calculated over
        Time Synchronization message Byte 2 to Byte 15 and DataID for Extended
        Timesync message formats, where Byte 2 is applied first, followed by the
        other bytes in ascending order, and DataID last.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3698</srcid><srcstatus/><internalId>774</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3798</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3993</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_019_Successful_SYNC_FUP_OFS_Extended_Reception</srcid><srcstatus/><internalId>1611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00087.DissasembleMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the validation of received Time Synchronization message
        is successful (refer to [SWS_CanTSyn_00086]), the CanTSyn shall disassemble the
        message.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7317</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7369</srcid><srcstatus/><internalId>1203</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7400</srcid><srcstatus/><internalId>1207</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7451</srcid><srcstatus/><internalId>1222</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00087.ForwardGlobalTime</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the validation of received Time Synchronization message
        is successful (refer to [SWS_CanTSyn_00086]), the CanTSyn shall
        forward the global time via StbM_BusSetGlobalTime to StbM.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6808</srcid><srcstatus/><internalId>1121</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7067</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7225</srcid><srcstatus/><internalId>1181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00072.StbM.NormalMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        For a valid pair of OFS and OFNS messages and if CanTSynUseExtendedMsgFormat is FALSE, the
        CanTSyn shall calculate a new Time Tuple, consisting of the Offset Time value and the associated
        value of the Virtual Local Time(according to [SWS_CanTSyn_00074]) and forward it to the StbM module via
        StbM_BusSetGlobalTime().
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7222</srcid><srcstatus/><internalId>1178</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00072.StbM.ExtendedMessage</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is TRUE, the CanTSyn shall calculate a new Time Tuple, consisting of the
        Offset Time value and associated value of the Virtual Local Time(according to [SWS_CanTSyn_00074]) after
        receiving a valid OFS message and forward the new Offset Time value to the StbM module via
        StbM_BusSetGlobalTime().
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7064</srcid><srcstatus/><internalId>1159</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_019_Successful_SYNC_FUP_OFS_Extended_Reception</srcid><srcstatus/><internalId>1611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00133.SyncToGTM.SGW</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the SGW value (FUP, OFNS, Extended OFS) is set to SyncToGTM, the
        SYNC_TO_GATEWAY bit within timeBaseStatus shall be set to FALSE. (RS_TS_20032, RS_TS_20034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6799</srcid><srcstatus/><internalId>1118</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7215</srcid><srcstatus/><internalId>1177</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00133.SyncToSubDomain.SGW</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the SGW value (FUP, OFNS, Extended OFS) is set to SyncToSubDomain, the
        SYNC_TO_GATEWAY bit within timeBaseStatus shall be set to TRUE. (RS_TS_20032, RS_TS_20034)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6798</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7214</srcid><srcstatus/><internalId>1176</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00140.SequenceCounter</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetSlaveTimingData() CanTSyn shall pass
        the sequence counter value from the transmitter (Time Master)
        to the function by the parameter measureDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6819</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00140.syncIngressTimestamp</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetSlaveTimingData() CanTSyn shall pass
        T2VLT as syncIngressTimestamp for the SYNC Message
        to the function by the parameter measureDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6821</srcid><srcstatus/><internalId>1128</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00140.preciseOriginTimestamp</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetSlaveTimingData() CanTSyn shall pass
        T0 + T4 as preciseOriginTimestamp received from the Time Master
        to the function by the parameter measureDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6823</srcid><srcstatus/><internalId>1129</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00140.UnusedData</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetSlaveTimingData() CanTSyn shall pass
        measureDataPtr-&gt;referenceLocalTimestamp and measureDataPtr-&gt;refrenceGlobalTimestamp
        as 0 to the function by the parameter measureDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6817</srcid><srcstatus/><internalId>1126</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00140.segmentId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetSlaveTimingData() CanTSyn shall pass the network segment ID
        to the function by the parameter measureDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6826</srcid><srcstatus/><internalId>1130</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</srcid><srcstatus/><internalId>1597</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00142.SequenceCounter</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetMasterValidationData() CanTSyn shall pass the sequence counter
        as sent in the Sync message to the function by the parameter measureDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5279</srcid><srcstatus/><internalId>935</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_003_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1581</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_004_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00142.syncEgressTimestamp</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetMasterValidationData() CanTSyn shall pass T1vlt as the
        syncEgressTimestamp of SYNC Message to the function by the parameter measureDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5281</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_003_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1581</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_004_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00142.preciseOriginTimestamp</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetMasterValidationData() CanTSyn shall pass T0SYN + (T1VLT - T0VLT)
        as preciseOriginTimestamp to the function by the parameter measureDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5283</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_003_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1581</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_004_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
  
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00142.segmentId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_CanSetMasterValidationData() CanTSyn shall pass the network segment ID
        to the function by the parameter measureDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5286</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_003_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1581</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_004_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    
     <specobject>
      <id>CanTSyn.SWS_CanTSyn_00150.SwTimeStamp</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       Upon successful SYNC message TX confirmation
       for a Synchronized Time Domain and if no TX confirmation timeout has occurred (refer
       to [SWS_CanTSyn_00033]) the Time Master shall within the TX confirmation routine (CanTSyn_TxConfirmation)
       • if HW timestamping is disabled,
       Retrieve T1VLT as egress timestamp by reading current Virtual Local Time value via StbM_GetCurrentVirtualLocalTime
      (RS_TS_20035, RS_TS_20070)
      </description>
      <comment>
      If SW timestamping is used, SW should immediately establish a protection
      against interruptions in the TX confirmation callback - unless interrupt nesting is disabled (when this is typically done implicitly by the controller). Any delay of StbM_-
      GetCurrentVirtualLocalTime would impair precision.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5238</srcid><srcstatus/><internalId>925</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_008_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToSubDomain</srcid><srcstatus/><internalId>1552</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_014_OverflowOfSecond_WhenMasterSendsSyncFrame</srcid><srcstatus/><internalId>1558</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_015_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToGTM</srcid><srcstatus/><internalId>1559</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest06_015_OVS_Overflow_SecondsPortion</srcid><srcstatus/><internalId>1605</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest12_001_ConfirmTxFromCanIfTransmit</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    
         <specobject>
      <id>CanTSyn.SWS_CanTSyn_00150.HwTimeStamp</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
       Upon successful SYNC message TX confirmation
       for a Synchronized Time Domain and if no TX confirmation timeout has occurred (refer
       to [SWS_CanTSyn_00033]) the Time Master shall within the TX confirmation routine (CanTSyn_TxConfirmation)
        • if HW timestamping is enabled,
        – Retrieve T1CAN as egress timestamp from CAN controller HW value via CanIf_GetEgressTimestamp(RS_TS_20035, RS_TS_20070)
      </description>
      <comment>
      Based on the egress timestamps T1CAN and T1VLT, respectively, CanTSyn can calculate
      the delay between reading the tuple [T0SYNC;T0VLT] from StbM via StbM_BusGetCurrentTime and actual transmission of T0SYNC in the SYNC message on the bus.
      T4, which accounts for that delay, is calculated in 3 different ways depending on
      • whether HW timestamping is enabled or not and
      • whether the StbM is using for internal time measurement the same time source as the CanTSyn for Virtual Local Time
      This can be done either in the TX confirmation routine (CanTSyn_TxConfirmation)
      or in the subsequent CanTSyn_MainFunction invocation.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.HWtimeStamp</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00144.InterruptProtection</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a SYNC message, and if CanTSynHardwareTimestampSupport
        is set to FALSE, CanTSyn shall immediately establish a protection against interruption.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2872</srcid><srcstatus/><internalId>688</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT1VLT</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a SYNC message, and if CanTSynHardwareTimestampSupport
        is set to FALSE, CanTSyn shall and directly afterwards retrieve the reference time T1VLT for the SYNC message
        via StbM_GetCurrentVirtualLocalTimeTime from the StbM.
        Note: Once T1VLT has been retrieved, protection against interruptions may be released
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2881</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00144.SetT2VLT</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a SYNC message, and if CanTSynHardwareTimestampSupport
        is set to FALSE, CanTSyn shall set the T2VLT part of the Rx Time Tuple to the value of T1VLT (i.e., T2VLT = T1VLT).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6618</srcid><srcstatus/><internalId>1097</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT0</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a SYNC message, and if CanTSynHardwareTimestampSupport
        is set to FALSE, CanTSyn shall retrieve T0 from the SyncTimeSec field of the SYNC message.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6629</srcid><srcstatus/><internalId>1099</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00148.RetrieveData</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a FUP message, CanTSyn shall
        retrieve the following data from the FUP message
        • the OVS field
        • and the SyncTimeSec field
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6690</srcid><srcstatus/><internalId>1104</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6753</srcid><srcstatus/><internalId>1113</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ComputeT4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        For a Time Slave, on invocation of CanTSyn_RxIndication for a FUP message, CanTSyn shall
        calculate T4 = OVS + SyncTimeSec.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6782</srcid><srcstatus/><internalId>1116</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00148.CalculateTLSYNC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Either in the same Rx indication routine (CanTSyn_RxIndication) or in the subsequent CanTSyn_MainFunction
        invocation CanTSyn shall calculate TLSYNC as TLSYNC = (T0 + T4).
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6778</srcid><srcstatus/><internalId>1114</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ForwardRxTimeTuple</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Either in the same Rx indication routine (CanTSyn_RxIndication) or in the subsequent CanTSyn_MainFunction
        invocation CanTSyn shall forward the new Rx Time Tuple [TLSYNC; T2VLT] to the StbM via StbM_BusSetGlobalTime.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6809</srcid><srcstatus/><internalId>1122</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_91003.Signature</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_IcvVerificationIndication
        Syntax: void CanTSyn_IcvVerificationIndication (
                                                        P2CONST(Crypto_JobType, AUTOMATIC, CSM_APPL_DATA) job,
                                                        Std_ReturnType result
                                                        )
        Service ID[hex]: 0x8
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): jobId - JobID of the operation that caused the callback.
                         result - Contains the result of the cryptographic operation.
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: By this API service the CanTSyn gets an indication and the result
                     of ICV verification.
        Available via: CanTSyn.h
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8338</srcid><srcstatus/><internalId>1299</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest21_037_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmVERNOTOK_VerIndOK</srcid><srcstatus/><internalId>1741</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest23_001_SecureTime_RX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1747</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_91002.Signature</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: CanTSyn_IcvGenerationIndication
        Syntax: void CanTSyn_IcvGenerationIndication (
                                                      P2CONST(Crypto_JobType, AUTOMATIC, CSM_APPL_DATA) job,
                                                      Std_ReturnType result
                                                      )
        Service ID[hex]: 0x7
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): jobId - JobID of the operation that caused the callback.
                         result - Contains the result of the cryptographic operation.
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: By this API service the CanTSyn gets an indication and the result
                     of ICV generation.
        Available via: CanTSyn.h
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7640</srcid><srcstatus/><internalId>1227</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.ASR22-11.SWS_CanTSyn_00183.AlsoLoadDebounce</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        During CanTSynGlobalTimeRxDebounceTime if any SYNC or FUP message received, the Time Slave shall discard the
        received message, raise the security event CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR, reset the sequence (i.e. waiting for a new SYNC)
        and load CanTSynGlobalTimeRxDebounceTime. (refer [SWS_CanTSyn_00204]).
        (RS_TS_20073)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2485</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    
    
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.NotReceivedIn3s.Wait</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Each transmission request of a SYNC message shall be monitored for a transmit confirmation timeout.
        If CanTSyn_TxConfirmation() is not called within 3 sec after transmission request,
        CanTSyn shall wait until CanTSyn_TxConfirmation() is called and
        send no FUP message.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5214</srcid><srcstatus/><internalId>924</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_006_MasterSendsSyncFrames_TxConfirmation_After3s_Result_E_NOT_OK</srcid><srcstatus/><internalId>1550</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest14_004_MasterSendsSync_TxConfirmationAfter5Sec</srcid><srcstatus/><internalId>1653</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_OK.Reset</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Each transmission request of a SYNC message shall be monitored for a transmit confirmation timeout.
        If CanTSyn_TxConfirmation() is not called within 3 sec after transmission request,
        CanTSyn shall wait until CanTSyn_TxConfirmation() is called (with E_OK) and
        send no FUP message and instead
        reset the state machine to start with a new SYNC transmission once it is due (after TxPeriod and Debounce expire).
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3079</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_016_StbM_GetCurrentVirtualLocalTime_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1560</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_022_MasterSendsSync_TransmitionRetriesLimit</srcid><srcstatus/><internalId>1566</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest14_002_MasterSendsSync_TxConfirmationBefore3Sec</srcid><srcstatus/><internalId>1651</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest14_003_MasterSendsSync_TxConfirmationAfter3Sec</srcid><srcstatus/><internalId>1652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Each transmission request of a SYNC message shall be monitored for a transmit confirmation timeout.
        If CanTSyn_TxConfirmation() is not called within 3 sec after transmission request,
        CanTSyn shall wait until CanTSyn_TxConfirmation() is called (with E_NOT_OK) and
        send no FUP message.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3080</srcid><srcstatus/><internalId>731</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_006_MasterSendsSyncFrames_TxConfirmation_After3s_Result_E_NOT_OK</srcid><srcstatus/><internalId>1550</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_011_ReinitializeInternalVariables_AtSecondCallOfCanTSyn_Init</srcid><srcstatus/><internalId>1555</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_013_CanIf_Transmit_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Each OFS transmission request shall be monitored with the transmit confirmation timeout.
        If CanTSyn_TxConfirmation() is not called within 3 sec after transmission request,
        CanTSyn shall wait until CanTSyn_TxConfirmation() is called and
        send no OFNS message.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4601</srcid><srcstatus/><internalId>868</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_002_MasterSendsOFS_TxConfirmation_After3s_Result_NotOK_SendNewOFS</srcid><srcstatus/><internalId>1568</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_003_MasterSendsOFS_TxConfirmation_After3s_Result_OK_LoadDebounce_SendNewOFS</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_004_SC_Unchanged_OnEveryOFNSTransmission</srcid><srcstatus/><internalId>1570</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_006_NoStateChanged_ReportDet</srcid><srcstatus/><internalId>1572</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest15_004_MasterSendsOFS_TxConfirmationAfter5Sec</srcid><srcstatus/><internalId>1657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Each OFS transmission request shall be monitored with the transmit confirmation timeout.
        If CanTSyn_TxConfirmation() is not called within 3 sec after transmission request,
        CanTSyn shall wait until CanTSyn_TxConfirmation() is called (with E_OK) and
        send no OFNS message and
        instead reset the state machine to start with a new OFS transmission once it is due (after TxPeriod and Debounce expire).
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3055</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4185</srcid><srcstatus/><internalId>828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_003_MasterSendsOFS_TxConfirmation_After3s_Result_OK_LoadDebounce_SendNewOFS</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_006_NoStateChanged_ReportDet</srcid><srcstatus/><internalId>1572</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest15_002_MasterSendsOFS_TxConfirmationBefore3Sec</srcid><srcstatus/><internalId>1655</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest15_003_MasterSendsOFS_TxConfirmationAfter3Sec</srcid><srcstatus/><internalId>1656</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R21-11</source>
      <version>1</version>
      <description>
        Each OFS transmission request shall be monitored with the transmit confirmation timeout.
        If CanTSyn_TxConfirmation() is not called within 3 sec after transmission request,
        CanTSyn shall wait until CanTSyn_TxConfirmation() is called (E_NOT_OK) and
        send no OFNS message and
        instead reset the state machine to start with a new OFS transmission once it is due.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3056</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4186</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_002_MasterSendsOFS_TxConfirmation_After3s_Result_NotOK_SendNewOFS</srcid><srcstatus/><internalId>1568</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_004_SC_Unchanged_OnEveryOFNSTransmission</srcid><srcstatus/><internalId>1570</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    
    
  </specobjects>
    <specobjects doctype="swurs">

<!-- EB specific features ====================================================================== -->

  <specobject>
      <id>CanTSyn.EB.PostBuild</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The module supports different post-build variants (previously known as post-build selectable
        configuration sets), but not post-build loadable configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.CanTSyn.PostBuild</srcid><srcstatus/><internalId>573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.RxIndication.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function CanTSyn_RxIndication()
        shall check that the service CanTSyn_Init() was previously called. If the check fails,
        the function shall return without performing any action.
      </description>
      <comment>CanTSyn_RxIndication()</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2544</srcid><srcstatus/><internalId>626</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_Det011_Rxindication_ModuleUninitialized</srcid><srcstatus/><internalId>1599</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.TxConfirmation.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function CanTSyn_TxConfirmation()
        shall check that the service CanTSyn_Init() was previously called. If the check fails,
        the function shall return without performing any action.
      </description>
      <comment>CanTSyn_TxConfirmation()</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3019</srcid><srcstatus/><internalId>720</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1545</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.SetTransmissionMode.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function CanTSyn_SetTransmissionMode()
        shall check that the service CanTSyn_Init() was previously called. If the check fails,
        the function shall return without performing any action.
      </description>
      <comment>CanTSyn_SetTransmissionMode()</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2329</srcid><srcstatus/><internalId>617</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1545</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.GetVersionInfo.NullPtr</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function CanTSyn_GetVersionInfo shall check if the
        versioninfo is not a NULL_PTR. If the check fails the function shall raise the
        development error CANTSYN_E_NULL_POINTER.
      </description>
      <comment>CanTSyn_GetVersionInfo()</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_1992</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_Det002_GetVersionInfo_InvalidParam</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Init.ConfigPtr</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function CanTSyn_Init shall check if the
        ConfigPtr is a NULL_PTR. If the check fails the function shall raise the
        development error CANTSYN_E_INIT_FAILED.
      </description>
      <comment>
        According to the SWS_BSW_00050, if the module only supports precompile variant then
        the ConfigPtr should be NULL_PTR, and as the CanTSyn only supports precompile variant
        the ConfigPtr should be NULL_PTR.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2145</srcid><srcstatus/><internalId>609</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_Det021__FailedInit</srcid><srcstatus/><internalId>1565</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        When transmitting a SYNC/FUP or OFS/OFNS sequence, if CanIf_Transmit() returns E_NOT_OK,
        CanTSyn shall retry next main function with a SYNC, respectively OFS message without waiting
        TxPeriod to expire.
        The number of retries is bounded by CanTSynMaxNumberOfTransmitRetries and 
        on its expiration the TxPeriod id reloaded.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4201</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4230</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4727</srcid><srcstatus/><internalId>882</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4758</srcid><srcstatus/><internalId>888</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4974</srcid><srcstatus/><internalId>902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_013_CanIf_Transmit_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1557</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_022_MasterSendsSync_TransmitionRetriesLimit</srcid><srcstatus/><internalId>1566</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_007_CanIf_Transmit_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1573</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_012_TransmitionRetriesLimit</srcid><srcstatus/><internalId>1578</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.CanTSynMaxNumberOfTransmitRetries_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                       CanTSynMaxNumberOfTransmitRetries
        Parent Container           CanTSynGeneral
        Description Specifies the number of retries of re-transmition of SYNC or OFS message 
                    in case the CanIf_Transmit returns E_NOT_OK.
        Type EcucIntegerParamDef
        Default value 0U
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_66</srcid><srcstatus/><internalId>1364</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.StbM_GetCurrentVirtualLocalTime_E_NOT_OK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When transmitting a SYNC message, if StbM_GetCurrentVirtualLocalTime() returns E_NOT_OK,
        CanTSyn shall retry next main function with a SYNC message without waiting the
        TxPeriod to expire.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5241</srcid><srcstatus/><internalId>926</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_016_StbM_GetCurrentVirtualLocalTime_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1560</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.StbM_BusGetCurrentTime_E_NOT_OK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When transmitting a SYNC message, if StbM_BusGetCurrentTime() returns E_NOT_OK,
        CanTSyn shall retry next main function with a SYNC message without waiting the
        TxPeriod to expire.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4659</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_017_StbM_BusGetCurrentTime_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1561</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Rx_StbM_GetCurrentVirtualLocalTime_E_NOT_OK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When receiving a FUP message, if StbM_GetCurrentVirtualLocalTime() returns E_NOT_OK,
        CanTSyn shall ignore the message and the next message awaited shall be a SYNC
        message.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2879</srcid><srcstatus/><internalId>689</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_018_IgnoreRx</srcid><srcstatus/><internalId>1610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.StbM_GetOffset_E_NOT_OK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When transmitting a OFS or a OFNS message, if StbM_GetOffset() returns E_NOT_OK,
        CanTSyn shall retry next main function with a OFS message without waiting the
        TxPeriod to expire.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4304</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_008_StbM_GetOffset_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1574</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.PDULENGTHTYPE001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Time Synchronization over CAN shall support also UINT32 PduLengthType.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_014_RxIndication_UINT32_PduLengthType</srcid><srcstatus/><internalId>1604</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Xdm.WrongPduHandleIds</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If synchronization and offset messages are used and if offset messages do not follow synchronization messages and they are not
        0 based and consecutive, then an error shall be generated.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_08_TX_RX_WRONG_HANDLEIDs</srcid><srcstatus/><internalId>1515</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Xdm.CRC_Supported_DataIDLists_Disabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the CRC support is enabled and the corresponding DataIdLists are disabled, the generator shall throw an error.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_627</srcid><srcstatus/><internalId>1380</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_840</srcid><srcstatus/><internalId>1385</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_CRC_SUPPORTED_SYNC_FUP_OFS_OFNS_DISABLED</srcid><srcstatus/><internalId>1516</internalId></linkedfrom><linkedfrom><srcid>TS_CANTSYN_GEN_01001_CRC_VALIDATED_SYNC_FUP_OFS_OFNS_DISABLED</srcid><srcstatus/><internalId>1517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Xdm.InvalidConfiguration</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A generator error shall be provided if CanTSynImmediateTimeSync is disabled and
        CanTSynGlobalTimeTxPeriod is configured to ZERO.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_701</srcid><srcstatus/><internalId>1381</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_INVALID_CONFIGURATION</srcid><srcstatus/><internalId>1518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Xdm.CanTSynEnableTimeValidation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If CanTSynEnableTimeValidation parameter is enabled also StbMEnableTimeValidation
        for the referenced timebase must be set to true and vice versa.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_Extension.xdm.m4_243</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_003_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1581</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_004_Successful_SYNC_Transmission_TimeValidation</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.ExtendedOFS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If CanTSynUseExtendedMsgFormat is TRUE a separate OFNS message is not required.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5355</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_011_MasterSendsOFS_TxConfirmationArrives_Extended</srcid><srcstatus/><internalId>1577</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest04_CRCSupport_002_Successful_OFS_Extended_Transmission</srcid><srcstatus/><internalId>1585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        FUP message shall be awaited taking into consideration CanTSynGlobalTimeFollowUpTimeout timeout.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3322</srcid><srcstatus/><internalId>745</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3423</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP.ReceivedImmediately.AfterSYNC.vc01</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP.ReceivedLater.AfterAFewMainFunctions.vc02</srcid><srcstatus/><internalId>564</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP.ReceiveSync.vc03</srcid><srcstatus/><internalId>565</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        OFNS message shall be awaited taking into consideration CanTSynGlobalTimeFollowUpTimeout timeout.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3510</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3587</srcid><srcstatus/><internalId>762</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS.ReceivedImmediately.AfterOFS.vc01</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS.ReceivedLater.AfterAFewMainFunctions.vc02</srcid><srcstatus/><internalId>567</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS.ReceiveOfs.vc03</srcid><srcstatus/><internalId>568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>


    <specobject>
      <id>CanTSyn.EB.HandleIdGenerator</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A generator shall automatically produce the handle IDs of configuration parameters
        CanTSynGlobalTimeMasterConfirmationHandleId and CanTSynGlobalTimeSlaveHandleId.
        The automatically generated CanTSynGlobalTimeMasterConfirmationHandleIds shall be 0-based consecutive.
        The automatically generated CanTSynGlobalTimeSlaveHandleIds shall be 0-based consecutive.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeMasterConfirmationHandleIds.0based.consecutive</srcid><srcstatus/><internalId>457</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeSlaveHandleId.0based.consecutive</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeMasterConfirmationHandleIds.0based.consecutive</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A generator shall automatically produce the handle IDs of configuration parameter
        CanTSynGlobalTimeMasterConfirmationHandleId.
        The automatically generated CanTSynGlobalTimeMasterConfirmationHandleIds shall be 0-based consecutive.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/plugin.xml.m4_33</srcid><srcstatus/><internalId>1390</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeMasterConfirmationHandleIds.0based.consecutive.vc01</srcid><srcstatus/><internalId>569</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.HandleIdGenerator</linksto>
             <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeSlaveHandleId.0based.consecutive</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A generator shall automatically produce the handle IDs of configuration parameter
        CanTSynGlobalTimeSlaveHandleId.
        The automatically generated CanTSynGlobalTimeSlaveHandleIds shall be 0-based consecutive.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/plugin.xml.m4_64</srcid><srcstatus/><internalId>1391</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeSlaveHandleId.0based.consecutive.vc01</srcid><srcstatus/><internalId>570</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.HandleIdGenerator</linksto>
             <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>

    
    
    
    <specobject>
      <id>CanTSyn.EB.CanTSynReportWrongLength_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                       CanTSynReportWrongLength
        Parent Container           CanTSynReportError
        Description Enable/disable the reporting of a wrong length received frame to DEM/DET.
                    True: Report wrong length to DEM/DET
                    False: Do not report wrong length to DEM/DET
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.CanTSynReportWrongTimeDomainId_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                       CanTSynReportWrongTimeDomainId
        Parent Container           CanTSynReportError
        Description Enable/disable the reporting of a wrong time domain ID received in a frame to DEM/DET.
                    True: Report wrong time domain Id to DEM/DET
                    False: Do not report wrong time domain Id to DEM/DET
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.CanTSynReportWrongMessageType_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                       CanTSynReportWrongMessageType
        Parent Container           CanTSynReportError
        Description Enable/disable the reporting of a wrong message type received in a frame to DEM/DET.
                    True: Report wrong message type to DEM/DET
                    False: Do not report wrong message type to DEM/DET
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.CanTSynReportWrongCRC_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                       CanTSynReportWrongCRC
        Parent Container           CanTSynReportError
        Description Enable/disable the reporting of a wrong CRC received in a frame to DEM/DET.
                    True: Report wrong CRC to DEM/DET
                    False: Do not report wrong CRC to DEM/DET
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.CanTSynReportWrongSequenceCounter_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                       CanTSynReportWrongSequenceCounter
        Parent Container           CanTSynReportError
        Description Enable/disable the reporting of a wrong sequence counter received in a frame to DEM/DET.
                    True: Report wrong sequence counter to DEM/DET
                    False: Do not report wrong sequence counter to DEM/DET
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.CanTSynReportExceededNanosecondsRange_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                       CanTSynReportExceededNanosecondsRange
        Parent Container           CanTSynReportError
        Description Enable/disable the reporting of exceeded nanoseconds range received in a frame to DEM/DET.
                    True: Report exceeded nanoseconds range to DEM/DET
                    False: Do not report exceeded nanoseconds range to DEM/DET
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    
    
    
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongLength is set to TRUE,
        each dropped SYNC/SYNC-FUP frame because of wrong length, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2705</srcid><srcstatus/><internalId>639</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2718</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2770</srcid><srcstatus/><internalId>663</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2783</srcid><srcstatus/><internalId>669</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_001_SYNC_FUP_Reception</srcid><srcstatus/><internalId>1667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongTimeDomainId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongTimeDomainId is set to TRUE,
        each dropped SYNC/SYNC-FUP frame because of wrong time domain id, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2735</srcid><srcstatus/><internalId>651</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2748</srcid><srcstatus/><internalId>657</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2801</srcid><srcstatus/><internalId>675</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2814</srcid><srcstatus/><internalId>681</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_001_SYNC_FUP_Reception</srcid><srcstatus/><internalId>1667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongMsgType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongMessageType is set to TRUE,
        each dropped SYNC/SYNC-FUP frame because of wrong message type, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2963</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2977</srcid><srcstatus/><internalId>712</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_001_SYNC_FUP_Reception</srcid><srcstatus/><internalId>1667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongCRC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongCRC is set to TRUE,
        each dropped SYNC/SYNC-FUP frame because of wrong CRC, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2922</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2936</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_001_SYNC_FUP_Reception</srcid><srcstatus/><internalId>1667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongSC</id>  
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongSequenceCounter is set to TRUE,
        each dropped SYNC/SYNC-FUP frame because of wrong sequence counter, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7349</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7377</srcid><srcstatus/><internalId>1204</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_001_SYNC_FUP_Reception</srcid><srcstatus/><internalId>1667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DEM_ExceededNanosecondsRange</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportExceededNanosecondsRange is set to TRUE,
        each dropped SYNC/SYNC-FUP frame because of exceeded nanoseconds range, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6864</srcid><srcstatus/><internalId>1133</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_001_SYNC_FUP_Reception</srcid><srcstatus/><internalId>1667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncOK_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM, and
        a pair of Sync and Sync Follow-up frames is succesfully received on a port configured
        CanTSynGlobalTimeSlave, EventID set to the configured DemEventID for CANTSYN_E_SYNC_FAILED
        and EventStatus as STATUS_PREPASSED shall be reported to DEM.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6848</srcid><srcstatus/><internalId>1132</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongLength is set to TRUE,
        after 5 failed SYNC/SYNC-FUP messages because of wrong length, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynSyncFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2706</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2719</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2771</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2784</srcid><srcstatus/><internalId>670</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_001_SYNC_FUP_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Sync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongTimeDomainId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongTimeDomainId is set to TRUE,
        after 5 failed SYNC/SYNC-FUP messages because of wrong time domain id, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynSyncFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2736</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2749</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2802</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2815</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_001_SYNC_FUP_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Sync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongMsgType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongMessageType is set to TRUE,
        after 5 failed SYNC/SYNC-FUP messages because of wrong message type, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynSyncFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2964</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2978</srcid><srcstatus/><internalId>713</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_001_SYNC_FUP_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Sync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongCRC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongCRC is set to TRUE,
        after 5 failed SYNC/SYNC-FUP messages because of wrong CRC, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynSyncFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2923</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2937</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_001_SYNC_FUP_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Sync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongSC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongSC is set to TRUE,
        after 5 failed SYNC/SYNC-FUP messages because of wrong SC, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynSyncFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7350</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7378</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_001_SYNC_FUP_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Sync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_SyncFailed_DET_ExceededNanosecondsRange</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportExceededNanosecondsRange is set to TRUE,
        after 5 failed SYNC/SYNC-FUP messages because of exceeded nanoseconds range, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynSyncFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6865</srcid><srcstatus/><internalId>1134</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_001_SYNC_FUP_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Sync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    
    

    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongLength is set to TRUE,
        each dropped OFS/OFS-OFNS frame because of wrong length, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2711</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2722</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2776</srcid><srcstatus/><internalId>665</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2787</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_002_NormalOFS_OFNS_Reception</srcid><srcstatus/><internalId>1668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongTimeDomainId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongTimeDomainId is set to TRUE,
        each dropped OFS/OFS-OFNS frame because of wrong time domain id, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2741</srcid><srcstatus/><internalId>653</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2752</srcid><srcstatus/><internalId>659</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2807</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2818</srcid><srcstatus/><internalId>683</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_002_NormalOFS_OFNS_Reception</srcid><srcstatus/><internalId>1668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongMsgType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongMessageType is set to TRUE,
        each dropped OFS/OFS-OFNS frame because of wrong message type, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2969</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2982</srcid><srcstatus/><internalId>714</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_002_NormalOFS_OFNS_Reception</srcid><srcstatus/><internalId>1668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongCRC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongCRC is set to TRUE,
        each dropped OFS/OFS-OFNS frame because of wrong CRC, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2928</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2941</srcid><srcstatus/><internalId>701</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_002_NormalOFS_OFNS_Reception</srcid><srcstatus/><internalId>1668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongSC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongSequenceCounter is set to TRUE,
        each dropped OFS/OFS-OFNS frame because of wrong SC, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7418</srcid><srcstatus/><internalId>1215</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7460</srcid><srcstatus/><internalId>1223</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_002_NormalOFS_OFNS_Reception</srcid><srcstatus/><internalId>1668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DEM_ExceededNanosecondsRange</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportExceededNanosecondsRange is set to TRUE,
        each dropped OFS/OFS-OFNS frame because of exceeded nanoseconds range, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7258</srcid><srcstatus/><internalId>1183</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest17_002_NormalOFS_OFNS_Reception</srcid><srcstatus/><internalId>1668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    
    
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongLength is set to TRUE,
        each dropped Extended OFS frame because of wrong length, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2713</srcid><srcstatus/><internalId>643</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2724</srcid><srcstatus/><internalId>649</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2778</srcid><srcstatus/><internalId>667</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2789</srcid><srcstatus/><internalId>673</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest17_003_ExtendedOFS_Reception</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongTimeDomainId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongTimeDomainId is set to TRUE,
        each dropped Extended OFS frame because of wrong time domain id, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2743</srcid><srcstatus/><internalId>655</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2754</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2809</srcid><srcstatus/><internalId>679</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2820</srcid><srcstatus/><internalId>685</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest17_003_ExtendedOFS_Reception</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongMsgType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongMessageType is set to TRUE,
        each dropped Extended OFS frame because of wrong message type, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2971</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2984</srcid><srcstatus/><internalId>716</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest17_003_ExtendedOFS_Reception</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongCRC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongCRC is set to TRUE,
        each dropped Extended OFS frame because of wrong CRC, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2930</srcid><srcstatus/><internalId>697</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2943</srcid><srcstatus/><internalId>703</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest17_003_ExtendedOFS_Reception</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongSC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportWrongSequenceCounter is set to TRUE,
        each dropped Extended OFS frame because of wrong SC, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7420</srcid><srcstatus/><internalId>1217</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7462</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest17_003_ExtendedOFS_Reception</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_ExceededNanosecondsRange</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM and CanTSynReportExceededNanosecondsRange is set to TRUE,
        each dropped Extended OFS frame because of exceeded nanoseconds range, shall be reported to DEM with EventID set to the configured
        DemEventID for CANTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7099</srcid><srcstatus/><internalId>1164</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest17_003_ExtendedOFS_Reception</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Failure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    

    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsOK_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM, and
        a pair of OFS and OFNS frames is succesfully received on a port configured
        CanTSynGlobalTimeSlave, EventID set to the configured DemEventID for CANTSYN_E_SYNC_FAILED
        and EventStatus as STATUS_PREPASSED shall be reported to DEM.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7242</srcid><srcstatus/><internalId>1182</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsOK_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DEM, and
        a Extended OFS frame is succesfully received on a port configured
        CanTSynGlobalTimeSlave, EventID set to the configured DemEventID for CANTSYN_E_SYNC_FAILED
        and EventStatus as STATUS_PREPASSED shall be reported to DEM.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7084</srcid><srcstatus/><internalId>1163</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest17_003_ExtendedOFS_Reception</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>

    
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongLength is set to TRUE,
        after 5 failed OFS/OFS-OFNS messages because of wrong length, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2712</srcid><srcstatus/><internalId>642</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2723</srcid><srcstatus/><internalId>648</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2777</srcid><srcstatus/><internalId>666</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2788</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_002_NormalOFS_OFNS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Ofs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongTimeDomainId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongTimeDomainId is set to TRUE,
        after 5 failed OFS/OFS-OFNS messages because of wrong time domain id, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2742</srcid><srcstatus/><internalId>654</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2753</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2808</srcid><srcstatus/><internalId>678</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2819</srcid><srcstatus/><internalId>684</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_002_NormalOFS_OFNS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Ofs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongMsgType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongMessageType is set to TRUE,
        after 5 failed OFS/OFS-OFNS messages because of wrong message type, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2970</srcid><srcstatus/><internalId>709</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2983</srcid><srcstatus/><internalId>715</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_002_NormalOFS_OFNS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Ofs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongCRC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongCRC is set to TRUE,
        after 5 failed OFS/OFS-OFNS messages because of wrong CRC, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2929</srcid><srcstatus/><internalId>696</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2942</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_002_NormalOFS_OFNS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Ofs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongSC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongSC is set to TRUE,
        after 5 failed OFS/OFS-OFNS messages because of wrong SC, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7419</srcid><srcstatus/><internalId>1216</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7461</srcid><srcstatus/><internalId>1224</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_002_NormalOFS_OFNS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Ofs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_OfsFailed_DET_ExceededNanosecondsRange</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportExceededNanosecondsRange is set to TRUE,
        after 5 failed OFS/OFS-OFNS messages because of exceeded nanoseconds range, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7259</srcid><srcstatus/><internalId>1184</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest18_002_NormalOFS_OFNS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Ofs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    
    
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongLength is set to TRUE,
        after 5 failed Extended OFS messages because of wrong length, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2714</srcid><srcstatus/><internalId>644</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2725</srcid><srcstatus/><internalId>650</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2779</srcid><srcstatus/><internalId>668</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2790</srcid><srcstatus/><internalId>674</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest18_003_ExtendedOFS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongTimeDomainId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongTimeDomainId is set to TRUE,
        after 5 failed Extended OFS messages because of wrong time domain id, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2744</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2755</srcid><srcstatus/><internalId>662</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2810</srcid><srcstatus/><internalId>680</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2821</srcid><srcstatus/><internalId>686</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest18_003_ExtendedOFS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongMsgType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongMessageType is set to TRUE,
        after 5 failed Extended OFS messages because of wrong message type, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2972</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2985</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest18_003_ExtendedOFS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongCRC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongCRC is set to TRUE,
        after 5 failed Extended OFS messages because of wrong CRC, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2931</srcid><srcstatus/><internalId>698</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2944</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest18_003_ExtendedOFS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongSC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportWrongSC is set to TRUE,
        after 5 failed Extended OFS messages because of wrong SC, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7421</srcid><srcstatus/><internalId>1218</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7463</srcid><srcstatus/><internalId>1226</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest18_003_ExtendedOFS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_ExceededNanosecondsRange</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CanTSynSyncFailedReportError is set to DET and CanTSynReportExceededNanosecondsRange is set to TRUE,
        after 5 failed Extended OFS messages because of exceeded nanoseconds range, Det_ReportError() shall be called
        with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <comment>
        All reasons for failure are counted as failed pairs.
        In consecuence the DET is reported from the fifth failure code.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7100</srcid><srcstatus/><internalId>1165</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest18_003_ExtendedOFS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    
    
    

    <specobject>
      <id>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name: CanTSynReceivePairsPeriod
        Description
          This parameter contains the timeout of an unreceived Sync/Fup or Ofs/Ofns pair or Extended Ofs frame.
          A value of 0 deactivates this timeout observation.
        Unit: seconds
        Multiplicity               1
        Type                       EcucFloatParamDef
        Range                      [0 .. 1000]
        Default value              --
        Value Configuration Class
          Pre-compile time   X   All Variants
          Link time          --
          Post-build time    --
        Scope / Dependency
          scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_201</srcid><srcstatus/><internalId>1367</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_1_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Time Slave shall observe the timeout as given by
        CanTSynReceivePairsPeriod, if a Sync has been received(waiting for Sync FUP).
        If the reception timeout occurs, Dem_ReportErrorStatus() shall be called with EventStatus
        STATUS_PREFAILED and EventId taken from configured DemEventID for CANTSYN_E_SYNC_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3404</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_SyncFup_ReceptionTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_1_DET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Time Slave shall observe the timeout as given by
        CanTSynReceivePairsPeriod, if a Sync has been received(waiting for Sync FUP).
        If the reception timeout occurs and at least 5 failed Sync/Sync-Fup were received in total (including the timeout),
        Det_ReportError() shall be called with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3405</srcid><srcstatus/><internalId>751</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_SyncFup_ReceptionTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_2_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Time Slave shall observe the timeout as given by
        CanTSynReceivePairsPeriod, if a OFS has been received(waiting for OFNS).
        If the reception timeout occurs, Dem_ReportErrorStatus() shall be called with EventStatus
        STATUS_PREFAILED and EventId taken from configured DemEventID for CANTSYN_E_SYNC_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3571</srcid><srcstatus/><internalId>760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_OfsOfns_ReceptionTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_2_DET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Time Slave shall observe the timeout as given by
        CanTSynReceivePairsPeriod, if an OFS has been received(waiting for OFNS).
        If the reception timeout occurs and at least 5 failed Ofs/Ofs-Ofns were received in total (including the timeout),
        Det_ReportError() shall be called with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3572</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_OfsOfns_ReceptionTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    
    
    
    <specobject>
      <id>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_3_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Time Slave shall observe the timeout as given by
        CanTSynReceivePairsPeriod, if an Extended OFS has been received(waiting for the next Extended OFS).
        If the reception timeout occurs, Dem_ReportErrorStatus() shall be called with EventStatus
        STATUS_PREFAILED and EventId taken from configured DemEventID for CANTSYN_E_SYNC_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3406</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest17_003_ExtendedOFS_Reception</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_ReceptionTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_3_DET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Time Slave shall observe the timeout as given by
        CanTSynReceivePairsPeriod, if an Extended OFS has been received(waiting for the next Extended OFS).
        If the reception timeout occurs and at least 5 failed Extended Ofs were received in total (including the timeout),
        Det_ReportError() shall be called with ErrorID taken from configured CanTSynOfsFailedReportErrorDetErrorId.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3407</srcid><srcstatus/><internalId>753</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest18_003_ExtendedOFS_Reception_ReportErrorsTo_DET</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs_ReceptionTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
    
    
    

    <specobject>
      <id>CanTSyn.EB.XdmCheck_DetDisabled_DEMDET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If CanTSynDevErrorDetect is set to FALSE and CanTSynSyncFailedReportError
        is set to DET, an error shall be reported in Tresos.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_334</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_ErrorReportDetDisabled</srcid><srcstatus/><internalId>1520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.XdmCheck_InvalidErrorId_DEMDET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If CanTSynSyncFailedReportError is set to DET, CanTSynSyncFailedReportErrorDetErrorId
        can not be configured to following values: 0x01 to 0x06.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_375</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_ErrorReportDetDisabled</srcid><srcstatus/><internalId>1520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.XdmCheck_InvalidDemEvent_DEMDET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If CanTSynSyncFailedReportError is set to DEM, CANTSYN_E_SYNC_FAILED
        will issue a warning if the provided reference is invalid.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_193</srcid><srcstatus/><internalId>1366</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_ErrorReportInvalidConfig</srcid><srcstatus/><internalId>1519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.XdmCheck_PeriodLTFollowUpTimeout_DEMDET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If CanTSynReceiveSyncPairsPeriod is set to a value lower than CanTSynGlobalTimeFollowUpTimeout,
        a warninig shall be issued suggesting otherwise.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_241</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_ErrorReportDetDisabled</srcid><srcstatus/><internalId>1520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.XdmCheck_DemEnabledNoDemEvent_DEMDET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If CanTSynSyncFailedReportError is set to DEM, but no time domain has CanTSynDemEventParameterRefs
        enabled, a warning will be issued.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_338</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_01001_ErrorReportNoDemEvent</srcid><srcstatus/><internalId>1521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.DemEventIDGeneration</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        During generation of service needs, the event for reporting to Dem will also be generated
        having the name CANTSYN_E_SYNC_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/resources/CanTSyn_Dem_Events.xml_6</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_002_SYNC_OFS_invalid_TYPE_and_CRC</srcid><srcstatus/><internalId>1590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>    
    
    <!-- == Multicore Handling ========================================================================= -->
    
    <specobject>
      <id>CanTSyn.EB.Multicore.MultiCoreSupport</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                            CanTSynMultiCoreSupport
        Parent Container                CanTSynGeneral
        Description                     Switches support for MultiCore on or off.
                                        true: MultiCore is enabled.
                                        false: MultiCore is disabled.
        Type                            EcucBooleanParamDef
        Multiplicity                    1
        Post-Build Variant Support      false
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_35</srcid><srcstatus/><internalId>1362</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_13_Multicore</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    
    
    <specobject>
      <id>CanTSyn.EB.Multicore.CanTSynGlobalTimeMasterDomainPartitionRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeMasterDomainPartitionRef
        Parent Container           CanTSynGlobalTimeMaster
        Description                Reference to EcucPartition to allow grouping of MainFunction according to EcucPartition elements.
        Multiplicity               1
        Type                       Reference to [EcuCPartition]
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        Applies only when CanTSynMultiCoreSupport is ON.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_122</srcid><srcstatus/><internalId>1365</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_13_Multicore</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlaveDomainPartitionRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                       CanTSynGlobalTimeSlaveDomainPartitionRef
        Parent Container           CanTSynGlobalTimeSlave
        Description                Reference to EcucPartition to allow grouping of MainFunction according to EcucPartition elements.
        Multiplicity               1
        Type                       Reference to [EcuCPartition]
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X    All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <comment>
        Applies only when CanTSynMultiCoreSupport is ON.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_253</srcid><srcstatus/><internalId>1369</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_13_Multicore</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    
    

  
  
  
    <specobject>
       <id>CanTSyn.EB.Check.CanTSynMultiCoreSupport.Enabled.CanIfMultiCoreSupport.Disabled</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         CanTSyn shall display an error message if CanTSynMultiCoreSupport is enabled,
         but CanIfMultiCoreSupport is disabled.
       </description>
       <comment>
       </comment>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_59</srcid><srcstatus/><internalId>1363</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_016001_CanTSynMultiCoreSupport_Enabled_CanIfMultiCoreSupport_Disabled</srcid><srcstatus/><internalId>1522</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>

    <specobject>
       <id>CanTSyn.EB.Check.CanTSynMultiCoreSupport.Disabled.TimeDomainPartitionRef.Used</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         CanTSyn shall display an error message if there is at least one CanTSynGlobalTimeMasterDomainPartitionRef or CanTSynGlobalTimeSlaveDomainPartitionRef configured
         and CanTSynMultiCoreSupport is disabled.
       </description>
       <comment>
       </comment>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Checks.m_71</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_017001_MultiCoreSupport_Disabled_PartitionRef_Used</srcid><srcstatus/><internalId>1529</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    
    
    
    
    <specobject>
       <id>CanTSyn.EB.Check.EcuCTxPdu.And.CanTSynGlobalTimeMaster.MappedTo.DifferentPartitions.DedicatedPartition</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         CanTSyn shall display an error message if EcuCTxPdu has EcucPduDedicatedPartitionRef configured to a diferent partition than CanTSynGlobalTimeMasterDomainPartitionRef.
       </description>
       <comment>
       </comment>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Checks.m_110</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_016002_EcuCTxPdu_And_CanTSynGlobalTimeMaster_MappedToDifferentPartitions_DedicatedPartition</srcid><srcstatus/><internalId>1523</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    
    <specobject>
       <id>CanTSyn.EB.Check.EcuCTxPdu.And.CanTSynGlobalTimeMaster.MappedTo.DifferentPartitions.DefaultPartition</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         CanTSyn shall display an error message if EcuCTxPdu has EcucPduDefaultPartitionRef configured to a diferent partition than CanTSynGlobalTimeMasterDomainPartitionRef.
       </description>
       <comment>
       </comment>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Checks.m_119</srcid><srcstatus/><internalId>588</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_016003_EcuCTxPdu_And_CanTSynGlobalTimeMaster_MappedToDifferentPartitions_DefaultPartition</srcid><srcstatus/><internalId>1524</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    
    <specobject>
       <id>CanTSyn.EB.Check.EcuCTxPdu.MappedTo.NoPartition</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         CanTSyn shall display an error message if CanTSynMultiCoreSupport is enabled and
         EcuCTxPdu has neither EcucPduDedicatedPartitionRef nor EcucPduDefaultPartitionRefis configured.
       </description>
       <comment>
       </comment>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Checks.m_125</srcid><srcstatus/><internalId>589</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_016004_CanTSynGlobalTimeMaster_MappedTo_NoPartition</srcid><srcstatus/><internalId>1525</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    
    
    
    <specobject>
       <id>CanTSyn.EB.Check.EcuCRxPdu.And.CanTSynGlobalTimeSlave.MappedTo.DifferentPartitions.DedicatedPartition</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         CanTSyn shall display an error message if EcuCRxPdu has EcucPduDedicatedPartitionRef configured to a diferent partition than CanTSynGlobalTimeSlaveDomainPartitionRef.
       </description>
       <comment>
       </comment>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Checks.m_156</srcid><srcstatus/><internalId>590</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_016005_EcuCRxPdu_And_CanTSynGlobalTimeSlave_MappedToDifferentPartitions_DedicatedPartition</srcid><srcstatus/><internalId>1526</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
    
    <specobject>
       <id>CanTSyn.EB.Check.EcuCRxPdu.And.CanTSynGlobalTimeSlave.MappedTo.DifferentPartitions.DefaultPartition</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         CanTSyn shall display an error message if EcuCRxPdu has EcucPduDefaultPartitionRef configured to a diferent partition than CanTSynGlobalTimeSlaveDomainPartitionRef.
       </description>
       <comment>
       </comment>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Checks.m_165</srcid><srcstatus/><internalId>591</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_016006_EcuCRxPdu_And_CanTSynGlobalTimeSlave_MappedToDifferentPartitions_DefaultPartition</srcid><srcstatus/><internalId>1527</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
    
    <specobject>
       <id>CanTSyn.EB.Check.EcuCRxPdu.MappedTo.NoPartition</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         CanTSyn shall display an error message if CanTSynMultiCoreSupport is enabled and
         EcuCRxPdu has neither EcucPduDedicatedPartitionRef nor EcucPduDefaultPartitionRefis configured.
       </description>
       <comment>
       </comment>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CanTSyn_Checks.m_171</srcid><srcstatus/><internalId>592</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_016007_CanTSynGlobalTimeSlave_MappedTo_NoPartition</srcid><srcstatus/><internalId>1528</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
    
    
    
    
    
    <specobject>
      <id>CanTSyn.EB.Multicore.MainFunctions_NormalHandling_Multicore_OFF</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
         When multicore support is disabled and there are CanTSynGlobalTimeDomains
         which do not have any CanTSynGlobalTimeMasterDomainPartitionRef/CanTSynGlobalTimeMasterDomainPartitionRef configured,
         they will be handled by the normal CanTSyn_MainFunction().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3142</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3262</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_13_Multicore</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    
    
    
    
    <specobject>
      <id>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
         When multicore support is enabled and there are CanTSynGlobalTimeDomains which have CanTSynGlobalTimeMaster enabled and
         do not have any CanTSynGlobalTimeMasterDomainPartitionRef configured,
         they will be handled by the normal CanTSyn_MainFunction().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3149</srcid><srcstatus/><internalId>736</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_13_Multicore</srcid><srcstatus/><internalId>1503</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_001_Multicore_SYNC_Master_Slave_DifferentPartitions</srcid><srcstatus/><internalId>1658</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_002_Multicore_OFS_Master_Slave_DifferentPartitions</srcid><srcstatus/><internalId>1659</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_003_Multicore_Multiple_SYNC_Masters_Tx_SamePartition</srcid><srcstatus/><internalId>1660</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_004_Multicore_Multiple_OFS_Masters_Tx_SamePartition</srcid><srcstatus/><internalId>1661</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_005_Multicore_Multiple_SYNC_Slaves_Rx_SamePartition</srcid><srcstatus/><internalId>1662</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_006_Multicore_Multiple_OFS_Slaves_Rx_SamePartition</srcid><srcstatus/><internalId>1663</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_007_Multicore_Multiple_SYNC_OFS_Master_Slaves_SamePartition</srcid><srcstatus/><internalId>1664</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_008_Multicore_Multiple_SYNC_OFS_Master_Slaves_NoPartition</srcid><srcstatus/><internalId>1665</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_009_Multicore_SYNC_Slaves_DifferentPArtitions</srcid><srcstatus/><internalId>1666</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_NormalHandling_Multicore_ON</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
         When multicore support is enabled and there are CanTSynGlobalTimeDomains which have CanTSynGlobalTimeSlave enabled and
         do not have any CanTSynGlobalTimeSlaveDomainPartitionRef configured,
         they will be handled by the normal CanTSyn_MainFunction().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3269</srcid><srcstatus/><internalId>743</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_13_Multicore</srcid><srcstatus/><internalId>1503</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest16_008_Multicore_Multiple_SYNC_OFS_Master_Slaves_NoPartition</srcid><srcstatus/><internalId>1665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    
    
    
    <specobject>
      <id>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_MulticoreHandling_Multicore_ON</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
         When multicore support is enabled and there are CanTSynGlobalTimeDomains which have CanTSynGlobalTimeMaster enabled and
         have CanTSynGlobalTimeMasterDomainPartitionRef configured,
         they will be handled by CanTSyn_MainFunction_Tx(partitionIndex)
        (called from CanTSyn_[vendorId]_[referedEcuCPartitionName]_MainFunction_Tx_[timeDomainName]() wrapper).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3150</srcid><srcstatus/><internalId>737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_13_Multicore</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.CanTSyn.EB_INTREQ_CanTSyn_0001</srcid><srcstatus/><internalId>0</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_MulticoreHandling_Multicore_ON</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
         When multicore support is enabled and there are CanTSynGlobalTimeDomains which have CanTSynGlobalTimeSlave enabled and
         have CanTSynGlobalTimeSlaveDomainPartitionRef configured,
         they will be handled by CanTSyn_MainFunction_Rx(partitionIndex)
        (called from CanTSyn_[vendorId]_[referedEcuCPartitionName]_MainFunction_Rx_[timeDomainName]() wrapper).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3270</srcid><srcstatus/><internalId>744</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_13_Multicore</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.CanTSyn.EB_INTREQ_CanTSyn_0001</srcid><srcstatus/><internalId>0</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.MulticoreDistribution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.Check.CanTSynIcvGenerationSupport.Enabled.ExtendedMessageUsage.Disabled</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message should be displayed if CanTSynGlobalTimeTxIcvSecured is set to ICV_SUPPORTED and CanTSynUseExtendedMsgFormat
      is FALSE.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_580</srcid><srcstatus/><internalId>1340</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018001_SecureTime_TxIcvSecured_ICV_SUPPORTED_ExtendedMsgFormat_FALSE</srcid><srcstatus/><internalId>1530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.CanTSynIcvVerificationSupport.Enabled.ExtendedMessageUsage.Disabled</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message should be displayed if CanTSynGlobalTimeRxIcvSecured is set to ICV_OPTIONAL or ICV_VERIFIED and CanTSynUseExtendedMsgFormat
      is FALSE.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_886</srcid><srcstatus/><internalId>1349</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018002_SecureTime_RxIcvSecured_ICV_VERIFIED_ExtendedMsgFormat_FALSE</srcid><srcstatus/><internalId>1531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.SyncFup.FVLengthAndIcvLengthExceedFrameLength</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynIcvTxLength + StbMFreshnessValueTruncLength + 10 (FUP payload length) exceeds the maximum frame
      length of 64 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_672</srcid><srcstatus/><internalId>1342</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018003_SecureTime_FupPayloadLength_FVLength_IcvLength_ExceedFrameLength</srcid><srcstatus/><internalId>1532</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.ExtOFS.FVLengthAndIcvLengthExceedFrameLength</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynIcvTxLength + StbMFreshnessValueTruncLength + 18 (ExtOFS payload length) exceeds the maximum frame
      length of 64 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_675</srcid><srcstatus/><internalId>1343</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018004_SecureTime_ExtOfsPayloadLength_FVLength_IcvLength_ExceedFrameLength</srcid><srcstatus/><internalId>1533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.ExtOFS.IcvLengthExceedsFrameLength</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynIcvTxLength + 18 (ExtOFS payload length) exceeds the maximum frame
      length of 64 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_678</srcid><srcstatus/><internalId>1344</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018005_SecureTime_ExtOfsPayloadLength_NoFV_IcvLength_ExceedFrameLength</srcid><srcstatus/><internalId>1534</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.SyncFup.FVLengthAndIcvLengthExceedFrameLength</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynIcvRxLength + StbMFreshnessValueTruncLength + 10 (FUP payload length) exceeds the maximum frame
      length of 64 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_960</srcid><srcstatus/><internalId>1351</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018006_SecureTime_FupPayloadLength_FVLength_IcvLength_ExceedFrameLength</srcid><srcstatus/><internalId>1535</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.ExtOFS.FVLengthAndIcvLengthExceedFrameLength</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynIcvRxLength + StbMFreshnessValueTruncLength + 18 (ExtOFS payload length) exceeds the maximum frame
      length of 64 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_963</srcid><srcstatus/><internalId>1352</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018007_SecureTime_ExtOfsPayloadLength_FVLength_IcvLength_ExceedFrameLength</srcid><srcstatus/><internalId>1536</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.ExtOFS.IcvLengthExceedsFrameLength</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynIcvRxLength + 18 (ExtOFS payload length) exceeds the maximum frame
      length of 64 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_966</srcid><srcstatus/><internalId>1353</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018008_SecureTime_ExtOfsPayloadLength_NoFV_IcvLength_ExceedFrameLength</srcid><srcstatus/><internalId>1537</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.IcvGenerationTimeout.ExceedsTxPeriod</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynIcvGenerationTimeout is greater than CanTSynGlobalTimeTxPeriod.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_703</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018009_SecureTime_CanTSynIcvGenerationTimeout_GreaterThan_CanTSynGlobalTimeTxPeriod</srcid><srcstatus/><internalId>1538</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.FreshnessValueReference.Invalid</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if Freshness Value IdRef is enabled but is not configured with a valid reference.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_726</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_1051</srcid><srcstatus/><internalId>1354</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018010_SecureTime_FreshnessValueReference_Invalid</srcid><srcstatus/><internalId>1539</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.IcvGenerationBase.CsmPrimitiveNotMatching</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynIcvGenerationBase does not match the primitive type of the Csm job referenced
      by CanTSynIcvGenerationJobRef.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_746</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018011_SecureTime_CanTSynIcvGenerationBase_DoesNotMatch_CsmPrimitive</srcid><srcstatus/><internalId>1540</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.IcvVerificationBase.CsmPrimitiveNotMatching</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynIcvVerificationBase does not match the primitive type of the Csm job referenced
      by CanTSynIcvVerificationJobRef.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_1071</srcid><srcstatus/><internalId>1355</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018012_SecureTime_CanTSynIcvVerificationBase_DoesNotMatch_CsmPrimitive</srcid><srcstatus/><internalId>1541</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.RxDebounceTime.FollowUpOffset</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        An error message shall be displayed if CanTSynGlobalTimeRxDebounceTime is greater or equal to CanTSynGlobalTimeFollowUpTimeout.
      FUP message will not find a time interval to be succesfully received otherwise.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_859</srcid><srcstatus/><internalId>1348</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018013_SecureTime_RxDebounceTime_GreaterOrEqualTo_FollowUpOffset</srcid><srcstatus/><internalId>1542</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.CanTSynGlobalTimeRxDebounceTime.OfsOfnsPair</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        During CanTSynGlobalTimeRxDebounceTime if any OFS or OFNS message received, the Offset Time Slave shall discard the
        received message, raise the security event CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR, reset the sequence (i.e. waiting for a new OFS) and
        load CanTSynGlobalTimeRxDebounceTime. (refer [SWS_CanTSyn_00204]).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2518</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_036_StdOFS_NoCRC_NoIcv</srcid><srcstatus/><internalId>1740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.CanTSynGlobalTimeRxDebounceTime.ExtOfs</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        During CanTSynGlobalTimeRxDebounceTime if any ExtOFS message is received, the Offset Time Slave shall discard the
        received message, raise the security event CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR, reset the sequence (i.e. waiting for a new ExtOFS) and
        load CanTSynGlobalTimeRxDebounceTime. (refer [SWS_CanTSyn_00204]).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2504</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_014_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1720</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
    
    
    <specobject>
      <id>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.OfsOfnsPair</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        If the OFS message is received while the CanTSynGlobalTimeFollowUpTimeout is running, the Time Slave shall discard
        the received OFS message, reset the sequence (i.e. waiting for a new OFS) and raise the security event
        CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR (refer [SWS_CanTSyn_00204]).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5958</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_036_StdOFS_NoCRC_NoIcv</srcid><srcstatus/><internalId>1740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    
    
    

    <specobject>
      <id>CanTSyn.EB.SyncFupSeqErrorSEV</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverCAN.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name                              CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR
        Parent Container                  CanTSynSecurityEventRefs
        Description                       SYNC message received during FupOffsetTime or message received during RxDebounceTime. Context data provides the respective
                                          domain ID.
        Multiplicity                      0..1
        Type                              Symbolic name reference to IdsMEvent
        Post-Build Variant Multiplicity   false
        Post-Build Variant Value          false
        Multiplicity Configuration Class
                                          Pre-compile time  X    All Variants
                                          Link time         –-
                                          Post-build time   --
        Value Configuration Class     
                                          Pre-compile time  X    All Variants
                                          Link time         --
                                          Post-build time   --
        Scope / Dependency                scope: local
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_228</srcid><srcstatus/><internalId>1339</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_023_SYNC_MessageFiltering_When_ICV_VERIFIED</srcid><srcstatus/><internalId>1731</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.DLC.NormalMessage.INVALID_PDU_LENGTH.RxIndication</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        The function CanTSyn_RxIndication() shall check that the DLC of SYNC, FUP, OFS and OFNS messages is 8 for classic CAN. 
        If the check fails, the function shall ignore the message.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2611</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2626</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_Det022_RxIndication_SduLength_NonExteneded</srcid><srcstatus/><internalId>1602</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_015_Det_RxIndication_SduLength_No_Exteneded_Configured</srcid><srcstatus/><internalId>1634</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>

    <specobject>
      <id>CanTSyn.EB.DLC.ExtendedMessage.INVALID_PDU_LENGTH.RxIndication</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
         The function CanTSyn_RxIndication() shall check that the DLC of SYNC, FUP, OFS and OFNS messages is 16 for CAN FD if
        CanTSynUseExtendedMsgFormat is TRUE. If the check fails, the function shall ignore the message.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2599</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_Det023_RxIndication_SduLength_Extended</srcid><srcstatus/><internalId>1603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.GreaterThanZero</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        If CanTSynGlobalTimeTxIcvSecured is set to ICV_SUPPORTED then CanTSynIcvTxLength must be greater than 0.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_583</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018014_SecureTime_IcvTxLength_GreaterThanZero</srcid><srcstatus/><internalId>1543</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.GreaterThanZero</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        If CanTSynRxIcvVerificationType is set to ICV_VERIFIED or ICV_OPTIONAL then CanTSynIcvRxLength must be greater than 0.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_889</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CANTSYN_GEN_018015_SecureTime_IcvRxLength_GreaterThanZero</srcid><srcstatus/><internalId>1544</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Tx.IcvGenerationIndication.JobId.NullPtr</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        The callback function CanTSyn_IcvGenerationIndication() shall inform the DET, if development error detection
        is enabled (CANTSYN_DEV_ERROR_DETECT is set to TRUE) and if parameter 'job' equals NULL_PTR (CANTSYN_E_NULL_POINTER).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7661</srcid><srcstatus/><internalId>1228</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.Check.Rx.IcvVerificationIndication.JobId.NullPtr</id>
      <status>approved</status>
       <source>Elektrobit</source>
      <version>1</version>
      <description>
        The callback function CanTSyn_IcvVerificationIndication() shall inform the DET, if development error detection
        is enabled (CANTSYN_DEV_ERROR_DETECT is set to TRUE) and if parameter 'job' equals NULL_PTR (CANTSYN_E_NULL_POINTER).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8358</srcid><srcstatus/><internalId>1300</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_035_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmOK_VerInd_BUSY</srcid><srcstatus/><internalId>1739</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    
    <specobject>
      <id>CanTSyn.EB.DefensiveProgramming_Conf</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Container Name            CanTSynDefensiveProgramming
        Description               Container for defensive programming parameters.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>CanTSyn.EB.DefensiveProgramming.DefProgEnabled</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Name                       CanTSynDefProgEnabled
        Parent Container           CanTSynDefensiveProgramming
        Description                Switches on/off all defensive programming checks.
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              false
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X  All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_18</srcid><srcstatus/><internalId>1356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>CanTSyn.EB.DefensiveProgramming.PrecondAssertEnabled</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Name                       CanTSynPrecondAssertEnabled
        Parent Container           CanTSynDefensiveProgramming
        Description                Switches on/off the checks on the input parameters of functions.
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              false
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X  All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_19</srcid><srcstatus/><internalId>1357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>CanTSyn.EB.DefensiveProgramming.PostcondAssertEnabled</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Name                       CanTSynPostcondAssertEnabled
        Parent Container           CanTSynDefensiveProgramming
        Description                Switches on/off the checks on the output parameters of functions.
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              false
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X  All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_20</srcid><srcstatus/><internalId>1358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>CanTSyn.EB.DefensiveProgramming.StaticAssertEnabled</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Name                       CanTSynStaticAssertEnabled
        Parent Container           CanTSynDefensiveProgramming
        Description                Switches on/off the checks on static code.
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              false
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X  All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_21</srcid><srcstatus/><internalId>1359</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>CanTSyn.EB.DefensiveProgramming.UnreachAssertEnabled</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Name                       CanTSynUnreachAssertEnabled
        Parent Container           CanTSynDefensiveProgramming
        Description                Switches on/off the checks on code locations that cannot be reached.
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              false
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X  All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_22</srcid><srcstatus/><internalId>1360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>CanTSyn.EB.DefensiveProgramming.InvariantAssertEnabled</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Name                       CanTSynInvariantAssertEnabled
        Parent Container           CanTSynDefensiveProgramming
        Description                Switches on/off the checks on invariants (things that are supposed not to change during e.g. a loop or a function execution).
        Multiplicity               1
        Type                       EcucBooleanParamDef
        Default value              false
        Post-Build Variant Value   false
        Value Configuration Class
                                   Pre-compile time  X  All Variants
                                   Link time         --
                                   Post-build time   --
        Scope / Dependency scope:  local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_23</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    
    
    
    
    
  </specobjects>
    <specobjects doctype="swuvc">

    <specobject>
       <id>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP.ReceivedImmediately.AfterSYNC.vc01</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>2</version>
       <description>
          EC valid: Tested API         - CanTSyn_MainFunction
                    Test's purpose     - If CanTSynGlobalTimeFollowUpTimeout is not expired and
                                         the awaited FUP message is received immediately after the SYNC message,
                                         it shall be accepted and a new SYNC-FUP sequence shall be awaited.
                                            --
                    Config Param       - CanTSynGlobalTimeSlave exists
                    Tested Global Vars - CanTSyn_SyncSlavePtr-&gt;TimeRxFollowUpOffset
                                         CanTSyn_SyncSlavePtr-&gt;RxStatus
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_008_RxFollowUpTimeout_AwaitedFUP_ReceivedImmediately_AfterSYNC</srcid><srcstatus/><internalId>1625</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP</linksto>
             <dstversion>2</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>

    <specobject>
       <id>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP.ReceivedLater.AfterAFewMainFunctions.vc02</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>2</version>
       <description>
          EC valid: Tested API         - CanTSyn_MainFunction
                    Test's purpose     - If CanTSynGlobalTimeFollowUpTimeout is not expired and
                                         the awaited FUP message is received later after a few CanTSyn_MainFunctions,
                                         it shall be accepted and a new SYNC-FUP sequence shall be again awaited.
                                            --
                    Config Param       - CanTSynGlobalTimeSlave exists
                    Tested Global Vars - CanTSyn_SyncSlavePtr-&gt;TimeRxFollowUpOffset
                                         CanTSyn_SyncSlavePtr-&gt;RxStatus
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_009_RxFollowUpTimeout_AwaitedFUP_ReceivedLater_AfterAFewMainFunctions</srcid><srcstatus/><internalId>1626</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP</linksto>
             <dstversion>2</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>

    <specobject>
       <id>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP.ReceiveSync.vc03</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>2</version>
       <description>
          EC valid: Tested API         - CanTSyn_MainFunction
                    Test's purpose     - If CanTSynGlobalTimeFollowUpTimeout is not expired and
                                         FUP message is awaited and a SYNC message is received instead,
                                         it shall not be accepted.
                                            --
                    Config Param       - CanTSynGlobalTimeSlave exists
                    Tested Global Vars - CanTSyn_SyncSlavePtr-&gt;TimeRxFollowUpOffset
                                         CanTSyn_SyncSlavePtr-&gt;RxStatus
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_010_RxFollowUpTimeout_AwaitedFUP_ReceiveSYNC</srcid><srcstatus/><internalId>1627</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP</linksto>
             <dstversion>2</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>

    <specobject>
       <id>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS.ReceivedImmediately.AfterOFS.vc01</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>2</version>
       <description>
          EC valid: Tested API         - CanTSyn_MainFunction
                    Test's purpose     - If CanTSynGlobalTimeFollowUpTimeout is not expired and
                                         the awaited OFNS message is received immediately after the OFS message,
                                         it shall be accepted and a new OFS-OFNS sequence shall be awaited.
                                            --
                    Config Param       - CanTSynGlobalTimeSlave exists
                    Tested Global Vars - CanTSyn_SyncSlavePtr-&gt;TimeRxFollowUpOffset
                                         CanTSyn_SyncSlavePtr-&gt;RxStatus
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_011_RxFollowUpTimeout_AwaitedOFNS_ReceivedImmediately_AfterOFS</srcid><srcstatus/><internalId>1629</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS</linksto>
             <dstversion>2</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>

    <specobject>
       <id>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS.ReceivedLater.AfterAFewMainFunctions.vc02</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>2</version>
       <description>
          EC valid: Tested API         - CanTSyn_MainFunction
                    Test's purpose     - If CanTSynGlobalTimeFollowUpTimeout is not expired
                                         and the awaited OFNS message is received later after a few CanTSyn_MainFunctions,
                                         it shall be accepted and a new OFS-OFNS sequence shall be again awaited.
                                            --
                    Config Param       - CanTSynGlobalTimeSlave exists
                    Tested Global Vars - CanTSyn_SyncSlavePtr-&gt;TimeRxFollowUpOffset
                                         CanTSyn_SyncSlavePtr-&gt;RxStatus
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_012_RxFollowUpTimeout_AwaitedOFNS_ReceivedLater_AfterAFewMainFunctions</srcid><srcstatus/><internalId>1630</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS</linksto>
             <dstversion>2</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>

    <specobject>
       <id>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS.ReceiveOfs.vc03</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>2</version>
       <description>
          EC valid: Tested API         - CanTSyn_MainFunction
                    Test's purpose     - If CanTSynGlobalTimeFollowUpTimeout is not expired
                                         and an OFNS message is awaited and an OFS message is received instead,
                                         it shall not be accepted.
                                            --
                    Config Param       - CanTSynGlobalTimeSlave exists
                    Tested Global Vars - CanTSyn_SyncSlavePtr-&gt;TimeRxFollowUpOffset
                                         CanTSyn_SyncSlavePtr-&gt;RxStatus
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_013_RxFollowUpTimeout_AwaitedOFNS_ReceiveOFS</srcid><srcstatus/><internalId>1631</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS</linksto>
             <dstversion>2</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>


    
    
    
    <specobject>
       <id>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeMasterConfirmationHandleIds.0based.consecutive.vc01</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>1</version>
       <description>
          EC valid: Tested array of structures   - CanTSyn_TimeMasterConfig[]

                    Test's purpose               - CanTSyn validates CanTSynGlobalTimeMasterConfirmationHandleIds to be
                                                   0 based and consecutive, otherwise CanTSyn throws an error, at generation phase.
                                                   In order to check that CanTSynGlobalTimeMasterConfirmationHandleIds are 0 based and consecutive
                                                   it is enough to verify that the test generates and that IDs are correctly filled by HandleIds Wizard
                                                   after running "make generate" command.
                                                   -- CanTSyn_ComTest_12_HandleIdCheck

                    Config Param                 - CanTSynGlobalTimeMaster exists
                                                   CanTSynGlobalTimeMasterConfirmationHandleIds have wrong values of -1

                    Tested handle ID             - CanTSynGlobalTimeMasterConfirmationHandleId
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_12_HandleIdCheck</srcid><srcstatus/><internalId>1502</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeMasterConfirmationHandleIds.0based.consecutive</linksto>
             <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>

    <specobject>
       <id>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeSlaveHandleId.0based.consecutive.vc01</id>
       <status>approved</status>
       <source>Elektrobit</source>
       <version>1</version>
       <description>
          EC valid: Tested array of structures   - CanTSyn_TimeSlaveConfig[]

                    Test's purpose               - CanTSyn validates CanTSynGlobalTimeSlaveHandleIds to be
                                                   0 based and consecutive, otherwise CanTSyn thwors an error, at generation phase.
                                                   In order to check that CanTSynGlobalTimeSlaveHandleIds are 0 based and consecutive
                                                   it is enought to verify that the test generates and that IDs are correctly filled by HandleIds Wizard
                                                   after running "make generate" command.
                                                   -- CanTSyn_ComTest_12_HandleIdCheck

                    Config Param                 - CanTSynGlobalTimeSlave exists
                                                   CanTSynGlobalTimeSlaveHandleIds have wrong values of -1

                    Tested handle ID             - CanTSynGlobalTimeSlaveHandleId
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ComTest_12_HandleIdCheck</srcid><srcstatus/><internalId>1502</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
          <provcov>
             <linksto>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeSlaveHandleId.0based.consecutive</linksto>
             <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
       </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>CanTSyn.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CanTSyn_VerifyCodeStub</srcid><srcstatus/><internalId>1491</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.CanTSyn.UniquePDUs</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>19</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00029.DiffTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00039.DiffTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    <specobject>
      <id>dev.CanTSyn.PostBuild</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.PostBuild</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
    <specobject>
      <id>dev.CanTSyn.CanTSynGlobalTimeFollowUpTimeout</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
    <specobject>
      <id>dev.CanTSyn.HWtimeStamp</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150.HwTimeStamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
    <specobject>
      <id>dev.CanTSyn.SyncReceptionDelay</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
    <specobject>
      <id>dev.CanTSyn.CsmSignature</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
    <specobject>
      <id>dev.CanTSyn.IcvAuthExtendedCRC</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
    <specobject>
      <id>dev.CanTSyn.SequenceCounter</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Cfg.h_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Cfg.h</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Cfg.h_118</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Cfg.h</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Cfg.h_240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Cfg.h</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Cfg.h_596</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Cfg.h</sourcefile>
      <sourceline>596</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.ECUC_CanTSyn_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Cfg.h_633</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Cfg.h</sourcefile>
      <sourceline>633</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Cfg.h_643</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Cfg.h</sourcefile>
      <sourceline>643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Checks.m_71</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Checks.m</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.CanTSynMultiCoreSupport.Disabled.TimeDomainPartitionRef.Used</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Checks.m_110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Checks.m</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCTxPdu.And.CanTSynGlobalTimeMaster.MappedTo.DifferentPartitions.DedicatedPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Checks.m_119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Checks.m</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCTxPdu.And.CanTSynGlobalTimeMaster.MappedTo.DifferentPartitions.DefaultPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Checks.m_125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Checks.m</sourcefile>
      <sourceline>125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCTxPdu.MappedTo.NoPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Checks.m_156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Checks.m</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCRxPdu.And.CanTSynGlobalTimeSlave.MappedTo.DifferentPartitions.DedicatedPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Checks.m_165</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Checks.m</sourcefile>
      <sourceline>165</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCRxPdu.And.CanTSynGlobalTimeSlave.MappedTo.DifferentPartitions.DefaultPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Checks.m_171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Checks.m</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCRxPdu.MappedTo.NoPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Int_Cfg.h_58</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Int_Cfg.h</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Types.h_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Types.h</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Types.h_51</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Types.h</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/CanTSyn_Cfg.c.m4_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/src/CanTSyn_Cfg.c.m4</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.PrecompileTimeConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_91</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_1942</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>1942</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.PrecompileTimeConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_1982</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>1982</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_1992</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>1992</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.GetVersionInfo.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_1995</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>1995</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_1996</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>1996</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2039</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2039</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Initial_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2060</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2060</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Initial_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2092</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2092</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Initial_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Initial_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2145</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Init.ConfigPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Mode.Initialization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2181</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2217</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2217</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2254</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2319</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2329</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2329</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.SetTransmissionMode.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2332</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2332</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2337</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2337</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2365</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2365</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00183.AlsoLoadDebounce</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2504</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2504</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeRxDebounceTime.ExtOfs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2518</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2518</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeRxDebounceTime.OfsOfnsPair</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2520</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2520</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2544</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2544</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.RxIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2545</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2545</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2550</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2550</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00097.PduInfoPtr.E_NULL_POINTER.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2555</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2555</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00097.SduDataPtr.E_NULL_POINTER.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2559</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2559</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2562</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2562</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00097.INVALID_PDUID.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2585</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2585</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2599</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2599</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DLC.ExtendedMessage.INVALID_PDU_LENGTH.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2611</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2611</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DLC.NormalMessage.INVALID_PDU_LENGTH.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2623</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2623</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2626</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2626</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DLC.NormalMessage.INVALID_PDU_LENGTH.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2639</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2639</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2705</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2705</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2706</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2706</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2711</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2711</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2712</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2712</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2713</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2713</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2714</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2714</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2718</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2718</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2719</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2719</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2722</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2723</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2723</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2725</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2725</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2735</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2735</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2736</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2736</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2741</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2741</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2742</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2742</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2743</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2743</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2744</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2744</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2748</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2748</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2749</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2753</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2753</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2754</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2754</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2755</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2755</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2770</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2770</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2771</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2771</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2776</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2776</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2777</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2777</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2778</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2778</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2779</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2779</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2783</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2784</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2784</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2787</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2787</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2788</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2788</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2789</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2789</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2790</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2790</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2801</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2801</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2807</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2807</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2808</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2808</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2810</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2810</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2814</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2814</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2815</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2815</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2818</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2818</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2819</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2819</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2820</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2820</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2821</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2821</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2845</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2845</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2872</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2872</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.InterruptProtection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2879</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2879</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Rx_StbM_GetCurrentVirtualLocalTime_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2880</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2880</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2881</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2881</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT1VLT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2894</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2894</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2922</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2922</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2923</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2923</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2928</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2928</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2929</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2929</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2930</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2930</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2931</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2931</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2936</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2936</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2937</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2937</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2941</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2941</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2942</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2942</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2943</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2943</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2944</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2964</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2964</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2969</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2969</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2970</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2970</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2971</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2971</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2972</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2972</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2977</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2977</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2978</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2978</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2982</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2982</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2983</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2983</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2984</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2984</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2985</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2985</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_2993</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>2993</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3004</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3019</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3019</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.TxConfirmation.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3020</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3020</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3031</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3031</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3049</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3049</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3055</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3055</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3056</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3056</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3057</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3057</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3058</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3058</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsWAITTXCONF_OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3073</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3079</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3079</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3080</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3080</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3081</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3081</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3082</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3082</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncWAITTXCONF_SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.MainFunctions_NormalHandling_Multicore_OFF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3150</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3150</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_MulticoreHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3170</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3215</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3216</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3262</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3262</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.MainFunctions_NormalHandling_Multicore_OFF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_MulticoreHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3322</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3322</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_SyncRXWAIT_NoFupReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_SyncRXWAIT-FupRXWAITTIMEOUT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3361</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3361</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_1_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_1_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3406</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3406</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_3_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_3_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3423</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3423</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfsRXWAIT-OfnsRXWAITTIMEOUT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3512</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3512</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_OfsRXWAIT_NoOfnsReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3535</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3536</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3536</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3571</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3571</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_2_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3572</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3572</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_2_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3587</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3587</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3614</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3614</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Failed_TimeoutExpired</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3663</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3663</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3667</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3667</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3668</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3668</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00015.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3669</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3669</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3676</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3676</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00015.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3677</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3677</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3688</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3688</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3691</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3691</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3695</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3695</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3698</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3698</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3705</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3705</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3706</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3706</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3714</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3714</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00015.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3727</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3758</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3758</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049_OFNS_SCUnchanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3763</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3763</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3764</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3764</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00016.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3774</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3774</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00018.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3778</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3778</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3782</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3786</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3786</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3789</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3789</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.AuthenticatedExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3791</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3791</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3792</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3792</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3798</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3798</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3806</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3806</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3807</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3807</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3816</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3816</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3819</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3819</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3820</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3820</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3826</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3826</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00016.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3833</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3833</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00016.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3834</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3834</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00018.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3889</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3889</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3890</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3890</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3919</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3919</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3920</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3920</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3979</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3979</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3982</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3982</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3987</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3987</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3988</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3988</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3993</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3993</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_3999</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>3999</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4005</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4005</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4006</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4006</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4042</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4042</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4046</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4046</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4050</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4050</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4057</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4057</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4089</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4089</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4107</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4107</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4154</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsSENDWAIT-OfsWAITTXCONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4178</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4178</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT-OfnsWAITTXCONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1475</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4185</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4186</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4186</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4202</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4202</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4219</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Received_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4301</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4301</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4304</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4304</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.StbM_GetOffset_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4322</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4322</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049_OFNS_SCUnchanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4387</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4391</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4391</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4396</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4396</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4423</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4423</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4427</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4427</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4437</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4438</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4439</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4439</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00121.OFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4440</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4440</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120.OFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4451</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4451</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4484</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4484</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120.OFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4559</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4559</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4560</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4560</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsSENDWAIT-OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4561</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4561</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT_OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4576</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4576</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4581</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4581</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4582</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4582</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4585</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4585</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00039.SameTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4589</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT_OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4654</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4654</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4655</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4655</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4659</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4659</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.StbM_BusGetCurrentTime_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4660</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4660</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4677</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4677</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00030.SyncToSubDomain.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4684</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4684</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00030.SyncToGTM.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4689</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4689</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4690</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4690</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4691</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4691</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4699</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4699</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4705</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4705</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4715</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4715</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncWAITTXCONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4720</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4720</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4727</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4728</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4728</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4737</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4738</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120.SYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4739</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4739</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4747</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4747</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4758</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4758</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4855</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4855</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4857</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4857</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4870</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4870</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4875</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4875</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4879</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4879</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4886</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4886</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4917</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4924</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4924</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4925</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4925</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4940</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4940</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.ICVinFUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Failed_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4964</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4964</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Received_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4968</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4968</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-FupWAITTXCONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4974</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4974</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_4975</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>4975</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5004</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5005</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5005</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5008</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5008</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5022</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5022</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5031</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5031</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5037</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5037</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5052</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5052</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00121.SYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5053</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5053</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5065</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5065</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120.SYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Failed_TimeoutExpired</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5175</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5175</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5195</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5195</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00029.SameTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5199</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049.FUP.SCUnchanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5214</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5214</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.NotReceivedIn3s.Wait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5238</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5238</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150.SwTimeStamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.StbM_GetCurrentVirtualLocalTime_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5242</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5262</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5262</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5263</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5263</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5266</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncWAITTXCONF-FupSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5273</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5273</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5279</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5281</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5281</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.syncEgressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5283</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5283</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5286</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5286</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5289</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5289</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5300</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5300</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupWAITTXCONF_SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5349</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5349</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5354</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5354</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynTxStatus_OfsWAITTXCONF_OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.ExtendedOFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5363</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsWAITTXCONF-OfnsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5391</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5391</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5393</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5393</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsWAITTXCONF_OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5433</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5438</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5538</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.ValidFUPMessage.NoCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5539</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5539</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.ValidFUPMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5540</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5540</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5606</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5606</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00058.SYNC.ValidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5607</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5607</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00059.SYNC.ValidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5608</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5608</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.ValidSYNCMessage.NoCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.ValidSYNCMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.InvalidType.SYNCMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5660</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5660</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.ValidOFNSMessage.NoCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5661</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5661</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.ValidOFNSMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5662</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5662</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5667</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5667</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070.ValidOFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5795</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5795</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00066.Valid.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5796</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5796</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067.Valid.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5797</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5797</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.Valid.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5798</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5798</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.NoCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5799</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5800</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5800</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.InvalidType.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5862</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5862</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00066.Valid.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5863</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5863</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067.Valid.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5864</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5864</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.Valid.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5923</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5923</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5924</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5924</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5925</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5925</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5958</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5958</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.OfsOfnsPair</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5959</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5959</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_5960</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>5960</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6066</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6066</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6067</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6067</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6085</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6085</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6157</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6185</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6196</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6196</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6214</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6214</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.AuthenticatedExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6236</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6236</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6260</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6260</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6261</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6261</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6262</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6262</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.Valid.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6273</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6273</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6326</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6326</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6327</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6327</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057.SYNC.ValidTypeAndCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6328</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6328</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.ValidFUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6329</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6329</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.ValidOFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6330</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069.ValidOFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6394</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6394</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6395</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6395</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00179.FailedVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00185.FailedVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6415</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6415</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00179.ICVNotVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6416</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00185.ICVNotVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6425</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6425</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00181.ICVOptional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6426</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6426</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00187.ICVOptional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6436</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6436</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00181.FUPNoICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6437</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00187.OFSNoICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6445</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6445</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6446</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6446</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6461</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6461</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178.FailedVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ExtendedOFSNoICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6493</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6493</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidCRC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1462</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6494</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6494</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidCRC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6495</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6495</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.InvalidCRC.SYNCMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6496</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6496</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6497</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6497</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidCRC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6498</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6498</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.InvalidCRC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6501</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6501</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidLENGTH_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6502</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6502</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidTYPE_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6503</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6503</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidLENGTH_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6504</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6504</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidTYPE_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6506</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6506</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00058.SYNC.InvalidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6507</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6507</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00059.SYNC.InvalidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6508</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6508</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6509</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6509</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6514</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6514</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidDOMAINID_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1461</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6515</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6515</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidDOMAINID_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6521</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidCRC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6522</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6522</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidCRC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.InvalidCRC.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6524</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6524</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.InvalidCRC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.InvalidCRC.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1044</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6526</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6526</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.InvalidCRC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1045</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6529</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6529</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidLENGTH_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1046</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6530</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6530</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidTYPE_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1047</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidLENGTH_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1048</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6532</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6532</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidTYPE_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1049</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6533</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6533</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.InvalidType.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1050</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6534</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6534</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00066.InvalidType.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1051</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6535</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067.InvalidType.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1052</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6536</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6536</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1053</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6537</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6537</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1054</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6538</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067.InvalidType.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1055</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6539</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6539</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1056</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6542</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6542</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidDOMAINID_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1057</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6543</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6543</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidDOMAINID_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1058</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6548</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6548</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidCRC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1462</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1059</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6549</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6549</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidCRC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1060</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6550</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6550</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.InvalidCRC.SYNCMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1061</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6551</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6551</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1062</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6552</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidCRC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1063</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6553</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6553</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.InvalidCRC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1064</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6556</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6556</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidLENGTH_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1065</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6557</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6557</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidTYPE_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1066</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6558</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6558</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidLENGTH_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1067</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6559</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6559</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidTYPE_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1068</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6560</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6560</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1069</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6561</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6561</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00058.SYNC.InvalidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1070</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6562</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6562</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00059.SYNC.InvalidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1071</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6563</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6563</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1072</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6564</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6564</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1073</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6565</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6565</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1074</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1075</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6569</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6569</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidDOMAINID_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1461</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1076</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6570</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6570</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidDOMAINID_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1077</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6575</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6575</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidCRC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1078</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6576</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6576</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidCRC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1079</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.InvalidCRC.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1080</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6578</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6578</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.InvalidCRC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1081</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6579</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6579</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.InvalidCRC.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1082</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.InvalidCRC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1083</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidLENGTH_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1084</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidTYPE_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1085</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6585</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6585</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidLENGTH_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1086</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6586</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6586</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidTYPE_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1087</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6587</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6587</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.InvalidType.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1088</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00066.InvalidType.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1089</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6589</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067.InvalidType.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1090</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1091</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6591</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6591</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1092</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6592</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6592</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067.InvalidType.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1093</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6593</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6593</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1094</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6596</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6596</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidDOMAINID_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1095</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6597</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6597</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidDOMAINID_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1096</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6618</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6618</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.SetT2VLT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1097</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6628</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6628</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1098</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6629</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6629</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1099</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6642</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6642</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_SyncRXWAIT-FupRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1100</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1101</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6684</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6684</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1102</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6689</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6689</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1103</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6690</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6690</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.RetrieveData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1104</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6695</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6695</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1105</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6714</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6714</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1106</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6715</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6715</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1107</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6716</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6716</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1108</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6723</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6723</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1109</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6726</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6726</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Failed_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1110</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6727</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_FailedIcvAuth_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1111</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6744</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6744</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1112</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6753</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6753</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.RetrieveData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1113</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6778</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6778</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.CalculateTLSYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1114</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6781</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6781</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1115</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6782</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ComputeT4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1116</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6798</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6798</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133.SyncToSubDomain.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1117</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6799</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133.SyncToGTM.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1118</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6806</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6806</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1119</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6807</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6807</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1120</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6808</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6808</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.ForwardGlobalTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1121</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ForwardRxTimeTuple</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1122</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6811</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6811</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1123</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6812</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6812</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1124</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6814</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6814</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1125</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6817</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6817</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.UnusedData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1126</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6819</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6819</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1127</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6821</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6821</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.syncIngressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1128</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6823</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6823</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1129</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6826</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6826</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1130</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6829</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6829</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1131</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6848</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6848</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1132</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6864</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6864</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1133</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6865</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6865</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1134</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6873</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6873</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1135</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6874</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6874</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_NsAboveDefinedRange_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1136</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6875</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6875</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1137</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6876</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6876</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_NsAboveDefinedRange_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1138</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_FailedIcvAuth_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1139</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6878</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6878</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Verified_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1140</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6893</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1141</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6894</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6894</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1142</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6895</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6895</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1143</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6930</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6930</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1144</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6931</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6931</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1145</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1146</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6933</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6933</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1147</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6978</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6978</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1148</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1149</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_6999</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>6999</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1150</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1151</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7007</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7007</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1152</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7010</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7010</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Failed_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1153</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7011</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7011</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_FailedIcvAuth_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1154</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7025</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7025</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1155</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7029</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7029</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1156</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7031</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7031</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1157</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7038</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7038</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1158</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7064</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7064</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00072.StbM.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1159</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7065</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7065</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1160</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7066</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7066</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1161</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7067</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7067</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.ForwardGlobalTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1162</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7084</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7084</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1163</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1164</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1165</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1166</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_NsAboveDefinedRange_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1167</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_FailedIcvAuth_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1168</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1169</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1170</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfsRXWAIT-OfnsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1171</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1172</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7178</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7178</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1173</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7180</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7180</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1174</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1175</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7214</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7214</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133.SyncToSubDomain.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1176</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7215</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133.SyncToGTM.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1177</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00072.StbM.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1178</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7223</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7223</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1179</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7224</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7224</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1180</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7225</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7225</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.ForwardGlobalTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1181</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7242</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1182</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7258</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7258</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1183</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1184</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1185</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1186</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_NsAboveDefinedRange_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1187</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_NsAboveDefinedRange_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1188</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7314</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7314</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.ValidFUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1189</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00076.SYNCMatchFUP.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1190</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7316</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7316</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062.ValidFUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1191</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7317</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7317</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.DissasembleMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1192</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7336</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7336</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidSC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1460</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1193</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7337</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7337</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidSC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1194</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7338</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7338</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidSC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1195</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7339</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7339</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.InvalidSC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1196</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7340</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7340</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.InvalidSC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1197</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7341</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7341</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062.InvalidSC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1198</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7342</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7342</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00076.NoMatchSYNC_FUP.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1199</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7349</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7349</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1200</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7350</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7350</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1201</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7368</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7368</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1202</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.DissasembleMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1203</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7377</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7377</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1204</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7378</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7378</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1205</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7399</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7399</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00077.OFSMatchOFNS.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1206</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7400</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.DissasembleMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1207</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidSC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1208</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7406</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7406</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidSC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1209</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00077.NoMatchOFS_OFNS.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1210</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7408</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7408</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.InvalidSC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1211</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.InvalidSC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1212</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7410</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7410</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069.InvalidSC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1213</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7411</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7411</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070.InvalidSC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1214</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7418</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7418</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1215</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7419</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7419</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1216</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7420</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7420</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1217</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7421</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1218</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7436</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7436</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1219</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7437</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1220</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1221</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7451</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7451</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.DissasembleMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1222</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7460</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7460</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1223</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7461</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7461</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1224</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1225</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1226</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7640</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7640</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91002.Signature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1227</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7661</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7661</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.IcvGenerationIndication.JobId.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1228</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7706</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7706</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1229</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7711</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7711</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Received</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1230</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7717</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7717</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Failed_GenNotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1231</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7731</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7731</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1232</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7794</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7794</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1233</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7799</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Received</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1234</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7805</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7805</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Failed_GenNotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1235</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7819</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7819</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1236</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7880</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7880</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.ICVinFUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1237</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7881</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7881</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.ICVinOFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1238</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7882</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7882</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1239</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7912</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7912</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1240</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7913</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7913</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1241</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7922</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7922</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFVinICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1242</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7923</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7923</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167.UseFullFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1243</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7936</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7936</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1244</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7937</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7937</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1245</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7969</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7969</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1246</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7975</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7975</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1247</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1248</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_7990</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>7990</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.ICVinOFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1249</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8059</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8059</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1250</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8060</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8060</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1251</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8061</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8061</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1252</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8062</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8062</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1253</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8063</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8063</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1254</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1255</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1256</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8128</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1257</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1258</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1259</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8131</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8131</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1260</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1261</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8138</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8138</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1262</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1263</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8145</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1264</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8155</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8155</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1265</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1266</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8157</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1267</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1268</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8159</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8159</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.ICVinFUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1269</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.ICVinOFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1270</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1271</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8167</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8167</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_CONSTR_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1272</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8173</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8173</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1273</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8175</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8175</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_NotRequested_Pending</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1274</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8220</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1275</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8244</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1276</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8263</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8263</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.SetFVL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1277</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8264</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8264</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167.SetFVL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1278</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8272</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1279</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8273</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8273</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1280</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8274</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1281</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8275</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8275</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1282</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8281</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8281</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167.TruncatedFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1283</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8287</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8287</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1284</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8294</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1285</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8295</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1286</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8296</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8296</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1287</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8297</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8297</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1288</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8298</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8298</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1289</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8301</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8301</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1290</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1291</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8312</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8312</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1292</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1293</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8322</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8322</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1294</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1295</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1296</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8325</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8325</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1297</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8326</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8326</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1298</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8338</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8338</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91003.Signature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1299</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.IcvVerificationIndication.JobId.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1300</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Verified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1301</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8412</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8412</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Failed_VerifNotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1302</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8416</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1303</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1304</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8423</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8423</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_RecovError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1305</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8430</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8430</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1306</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8433</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1307</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8447</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8447</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1308</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8512</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8512</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Verified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1309</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8517</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8517</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Failed_VerifNotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1310</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8521</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1311</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8527</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8527</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1312</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8528</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8528</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_RecovError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1313</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8535</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1314</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8538</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1315</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8552</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1316</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8594</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8594</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1317</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8606</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8606</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00192.IncrementAttemptCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1318</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00192.StbMCallRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1319</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8611</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8611</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_NotRequested_RecovError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1320</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8628</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8628</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1321</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8723</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8723</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1322</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8737</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1323</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8748</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8748</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00192.StbMCallRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1324</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8780</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8780</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1325</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8797</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8797</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1326</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8813</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8813</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1327</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8820</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8820</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Verified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1328</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8825</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8825</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Failed_VerifNotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1329</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8832</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8832</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Pending</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1330</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8833</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8833</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_NotRequested_Pending</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1331</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8836</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8836</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1332</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8843</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8843</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1333</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8860</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8860</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1334</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8864</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8864</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1335</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8865</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8865</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Failed_MaxAttemptReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1336</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CanTSyn.c.m4_8869</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/src/CanTSyn.c.m4</sourcefile>
      <sourceline>8869</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1337</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_52</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.PrecompileTimeConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1338</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_228</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.SyncFupSeqErrorSEV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1339</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.CanTSynIcvGenerationSupport.Enabled.ExtendedMessageUsage.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1340</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.GreaterThanZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1341</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_672</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>672</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.SyncFup.FVLengthAndIcvLengthExceedFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1342</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_675</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>675</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.ExtOFS.FVLengthAndIcvLengthExceedFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1343</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.ExtOFS.IcvLengthExceedsFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1344</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_703</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>703</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.IcvGenerationTimeout.ExceedsTxPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1345</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_726</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>726</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.FreshnessValueReference.Invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1346</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_746</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>746</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.IcvGenerationBase.CsmPrimitiveNotMatching</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1347</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_859</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>859</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.RxDebounceTime.FollowUpOffset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1348</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_886</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>886</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.CanTSynIcvVerificationSupport.Enabled.ExtendedMessageUsage.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1349</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_889</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>889</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.GreaterThanZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1350</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_960</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>960</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.SyncFup.FVLengthAndIcvLengthExceedFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1351</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.ExtOFS.FVLengthAndIcvLengthExceedFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1352</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_966</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>966</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.ExtOFS.IcvLengthExceedsFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1353</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_1051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>1051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.FreshnessValueReference.Invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1354</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn.xdm.m4_1071</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn.xdm.m4</sourcefile>
      <sourceline>1071</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.IcvVerificationBase.CsmPrimitiveNotMatching</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1355</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DefensiveProgramming.DefProgEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1356</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_19</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>19</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DefensiveProgramming.PrecondAssertEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1357</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DefensiveProgramming.PostcondAssertEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1358</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DefensiveProgramming.StaticAssertEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1359</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DefensiveProgramming.UnreachAssertEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1360</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DefensiveProgramming.InvariantAssertEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1361</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.MultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1362</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_59</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.CanTSynMultiCoreSupport.Enabled.CanIfMultiCoreSupport.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1363</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_66</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynMaxNumberOfTransmitRetries_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1364</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMasterDomainPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1365</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_193</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_InvalidDemEvent_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1366</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1367</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_PeriodLTFollowUpTimeout_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1368</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_253</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>253</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlaveDomainPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1369</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_DetDisabled_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1370</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_338</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>338</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_DemEnabledNoDemEvent_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1371</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_EBParameters.xdm.m4_375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_InvalidErrorId_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1372</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_243</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>243</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CanTSynEnableTimeValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1373</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_264</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>264</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1374</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_329</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>329</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1375</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_396</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>396</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1376</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_461</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>461</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1377</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1378</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_607</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>607</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1379</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_627</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>627</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CRC_Supported_DataIDLists_Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1380</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_701</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>701</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.InvalidConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1381</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1382</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_753</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>753</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1383</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_799</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00006_CanTSynGlobalTimeFollowUpTimeout_NotAllowedToBeZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1384</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_840</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CRC_Supported_DataIDLists_Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1385</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_935</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>935</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1386</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CanTSyn_Extension.xdm.m4_936</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/config/CanTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>936</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1387</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Checks.m_29</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Checks.m</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1388</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CanTSyn_Checks.m_54</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/generate/include/CanTSyn_Checks.m</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1389</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/plugin.xml.m4_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/plugin.xml.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeMasterConfirmationHandleIds.0based.consecutive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1390</internalId></specobject>
    <specobject>
      <id>src/Autosar/plugin.xml.m4_64</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/plugin.xml.m4</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeSlaveHandleId.0based.consecutive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1391</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/resources/CanTSyn_Dem_Events.xml_6</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/src/Autosar/resources/CanTSyn_Dem_Events.xml</sourcefile>
      <sourceline>6</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DemEventIDGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1392</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>CanTSyn.dsn.MulticoreDistribution</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>1670</sourceline>
      <version>1</version>
      <description>
                The CanTSyn implements the design decision depicted in the Figure 2.10 "Multicore Distribution".
              </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Multicore.MultiCoreSupport</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Multicore.CanTSynGlobalTimeMasterDomainPartitionRef</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlaveDomainPartitionRef</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Check.CanTSynMultiCoreSupport.Enabled.CanIfMultiCoreSupport.Disabled</srcid><srcstatus/><internalId>520</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Check.CanTSynMultiCoreSupport.Disabled.TimeDomainPartitionRef.Used</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Check.EcuCTxPdu.And.CanTSynGlobalTimeMaster.MappedTo.DifferentPartitions.DedicatedPartition</srcid><srcstatus/><internalId>522</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Check.EcuCTxPdu.And.CanTSynGlobalTimeMaster.MappedTo.DifferentPartitions.DefaultPartition</srcid><srcstatus/><internalId>523</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Check.EcuCTxPdu.MappedTo.NoPartition</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Check.EcuCRxPdu.And.CanTSynGlobalTimeSlave.MappedTo.DifferentPartitions.DedicatedPartition</srcid><srcstatus/><internalId>525</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Check.EcuCRxPdu.And.CanTSynGlobalTimeSlave.MappedTo.DifferentPartitions.DefaultPartition</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Check.EcuCRxPdu.MappedTo.NoPartition</srcid><srcstatus/><internalId>527</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Multicore.MainFunctions_NormalHandling_Multicore_OFF</srcid><srcstatus/><internalId>528</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_NormalHandling_Multicore_ON</srcid><srcstatus/><internalId>530</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_MulticoreHandling_Multicore_ON</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_MulticoreHandling_Multicore_ON</srcid><srcstatus/><internalId>532</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swurs.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>1393</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Functionality requirements: Support for Diagnostic event reporting for Can TimeSync">
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15283</sourceline>
      <version>2</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus()
                - for failed SYNC/SYNC-FUP or OFS/OFS-OFNS or Extended OFS messages or
                - for successful SYNC-FUP or OFS-OFNS or Extended OFS messages or
                - for SYNC/SYNC-FUP or OFS/OFS-OFNS or Extended OFS reception timeout
             - If CanTSynSyncFailedReportError is configured to DET, Det_ReportError()
               shall be called with configured ErrorId
                - after 5 failed SYNC/SYNC-FUP or OFS/OFS-OFNS or Extended OFS messages or
                - for SYNC/SYNC-FUP or OFS/OFS-OFNS or Extended OFS reception timeout
          </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</srcid><srcstatus/><internalId>1395</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DET</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1394</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15305</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus()
                - for failed SYNC/SYNC-FUP or OFS/OFS-OFNS or Extended OFS messages or
                - for successful SYNC-FUP or OFS-OFNS or Extended OFS messages or
                - for SYNC/SYNC-FUP or OFS/OFS-OFNS or Extended OFS reception timeout
          </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Failure</srcid><srcstatus/><internalId>1397</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Failure</srcid><srcstatus/><internalId>1398</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Failure</srcid><srcstatus/><internalId>1399</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Success</srcid><srcstatus/><internalId>1400</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Success</srcid><srcstatus/><internalId>1401</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Success</srcid><srcstatus/><internalId>1402</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_SyncFup_ReceptionTimeout</srcid><srcstatus/><internalId>1403</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_OfsOfns_ReceptionTimeout</srcid><srcstatus/><internalId>1404</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_ReceptionTimeout</srcid><srcstatus/><internalId>1405</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1395</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DET</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15329</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DET, Det_ReportError()
               shall be called with configured ErrorId
                - after 5 failed SYNC/SYNC-FUP or OFS/OFS-OFNS or Extended OFS messages or
                - for SYNC/SYNC-FUP or OFS/OFS-OFNS or Extended OFS reception timeout
          </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Sync</srcid><srcstatus/><internalId>1406</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Ofs</srcid><srcstatus/><internalId>1407</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs</srcid><srcstatus/><internalId>1408</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DET_SyncFup_ReceptionTimeout</srcid><srcstatus/><internalId>1409</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DET_OfsOfns_ReceptionTimeout</srcid><srcstatus/><internalId>1410</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs_ReceptionTimeout</srcid><srcstatus/><internalId>1411</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1396</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Failure</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15353</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus() for failed SYNC/SYNC-FUP messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongLength</srcid><srcstatus/><internalId>465</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongTimeDomainId</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongMsgType</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongCRC</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongSC</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DEM_ExceededNanosecondsRange</srcid><srcstatus/><internalId>470</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1397</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Failure</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15374</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus() for failed OFS/OFS-OFNS messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongLength</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongTimeDomainId</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongMsgType</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongCRC</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongSC</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DEM_ExceededNanosecondsRange</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1398</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Failure</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15395</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus() for failed Extended OFS messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongLength</srcid><srcstatus/><internalId>484</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongTimeDomainId</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongMsgType</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongCRC</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongSC</srcid><srcstatus/><internalId>488</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_ExceededNanosecondsRange</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1399</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Sync_Success</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15418</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus() for successful SYNC-FUP messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncOK_DEM</srcid><srcstatus/><internalId>471</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1400</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_Ofs_Success</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15439</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus() for successful OFS-OFNS messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsOK_DEM</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1401</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_Success</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15460</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus() for successful Extended OFS messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsOK_DEM</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1402</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_SyncFup_ReceptionTimeout</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15483</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus(), in case reception timeout occured for Sync/Sync-Fup messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_1_DEM</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1403</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_OfsOfns_ReceptionTimeout</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15504</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus(), in case reception timeout occured for Ofs/Ofs-Ofns messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_2_DEM</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1404</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DEM_ExtendedOfs_ReceptionTimeout</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15525</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DEM, Dem events shall be reported via
               Dem_ReportErrorStatus(), in case reception timeout occured for Extended OFS messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_3_DEM</srcid><srcstatus/><internalId>509</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1405</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Sync</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15549</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DET, Det_ReportError()
               shall be called with configured ErrorId after 5 failed SYNC/SYNC-FUP messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongLength</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongTimeDomainId</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongMsgType</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongCRC</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongSC</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_SyncFailed_DET_ExceededNanosecondsRange</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1406</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DET_Ofs</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15570</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DET, Det_ReportError()
               shall be called with configured ErrorId after 5 failed OFS/OFS-OFNS messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongLength</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongTimeDomainId</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongMsgType</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongCRC</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongSC</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_OfsFailed_DET_ExceededNanosecondsRange</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1407</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15591</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DET, Det_ReportError()
               shall be called with configured ErrorId after 5 failed Extended OFS messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongLength</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongTimeDomainId</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongMsgType</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongCRC</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongSC</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_ExceededNanosecondsRange</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1408</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DET_SyncFup_ReceptionTimeout</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15613</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DET, Det_ReportError() shall be called
               with configured ErrorId, in case reception timeout occured for Sync/Sync-Fup messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_1_DET</srcid><srcstatus/><internalId>506</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1409</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DET_OfsOfns_ReceptionTimeout</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15634</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DET, Det_ReportError() shall be called
               with configured ErrorId, in case reception timeout occured for Ofs/Ofs-Ofns messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_2_DET</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1410</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.Func.DiagnosticEventReport_DET_ExtendedOfs_ReceptionTimeout</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15655</sourceline>
      <version>1</version>
      <description>
            The CanTSyn module is capable to report diagnostic events:
             - If CanTSynSyncFailedReportError is configured to DET, Det_ReportError() shall be called
               with configured ErrorId, in case reception timeout occured for Extended Ofs messages.
          </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_3_DET</srcid><srcstatus/><internalId>510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.Func.DiagnosticEventReport_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1411</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>CanTSyn.dsn.Mode.Initialization</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15764</sourceline>
      <version>1</version>
      <description>When CanTSyn_Init() is called, all transmit requests from CanTSyn on all CAN channels shall be enabled by setting the Mode of the controllers to CANTSYN_TX_ON.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2160</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1412</internalId></specobject>
    <specobject>
      <id>CanTSyn.dsn.PrecompileTimeConfig</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15775</sourceline>
      <version>1</version>
      <description>The CanTSyn shall provide a precompile-time configuration as defined in the Data Structure View.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/CanTSyn_Cfg.c.m4_20</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_1942</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/CanTSyn.xdm.m4_52</srcid><srcstatus/><internalId>1338</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TEST_CanTSyn_01_PreCompileConfig</srcid><srcstatus/><internalId>1750</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1413</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_Failed_NotRequested</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15786</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_FAILED , CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_NOT_REQUESTED following the sequence reset.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6726</srcid><srcstatus/><internalId>1110</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7010</srcid><srcstatus/><internalId>1153</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_037_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmVERNOTOK_VerIndOK</srcid><srcstatus/><internalId>1741</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1414</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Failed_MaxAttemptReached</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15797</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_RECOV_ERROR and IcvVerificationAttempts reaches the maximum configured value, CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_FAILED.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8865</srcid><srcstatus/><internalId>1336</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1415</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Failed_VerifNotOk</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15810</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_RECOV_ERROR and a synchronous call to Csm_MacVerify() or Csm_SignatureVerify() returns CRYPTO_E_VER_NOT_OK , CanTSynRxIcvStatus shall be updated to CANTSYN_ICV_STATE_FAILED.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8825</srcid><srcstatus/><internalId>1329</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_040_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmBUSY_CsmOK_CsmResultNotOK</srcid><srcstatus/><internalId>1744</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1416</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Failed_VerifNotOk</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15821</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_PENDING and CanTSyn_IcvVerificationIndication() returns a CRYPTO_E_VER_NOT_OK response, CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_FAILED.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8412</srcid><srcstatus/><internalId>1302</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8517</srcid><srcstatus/><internalId>1310</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_037_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmVERNOTOK_VerIndOK</srcid><srcstatus/><internalId>1741</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1417</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Failed_TimeoutExpired</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15832</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_PENDING and CanTSyn_IcvVerificationIndication() does not occur before IcvVerificationTimeout expires, CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_FAILED.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3615</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_009_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotReceived</srcid><srcstatus/><internalId>1713</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1418</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Pending</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15843</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_RECOV_ERROR and a successful asynchronous call to either Csm_MacVerify() or Csm_SignatureVerify() is made, CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_PENDING.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8832</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_005_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmBusy_CsmQueueFull_RetrySuccessful</srcid><srcstatus/><internalId>1709</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1419</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Verified</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15854</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_RECOV_ERROR and a synchronous call to Csm_MacVerify() or Csm_SignatureVerify() returns a CRYPTO_E_VER_OK response, CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_VERIFIED.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8820</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_005_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmBusy_CsmQueueFull_RetrySuccessful</srcid><srcstatus/><internalId>1709</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1420</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_RecovError</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15865</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_PENDING and either Csm_MacVerify() or Csm_SignatureVerify()  returns a recoverable error code, CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_RECOV_ERROR.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8423</srcid><srcstatus/><internalId>1305</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8528</srcid><srcstatus/><internalId>1313</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_006_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmBusy_CsmQueueFull_RetryNotSuccessful</srcid><srcstatus/><internalId>1710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1421</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_NotRequested_RecovError</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15877</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_NOT_REQUESTED and either Csm_MacVerify() or Csm_SignatureVerify() or StbM_GetRxFreshness() returns a recoverable error code, CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_RECOV_ERROR.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8611</srcid><srcstatus/><internalId>1320</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_003_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1422</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_Verified_NotRequested</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15888</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_VERIFIED , CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_NOT_REQUESTED following the message transmission or a sequence reset.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6878</srcid><srcstatus/><internalId>1140</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_038_SYNC_CRCOPTIONAL_Icv</srcid><srcstatus/><internalId>1742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1423</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Verified</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15899</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_PENDING and CanTSyn_IcvVerificationIndication() returns a CRYPTO_E_VER_OK response, CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_VERIFIED.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8407</srcid><srcstatus/><internalId>1301</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8512</srcid><srcstatus/><internalId>1309</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1424</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_Initial_NotRequested</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15911</sourceline>
      <version>1</version>
      <description>When CanTSyn_Init() is called, the CanTSynRxIcvStatus shall be set  to CANTSYN_ICV_STATE_NOT_REQUESTED, if CANTSYN_ICV_VERIFICATION_SUPPORTED == STD_ON.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2092</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2120</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1425</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynRxIcvStatus_NotRequested_Pending</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15924</sourceline>
      <version>1</version>
      <description>If CanTSynRxIcvStatus is in state CANTSYN_ICV_STATE_NOT_REQUESTED and a successful asynchronous call to Csm_MacVerify() or Csm_SignatureVerify() is executed, CanTSynRxIcvStatus  shall be updated to CANTSYN_ICV_STATE_PENDING.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8833</srcid><srcstatus/><internalId>1331</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</srcid><srcstatus/><internalId>1705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1426</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidLENGTH_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15935</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT_TIMEOUT and an OFNS message with an invalid LENGTH was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6531</srcid><srcstatus/><internalId>1048</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6585</srcid><srcstatus/><internalId>1086</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1427</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_OfsRXWAIT_NoOfnsReceived</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15947</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT_TIMEOUT and an OFNS message was not received before TIMEOUT to expire, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3512</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest09_001_SC_Wraps_Around</srcid><srcstatus/><internalId>1635</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1428</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidDOMAINID_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15959</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT_TIMEOUT and an OFNS message with an invalid TIME DOMAIN ID was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6543</srcid><srcstatus/><internalId>1058</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6597</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1429</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_NsAboveDefinedRange_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15971</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT_TIMEOUT and an OFNS message with the nanoseconds part above the defined range (CANTSYN_NANOSEC_MAX) was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7270</srcid><srcstatus/><internalId>1188</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_017_Invalid_OFNS_NanosecondsAboveDefinedRange</srcid><srcstatus/><internalId>1607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1430</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidTYPE_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15983</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT_TIMEOUT and an OFNS message with an invalid TYPE was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6532</srcid><srcstatus/><internalId>1049</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6586</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1431</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidCRC_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>15995</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT_TIMEOUT and an OFNS message with an invalid CRC was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6522</srcid><srcstatus/><internalId>1041</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6576</srcid><srcstatus/><internalId>1079</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_004_FUP_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1432</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidSC_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16007</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT_TIMEOUT and an OFNS message with an invalid SC was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7406</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1433</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16019</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT_TIMEOUT and an OFNS message was successfully received before TIMEOUT to expire, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3536</srcid><srcstatus/><internalId>759</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6932</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7268</srcid><srcstatus/><internalId>1186</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_012_RxFollowUpTimeout_AwaitedOFNS_ReceivedLater_AfterAFewMainFunctions</srcid><srcstatus/><internalId>1630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1434</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfsRXWAIT-OfnsRXWAITTIMEOUT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16031</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFSMSG_RX_WAIT and the OFS message has been successfully received, but OFNS message wasn't received immediately after OFS reception, the CanTSynRxStatus shall be updated to  CANTSYN_OFNSMSG_RX_WAIT_TIMEOUT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3511</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1435</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_NsAboveDefinedRange_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16043</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT and an OFNS message with the nanoseconds part above the defined range (CANTSYN_NANOSEC_MAX) was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7269</srcid><srcstatus/><internalId>1187</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_017_RxFollowUpTimeout_AwaitedOFNS_ReceiveOFNS_InvalidLENGTH_InvalidTYPE_InvalidSC</srcid><srcstatus/><internalId>1632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1436</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidCRC_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16056</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT and an OFNS message with an invalid CRC was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6521</srcid><srcstatus/><internalId>1040</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6575</srcid><srcstatus/><internalId>1078</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_023_FUP_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1437</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidDOMAINID_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16069</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT and an OFNS message with an invalid TIME DOMAIN ID was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6542</srcid><srcstatus/><internalId>1057</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6596</srcid><srcstatus/><internalId>1095</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_023_FUP_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1438</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16080</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT and an OFNS message was successfully received immediately after OFS, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6931</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7267</srcid><srcstatus/><internalId>1185</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_011_RxFollowUpTimeout_AwaitedOFNS_ReceivedImmediately_AfterOFS</srcid><srcstatus/><internalId>1629</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1439</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidLENGTH_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16092</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT and an OFNS message with an invalid LENGTH was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6529</srcid><srcstatus/><internalId>1046</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6583</srcid><srcstatus/><internalId>1084</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_017_RxFollowUpTimeout_AwaitedOFNS_ReceiveOFNS_InvalidLENGTH_InvalidTYPE_InvalidSC</srcid><srcstatus/><internalId>1632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1440</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidTYPE_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16105</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT and an OFNS message with an invalid TYPE was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6530</srcid><srcstatus/><internalId>1047</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6584</srcid><srcstatus/><internalId>1085</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_013_RxFollowUpTimeout_AwaitedOFNS_ReceiveOFS</srcid><srcstatus/><internalId>1631</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_017_RxFollowUpTimeout_AwaitedOFNS_ReceiveOFNS_InvalidLENGTH_InvalidTYPE_InvalidSC</srcid><srcstatus/><internalId>1632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1441</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidSC_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16117</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFNSMSG_RX_WAIT and an OFNS message with an invalid SC was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7405</srcid><srcstatus/><internalId>1208</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_017_RxFollowUpTimeout_AwaitedOFNS_ReceiveOFNS_InvalidLENGTH_InvalidTYPE_InvalidSC</srcid><srcstatus/><internalId>1632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1442</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfsRXWAIT-OfnsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16129</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFSMSG_RX_WAIT and the OFS message has been successfully received, the CanTSynRxStatus shall be updated to  CANTSYN_OFNSMSG_RX_WAIT
. 
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7149</srcid><srcstatus/><internalId>1171</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_011_RxFollowUpTimeout_AwaitedOFNS_ReceivedImmediately_AfterOFS</srcid><srcstatus/><internalId>1629</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1443</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_NsAboveDefinedRange_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16142</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFSMSG_RX_WAIT and an Extended OFS message with the nanoseconds part above the defined range (CANTSYN_NANOSEC_MAX) was received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7109</srcid><srcstatus/><internalId>1167</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_020_Invalid_OFS_extended</srcid><srcstatus/><internalId>1612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1444</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16155</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFSMSG_RX_WAIT and an OFS extended message was successfully received, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6933</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7108</srcid><srcstatus/><internalId>1166</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_019_Successful_SYNC_FUP_OFS_Extended_Reception</srcid><srcstatus/><internalId>1611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1445</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_FailedIcvAuth_OfsRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16167</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_OFSMSG_RX_WAIT and an Extended OFS message with a wrong ICV was received, or the ICV authentication failed altogether, the CanTSynRxStatus shall be updated to  CANTSYN_OFSMSG_RX_WAIT.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7011</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7110</srcid><srcstatus/><internalId>1168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_015_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1721</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1446</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_Init</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16178</sourceline>
      <version>1</version>
      <description>When CanTSyn_Init() is called, the CanTSynRxStatus shall be set  to CANTSYN_OFSMSG_RX_WAIT, if CANTSYN_RX_OFFSET_USED == STD_ON.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2292</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6930</srcid><srcstatus/><internalId>1144</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1447</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_NsAboveDefinedRange_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16189</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT_TIMEOUT and a FUP message with the nanoseconds part above the defined range (CANTSYN_NANOSEC_MAX) was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6876</srcid><srcstatus/><internalId>1138</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_022_Invalid_FUP_NanosecondsAboveDefinedRange</srcid><srcstatus/><internalId>1608</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1448</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16201</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT_TIMEOUT and a FUP message was successfully received before TIMEOUT to expire, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3361</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6875</srcid><srcstatus/><internalId>1137</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6895</srcid><srcstatus/><internalId>1143</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_009_RxFollowUpTimeout_AwaitedFUP_ReceivedLater_AfterAFewMainFunctions</srcid><srcstatus/><internalId>1626</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1449</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidSC_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16214</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT_TIMEOUT and a FUP message with an invalid SC was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7337</srcid><srcstatus/><internalId>1194</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_005_FUP_OFNS_invalid_SC</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1450</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidDOMAINID_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16226</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT_TIMEOUT and a FUP message with an invalid TIME DOMAIN ID was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6515</srcid><srcstatus/><internalId>1039</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6570</srcid><srcstatus/><internalId>1077</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1451</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidCRC_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16239</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT_TIMEOUT and a FUP message with an invalid CRC was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6494</srcid><srcstatus/><internalId>1022</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6549</srcid><srcstatus/><internalId>1060</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_004_FUP_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1452</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_SyncRXWAIT_NoFupReceived</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16251</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT_TIMEOUT and a FUP message was not received before TIMEOUT to expire, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3323</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest09_001_SC_Wraps_Around</srcid><srcstatus/><internalId>1635</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1453</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidLENGTH_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16263</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT_TIMEOUT and a FUP message with an invalid LENGTH was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6503</srcid><srcstatus/><internalId>1029</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6558</srcid><srcstatus/><internalId>1067</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1454</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_FailedIcvAuth_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16275</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT_TIMEOUT and a FUP message with a wrong ICV was received or the ICV authentication failed altogether, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6727</srcid><srcstatus/><internalId>1111</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6877</srcid><srcstatus/><internalId>1139</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</srcid><srcstatus/><internalId>1708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1455</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidTYPE_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16287</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT_TIMEOUT and a FUP message with an invalid TYPE was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6504</srcid><srcstatus/><internalId>1030</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6559</srcid><srcstatus/><internalId>1068</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1456</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_SyncRXWAIT-FupRXWAITTIMEOUT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16299</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_SYNCMSG_RX_WAIT and the SYNC message has been successfully received, but FUP message wasn't received immediately after SYNC reception, the CanTSynRxStatus shall be updated to  CANTSYN_FUPMSG_RX_WAIT_TIMEOUT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3324</srcid><srcstatus/><internalId>747</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1457</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidLENGTH_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16311</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT and a FUP message with an invalid LENGTH was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6501</srcid><srcstatus/><internalId>1027</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6556</srcid><srcstatus/><internalId>1065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_016_RxFollowUpTimeout_AwaitedFUP_ReceiveFUP_InvalidLENGTH_InvalidTYPE_InvalidSC</srcid><srcstatus/><internalId>1628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1458</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_NsAboveDefinedRange_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16323</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT and a FUP message with the nanoseconds part above the defined range (CANTSYN_NANOSEC_MAX) was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6874</srcid><srcstatus/><internalId>1136</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_016_RxFollowUpTimeout_AwaitedFUP_ReceiveFUP_InvalidLENGTH_InvalidTYPE_InvalidSC</srcid><srcstatus/><internalId>1628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1459</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidSC_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16335</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT and a FUP message with an invalid SC was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7336</srcid><srcstatus/><internalId>1193</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_016_RxFollowUpTimeout_AwaitedFUP_ReceiveFUP_InvalidLENGTH_InvalidTYPE_InvalidSC</srcid><srcstatus/><internalId>1628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1460</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidDOMAINID_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16346</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT and a FUP message with an invalid TIME DOMAIN ID was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6514</srcid><srcstatus/><internalId>1038</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6569</srcid><srcstatus/><internalId>1076</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_023_FUP_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1461</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidCRC_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16358</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT and a FUP message with an invalid CRC was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6493</srcid><srcstatus/><internalId>1021</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6548</srcid><srcstatus/><internalId>1059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest06_023_FUP_OFNS_invalid_CRC</srcid><srcstatus/><internalId>1609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1462</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidTYPE_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16371</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT and a FUP message with an invalid TYPE was received, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6502</srcid><srcstatus/><internalId>1028</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6557</srcid><srcstatus/><internalId>1066</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_010_RxFollowUpTimeout_AwaitedFUP_ReceiveSYNC</srcid><srcstatus/><internalId>1627</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest08_016_RxFollowUpTimeout_AwaitedFUP_ReceiveFUP_InvalidLENGTH_InvalidTYPE_InvalidSC</srcid><srcstatus/><internalId>1628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1463</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_SyncRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16382</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_FUPMSG_RX_WAIT and a FUP message was successfully received immediately after SYNC, the CanTSynRxStatus shall be updated to  CANTSYN_SYNCMSG_RX_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6873</srcid><srcstatus/><internalId>1135</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6894</srcid><srcstatus/><internalId>1142</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_008_RxFollowUpTimeout_AwaitedFUP_ReceivedImmediately_AfterSYNC</srcid><srcstatus/><internalId>1625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1464</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_SyncRXWAIT-FupRXWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16394</sourceline>
      <version>1</version>
      <description>If CanTSynRxStatus is in state CANTSYN_SYNCMSG_RX_WAIT and the SYNC message has been successfully received, the CanTSynRxStatus shall be updated to  CANTSYN_FUPMSG_RX_WAIT. 
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6642</srcid><srcstatus/><internalId>1100</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_008_RxFollowUpTimeout_AwaitedFUP_ReceivedImmediately_AfterSYNC</srcid><srcstatus/><internalId>1625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1465</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_Init</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16406</sourceline>
      <version>1</version>
      <description>When CanTSyn_Init() is called, the CanTSynRxStatus shall be set  to CANTSYN_SYNCMSG_RX_WAIT, if CANTSYN_RX_SYNC_USED == STD_ON.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2254</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_6893</srcid><srcstatus/><internalId>1141</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest08_001_Successful_SYNC_FUP_OFS_OFNS_Reception</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1466</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynTxIcvStatus_Failed_NotRequested</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16418</sourceline>
      <version>1</version>
      <description>If CanTSynTxIcvStatus is in state CANTSYN_ICV_STATE_FAILED, CanTSynTxIcvStatus  shall be updated to CANTSYN_ICV_STATE_NOT_REQUESTED following the sending of the message or a sequence reset.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4963</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_003_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1682</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1467</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Failed_TimeoutExpired</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16429</sourceline>
      <version>1</version>
      <description>If CanTSynTxIcvStatus is in state CANTSYN_ICV_STATE_PENDING and IcvGenerationTimeout expires before CanTSyn_IcvGenerationIndication() is called by Csm, CanTSynTxIcvStatus shall be updated to CANTSYN_ICV_STATE_FAILED.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5166</srcid><srcstatus/><internalId>916</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_004_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</srcid><srcstatus/><internalId>1683</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1468</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Failed_GenNotOk</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16440</sourceline>
      <version>1</version>
      <description>If CanTSynTxIcvStatus is in state CANTSYN_ICV_STATE_PENDING and CanTSyn_IcvGenerationIndication() is called by Csm with result E_NOT_OK, CanTSynTxIcvStatus  shall be updated to CANTSYN_ICV_STATE_FAILED.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7717</srcid><srcstatus/><internalId>1231</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7805</srcid><srcstatus/><internalId>1235</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_007_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</srcid><srcstatus/><internalId>1686</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1469</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynTxIcvStatus_Received_NotRequested</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16452</sourceline>
      <version>1</version>
      <description>If CanTSynTxIcvStatus is in state CANTSYN_ICV_STATE_RECEIVED, CanTSynTxIcvStatus  shall be updated to CANTSYN_ICV_STATE_NOT_REQUESTED following the sending of the message or a sequence reset.


</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4241</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4964</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1470</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Received</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16466</sourceline>
      <version>1</version>
      <description>If CanTSynTxIcvStatus is in state CANTSYN_ICV_STATE_PENDING and CanTSyn_IcvGenerationIndication() is called by Csm with result E_OK before IcvGenerationTimeout expires, CanTSynTxIcvStatus  shall be updated to CANTSYN_ICV_STATE_RECEIVED.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7711</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_7799</srcid><srcstatus/><internalId>1234</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1471</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynTxIcvStatus_NotRequested_Pending</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16478</sourceline>
      <version>1</version>
      <description>If CanTSynTxIcvStatus is in state CANTSYN_ICV_STATE_NOT_REQUESTED and a successful asynchronous call to Csm_MacGenerate() or Csm_SignatureGenerate() is executed, CanTSynTxIcvStatus  shall be updated to CANTSYN_ICV_STATE_PENDING.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_8175</srcid><srcstatus/><internalId>1274</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1472</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.CanTSynTxIcvStatus_Initial_NotRequested</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16490</sourceline>
      <version>1</version>
      <description>When CanTSyn_Init() is called, the CanTSynTxIcvStatus shall be set  to CANTSYN_ICV_STATE_NOT_REQUESTED, if CANTSYN_ICV_GENERATION_SUPPORTED == STD_ON.


</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2039</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_2060</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1473</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsWAITTXCONF_OfsSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16504</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_OFNSMSG_WAIT_TXCONF and the CanTSy_TxConformation() for that transmitted OFNS message is received in time (before 3s timeout elapses) and with result=E_OK, the CanTSynTxStatus shall be updated to  CANTSYN_OFSMSG_SEND_WAIT.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5393</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_009_OFS_OFNS_CyclicTransmission</srcid><srcstatus/><internalId>1575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1474</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT-OfnsWAITTXCONF</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16515</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_OFNSMSG_SEND_WAIT and the OFNS message has been successfully transmited, the CanTSynTxStatus shall be updated to  CANTSYN_OFNSMSG_WAIT_TXCONF.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4178</srcid><srcstatus/><internalId>827</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1475</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT_OfsSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16526</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_OFNSMSG_SEND_WAIT and the OFNS message has not been successfully transmited, the CanTSynTxStatus shall be updated to  CANTSYN_OFSMSG_SEND_WAIT. 

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4561</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4589</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_007_CanIf_Transmit_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1476</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsWAITTXCONF-OfnsSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16539</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_OFSMSG_WAIT_TXCONF and the CanTSyn_TxConfirmation() for the transmitted OFS message is received in time (before 3s timeout elapses) with result=E_OK, the CanTSynTxStatus shall be updated to  CANTSYN_OFNSMSG_SEND_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5372</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1477</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsWAITTXCONF_OfsSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16551</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_OFSMSG_WAIT_TXCONF and the CanTSyn_TxConfirmation() for the transmitted OFS message is not received in time (after 3s timeout elapses), the CanTSynTxStatus shall be updated to  CANTSYN_OFSMSG_SEND_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3058</srcid><srcstatus/><internalId>728</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_SC_WrapsAround_15To0</srcid><srcstatus/><internalId>1571</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1478</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsExtended.CanTSynTxStatus_OfsWAITTXCONF_OfsSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16563</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_OFSMSG_WAIT_TXCONF and the CanTSy_TxConfirmation() for that transmitted OFS extended message is received in time (before 3s timeout elapses) and with result=E_OK, the CanTSynTxStatus shall be updated to  CANTSYN_OFSMSG_SEND_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5354</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_011_MasterSendsOFS_TxConfirmationArrives_Extended</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1479</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsSENDWAIT-OfsWAITTXCONF</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16575</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_OFSMSG_SEND_WAIT and the OFS message has been successfully transmited, the CanTSynTxStatus shall be updated to  CANTSYN_OFSMSG_WAIT_TXCONF.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4171</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1480</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupWAITTXCONF_SyncSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16587</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_FUPMSG_WAIT_TXCONF and the CanTSyn_TxConfirmation() for the transmitted FUP message is received in time (before 3s timeout elapses) and with result=E_OK, the CanTSynTxStatus shall be updated to  CANTSYN_SYNCMSG_SEND_WAIT.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5302</srcid><srcstatus/><internalId>941</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_006_MasterSendsSyncFrames_TxConfirmation_After3s_Result_E_NOT_OK</srcid><srcstatus/><internalId>1550</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1481</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-FupWAITTXCONF</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16600</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_FUPMSG_SEND_WAIT and the FUP message has been successfully transmited, the CanTSynTxStatus shall be updated to  CANTSYN_FUPMSG_WAIT_TXCONF. 
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4968</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1482</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-SyncSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16612</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_FUPMSG_SEND_WAIT and the FUP message has not been successfully transmited, the CanTSynTxStatus shall be updated to  CANTSYN_SYNCMSG_SEND_WAIT. 
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5199</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_013_CanIf_Transmit_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1557</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_022_MasterSendsSync_TransmitionRetriesLimit</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1483</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncWAITTXCONF-FupSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16624</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_SYNCMSG_WAIT_TXCONF and the CanTSyn_TxConfirmation() for the transmitted SYNC message is received in time (before 3s timeout elapses) with result=E_OK, the CanTSynTxStatus shall be updated to  CANTSYN_FUPMSG_SEND_WAIT.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5266</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1484</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncWAITTXCONF_SyncSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16637</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_SYNCMSG_WAIT_TXCONF and the CanTSyn_TxConfirmation() for the transmitted SYNC message is not received in time (after 3s timeout elapses), the CanTSynTxStatus shall be updated to  CANTSYN_SYNCMSG_SEND_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3082</srcid><srcstatus/><internalId>733</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_009_MasterSendsSyncFramesPeriodically_SC_WrapsAround</srcid><srcstatus/><internalId>1553</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1485</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncWAITTXCONF</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16649</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_SYNCMSG_SEND_WAIT and the SYNC message has been successfully transmited, the CanTSynTxStatus shall be updated to  CANTSYN_SYNCMSG_WAIT_TXCONF. </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4715</srcid><srcstatus/><internalId>880</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1486</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsSENDWAIT-OfsSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16660</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_OFSMSG_SEND_WAIT and the OFS message has not been successfully transmited, the CanTSynTxStatus shall be updated to  CANTSYN_OFSMSG_SEND_WAIT.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_4560</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_007_CanIf_Transmit_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1487</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_Init</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16672</sourceline>
      <version>1</version>
      <description>After CanTSyn_Init() is called, the CanTSynTxStatus shall be set  to CANTSYN_OFSMSG_SEND_WAIT, before a OFS-OFNS sequence to be transmitted.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3919</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1488</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncSENDWAIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16685</sourceline>
      <version>1</version>
      <description>If CanTSynTxStatus is in state CANTSYN_SYNCMSG_SEND_WAIT and the SYNC message has not been successfully transmited, the CanTSynTxStatus shall be updated to  CANTSYN_SYNCMSG_SEND_WAIT. 

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_5142</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_013_CanIf_Transmit_Returns_E_NOT_OK</srcid><srcstatus/><internalId>1557</internalId></linkedfrom><linkedfrom><srcid>CanTSyn_ConTest01_022_MasterSendsSync_TransmitionRetriesLimit</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1489</internalId></specobject>
    <specobject>
      <id>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_Init</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/doc/project/design/pdf/CanTSyn_Design-profiled.xml</sourcefile>
      <sourceline>16698</sourceline>
      <version>1</version>
      <description>After CanTSyn_Init() is called, the CanTSynTxStatus shall be set  to CANTSYN_SYNCMSG_SEND_WAIT, before a SYNC-FUP sequence to be transmitted.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CanTSyn.c.m4_3889</srcid><srcstatus/><internalId>798</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1490</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CanTSyn_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/build/reqm/common_req/CanTSyn_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(CanTSyn.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1491</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest01_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_01_TX_DET_ON_noCRC_SYNC_FUP_TimeValid/source/application/CanTSyn_ComTest_01_TX_DET_ON_noCRC_SYNC_FUP_TimeValid.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1492</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest02_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_02_TX_DET_OFF_noCRC_SYNC_FUP/source/application/CanTSyn_ComTest02.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1493</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest03_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_03_TX_DET_OFF_CRC_SYNC_FUP/source/application/CanTSyn_ComTest03.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1494</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest04_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_04_TX_DET_ON_SYNC_FUP_CRC_OFS_OFNS_CRC_TimeValid/source/application/CanTSyn_ComTest_04_TX_DET_ON_SYNC_FUP_CRC_OFS_OFNS_CRC_TimeValid.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1495</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest05_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_05_TX_DET_ON_SYNC_FUP_noCRC_OFS_OFNS_noCRC/source/application/CanTSyn_ComTest05.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1496</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest06_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_06_RX_DET_OFF_SYNC_FUP_CRCVALIDATED_TimeValid/source/application/CanTSyn_ComTest_06_RX_DET_OFF_SYNC_FUP_CRCVALIDATED_TimeValid.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1497</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest07_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_07_RX_DET_OFF_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ComTest07.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1498</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest08_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_08_RX_DET_OFF_SYNC_FUP_CRCIGNORED/source/application/CanTSyn_ComTest08.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1499</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest09_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_09_RX_DET_OFF_OFS_OFNS_CRCIGNORED/source/application/CanTSyn_ComTest09.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1500</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest10_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_10_RX_DET_ON_MASTER_SLAVE_TimeValid/source/application/CanTSyn_ComTest_10_RX_DET_ON_MASTER_SLAVE_TimeValid.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1501</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest_12_HandleIdCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_11_HandleIdCheck/source/application/CanTSyn_ComTest_11_HandleIdCheck.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the handle ID wizard creates a valid configuration out of
    an invalid one.
    Config parameters of interest:
      CanTSynGlobalTimeMasterConfirmationHandleId
      CanTSynGlobalTimeSlaveHandleId
  
Test Object: None.
Test Precondition: 
    None.
  
Test Execution: 
    Ts5 build environment steps:
        The handle ID wizard is started by command line via the Merged_Makefile.mak.
        The module configuration generator provides the generated handle ids
        in CanTp_SymbolicNames_PBcfg.h which is checked against the reference.
        Module code is generated, linked, and compiled with this file.

    Check that the parameters are enumerated in the following order:
    01: VP(CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeMasterConfirmationHandleIds.0based.consecutive.vc01, CanTSyn.ECUC_CanTSyn_00008.vc01):
        CanTSynGlobalTimeMasterConfirmationHandleIds are enumerated starting with 0.
    02: VP(CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeSlaveHandleId.0based.consecutive.vc01, CanTSyn.ECUC_CanTSyn_00013.vc01):
        CanTSynGlobalTimeSlaveHandleIds are enumerated starting with 0.
  
Test Input: 
     Configuration holds incorrectly assigned handle IDs (non zero-based or non-dense or non-unique)
     Here, all are set to -1.
  
Test Output: 
    CanTSynGlobalTimeMasterConfirmationHandleIds:
      1. CanTSynConf_CanTSynGlobalTimeMasterPdu_CanTSynGlobalTimeDomain_0 shall have value 0
      2. CanTSynConf_CanTSynGlobalTimeMasterPdu_CanTSynGlobalTimeDomain_2 shall have value 1
    CanTSynGlobalTimeSlaveHandleIds:
      1. CanTSynConf_CanTSynGlobalTimeSlavePdu_CanTSynGlobalTimeDomain_1 shall have value 0
      2. CanTSynConf_CanTSynGlobalTimeSlavePdu_CanTSynGlobalTimeDomain_3 shall have value 1
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeMasterConfirmationHandleIds.0based.consecutive.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.HandleIdGenerator.CanTSynGlobalTimeSlaveHandleId.0based.consecutive.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00008.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00013.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1502</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest_13_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_12_Multicore/source/application/CanTSyn_ComTest_12_Multicore.c.m4</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that the source code compiles in the following scenarious:
    p0 - multicore enabled and only sync master configured
    p1 - multicore enalbed and only sync and offset master configured
    p2 - multicore enabled and only sync and offset slave configured
    p3 - multicore enabled and only sync slave configured
    p4 - multicore disabled and sync, offset masters and sync, offset slaves are configured
  
Test Object: 
    Source code compiles when CanTSynMultiCoreSupport is enabled or disabled and sync/ofs master/slave time domains are configured.
  
Test Precondition: 
    - at least 1 time domain shall be configured
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.MultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMasterDomainPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlaveDomainPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.MainFunctions_NormalHandling_Multicore_OFF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_MulticoreHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_MulticoreHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1503</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ComTest_13_OnlySyncM_OnlySyncS_DET_OFF_IDSM_OFF</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_ComTest_13_SecureTime_OnlySyncM_OnlySyncS_DET_IDSM/source/application/CanTSyn_ComTest_13_SecureTime_OnlySyncM_OnlySyncS_DET_IDSM.c.m4</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.ECUC_CanTSyn_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1504</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_NO_REFERENCE_FROM_CANIF</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_01_Tx_UnreferencedPduFromCanIf/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case CanIf module does not reference the PDU.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanIf module does not reference the PDU

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that CanIf module does not reference the PDU.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1505</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_RX_NO_REFERENCE_FROM_CANIF</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_02_Rx_UnreferencedPduFromCanIf/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case CanIf module does not reference the PDU.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanIf module does not reference the PDU

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that CanIf module does not reference the PDU.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1506</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_01002_RX_MISSING_REFERENCE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_02_Rx_UnreferencedPduFromCanIf/source/application/testspec.h</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case of unexisting reference.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanIf and EcuC module do not reference the PDU.

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that a valid reference is required.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1507</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_GAPS_BETWEEN_SYNC_DATAIDs</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_03_Gaps_Between_Sync_Fup_Ofs_Ofns_DataIds/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
   This test shall verify that the generator issues an error in case:
    * SYNC DataIds are not consecutive.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * Gaps between SYNC DataIds

Test Execution: 
    VP(CanTSyn.ECUC_CanTSyn_00029): CanTSyn generator shall issue an error which states that SYNC DataIds shall be 0 based and consecutive.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1508</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_01002_GAPS_BETWEEN_FUP_DATAIDs</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_03_Gaps_Between_Sync_Fup_Ofs_Ofns_DataIds/source/application/testspec.h</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case:
    * FUP DataIds are not consecutive.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * Gaps between FUP DataIds

Test Execution: 
    VP(CanTSyn.ECUC_CanTSyn_00032): CanTSyn generator shall issue an error which states that FUP DataIds shall be 0 based and consecutive.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1509</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_01003_GAPS_BETWEEN_OFS_DATAIDs</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_03_Gaps_Between_Sync_Fup_Ofs_Ofns_DataIds/source/application/testspec.h</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case:
    * OFS DataIds are not consecutive.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * Gaps between OFS DataIds

Test Execution: 
    VP(CanTSyn.ECUC_CanTSyn_00035): CanTSyn generator shall issue an error which states that OFS DataIds shall be 0 based and consecutive.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1510</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_01004_GAPS_BETWEEN_OFNS_DATAIDs</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_03_Gaps_Between_Sync_Fup_Ofs_Ofns_DataIds/source/application/testspec.h</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case:
    * OFNS DataIds are not consecutive.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * Gaps between OFNS DataIds

Test Execution: 
    VP(CanTSyn.ECUC_CanTSyn_00038): CanTSyn generator shall issue an error which states that OFNS DataIds shall be 0 based and consecutive.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1511</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_TimerDependencies</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_04_Tx_Invalid_TxFollowUp_TxPeriod/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall verify that the generator issues an error in case that:
  * CanTSynGlobalTimeDebounceTime is smaller than CanTSynMainFunctionPeriod
  * CanTSynGlobalTimeTxPeriod is smaller than CanTSynMainFunctionPeriod
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    *CanTSynGlobalTimeDebounceTime is smaller than CanTSynMainFunctionPeriod
    *CanTSynGlobalTimeTxPeriod is smaller than CanTSynMainFunctionPeriod

Test Execution: 
    VP(CanTSyn.ECUC_CanTSyn_00045): CanTSyn generator shall issue an error which states that
      CanTSynGlobalTimeDebounceTime shall be bigger than CanTSynMainFunctionPeriod
    VP(CanTSyn.ECUC_CanTSyn_00045): CanTSyn generator shall issue an error which states that
      CanTSynGlobalTimeTxPeriod shall be bigger than CanTSynMainFunctionPeriod

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1512</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_RX_FollowUp_SmallerThan_MainFunctionPeriod</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_06_Rx_FollowUpTimeout_SmallerThan_MainFunctionPeriod/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case CanTSynGlobalTimeFollowUpTimeout is smaller than MainFunctionPeriod.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeFollowUpTimeout smaller than MainFunctionPeriod

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that CanTSynGlobalTimeFollowUpTimeout shall be bigger than MainFunctionPeriod

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00006_CanTSynGlobalTimeFollowUpTimeout_NotAllowedToBeZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1513</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_INVALID_STBM_REFERENCE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_07_Tx_Invalid_StbM_Reference/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case an invalid StbM reference is used.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSyn module uses an invalid StbM reference

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that an invalid StbM reference is used.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1514</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_08_TX_RX_WRONG_HANDLEIDs</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_08_Tx_Rx_Wrong_HandleIds/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case of invalid CanTSynGlobalTimeMasterConfirmationHandleIds and CanTSynGlobalTimeSlaveHandleIds.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSyn module uses invalid PduHandleIds

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that an invalid PduHandleId is used.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.WrongPduHandleIds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1515</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_CRC_SUPPORTED_SYNC_FUP_OFS_OFNS_DISABLED</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_09_CRC_SUPPORTED_DataIDLists_Disabled/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case CRC is supported and:
    * SYNC DataIds and FUP DataIds are disabled.
    * OFS DataIds and OFNS DataIds are disabled.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CRC SUPPORTED
    * SYNC and FUP DataIDLists disabled
    * OFS and OFNS DataIDLists disabled

Test Execution: 
    VP(CanTSyn.EB.Xdm.CRC_Supported_DataIDLists_Disabled): CanTSyn generator shall notify user that SYNC
      and FUP DataIdLists must be configured, if CRC is supported.
    VP(CanTSyn.EB.Xdm.CRC_Supported_DataIDLists_Disabled): CanTSyn generator shall notify user that OFS
      and OFNS DataIdLists must be configured, if CRC is supported.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CRC_Supported_DataIDLists_Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1516</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_CRC_VALIDATED_SYNC_FUP_OFS_OFNS_DISABLED</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_10_CRC_VALIDATED_DataIdLists_Disabled/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case CRC shall be validated on reception path
    and:
    * SYNC DataIds and FUP DataIds are disabled.
    * OFS DataIds and OFNS DataIds are disabled.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CRC VALIDATED
    * SYNC and FUP DataIDLists disabled
    * OFS and OFNS DataIDLists disabled

Test Execution: 
    VP(CanTSyn.EB.Xdm.CRC_Supported_DataIDLists_Disabled): CanTSyn generator shall notify user that SYNC
      and FUP DataIdLists must be configured, if CRC is supported.
    VP(CanTSyn.EB.Xdm.CRC_Supported_DataIDLists_Disabled): CanTSyn generator shall notify user that OFS
      and OFNS DataIdLists must be configured, if CRC is supported.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CRC_Supported_DataIDLists_Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1517</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_INVALID_CONFIGURATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_11_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in the case in which
    CanTSynImmediateTimeSync is FALSE and CanTSynGlobalTimeTxPeriod is ZERO.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeDomain_0/CanTSynGlobalTimeMaster/
    CanTSynImmediateTimeSync is disabled;
  - CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeDomain_0/CanTSynGlobalTimeMaster/
    CanTSynGlobalTimeTxPeriod is configured to 0

Test Execution: 
    VP(CanTSyn.EB.Xdm.InvalidConfiguration):
    CanTSyn generator shall issue the following error message:
    Invalid configuration for the parameters CanTSynImmediateTimeSync and CanTSynGlobalTimeTxPeriod.
    CanTSynImmediateTimeSync must be enabled or CanTSynGlobalimeTxPeriod must be unequal to 0.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.InvalidConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1518</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_ErrorReportInvalidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_13_ErrorReportInvalidConfig/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case CANTSYN_E_SYNC_FAILED references an
    invalid path.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CANTSYN_E_SYNC_FAILED references an invalid path

Test Execution: 
    VP: CanTSyn generator shall issue an error about the invalid path of CANTSYN_E_SYNC_FAILED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_InvalidDemEvent_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1519</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_ErrorReportDetDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_14_ErrorReportDetDisabled/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues a warning if CanTSynSyncFailedReportError
    is set to DET but CanTSynDevErrorDetect is disabled, a warning if CanTSynSyncFailedReportErrorDetErrorId
    has an invalid value and a warning if CanTSynReceiveSyncPairsPeriod is less than CanTSynGlobalTimeFollowUpTimeout.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynSyncFailedReportError is set to DET and CanTSynDevErrorDetect is disabled
    * CanTSynSyncFailedReportErrorDetErrorId is set to 6
    * CanTSynReceiveSyncPairsPeriod is set to a value less than CanTSynGlobalTimeFollowUpTimeout

Test Execution: 
    VP: CanTSyn generator shall issue a warning regarding reporting to DET but CanTSynDevErrorDetect is disabled
    VP: CanTSyn generator shall issue a warning regarding the invalid value of CanTSynSyncFailedReportErrorDetErrorId
    VP: CanTSyn generator shall issue a warning regarding the value of CanTSynReceiveSyncPairsPeriod

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_DetDisabled_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_InvalidErrorId_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_PeriodLTFollowUpTimeout_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1520</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_01001_ErrorReportNoDemEvent</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_15_ErrorReportNoDemEvent/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues a warning in case no CANTSYN_E_SYNC_FAILED is enabled
    while CanTSynSyncFailedReportError is set to DEM.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CANTSYN_E_SYNC_FAILED is disabled and CanTSynSyncFailedReportError is set to DEM

Test Execution: 
    VP: CanTSyn generator shall issue an error about no CANTSYN_E_SYNC_FAILED being enabled

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.XdmCheck_DemEnabledNoDemEvent_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1521</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_016001_CanTSynMultiCoreSupport_Enabled_CanIfMultiCoreSupport_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_16_Tx_Rx_Multicore/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynMultiCoreSupport is enabled, but CanIfMultiCoreSupport is disabled.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynMultiCoreSupport is ON
    * CanIfMultiCoreSupport is OFF

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "CanTSynMultiCoreSupport must have the same value as CanIfMultiCoreSupport!"

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.CanTSynMultiCoreSupport.Enabled.CanIfMultiCoreSupport.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1522</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_016002_EcuCTxPdu_And_CanTSynGlobalTimeMaster_MappedToDifferentPartitions_DedicatedPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_16_Tx_Rx_Multicore/source/application/testspec.h</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    EcuCTxPdu and CanTSynGlobalTimeMaster are mapped to different partitions (EcucPduDedicatedPartitionRef used).
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynMultiCoreSupport is ON
    * CanIfMultiCoreSupport is ON
    * CanTSynGlobalTimeMaster linked to EcuCPartition 0
    * EcuCTxPdu0 has EcucPduDedicatedPartitionRef linked to EcuCPartition 1

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The EcuCTxPdu named [!"$EcuCPduName"!] has EcucPduDedicatedPartitionRef configured to a diferent partition than CanTSynGlobalTimeMaster!"

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCTxPdu.And.CanTSynGlobalTimeMaster.MappedTo.DifferentPartitions.DedicatedPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1523</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_016003_EcuCTxPdu_And_CanTSynGlobalTimeMaster_MappedToDifferentPartitions_DefaultPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_16_Tx_Rx_Multicore/source/application/testspec.h</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    EcuCTxPdu and CanTSynGlobalTimeMaster are mapped to different partitions. (EcucPduDefaultPartitionRef used).
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynMultiCoreSupport is ON
    * CanIfMultiCoreSupport is ON
    * CanTSynGlobalTimeMaster linked to EcuCPartition 0
    * EcuCTxPdu0 has EcucPduDefaultPartitionRef linked to EcuCPartition 1

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The EcuCTxPdu named [!"$EcuCPduName"!] has EcucPduDefaultPartitionRef configured to a diferent partition than CanTSynGlobalTimeMaster!"

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCTxPdu.And.CanTSynGlobalTimeMaster.MappedTo.DifferentPartitions.DefaultPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1524</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_016004_CanTSynGlobalTimeMaster_MappedTo_NoPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_16_Tx_Rx_Multicore/source/application/testspec.h</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    EcuCTxPdu and CanTSynGlobalTimeMaster are mapped to different partitions. (EcucPduDedicatedPartitionRef and EcucPduDefaultPartitionRef not used)
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynMultiCoreSupport is ON
    * CanIfMultiCoreSupport is ON
    * CanTSynGlobalTimeMaster linked to EcuCPartition 0
    * EcuCTxPdu0 has no EcucPduDedicatedPartitionRef or EcucPduDefaultPartitionRef configured

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The EcuCTxPdu named [!"$EcuCPduName"!] has no EcucPduDedicatedPartitionRef or EcucPduDefaultPartitionRef configured!"

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCTxPdu.MappedTo.NoPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1525</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_016005_EcuCRxPdu_And_CanTSynGlobalTimeSlave_MappedToDifferentPartitions_DedicatedPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_16_Tx_Rx_Multicore/source/application/testspec.h</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    EcuCRxPdu and CanTSynGlobalTimeSlave are mapped to different partitions. (EcucPduDedicatedPartitionRef used).
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynMultiCoreSupport is ON
    * CanIfMultiCoreSupport is ON
    * CanTSynGlobalTimeSlave linked to EcuCPartition 1
    * EcuCRxPdu0 has EcucPduDedicatedPartitionRef linked to EcuCPartition 0

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The EcuCRxPdu named [!"$EcuCPduName"!] has EcucPduDedicatedPartitionRef configured to a diferent partition than CanTSynGlobalTimeSlave!"

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCRxPdu.And.CanTSynGlobalTimeSlave.MappedTo.DifferentPartitions.DedicatedPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1526</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_016006_EcuCRxPdu_And_CanTSynGlobalTimeSlave_MappedToDifferentPartitions_DefaultPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_16_Tx_Rx_Multicore/source/application/testspec.h</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    EcuCRxPdu and CanTSynGlobalTimeSlave are mapped to different partitions. (EcucPduDefaultPartitionRef used).
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynMultiCoreSupport is ON
    * CanIfMultiCoreSupport is ON
    * CanTSynGlobalTimeSlave linked to EcuCPartition 1
    * EcuCRxPdu0 has EcucPduDefaultPartitionRef linked to EcuCPartition 0

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The EcuCRxPdu named [!"$EcuCPduName"!] has EcucPduDefaultPartitionRef configured to a diferent partition than CanTSynGlobalTimeSlave!"

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCRxPdu.And.CanTSynGlobalTimeSlave.MappedTo.DifferentPartitions.DefaultPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1527</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_016007_CanTSynGlobalTimeSlave_MappedTo_NoPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_16_Tx_Rx_Multicore/source/application/testspec.h</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    EcuCRxPdu and CanTSynGlobalTimeSlave are mapped to different partitions. (EcucPduDedicatedPartitionRef and EcucPduDefaultPartitionRef not used)
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynMultiCoreSupport is ON
    * CanIfMultiCoreSupport is ON
    * CanTSynGlobalTimeSlave linked to EcuCPartition 1
    * EcuCRxPdu0 has no EcucPduDedicatedPartitionRef or EcucPduDefaultPartitionRef configured

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The EcuCRxPdu named [!"$EcuCPduName"!] has no EcucPduDedicatedPartitionRef or EcucPduDefaultPartitionRef configured!"

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.EcuCRxPdu.MappedTo.NoPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1528</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_017001_MultiCoreSupport_Disabled_PartitionRef_Used</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_17_Tx_Rx_CanTSynMulticore_OFF_CanTSynPartitionRef_Used/source/application/testspec.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynMultiCoreSupport is disabled, but at least one CanTSynGlobalTimeMasterDomainPartitionRef
    or CanTSynGlobalTimeSlaveDomainPartitionRef are configured.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynMultiCoreSupport is OFF
    * CanTSynGlobalTimeMasterDomainPartitionRef or CanTSynGlobalTimeSlaveDomainPartitionRef configured

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "CanTSynMultiCoreSupport shall be enabled, if there is at least one CanTSynGlobalTimeMasterDomainPartitionRef or CanTSynGlobalTimeSlaveDomainPartitionRef configured!"

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.CanTSynMultiCoreSupport.Disabled.TimeDomainPartitionRef.Used</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1529</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CANTSYN_GEN_018001_SecureTime_TxIcvSecured_ICV_SUPPORTED_ExtendedMsgFormat_FALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynGlobalTimeTxIcvSecured is set to ICV_SUPPORTED and CanTSynUseExtendedMsgFormat is set to FALSE.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeTxIcvSecured = ICV_SUPPORTED
    * CanTSynUseExtendedMsgFormat = FALSE

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "Extended message format must be enabled for using the Tx security feature."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.CanTSynIcvGenerationSupport.Enabled.ExtendedMessageUsage.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1530</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018002_SecureTime_RxIcvSecured_ICV_VERIFIED_ExtendedMsgFormat_FALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynGlobalTimeRxIcvSecured is set to ICV_VERIFIED and CanTSynUseExtendedMsgFormat is set to FALSE.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeRxIcvSecured = ICV_VERIFIED
    * CanTSynUseExtendedMsgFormat = FALSE

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "Extended message format must be enabled for using the Rx security feature."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.CanTSynIcvVerificationSupport.Enabled.ExtendedMessageUsage.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1531</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018003_SecureTime_FupPayloadLength_FVLength_IcvLength_ExceedFrameLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynIcvTxLength + StbMFreshnessValueTruncLength + 10 (FUP payload length) exceeds the maximum frame length of 64 bytes.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeTxIcvSecured = ICV_SUPPORTED
    * CanTSynUseExtendedMsgFormat = TRUE
    * 10 (FUP payload length) + ICVL + FVL &gt; 64 

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The maximum frame length of 64 bytes is exceeded. The Tx Icv length combined with the freshness value length must not exceed 54 bytes for a FUP frame."

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.SyncFup.FVLengthAndIcvLengthExceedFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1532</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018004_SecureTime_ExtOfsPayloadLength_FVLength_IcvLength_ExceedFrameLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynIcvTxLength + StbMFreshnessValueTruncLength + 18 (ExtOFS payload length) exceeds the maximum frame length of 64 bytes.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeTxIcvSecured = ICV_SUPPORTED
    * CanTSynUseExtendedMsgFormat = TRUE
    * 18 (Ext OFS payload length) + ICVL + FVL &gt; 64 

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The maximum frame length of 64 bytes is exceeded. The Tx Icv length combined with the freshness value length must not exceed 46 bytes for a OFS frame."

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.ExtOFS.FVLengthAndIcvLengthExceedFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1533</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018005_SecureTime_ExtOfsPayloadLength_NoFV_IcvLength_ExceedFrameLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynIcvTxLength + 18 (ExtOFS payload length) exceeds the maximum frame length of 64 bytes.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeTxIcvSecured = ICV_SUPPORTED
    * CanTSynUseExtendedMsgFormat = TRUE
    * 18 (Ext OFS payload length) + ICVL &gt; 64 

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The maximum frame length of 64 bytes is exceeded. The Tx Icv length must not exceed 46 bytes for a OFS frame when FV is not used."

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.ExtOFS.IcvLengthExceedsFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1534</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018006_SecureTime_FupPayloadLength_FVLength_IcvLength_ExceedFrameLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynIcvRxLength + StbMFreshnessValueTruncLength + 10 (FUP payload length) exceeds the maximum frame length of 64 bytes.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeRxIcvSecured = ICV_VERIFIED
    * CanTSynUseExtendedMsgFormat = TRUE
    * 10 (FUP payload length) + ICVL + FVL &gt; 64 

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The maximum frame length of 64 bytes is exceeded. The Rx Icv length combined with the freshness value length must not exceed 54 bytes."

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.SyncFup.FVLengthAndIcvLengthExceedFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1535</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018007_SecureTime_ExtOfsPayloadLength_FVLength_IcvLength_ExceedFrameLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynIcvRxLength + StbMFreshnessValueTruncLength + 18 (ExtOFS payload length) exceeds the maximum frame length of 64 bytes.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeRxIcvSecured = ICV_VERIFIED
    * CanTSynUseExtendedMsgFormat = TRUE
    * 18 (Ext OFS payload length) + ICVL + FVL &gt; 64 

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The maximum frame length of 64 bytes is exceeded. The Rx Icv length combined with the freshness value length must not exceed 46 bytes for a OFS frame."

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.ExtOFS.FVLengthAndIcvLengthExceedFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1536</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018008_SecureTime_ExtOfsPayloadLength_NoFV_IcvLength_ExceedFrameLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>246</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynIcvRxLength + 18 (ExtOFS payload length) exceeds the maximum frame length of 64 bytes.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeRxIcvSecured = ICV_VERIFIED
    * CanTSynUseExtendedMsgFormat = TRUE
    * 18 (Ext OFS payload length) + ICVL &gt; 64 

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "The maximum frame length of 64 bytes is exceeded. The Rx Icv length must not exceed 46 bytes for a OFS frame when FV is not used."

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.ExtOFS.IcvLengthExceedsFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1537</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018009_SecureTime_CanTSynIcvGenerationTimeout_GreaterThan_CanTSynGlobalTimeTxPeriod</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>278</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynIcvGenerationTimeout is greater than CanTSynGlobalTimeTxPeriod.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeTxIcvSecured = ICV_SUPPORTED
    * CanTSynUseExtendedMsgFormat = TRUE
    * CanTSynIcvGenerationTimeout &gt; CanTSynGlobalTimeTxPeriod

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "ICV generation timeout can not be longer than global transmission period."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.IcvGenerationTimeout.ExceedsTxPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1538</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018010_SecureTime_FreshnessValueReference_Invalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    Freshness Value IdRef is enabled but is not configured with a valid reference.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeTxIcvSecured = ICV_SUPPORTED
    * CanTSynUseExtendedMsgFormat = TRUE
    * CanTSynIcvGenerationFvIdRef invalid

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "Wrong/Missing reference. A valid reference is required."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.FreshnessValueReference.Invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1539</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018011_SecureTime_CanTSynIcvGenerationBase_DoesNotMatch_CsmPrimitive</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>342</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynIcvGenerationBase does not match the primitive type of the Csm job referenced by CanTSynIcvGenerationJobRef.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeTxIcvSecured = ICV_SUPPORTED
    * CanTSynUseExtendedMsgFormat = TRUE
    * CanTSynIcvGenerationBase not maching with CsmPrimitive type

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "Icv generation base does not match Csm primitive type for the referenced job."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.IcvGenerationBase.CsmPrimitiveNotMatching</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1540</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018012_SecureTime_CanTSynIcvVerificationBase_DoesNotMatch_CsmPrimitive</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynIcvVerificationBase does not match the primitive type of the Csm job referenced by CanTSynIcvVerificationJobRef.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeRxIcvSecured = ICV_VERIFIED
    * CanTSynUseExtendedMsgFormat = TRUE
    * CanTSynIcvVerificationBase not maching with CsmPrimitive type

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "Icv verification base does not match Csm primitive type for the referenced job."

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.IcvVerificationBase.CsmPrimitiveNotMatching</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1541</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018013_SecureTime_RxDebounceTime_GreaterOrEqualTo_FollowUpOffset</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynGlobalTimeRxDebounceTime is greater or equal to CanTSynGlobalTimeFollowUpTimeout.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeRxIcvSecured = ICV_VERIFIED
    * CanTSynUseExtendedMsgFormat = TRUE
    * CanTSynGlobalTimeRxDebounceTime &gt;= CanTSynGlobalTimeFollowUpTimeout

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "RxDebounceTime must be less than the FollowUpTimeout."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.RxDebounceTime.FollowUpOffset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1542</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018014_SecureTime_IcvTxLength_GreaterThanZero</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>435</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynGlobalTimeTxIcvSecured is set to ICV_SUPPORTED and CanTSynIcvTxLength is equal to 0.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynGlobalTimeTxIcvSecured = ICV_SUPPORTED
    * CanTSynUseExtendedMsgFormat = TRUE
    * CanTSynIcvTxLength == 0

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "Tx ICV length must be greater than zero."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.CanTSynIcvTxLength.GreaterThanZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1543</internalId></specobject>
    <specobject>
      <id>TS_CANTSYN_GEN_018015_SecureTime_IcvRxLength_GreaterThanZero</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Compile/IN/CanTSyn_GenTest_18_SecureTime/source/application/testspec.h</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case
    CanTSynRxIcvVerificationType is set to ICV_VERIFIED or ICV_OPTIONAL and CanTSynIcvRxLength is equal to 0.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * CanTSynRxIcvVerificationType = ICV_VERIFIED
    * CanTSynUseExtendedMsgFormat = TRUE
    * CanTSynIcvRxLength == 0

Test Execution: 
    VP: CanTSyn generator shall issue an error which states that:
    "Rx ICV length must be greater than zero."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.CanTSynIcvRxLength.GreaterThanZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1544</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest01_Det001_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that all APIs, except CanTSyn_GetVersionInfo() and CanTSyn_Init()
    will report CANTSYN_E_UNINIT if called in uninitialized state.
  
Test Object: 
    All APIs.
  
Test Precondition: 
    CanTSyn uninitialized.
  
Test Execution: 
    01: Call CanTSyn_TxConfirmation().
    02: VP(CanTSyn.EB.TxConfirmation.Uninit):
        Verify that CANTSYN_E_UNINIT was reported to DET.
    03: Call CanTSyn_SetTransmissionMode().
    04: VP(CanTSyn.EB.SetTransmissionMode.Uninit):
        Verify that CANTSYN_E_UNINIT was reported to DET.
    05: Call CanTSyn_MainFunction() when module is uninitialized.
    06: Check that no function is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.TxConfirmation.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.SetTransmissionMode.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1545</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_Det002_GetVersionInfo_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_GetVersionInfo() is called with NULL_PTR,
    CANTSYN_E_NULL_POINTER will be reported to DET.
  
Test Object: 
    CanTSyn_GetVersionInfo()
  
Test Precondition: 
  
Test Execution: 
    01: Call CanTSyn_GetVersionInfo(NULL_PTR).
    02: VP(CanTSyn.EB.GetVersionInfo.NullPtr):
        Verify that CANTSYN_E_NULL_POINTER was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.GetVersionInfo.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1546</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_Det003__TxConfirmation_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_TxConfirmation() is called with an invalid txPduId
    CANTSYN_E_INVALID_PDUID will be reported to DET.
  
Test Object: 
    CanTSyn_TxConfirmation()
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call CanTSyn_TxConfirmation(TxPduId = 100U).
    02: VP(CanTSyn.SWS_CanTSyn_00100)
        Verify that CANTSYN_E_INVALID_PDUID was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1547</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_Det004__SetTransmissionMode_InvalidParam_InvalidCtrl</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_SetTransmissionMode() is called with an invalid mode
    CANTSYN_E_PARAM will be reported to DET, and if CanTSyn_SetTransmissionMode() is called with an invalid
    CtrlIdx CANTSYN_E_INV_CTRL_IDX will be reported to DET.
  
Test Object: 
    CanTSyn_TxConfirmation()
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call CanTSyn_SetTransmissionMode(CtrlIdx = 100U).
    02: VP(CanTSyn.SWS_CanTSyn_00134)
        Verify that CANTSYN_E_INV_CTRL_IDX was reported to DET.
    03: Call CanTSyn_SetTransmissionMode(mode = 7).
    04: VP(CanTSyn.SWS_CanTSyn_00134)
        Verify that CANTSYN_E_PARAM was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1548</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_005_MasterSendsSync_TxConfirmationArrives_TransmitFup</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>271</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that CanTSyn master sends SYNC frames and that calling
    CanTSyn_TxConfirmation() for a sent SYNC frame will change the state machine and within next Main Function,
    a FUP transmission will occur.
  
Test Object: 
    SYNC frame followed by FUP frame
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: Preparing StbM stubs.
    02: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_Init,
           CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncWAITTXCONF):
        Send a SYNC frame;
    03: Verify that the sync follow up frame has the correct payload and length.
    04: CanTSyn_TxConfirmation arrives;
    05: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncWAITTXCONF-FupSENDWAIT):
        Wait until CanTSynGlobalTimeDebounceTime expires.
    06: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-FupWAITTXCONF):
        Send a FUP frame;
    07: Verify that the follow up frame has the correct payload and length.
    08: CanTSyn_TxConfirmation arrives;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00015.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00016.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150.SwTimeStamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1490</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncWAITTXCONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1486</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncWAITTXCONF-FupSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1484</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-FupWAITTXCONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1549</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_006_MasterSendsSyncFrames_TxConfirmation_After3s_Result_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>447</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that CanTSyn master sends time synchronization frame.
    CanTSyn_TxConfirmation() doesn't arrive and master will initiate a new sync transmission.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Initialize CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: VP(CanTSyn.SWS_CanTSyn_00093):
        Preparing StbM stubs.
    02: VP(CanTSyn.SWS_CanTSyn_00028, CanTSyn.SWS_CanTSyn_00044):
        Send SYNC frame.
    03: Verify that the sync follow up frame has the correct payload and length.
    04: VP(CanTSyn.SWS_CanTSyn_00033.TxConfirmation.NotReceivedIn3s.Wait,
           CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset,
           CanTSyn.ECUC_CanTSyn_00017):
        CanTSyn_TxConfirmation arrives late with result E_NOT_OK (meanwhile also TxPeriod expired)
    05: Prepare StbM stubs for the new SYNC transmission.
    06: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupWAITTXCONF_SyncSENDWAIT):
        Send second SYNC message
    07: Verify that the second SYNC frame has the correct payload and length.
    08: TxConfirmation for the second SYNC frame arrives.
    09: Check if StbM_GetCurrentVirtualLocalTime() was called.
    10: Wait until CanTSynGlobalTimeDebounceTime expires.
    11: Master sends a FUP frame.
    12: VP(CanTSyn.SWS_CanTSyn_00049.FUP.SCUnchanged):
        Check if the recently transmitted FUP frame has the correct payload, length
        and that the FUP frame sequence counter remains unchanged.
    13: CanTSyn_TxConfirmation arrives late with result E_NOT_OK (meanwhile also TxPeriod expired)
    14: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupWAITTXCONF_SyncSENDWAIT):
        Send a new SYNC frame.
    15: Check if the recently transmitted SYNC frame has the correct payload and length.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.NotReceivedIn3s.Wait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049.FUP.SCUnchanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ECUC_CanTSyn_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupWAITTXCONF_SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1550</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_007_TransmissionMode_OFF</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>697</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if CanTSyn_SetTransmissionMode() is called and the parameter Mode equals
    CANTSYN_TX_OFF, all transmit request from CanTSyn shall be omitted on this CAN controller.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Initialize CanIf and StbM stubs.
    - Module is initialized.
    - Transmission mode is OFF.
  
Test Execution: 
    01: Call CanTSyn_MainFunction() to start transmitting SYNC frame.
    02: VP(): Verify that the sync frame transmission was not sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1551</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_008_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToSubDomain</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>752</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that CanTSyn master sends time synchronization frames, CanTSyn_TxConfirmation arrives and a FUP frame is
    transmitted with SGW bit set to SyncToSubDomain = 1. It is also check that when transmitting FUP frame, SC is not
    incremented. For CanTSyn.ASR22-11.SWS_CanTSyn_00056 requirement, CRC will not be calculated because it is disabled. 
    Also, FV and ICV will not be appended because ICV authentication is not supported.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Initialize CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: Preparing StbM stubs.
    02: Send SYNC frame.
    03: Verify that the sync follow up frame has the correct payload and length.
    04: CanTSyn_TxConfirmation arrives for SYNC frame.
    05: Wait until CanTSynGlobalTimeDebounceTime expires.
    06: FUP frame is transmitted.
    07: Verify that FUP frame has the correct payload and length.
    08: CanTSyn_TxConfirmation arrives for FUP frame.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00030.SyncToSubDomain.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150.SwTimeStamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049.FUP.SCUnchanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1552</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_009_MasterSendsSyncFramesPeriodically_SC_WrapsAround</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>914</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that CanTSyn master sends time synchronization frames, CanTSyn_TxConfirmation does not arrive and
    new SYNC frames are transmitted periodically.
    16 SYNC frames are needed to be transmitted for SC to reach the value 15, because SC starts with the value 0.
    At the 17th transmission the SC wraps around (15 to 0).
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Initialize CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: Preparing StbM stubs.
    02: Send SYNC frame.
    03: Verify that the SYNC frame has the correct payload and legth.
    04: CanTSyn_TxConfirmation arrived in time, with result E_NOT_OK (transmission failed)
        Wait until other 14 SYNC frames are transmitted =&gt; 1 + 14*41 = 575 MF.
    05: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncWAITTXCONF_SyncSENDWAIT):
        Send the 16th SYNC message
    06: Verify that CanIf_Transmit was called 16 times, for each SYNC frame
    07: Check if SC is 15 at the 16th frame transmission.
    08: CanTSyn_TxConfirmation arrived in time, with result E_NOT_OK (transmission failed)
    09: Wait until TxPeriod expires
    10: Send the 17 SYNC frame, with SC = 0 (SC was wrapped from 15 to 0)
    11: Verify that the sync frame has sequence counter equals to 0.
    12: Verify that CanIf_Transmit was called 17 times, for each SYNC frame.
    13: TxConfirmation for SYNC frame arrives.
    14: Check if StbM_GetCurrentVirtualLocalTime() function was called for FUP frame.
    15: Wait until CanTSynGlobalTimeDebounceTime expires.
    16: Master sends FUP frame.
    17: Check if FUP frame has the correct payload and length.
    18: TxConfirmation for FUP arrives.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049.FUP.SCUnchanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncWAITTXCONF_SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1485</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1553</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_Det010_NoStateChanged</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>1173</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a SYNC frame is send and TxConfirmation arrives with an invalid txPduId,
    CANTSYN_E_INVALID_PDUID will be reported to DET and module state will not change.
  
Test Object: 
    Send frame.
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare StbM stubs.
    02: Send SYNC frame.
    03: Check if SYNC frame has the correct payload and length.
    04: TxConfirmation for SYNC frame arrives in time, but with an invalid txPduId
    05: CANTSYN_E_INVALID_PDUID will be reported to DET.
    06: Wait until CanTSynGlobalTimeTxPeriod expires.
    07: Prepare StbM stubs for the next SYNC frame.
    08: Try to send another SYNC frame.
    09: Check that no SYNC is transmitted before TxConfirmation for the previous transmitted SYNC arrives
    10: Late TxConfirmation for the previous SYNC arrives
    11: VP(CanTSyn.SWS_CanTSyn_00124):
        Wait for Debounce to expire
    12: Send next SYNC
    13: Check that a new SYNC is transmitted
    14: Check if SYNC frame has the correct payload and length.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1554</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_011_ReinitializeInternalVariables_AtSecondCallOfCanTSyn_Init</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>1366</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that at the second call to CanTSyn_Init all module internal variables will be
    reinitialized.
  
Test Object: 
    CanTSyn_Init().
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Preparing StbM stubs.
    02: Send SYNC frame.
    03: Check if StbM and CanIf stubs were called.
    04: Verify that SYNC frame has the correct payload and length.
    05: Wait for TxConfirmation
    06: CanTSyn_TxConfirmation arrives to late, with result=E_NOT_OK, state will be reset and a new SYNC frame is send.
    07: Prepare StbM stubs for the new SYNC transmission.
    08: Send the new SYNC
    09: Check if StbM and CanIf stubs were called.
    10: Verify that the new SYNC frame has the correct payload and length.
    11: Re-initialized the module by calling CanTSyn_Init().
    12: Call CanTSyn_SetTransmissionMode with Mode = CANTSYN_TX_ON.
    13: Send another SYNC frame.
    14: Verify if SYNC frame has the correct payload and length.
    15: Check if CanIf and StbM stubs were called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1555</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_012_ValidModuleVersion</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>1569</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn_GetVersionInfo returns a correct version.
  
Test Object: 
    CanTSyn_GetVersionInfo()
  
Test Precondition: 
  
Test Execution: 
    01: Call CanTSyn_GetVersionInfo.
    02: Verify that module version is correct.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1556</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_013_CanIf_Transmit_Returns_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>1617</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If CanIf_Transmit() returns E_NOT_OK, while transmitting a SYNC frame, the next call of
    CanTSyn_MainFunction() shall trigger the SYNC frame transmission again.
  
Test Object: 
    Send frame
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare stubs.
    02: Send SYNC frame;
    03: Check if StbM and CanIf stubs were called.
    04: Check if SYNC frame has the correct payload and length.
    05: Wait for TxConfirmation
    06: VP(CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset):
        Late TxConfirmation with result E_NOT_OK
    07: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncSENDWAIT):
        Try to send a new SYNC frame, when CanIf_Transmit returns E_NOT_OK.
    08: Check if StbM and CanIf stubs were called.
    09: Check that the SYNC frame has the correct payload and length.
    10: On the next CanTSyn_MainFunction the SYNC is transmitted and CanIf_Transmit returns E_OK
    11: Check if CanIf, StbM stubs were called.
    12: Check if the new SYNC has the correct payload and length.
    13: Wait for TxConfirmation
    14: VP(CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset):
        Late TxConfirmation with result E_NOT_OK
    15: Another SYNC message is sent.
    16: TxConfirmation for SYNC frame arrives.
    17: Wait for CanTSynGlobalTimeDebounceTime to expire.
    18: Master is trying to transmit FUP frame, but CanIf_Transmit returns E_NOT_OK.
    19: Check if CanIf and StbM stubs were called.
    20: Wait for TxPeriod to expire in order to be able to transmit a new SYNC
    21: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-SyncSENDWAIT):
        Master sends a new SYNC frame, because FUP frame could not be transmitted.
    22: Check if SYNC frame has the correct payload and length.
    23: TxConfirmation for the new SYNC frame arrives.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1489</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1483</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1557</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_014_OverflowOfSecond_WhenMasterSendsSyncFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>1892</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the OVS bits from FUP message, when there is an overflow.
  
Test Object: 
    Send frame
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare stubs
    02: Send SYNC frame.
    03: Check if StbM and CanIf stubs were called.
    04: Check that SYNC frame has the correct payload and length.
    05: TxConfirmation arrived
    06: Check if the time difference is requested through StbM_GetCurrentVirtualLocalTime().
    07: CanTSynGlobalTimeDebounceTime expired
    08: Send FUP with overflow of seconds
    09: Check that FUP frame has the correct payload and length.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150.SwTimeStamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1558</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_015_MasterSendsSyncFrameAndFupFrame_SGWEqualSyncToGTM</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>2043</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that CanTSyn master sends time synchronization frames, CanTSyn_TxConfirmation arrives and a FUP frame is
    transmitted with SGW bit set to SyncToSubDomain = 1. It is also check that when transmitting FUP frame, SC is not
    incremented. For CanTSyn.SWS_CanTSyn_00056 requirement, CRC is disabled. Also, FV and ICV will not be appended
    because ICV authentication is not supported.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Initialize CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: Preparing StbM stubs.
    02: Send SYNC frame.
    03: Check if StbM and CanIf stubs were called.
    04: Verify that the sync follow up frame has the correct payload and length.
    05: CanTSyn_TxConfirmation arrives for SYNC frame.
    06: Check if StbM stub was called.
    07: Wait until CanTSynGlobalTimeDebounceTime expires.
    08: FUP frame is transmitted. Check that CanIf stub was called.
    09: Verify that FUP frame has the correct payload and length.
    10: CanTSyn_TxConfirmation arrives for FUP frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00030.SyncToGTM.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150.SwTimeStamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049.FUP.SCUnchanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1559</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_016_StbM_GetCurrentVirtualLocalTime_Returns_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>2206</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if StbM_GetCurrentVirtualLocalTime() returns E_NOT_OK master sends a new SYNC frame on the next
    CanTSyn_MainFunction.
  
Test Object: 
    StbM_GetCurrentVirtualLocalTime() returns E_NOT_OK
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare stubs for transmission of the SYNC frame.
    02: Send SYNC frame;
    03: Check if CanIf and StbM stubs were called once.
    04: Check if SYNC frame has the correct payload and length.
    05: VP(CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_OK.Reset):
        Check that StbM_GetCurrentVirtualLocalTime() (which returns E_NOT_OK) was called after TxConfirmation for the SYNC frame has arrived.
    06: Wait as Debounce will have to expire
    07: Still 1 MF until Debounce should have been expire.
    08: Check that CanIf_Transmit stub for FUP message was not called,
        if StbM_GetCurrentVirtualLocalTime function returned E_NOT_OK, because no Debounce was loaded.
    09: Wait a couple of MFs as if TxPeriod should expire
    10: Prepare stubs for the new SYNC frame.
    11: Master tries to send a new SYNC frame, because TxPeriod reaches 0.
    12: Check that no SYNC was transmitted if TxConfirmation for the previous SYNC was not received
    13: TxConfirmation for the previous SYNC finally arrives but too late
    14: Wait for Debounce to expire
    15: Debounce expired and a new SYNC is transmitted
    16: Check if CanIf_Transmit was called now for the second time for the new SYNC frame.
    17: Check if the recently transmitted SYNC frame has the correct payload and length.
    18: Check that StbM_GetCurrentVirtualLocalTime() (which returns E_OK) was called
        after TxConfirmation for the SYNC frame has arrived.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.StbM_GetCurrentVirtualLocalTime_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1560</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_017_StbM_BusGetCurrentTime_Returns_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>2411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if StbM_BusGetCurrentTime() returns E_NOT_OK master sends a new SYNC frame on the next
    CanTSyn_MainFunction.
  
Test Object: 
    StbM_BusGetCurrentTime() returns E_NOT_OK
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare StbM stubs.
    02: Master is trying to send SYNC frame, but StbM_BusGetCurrentTime function returns E_NOT_OK.
    03: Check that CanIf_Transmit for the first SYNC frame, was not called.
    04: Try to send the SYNC message the for the CanTSynGlobalTimeTxPeriod time.
    05: Prepare stubs.
    06: Retry to transmit SYNC frame, when StbM_BusGetCurrentTime returns E_OK.
    07: Check if CanIf_Transmit for the new SYNC frame was called.
    08: Check if the new SYNC frame has the correct payload and length.
    09: Check that StbM_GetCurrentVirtualLocalTime() is called when TxConfirmation for the SYNC frame arrives.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.StbM_BusGetCurrentTime_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1561</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_018_SYNC_FUP_CyclicTransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>2556</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that TxConfirmation timeout is taken into consideration
    when transmitting another SYNC/FUP sequence.
  
Test Object: 
    Confirmation Timeout is taken into consideration when transmitting sequences cyclically.
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare stubs.
    02: Master sends a SYNC frame.
    03: Check if CanIf, StbM stubs were called.
    04: Check if SYNC frame has the correct payload and length.
    05: TxConfirmation for SYNC frame arrives.
    06: Wait until CanTSynGlobalTimeDebounceTime expires.
    07: Master sends a FUP frame.
    08: Check if StbM and CanIf stubs were called.
    09: Check if FUP frame has the correct payload and length.
    10: Wait for TxConfirmation.
    11: TxConfirmation for FUP frame arrives.
    12: Wait until CanTSynGlobalTimeTxPeriod expires.
    13: Send the new SYNC frame, after TxPeriod expired.
    14: Check if StbM and CanIf stubs were called.
    15: Check if recently transmitted SYNC frame has the correct payload and length.
    16: TxConfirmation for the new SYNC frame arrives.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1562</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_019_GlobalTimeBaseBit_StopsCyclicTxSYNCFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>2765</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that no cyclic SYNC frames are transmitted when the GLOBAL_TIME_BASE bit
    is ZERO.
  
Test Object: 
    GLOBAL_TIME_BASE bit
  
Test Precondition: 
    Initialize CanIf and StbM stubs.
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON.
    The time base status bit for SYNC frames is ZERO.
  
Test Execution: 
    01: Prepare stubs.
    02: Call CanTSyn_MainFunction() to send SYNC frame.
    03: Check if StbM and CanIf stubs were not called.
    04: VP(CanTSyn.SWS_CanTSyn_00028): Check that no SYNC frame was sent and the
        payload is empty.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1563</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_020_MasterSendsSync_TxConfirmationArrives_TransmitFup_Extended</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>2861</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that CanTSyn master sends SYNC frames and that calling
    CanTSyn_TxConfirmation() for a sent SYNC frame will change the state machine and within next Main Function,
    a FUP transmission will occur.
  
Test Object: 
    SYNC frame followed by FUP frame
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: Preparing StbM stubs.
    02: Send a SYNC frame;
    03: Verify that the sync follow up frame has the correct payload and length.
    04: CanTSyn_TxConfirmation arrives;
    05: Wait until CanTSynGlobalTimeDebounceTime expires.
    06: Send a FUP frame;
    07: Verify that the follow up frame has the correct payload and length.
    08: CanTSyn_TxConfirmation arrives;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00015.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00016.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1564</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_Det021__FailedInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>3031</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_Init() is called with a ConfigPtr other than NULL_PTR
    CANTSYN_E_INIT_FAILED will be reported to DET.
  
Test Object: 
    CanTSyn_Init()
  
Test Precondition: None.
Test Execution: 
    01: Call CanTSyn_Init(ConfigPtr).
    02: VP(CanTSyn.EB.Init.ConfigPtr)
        Verify that CANTSYN_E_INIT_FAILED was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Init.ConfigPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1565</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_022_MasterSendsSync_TransmitionRetriesLimit</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_01_TX_SYNC_FUP_noCRC/source/application/CanTSyn_ConTest01.c</sourcefile>
      <sourceline>3072</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that when in case the CanIf_Transmit returns E_NOT_OK the CanTSyn will retry the transmission in the next CanTSyn_MainFunction.
    When the number of retries reaches its configured limit, the time domain resets.
  
Test Object: 
    Send frame
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare stubs.
    02: Send SYNC frame when CanIf_Transmit returns E_NOT_OK.
    03: Check if StbM and CanIf stubs were called.
    04: Check if SYNC frame has the correct payload and length.
    05: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncSENDWAIT):
        Try to resend SYNC frame, when CanIf_Transmit returns E_NOT_OK.
        Number of transmit retries reaches limit.
    06 Verify that the sync frame transmission was not sent untill TxPeriod expires.
    07: Preparing StbM stubs for a new message.
    08: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_Init,
           CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncWAITTXCONF):
        Send a SYNC frame;
    09: Verify that the SYNC frame has the correct payload and length.
    10: CanTSyn_TxConfirmation arrives;
    11: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncWAITTXCONF-FupSENDWAIT):
        Wait until CanTSynGlobalTimeDebounceTime expires.
    12: VP(CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-FupWAITTXCONF):
        Send a FUP frame;
    13: Verify that the follow up frame has the correct payload and length.
    14: CanTSyn_TxConfirmation arrives;
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_SyncSENDWAIT-SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1489</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynTxStatus_FupSENDWAIT-SyncSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1566</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest01_001_MasterSendsOFS_TxConfirmationArrives_SendOFNS</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a OFS frame and TxConfirmation arrives the transmission of
    OFNS frame is started, considering the CanTSynGlobalTimeDebounceTime.
  
Test Object: 
    Successful OFS/OFNS transmission.
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Prepare StbM stubs.
    02: VP(CanTSyn.SWS_CanTSyn_00035,
           CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_Init,
           CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsSENDWAIT-OfsWAITTXCONF):
        Send OFS frame.
    03: VP(CanTSyn.SWS_CanTSyn_00126):
        Verify if OFS frame has the correct payload and length.
    04: TxConfirmation for OFS arrives
    05: VP(CanTSyn.SWS_CanTSyn_00040,
           CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsWAITTXCONF-OfnsSENDWAIT):
        Wait until CanTSynGlobalTimeDebounceTime expires.
    06: VP(CanTSyn.SWS_CanTSyn_00036,
           CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT-OfnsWAITTXCONF):
        Send OFNS frame.
    07: Verify if OFNS frame has the correct payload and length.
    08: TxConfirmation for OFNS arrives.
  
Test Input: None.
Test Output: 
    When transmitting and OFS frame and TxConfirmation arrives, master shall send an OFNS frame
    without waiting for CanTSynGlobalTimeTxPeriod to expire.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1488</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsSENDWAIT-OfsWAITTXCONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1480</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsWAITTXCONF-OfnsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1477</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT-OfnsWAITTXCONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1475</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1567</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_002_MasterSendsOFS_TxConfirmation_After3s_Result_NotOK_SendNewOFS</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a OFS frame and TxConfirmationTimeout expired,
    a new OFS frame is send. GLOBAL_TIME_BASE bit within timeBaseStatus is not set.
  
Test Object: 
    OFS transmission with CanTSynMasterConfirmationTimeout expired.
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Prepare StbM stubs.
    02: Send OFS frame.
    03: Check if StbM and CanIf stubs were called.
    04: VP(CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage, CanTSyn.SWS_CanTSyn_00126):
        Verify if OFS frame has the correct payload and length.
    05: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait):
        Wait for TxConfirmation (meanwhile also TxPeriod expires)
    06: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset):
        Late TxConfirmation with result E_NOT_OK
    07: Prepare StbM stubs for the next OFS frame transmission.
    08: Master sends a new OFS frame, without waiting for CanTSynGlobalTimeTxPeriod to expire
       (the GLOBAL_TIME_BASE bit within the timeBaseStatus is not set).
    09: Check if StbM and CanIf stubs were called for the new OFS frame.
    10: Verify if the new transmitted OFS frame has the correct payload and length.
    11: TxConfirmation for the second OFS frame arrives.
  
Test Input: None.
Test Output: 
    When master sends an OFS frame and CanTSynMasterConfirmationTimeout is reached,
    if GLOBAL_TIME_BASE bit within timeBaseStatus is not set, master shall retry to send another
    OFS frame without considering  CanTSynGlobalTimeTxPeriod timeout.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1568</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_003_MasterSendsOFS_TxConfirmation_After3s_Result_OK_LoadDebounce_SendNewOFS</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a OFS frame and TxConfirmationTimeout is reached,
    a new OFS frame is send, after TxPeriod expires (GLOBAL_TIME_BASE bit within timeBaseStatus is set).
  
Test Object: 
    OFS transmission with CanTSynMasterConfirmationTimeout and CanTSynGlobalTimeTxPeriod expired.
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Prepare StbM stubs.
    02: Send OFS frame.
    03: Check if StbM and CanIf stubs were called.
    04: VP(CanTSyn.SWS_CanTSyn_00041):
        Verify if OFS frame has the correct payload and length.
    05: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait, CanTSyn.SWS_CanTSyn_00038):
        Wait for TxConfirmation
    06: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset):
        Late TxConfirmation arrived with result E_OK
    07: Prepare StbM stubs for the next OFS frame transmission.
    08: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset):
        Master sends a new OFS frame.
    09: Check if StbM and CanIf stubs were called for the new OFS frame.
    10: Verify if the new transmitted OFS frame has the correct payload and length.
    11: TxConfirmation for the second OFS frame arrives.
  
Test Input: None.
Test Output: 
    When master sends OFS frame and CanTSynMasterConfirmationTimeout expires, no OFNS frame shall be sent
    and if GLOBAL_TIME_BASE bit within the timeBaseStatus is set,
    a new OFS frame is send after CanTSynGlobalTimeTxPeriod expires .
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1569</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_004_SC_Unchanged_OnEveryOFNSTransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>566</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends an OFS frame and TxConfirmationTimeout is reached,
    a new OFS frame is send, SC is increased, TxConfirmation arrives and after
    CanTSynGlobalTimeDebounceTime expires, a OFNS frame is send and SC remains unchanged.
  
Test Object: 
    SC unchanged on OFNS transmission
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Prepare StbM stubs.
    02: Send OFS frame.
    03: Check if StbM and CanIf stubs were called.
    04: Verify if OFS frame has the correct payload and length.
    05: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait):
        Wait for TxConfirmation (meanwhile also TxPeriod expires)
    06: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset):
        Late TxConfirmation arrives with Result= E_NOT_OK
    07: Prepare StbM stubs for the next OFS frame transmission.
    08: Master sends a new OFS frame.
    09: Check if StbM and CanIf stubs were called for the new OFS frame.
    10: Verify if the new transmitted OFS frame has the correct payload and length.
    11: TxConfirmation for the second OFS frame arrives.
    12: Wait until CanTSynGlobalTimeDebounceTime expires;
    13: Send OFNS frame after CanTSynGlobalTimeDebounceTime has expired;
    14: VP(CanTSyn.SWS_CanTSyn_00049_OFNS_SCUnchanged):
        Check if OFNS Sequence Counter will remain unchanged even if more than one OFS frames were sent.
    15: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait):
        Wait for TxConfirmation (meanwhile TxPeriod expires)
    16: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset):
        Late TxConfirmation arrives with Result=E_NOT_OK
    17: Reset CanIf_TransmitCountIdx, Crc_CalculateCRC8H2FCountIdx counters;
    18: Send a new OFS frame.
    19: Check if the new transmitted OFS frame has the correct payload and length.
  
Test Input: None.
Test Output: 
    SC shall remain unchanged on every OFNS transmission.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00049_OFNS_SCUnchanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_NOT_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1570</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_005_SC_WrapsAround_15To0</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>807</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that CanTSyn master sends time synchronization frames, CanTSyn_TxConfirmation does not arrive and
    new SYNC frames are transmitted periodically. At the 16th transmission the SC wraps around (15 to 0). TxConfirmation
    arrives and a OFNS frame with sequence counter 15 is transmitted.
  
Test Object: 
    SC wraps around (15 to 0)
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Prepare StbM stubs.
    02: Send OFS frame.
    03: Check if StbM and CanIf stubs were called.
    04: Verify if OFS frame has the correct payload and length.
    05: Wait for TxConfirmation for the first OFS transmission
    06: CanTSyn_TxConfirmation arrived in time, with result E_NOT_OK (transmission failed)
    07: Wait for TxPeriod to expire
    08: Send 2'nd OFS frame, after CanTSynGlobalTimeTxPeriod expires.
    09: Verify if OFS frame has the correct payload and length.
    10: TxConfirmation arrives before 3s interval is reached, but with Result=E_NOT_OK (transmission failed)
    11: Send another 8 OFS frames and for each of them CanTSynGlobalTimeTxPeriod expires
    12: Check if OFS frame is sent (CanTSynGlobalTimeTxPeriod expired)
    13: Send 11'th OFS frame - SC within the frame is 10
    14: Verify if OFS frame has the correct payload and length
    15: TxConfirmation arrives before 3s interval is reached, but with Result=E_NOT_OK (transmission failed)
    16: Check if CanIf and StbM stubs were called for every OFS
    17: Send 12'th OFS frame, after TxPeriod expires - SC within the frame is 11
    18: Verify if OFS frame has the correct payload and length
    19: TxConfirmation arrives before 3s interval is reached, but with Result=E_NOT_OK (transmission failed)
    20: Send 4 more OFS frames (in total 16 OFS frame transmitted), in order to reach SC=15 within the frame
    21: TxConfirmation arrives before 3s interval is reached, but with Result=E_NOT_OK (transmission failed)
    22: Check if the sequence counter for the 16th transmitted OFS frame is 15.
    23: TX period for 16th OFS expired
    24: Send 17'th OFS frame.
    25: Verify if OFS frame has the correct payload and length.
    26: TxConfirmation for OFS arrives
    27: Wait until Debounce expires.
    28: Send OFNS frame;
    29: Check if CanIf and StbM stubs were called.
    30: Check if OFNS frame has a  sequence counter reset, correct payload and length
    31: TxConfirmation for OFNS arrives.
  
Test Input: None.
Test Output: 
    SC is incremented until reaches 15 and at the 16th transmission wraps around.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsWAITTXCONF_OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1571</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_006_NoStateChanged_ReportDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>1182</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a OFS frame is send and TxConfirmation arrives with an invalid txPduId,
    CANTSYN_E_INVALID_PDUID will be reported to DET and module state will not change.
  
Test Object: 
    No state changed when an API is called with an invalid parameter.
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare StbM stubs.
    02: VP(CanTSyn.SWS_CanTSyn_00102):
        Send OFS frame.
    03: Check if CanIf and StbM stubs were called
    04: Check is OFS frame has the correct payload and length.
    05: TxConfirmation for OFS frame arrives with an invalid txPduId.
    06: VP(CanTSyn.SWS_CanTSyn_00088, CanTSyn.SWS_CanTSyn_00089, CanTSyn.SWS_CanTSyn_00100):
        CANTSYN_E_INVALID_PDUID will be reported to DET.
    07: Wait until CanTSynGlobalTimeTxPeriod expires.
    08: Try to send a new OFS
    09: Check that no new OFS is transmitted before TxConfirmation for the previous transmitted OFS arrives
    10: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait):
        Wait for TxConfirmation for the first OFS
    11: VP(CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset):
        Late TxConfirmation for the first OFS arrives
    12: Send another OFS frame.
    13: Check if CanIf and StbM stubs were called
    14: Check is OFS frame has the correct payload and length.
  
Test Input: None.
Test Output: 
    CanTSyn module is not modifying its current state, but is simply reporting an error event.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1572</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_007_CanIf_Transmit_Returns_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>1367</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if CanIf_Transmit() returns E_NOT_OK when transmitting an OFS, master sends a new OFS frame on the next
    CanTSyn_MainFunction if CanIf_Transmit() returns E_OK.
  
Test Object: 
    CanIf_Transmit returns E_NOT_OK
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare stubs.
    02: Send OFS frame;
    03: Check if CanIf and StbM stubs were called with correct parameters.
    04: Check if OFS frame has the correct payload and length.
    05: Wait for TxConfirmation
    06: Late TxConfirmation with result E_NOT_OK
    07: VP(CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsSENDWAIT-OfsSENDWAIT):
        Try to send a new OFS frame, when CanIf_Transmit returns E_NOT_OK.
    08: On the next CanTSyn_MainFunction the OFS is transmitted and CanIf_Transmit returns E_OK.
    09: Check if CanIf, StbM stubs were called with correct parameters.
    10: Check if the new OFS has the correct payload and length.
    11: Wait for TxConfirmation.
    12: TxConfirmation for OFS frame arrives.
    13: Wait for Debounce to expire
    14: Master is trying to transmit OFNS frame, but CanIf_Transmit returns E_NOT_OK.
    15: Check if CanIf was called.
    16: Wait for TxPeriod to expire in order to be able to transmit a new OFS
    17: VP(CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT_OfsSENDWAIT):
        Master sends a new OFS frame, because OFNS frame could not be transmitted.
    18: Check if OFS frame has the correct payload and length.
    19: TxConfirmation for the new OFS frame arrives.
  
Test Input: None.
Test Output: 
    A new OFS shall be transmitted if CanIf_Transmit() returned E_NOT_OK in the previous transmission.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfsSENDWAIT-OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1487</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT_OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1573</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_008_StbM_GetOffset_Returns_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>1614</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if StbM_GetOffset() returns E_NOT_OK when transmitting an OFS, master sends a new OFS frame on the next
    CanTSyn_MainFunction if StbM_GetOffset() returns E_OK.
  
Test Object: 
    StbM_GetOffset returns E_NOT_OK
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare stubs.
    02: Master sends an OFS frame.
    03: Check if StbM and CanIf stubs were called with correct parameters.
    04: Check if OFS frame has the correct payload and length.
    05: Wait for TxConfirmation
    06: TxConfirmation for OFS frame arrives too late
    07: Check that CanIf_Transmit for OFNS frame was not called.
    08: Prepare stubs for the new OFS frame.
    10: Try to send the new OFS frame when StbM_GetOffset function returns E_NOT_OK.
    11: Check if StbM stub was called.
    12: On the next main function master is trying to send a new OFS, when StbM_GetOffset returns E_OK.
    13: Check if StbM and CanIf stubs were called.
    14: Check if OFS frame has the correct payload and length.
    15: TxConfirmation for OFS frame arrives.
  
Test Input: None.
Test Output: 
    A new OFS shall be transmitted if StbM_GetOffset() returned E_NOT_OK in the previous transmission.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.StbM_GetOffset_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1574</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_009_OFS_OFNS_CyclicTransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>1797</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that TxConfirmation and TxPeriod timeout is taken into consideration
    when transmitting another OFS/OFNS sequence.
  
Test Object: 
    Confirmation Timeout is taken into consideration when cyclically transmitting OFS/OFNS sequences.
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare stubs.
    02: Master sends an OFS frame.
    03: Check if CanIf, StbM stubs were called.
    04: Check if OFS frame has the correct payload and length.
    05: TxConfirmation for OFS frame arrives.
    06: Wait until CanTSynGlobalTimeFollowUpTimeout expires.
    07: Master sends an OFNS frame.
    08: Check if CanIf stub was called.
    09: Check if OFNS frame has the correct payload and length.
    10: Wait for TxConfirmation.
    11: TxConfirmation for OFNS frame arrives.
    12: Wait until CanTSynGlobalTimeTxPeriod expires.
    13: Prepare StbM stubs for the new OFS frame.
    14: VP(CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsWAITTXCONF_OfsSENDWAIT):
        Send the new OFS frame, after TxPeriod expired.
    15: Check if StbM and CanIf stubs were called.
    16: Check if recently transmitted OFS frame has the correct payload and length.
    17: TxConfirmation for the new OFS frame arrives.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsWAITTXCONF_OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1575</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_010_GlobalTimeBaseBit_StopsCyclicTxOFSFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>2007</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a cyclic sync OFS frame is not transmitted if the GLOBAL_TIME_BASE bit
    is set to ZERO.
  
Test Object: 
    Cyclic OFS transmission not possible because the GLOBAL_TIME_BASE bit is ZERO
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
    -The GLOBAL_TIME_BASE bit for OFS frames is initialized to ZERO.
  
Test Execution: 
    01: Prepare StbM stubs.
    02: Attempt to send OFS frame.
    03: Check if StbM and CanIf stubs were not called.
    04: VP(CanTSyn.SWS_CanTSyn_00038): Verify if OFS frame was not sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1576</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_011_MasterSendsOFS_TxConfirmationArrives_Extended</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>2156</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a extended OFS frame and TxConfirmation
    arrives the transmission of a new extended OFS frame is started, considering the
    CanTSynGlobalTimeTxPeriod.
  
Test Object: 
    Successful OFS/new OFS transmission, no OFNS transmission.
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Prepare StbM stubs.
    02: VP(CanTSyn.SWS_CanTSyn_00035):
        Send OFS frame.
    03: VP(CanTSyn.SWS_CanTSyn_00111):
        Verify if OFS frame has the correct payload and length.
    04: TxConfirmation for OFS arrives
    05: Wait until TxPeriod expires.
    06: VP(CanTSyn.EB.ExtendedOFS,
           CanTSyn.Dsn.OfsExtended.CanTSynTxStatus_OfsWAITTXCONF_OfsSENDWAIT):
        Send OFS frame.
    07: Verify if OFS frame has the correct payload and length.
    08: TxConfirmation for OFS arrives.
  
Test Input: None.
Test Output: 
    When transmitting an extended OFS frame and TxConfirmation arrives, master shall send a OFS frame
    after waiting for CanTSynGlobalTimeTxPeriod to expire.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.ExtendedOFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynTxStatus_OfsWAITTXCONF_OfsSENDWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1577</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_012_TransmitionRetriesLimit</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_02_TX_OFS_OFNS_noCRC/source/application/CanTSyn_ConTest_02.c</sourcefile>
      <sourceline>2344</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that when in case the CanIf_Transmit returns E_NOT_OK the CanTSyn will retry the transmission in the next CanTSyn_MainFunction.
    When the number of retries reaches its configured limit, the time domain resets.
  
Test Object: 
    CanIf_Transmit returns E_NOT_OK
  
Test Precondition: 
    Initialize CanIf and StbM stubs
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON
  
Test Execution: 
    01: Prepare stubs.
    02: Send OFS frame with CanIf_Transmit returning E_NOT_OK.
    03: Check if CanIf and StbM stubs were called with correct parameters.
    04: Check if OFS frame has the correct payload and length.
    05: VP(CanTSyn.Dsn.OfsOfns.CanTSynTxStatus_OfnsSENDWAIT_OfsSENDWAIT):
        Try to resend SYNC frame, when CanIf_Transmit returns E_NOT_OK.
        Number of transmit retries reaches limit.
    06: Wait for CanTSynGlobalTimeTxPeriod to expire.
    07: Preparing StbM stubs for a new message.
    08: Send a new OFS frame;
    09: Verify that the OFS frame has the correct payload and length.
    10: TxConfirmation for the new OFS frame arrives.
    11:  Wait until CanTSynGlobalTimeDebounceTime expires.
    12: Send a OFNS frame;
    13: Verify that the OFNS frame has the correct payload and length.
    14: CanTSyn_TxConfirmation arrives;   
  
Test Input: None.
Test Output: 
    A new OFS shall be transmitted if CanIf_Transmit() returned E_NOT_OK in the previous transmission.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanIf_Transmit_E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1578</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest03_CRCSupport_001_Successful_SYNC_FUP_Transmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid/source/application/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid.c.m4</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a SYNC CRC frame and TxConfirmation for that SYNC frame
    arrives, a FUP CRC frame shall be transmitted, after CanTSynGlobalTimeDebounceTime expires.
    FV and ICV will not be appended to the message because ICV authentication is not supported.
  
Test Object: 
    Successful transmission of SYNC/FUP sequence with correct payload.
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC CRC and FUP CRC frames, should be transmitted successfully.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00018.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CanTSynEnableTimeValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.syncEgressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1579</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest03_CRCSupport_002_Successful_SYNC_FUP_Transmission_Extended</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid/source/application/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid.c.m4</sourcefile>
      <sourceline>317</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a SYNC CRC frame and TxConfirmation for that SYNC frame
    arrives, a FUP CRC frame shall be transmitted, after CanTSynGlobalTimeDebounceTime expires.
  
Test Object: 
    Successful transmission of SYNC/FUP sequence with correct payload.
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC CRC and FUP CRC frames, should be transmitted successfully.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00018.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CanTSynEnableTimeValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.syncEgressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1580</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest03_CRCSupport_003_Successful_SYNC_Transmission_TimeValidation</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid/source/application/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid.c.m4</sourcefile>
      <sourceline>621</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the calcaulations of preciseOriginTimestamp=T0SYN + (T1VLT - T0VLT) In case CanTSynTimeValidationSupport is enabled
  
Test Object: 
    Successful transmission of SYNC with checking the correct parameters of StbM_CanSetMasterTimingData()
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC CRC  should be transmitted successfully.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CanTSynEnableTimeValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.syncEgressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1581</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest03_CRCSupport_004_Successful_SYNC_Transmission_TimeValidation</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid/source/application/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid.c.m4</sourcefile>
      <sourceline>810</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the calcaulations of preciseOriginTimestamp=T0SYN + (T1VLT - T0VLT) In case CanTSynTimeValidationSupport is enabled
  
Test Object: 
    Successful transmission of SYNC with checking the correct parameters of StbM_CanSetMasterTimingData()
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC CRC  should be transmitted successfully.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CanTSynEnableTimeValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.syncEgressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1582</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest03_CRCSupport_005_Successful_SYNC_FUP_Transmission_Fast_TxConfirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid/source/application/CanTSyn_ConTest_03_TX_SYNC_FUP_CRC_TimeValid.c.m4</sourcefile>
      <sourceline>997</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a SYNC CRC frame and TxConfirmation for that SYNC frame
    arrives, a FUP CRC frame shall be transmitted, after CanTSynGlobalTimeDebounceTime expires.
    FV and ICV will not be appended because ICV authentication is not supported.
  
Test Object: 
    Successful transmission of SYNC/FUP sequence with correct payload.
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC CRC and FUP CRC frames, should be transmitted successfully.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00018.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Xdm.CanTSynEnableTimeValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.syncEgressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00142.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1583</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest04_CRCSupport_001_Successful_OFS_OFNS_Transmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_04_TX_OFS_OFNS_CRC/source/application/CanTSyn_ConTest_04.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a OFS CRC frame and TxConfirmation for that OFS CRC frame
    arrives, an OFNS CRC frame shall be transmitted, after CanTSynGlobalTimeDebounceTime expires.
    FV and ICV will not be appended to the message because ICV authentication is not supported.
  
Test Object: 
    Successful transmission of OFS CRC/OFNS CRC sequence with correct payload.
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The OFS CRC and OFNS CRC frames, should be transmitted successfully.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1584</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest04_CRCSupport_002_Successful_OFS_Extended_Transmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_04_TX_OFS_OFNS_CRC/source/application/CanTSyn_ConTest_04.c</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a OFS CRC extended frame and TxConfirmation for that OFS
    CRC frame arrives, a new OFS CRC extended frame shall be transmitted,
    after CanTSynGlobalTimeTxPeriod expires.
  
Test Object: 
    Successful transmission of OFS CRC/new OFS CRC sequence with correct payload,
    no OFNS transmission.
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The OFS CRC extended frames, should be transmitted successfully.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00018.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.ExtendedOFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1585</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest05_CRCSupport_001_Successful_SYNC_FUP_OFS_OFNS_Transmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_05_TX_RX_SYNC_FUP_OFS_OFNS_CRC_combined/source/application/CanTSyn_ConTest_05.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if master sends a SYNC CRC, OFS CRC, FUP CRC and OFNS CRC frames and
    TxConfirmation for them arrives, frames shall be transmitted successfully.
    FV and ICV will not be appended to the message because ICV authentication is not supported.
  
Test Object: 
    Successful transmission of SYNC/FUP and OFS/OFNS sequence with correct payload.
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC CRC/FUP CRC and OFS CRC/OFNS CRC frames, should be transmitted successfully
    when TxConfirmation arrives in time, and timeouts shall be respected.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00017.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00018.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00029.SameTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00039.SameTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.dsn.Mode.Initialization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1586</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest05_TransmissionMode_ON_OFF</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_05_TX_RX_SYNC_FUP_OFS_OFNS_CRC_combined/source/application/CanTSyn_ConTest_05.c</sourcefile>
      <sourceline>454</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the master sends messages based on the transmission mode.
  
Test Object: 
    Transmission performed only when the transmission mode of the channel is ON.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    Messages shall not be sent out when the transmission mode is OFF.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1587</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest05_TransmissionMode_ON_OFF_Extended</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_05_TX_RX_SYNC_FUP_OFS_OFNS_CRC_combined/source/application/CanTSyn_ConTest_05.c</sourcefile>
      <sourceline>570</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the master sends messages based on the transmission mode.
  
Test Object: 
    Transmission performed only when the transmission mode of the channel is ON.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    Messages shall not be sent out when the transmission mode is OFF.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1588</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest06_001_Successful_SYNC_FUP_OFS_OFNS_Reception</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts:
        -SYNC frames with type 0x20 and a correct CRC
        -OFS frames with type 0x40 and a correct CRC value
        -FUP frames with correct SC, type equal to 0x28 and a correct CRC value
        -OFNS frames with correct SC, type equal to 0x48 and a correct CRC value,
    if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Object: 
    Successful reception of SYNC/FUP CRC, OFS/OFNS CRC followed by another OFS/OFNS CRC sequences with correct payload.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Execution: 
    01: Preconditions
    02: Prepare Crc stubs for SYNC CRC frame.
    03: Create SYNC frame.
    04: Call CanTSyn_RxIndication() for SYNC CRC and OFS CRC frames.
    05: Check if StbM_GetCurrentVirtualLocalTime() was called to retrieve the Local Time.
    06: Check if Crc_CalculateCRC8H2F() function was called with correct parameters.
    07: Create OFS frame.
    08: RxIndication for OFS arrives.
    09: Check if Crc_CalculateCRC8H2F() function was called with correct parameters.
    10: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain_0 expires.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    10.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    11: Create FUP CRC frame.
    12: Call CanTSyn_RxIndication() for FUP CRC frame.
    13: Check if StbM_GetCurrentVirtualLocalTime() was called to retrieve
        T_VLT (virtual local time).
    14: Check that StbM_BusSetGlobalTime() was called with correct parameters,
        after a successful reception of FUP CRC frame.
    14.1:In case CanTSynTimeValidationSupport is enabled, Check if StbM_CanSetSlaveTimingData() function was called with correct parameters
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    14.2: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    15: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain_16 expires.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    15.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    16: Create OFNS CRC frames.
    17: Call CanTSyn_RxIndication() for OFNS CRC frame.
    18: Check if StbM_BusSetGlobalTime() was called with correct parameters,
        after a successful reception of OFNS CRC frame.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    18.1: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    19: Prepare stubs for the nest OFS frame.
    20: Create OFS frame.
    21: OFS frame is received.
    22: Prepare CRC data.
    23: Check if crc data buffer has the correct payload and length.
    24: Wait until TxFollowUp expires.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    24.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    24.1: Check that when SyncPairsPeriod timer expires and the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    25: Prepare OFNS frame.
    26: OFNS frame is received.
    27: Check if StbM_BusSetGlobalTime() function was called with correct parameters.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    27.1: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    The SYNC/FUP CRC and OFS/OFNS CRC sequences shall be successfully received.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057.SYNC.ValidTypeAndCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.Valid.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.ValidFUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.ValidOFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00072.StbM.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00077.OFSMatchOFNS.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00076.SYNCMatchFUP.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT1VLT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.InterruptProtection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.SetT2VLT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.RetrieveData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ComputeT4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.CalculateTLSYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ForwardRxTimeTuple</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.DissasembleMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.ForwardGlobalTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133.SyncToGTM.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133.SyncToSubDomain.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.syncIngressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.UnusedData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_1_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_2_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_1_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_2_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1589</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_002_SYNC_OFS_invalid_TYPE_and_CRC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>690</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module ignores SYNC and OFS frames with an invalid type
    or SYNC and OFS frame with an invalid CRC.
  
Test Object: 
    SYNC and OFS reception with an invalid type.
    SYNC and OFS reception with an invalid CRC.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Execution: 
    01: Create SYNC frame.
    02: RxIndication for a SYNC frame with an invalid type, arrives.
    03: Check that CanTSyn accepts only SYNC message with Type equal to 0x20 and all other messages
        are ignored.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    03.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    04: Create OFS frame.
    05: RxIndication for a OFS frame with an invalid type, arrives.
    06: Check that CanTSyn accepts only OFS message with Type equal to 0x40 and all other messages
        are ignored.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    06.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    07: Create SYNC frame.
    08: RxIndication for SYNC frame with an incorrect CRC value arrives.
    09: Check if CrcDataPtr for SYNC frame, contains incorrect data elements and DataID.
    10: Check that CanTSyn accepts only SYNC message with a correct CRC value and all other messages
        are ignored.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    10.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    11: Create OFS frame.
    12: RxIndication for OFS frame with an incorrect CRC value arrives.
    13: Check if CrcDataPtr for OFS frame, contains incorrect data elements and DataID.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    13.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    14: Check that CanTSyn accepts only OFS message with a correct CRC value and all other messages
        are ignored.
  
Test Input: None.
Test Output: 
    The CanTSyn shall ignore SYNC and OFS messages with an incorrect CRC value or an invalid type.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00057.SYNC.InvalidCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.InvalidType.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00065.InvalidCRC.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.DemEventIDGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1590</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_003_FUP_OFNS_invalid_TYPE_LENGTH_DOMAINID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>914</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module ignores FUP and OFNS frames, with an invalid type, length or domainId.
  
Test Object: 
    FUP and OFNS reception with an invalid type, length, domainId
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
    - CanTSynGlobalTimeFollowUpTimeout is configured to a value different from 0
  
Test Execution: 
    01: Prepare SYNC frame.
    02: RxIndication for SYNC frame arrives.
    03: Check if StbM_GetCurrentVirtualLocalTime() function was called.
    04: Create OFS frame.
    05: RxIndication for OFS frame arrives.
    06: Check that the valid OFS frame reception has been accepted

    07: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain0 expires.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    07.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    08: Create FUP frame.
    09: RxIndication for FUP frame with invalid type, arrives.
    10: Check that CanTSyn accepts only FUP messages, with valid type and all other messages
        are ignored.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    10.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    11: Prepare a valid FUP frame
    12: RxIndication for a valid FUP frame arrives
    13: VP(CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidTYPE_SyncRXWAIT):
        Check that StbM_BusSetGlobalTime was not called for an invalid FUP frame, because a new valid SYNC is awaited
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    13.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    13.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    14: Prepare a valid SYNC frame
    15: RxIndication for a valid SYNC frame arrives
    16: Check that the new valid SYNC frame reception has been accepted
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    16.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    16.1: Check that when SyncPairsPeriod timer expires and the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    17: Prepare an invalid FUP frame, with invalid SduLength
    18: RxIndication for an invalid FUP frame arrives
    19: Check that StbM_BusSetGlobalTime was not called for the invalid FUP frame
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    19.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    19.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    20: Prepare a valid FUP frame
    21: RxIndication for a valid FUP frame arrives
    22: VP(CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidLENGTH_SyncRXWAIT):
        Check that the valid FUP frame was not accepted, because a new valid SYNC frame is awaited
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    22.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    22.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    23: Prepare a valid SYNC frame
    24: RxIndication for a valid SYNC frame arrives
    25: Check that the new valid SYNC frame reception has been accepted
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    25.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    25.1: Check that when SyncPairsPeriod timer expires and the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    26: Prepare an invalid FUP frame, with invalid TimeDomainId
    27: RxIndication for an invalid FUP frame arrives
    28: Check that StbM_BusSetGlobalTime was not called for the invalid FUP frame
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    28.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    28.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    29: Prepare a valid FUP frame
    30: RxIndication for a valid FUP frame arrives
    31: VP(CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidDOMAINID_SyncRXWAIT):
        Check that the valid FUP frame was not accepted, because a new valid SYNC frame is awaited
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    31.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    31.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    32: Prepare a valid SYNC frame
    33: RxIndication for a valid SYNC frame arrives
    34: Check that the new valid SYNC frame reception has been accepted


    35: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain16 expires.
    36: Create OFNS frame.
    37: RxIndication for OFNS frame arrives.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    37.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    37.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    38: Check that CanTSyn accepts only OFNS messages, with valid type, all other messages
        are ignored and StbM_BusSetGlobalTime was not called for invalid OFNS frame.
    39: Prepare a valid OFNS frame
    40: RxIndication for a valid OFNS frame is received
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    40.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    40.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    41: VP(CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidTYPE_OfsRXWAIT):
        Check that the valid OFNS frame was not accepted, because a new valid OFS frame is awaited
    42: Prepare a valid OFS frame
    43: RxIndication for a valid OFS frame is received
    44: Check that the new valid OFS frame was accepted

    45: Prepare an invalid OFNS frame, with an invalid SduLength
    46: RxIndication for an invalid OFNS frame is received
    47: Check that the invalid OFNS frame was not accepted, because it has an invalid length
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    47.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    47.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    48: Prepare a valid OFNS frame
    49: RxIndication for a valid OFNS frame is received
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    49.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    49.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    50: VP(CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidLENGTH_OfsRXWAIT):
        Check that the valid OFNS frame was not accepted, because a new valid OFS frame is awaited
    51: Prepare a new valid OFS frame
    52: RxIndication for a valid OFS frame is received
    53: Check that the new valid OFS frame was accepted

    54: Prepare an invalid OFNS frame, with an invalid TimeDomainId
    55: RxIndication for an invalid OFNS frame is received
    56: Check that the invalid OFNS frame was not accepted, because it has an invalid length
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    56.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    56.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    57: Prepare a valid OFNS frame
    58: RxIndication for a valid OFNS frame is received
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    58.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    58.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    59: VP(CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidDOMAINID_OfsRXWAIT):
        Check that the valid OFNS frame was not accepted, because a new valid OFS frame is awaited
    60: Prepare a new valid OFS frame
    61: RxIndication for a valid OFS frame is received
    62: Check that the new valid OFS frame was accepted
  
Test Input: None.
Test Output: 
    The CanTSyn shall ignore FUP and OFNS messages with an invalid type.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidTYPE_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1456</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidLENGTH_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1454</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidDOMAINID_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1451</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidTYPE_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1431</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidLENGTH_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1427</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidDOMAINID_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1429</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1591</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_004_FUP_OFNS_invalid_CRC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>1897</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that CanTSyn will ignore a FUP and OFNS frames with invalid CRC value.
  
Test Object: 
    FUP and OFNS reception with an invalid CRC.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Execution: 
    01: Create SYNC frame.
    02: RxIndication for SYNC frame arrives.
    03: Check if StbM_GetCurrentVirtualLocalTime() and Crc_CalculateCRC8H2F() function was called.
    04: Create OFS frame.
    05: RxIndication for OFS frame arrives.
    06: Check if Crc_CalculateCRC8H2F() function was called.
    07: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain0 expires.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    07.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    08: Create FUP frame.
    09: RxIndication for FUP frame with invalid CRC value, arrives.
    10: Check if CrcDataPtr for FUP frame, contains incorrect data elements and DataID.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    10.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    11: Check that CanTSyn accepts only FUP messages with a correct CRC value and all other messages
        are ignored, no function is called.
    12: Prepare a valid FUP frame
    13: RxIndication for a valid FUP frame arrives
    14: VP(CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidCRC_SyncRXWAIT):
        Check that the valid FUP frame was not accepted, because a new SYNC frame is awaited
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    14.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    14.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    15: Prepare a new valid SYNC frame
    16: RxIndication for a new valid SYNC frame arrives
    17: Check that the new valid SYNC frame is accepted

    18: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain16 expires
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    18.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    19: Create OFNS frame.
    20: RxIndication for OFNS frame with an invalid CRC value, arrives.
    21: Check if CrcDataPtr for OFNS frame, contains incorrect data elements and DataID.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    21.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    22: Check that CanTSyn accepts only OFNS messages with a correct CRC value and all other messages
        are ignored.
    23: Prepare a valid OFNS frame
    24: RxIndication for a valid OFNS frame arrives
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    24.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    24.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    25: VP(CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidCRC_OfsRXWAIT):
        Check that the valid OFNS frame was not accepted, because a new valid OFS frame is awaited
    26: Prepare a new valid OFS frame
    27: RxIndication for the new valid OFS frame arrives
    28: Check that the new valid OFS frame was accepted
  
Test Input: None.
Test Output: 
    The CanTSyn module shall ignore FUP and OFNS messages with an invalid CRC.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.InvalidCRC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.InvalidCRC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidCRC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1452</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidCRC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1592</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_005_FUP_OFNS_invalid_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>2301</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that CanTSyn module will ignore FUP and OFNS frames
    with an invalid sequence counter and reset the SYNC RxStatus and wait for a new valid SYNC/OFS frame.
  
Test Object: 
    FUP and OFNS reception with an invalid Sequence Counter.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Execution: 
    01: Create SYNC frame.
    02: RxIndication for SYNC frame arrives.
    03: Check if StbM_GetCurrentVirtualLocalTime() function was called.
    04: Create OFS frame.
    05: RxIndication for OFS frame arrives.
    06: Wait for CanTSynGlobalTimeFollowUpTimeout, for TimeDomain0 to expire.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    06.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    07: Create FUP frame.
    08: RxIndication for FUP frame with an invalid SC arrives.
    09: Check that Crc_CalculateCRC8H2F was called.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    09.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    10: Check that no function was called for a FUP frame with an invalid SC
    11: Prepare a valid FUP frame
    12: RxIndication for a valid FUP frame arrives
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    12.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    12.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    13: Check that the valid FUP frame is ignored, because CanTSyn is waiting for a new SYNC reception
    14: Prepare a new valid SYNC frame
    15: RxIndication for a new valid SYNC frame arrives
    16: Check that the new valid SYNC frame is accepted
    17: Wait for CanTSynGlobalTimeFollowUpTimeout for TimeDomain16 to expire.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    17.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    17.1: Check that when SyncPairsPeriod timer expires and the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    18: Create OFNS frame.
    19: RxIndication for OFNS frame, with an invalid SC value, arrives.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    19.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    20: Check that StbM_BusSetGlobalTime was not called for a OFNS frame with an invalid SC
    21: Prepare a valid OFNS frame
    22: RxIndication for a valid OFNS arrives
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    22.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    22.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    23: Check that the valid OFNS frame is ignored, because CanTSyn is waiting for a new OFS reception
    24: Prepare a new valid OFS frame
    25: RxIndication for a new valid OFS frame arrives
    26: Check that the new valid OFS frame is accepted
  
Test Input: None.
Test Output: 
    The CanTSyn shall ignore FUP message with a different Sequence Counter than the value of the
    corresponding SYNC and OFNS message with a different SC than the value of the corresponding OFS message.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00060.InvalidSC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00068.InvalidSC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00076.NoMatchSYNC_FUP.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00077.NoMatchOFS_OFNS.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_InvalidSC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1450</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_InvalidSC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1593</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_006_FUP_OFNS_ignored</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>2675</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSynGlobalTimeFollowUpTimeout expires and if an RxIndication
    for a FUP frame arrives will be ignored. CanTSyn module will wait for a new SYNC message.
  
Test Object: 
    FUP and OFNS frame will be ignored, if CanTSynGlobalTimeFollowUpTimeout expired.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Execution: 
    01: Create SYNC frame.
    02: RxIndication for SYNC frame arrives.
    03: Check that Crc_CalculateCRC8H2F() and StbM_GetCurrentVirtualLocalTime() functions were called.
    04: Create OFS frame.
    05: RxIndication for OFS frame arrives.
    06: CanTSynGlobalTimeFollowUpTimeout for TimeDomain0 expired.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    06.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    07: Prepare FUP frame.
    08: RxIndication for FUP frame arrives, after CanTSynGlobalTimeFollowUpTimeout expired.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    08.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    08.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    09: Check that CanTSyn module ignores FUP frame, and is waiting for a new SYNC frame.
    10: Check that StbM_BusSetGlobalTime was not called is an invalid FUP frame was received
    11: CanTSynGlobalTimeFollowUpTimeout for TimeDomain16 expired.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    11.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    11.1: Check that when SyncPairsPeriod timer expires and the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    12: Prepare OFNS frame.
    13: RxIndication for OFNS frame arrives, after CanTSynGlobalTimeFollowUpTimeout expired.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    13.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    13.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    14: Check that CanTSyn module ignores OFNS frame, and is waiting for a new OFS frame.
    15: Prepare a new SYNC message.
    16: VP(CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_SyncRXWAIT):
        RxIndication for a new SYNC frame arrives.
    17: Check if Crc_CalculateCRC8H2F() and StbM_GetCurrentVirtualLocalTime() were called.
    18: Prepare a new OFS message.
    19: VP(CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_OfsRXWAIT):
        RxIndication for a new OFS frame arrives.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    19.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    19.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    If CanTSynGlobalTimeFollowUpTimeout expired, CanTSyn module shall ignore FUP and OFNS frames
    and shall wait for a new SYNC and OFNS message.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1594</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_007_Startup_No_SequenceCounter_Check</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>2997</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that:
    - no Sequence Counter check is performed after start-up and the SYNC/OFS message will successfully be processed even if
      SC exceeds TimeSequenceCounterJumpWidth;
    - when there is no TIMEOUT bit set in StbM module and the SYNC-FUP/OFS-OFNS sequence is not the first one 
      and Sequence Counter check is enabled (i.e., CanTSynGlobalTimeSequenceCounterJumpWidth &gt; 0), the SC will 
      be checked against TimeSequenceCounterJumpWidth .
  
Test Object: 
    JumpWidth between two SYNC messages and two OFS messages is respected.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Execution: 
    01: Prepare StbM stubs for valid FUP frame
----------------------------------------  Sequence Counter will not be checked after startup----------------------------------------
    02: Create SYNC frame.
    03: RxIndication for SYNC frame with SC=4 arrives.
    04: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00221):
        Check that SYNC frame was accepted and StbM_GetCurrentVirtualLocalTime() function was called.
    05: Create OFS frame.
    06: RxIndication for OFS frame with SC=4 arrives.
    07: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00221):
        Check that SYNC frame was accepted and StbM_GetCurrentVirtualLocalTime() function was called.
    08: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain0 expires.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    08.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    09: Create FUP frame.
    10: RxIndication for FUP frame arrives.
    11: Check if Crc_CalculateCRC8H2F() and StbM_GetCurrentVirtualLocalTime() function were called.
    12: Check if StbM_BusSetGlobalTime() function was called with correct parameters,
        after a successful reception of FUP frame.
    12.1:In case CanTSynTimeValidationSupport is enabled, Check if StbM_CanSetSlaveTimingData() function was called with correct parameters
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    12.2: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    13: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain16 expires.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    13.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    14: Create OFNS frame.
    15: Prepare StbM stubs for valid OFNS frame
    16: RxIndication for OFNS frame arrives.
    17: Check that StbM_BusSetGlobalTime() function was called with correct parameters,
        after a successful reception of OFNS frame.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    17.1: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
--------------------------------------------  Sequence Counter does not exceed JumpWidthLimit  -------------------------------------
    18: Create a new SYNC with SC=6
    19: RxIndication for SYNC arrives and will be accepted because, the difference
        between SYNC messages is smaller or equal to CanTSynGlobalTimeSequenceCounterJumpWidth.
    20: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00223):
        Check if StbM_GetCurrentVirtualLocalTime() and StbM_GetTimeBaseStatus() functions were called.
    21: Create a new OFS message with SC=6;
    22: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00223):
        RxIndication for OFS arrives and will be accepted because the difference
        between OFS messages is smaller or equal to CanTSynGlobalTimeSequenceCounterJumpWidth.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    22.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    23: CanTSynGlobalTimeFollowUpTimeout for TimeDomain0 and TimeDomain16 expired.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    23.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    23.1: Check that when SyncPairsPeriod timer expires and the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    CanTSyn module shall accept consecutive SYNC and OFS frames
    with sequence counter smaller or equal to CanTSynGlobalTimeSequenceCounterJumpWidth.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.syncIngressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.UnusedData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1595</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_008_TIMEOUT_bitWithinTimeBaseStatus_isNotSet_SC_Checked</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>3483</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if Sequence Counter check is enabled (i.e., CanTSynGlobalTimeSequenceCounterJumpWidth &gt; 0),
    The SC will be invalid if SC JumpWidth exceeds CanTSynGlobalTimeSequenceCounterJumpWidth
  
Test Object: 
    JumpWidth between two SYNC messages and two OFS messages is not respected.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Execution: 
    01: Prepare StbM stubs for SYNC frame.
    02: Create SYNC frame.
    03: RxIndication for SYNC frame with SC=2 arrives.
    04: Check that SYNC frame was accepted and StbM_GetCurrentVirtualLocalTime() function was called.
    05: Create OFS frame.
    06: RxIndication for OFS frame with SC=2 arrives.
    07: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain0 expires.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    07.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    08: Create FUP frame.
    09: RxIndication for FUP frame arrives.
    10: Check if StbM_GetCurrentVirtualLocalTime() function was called.
    11: Check if StbM_BusSetGlobalTime() function was called with correct parameters,
        after a successful reception of FUP frame.
    11.1:In case CanTSynTimeValidationSupport is enabled, Check if StbM_CanSetSlaveTimingData() function was called with correct parameters
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    11.2: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    12: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain16 expires.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    12.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    13: Create OFNS frame.
    14: RxIndication for OFNS frame arrives.
    15: Check that StbM_BusSetGlobalTime() function was called with correct parameters,
        after a successful reception of OFNS frame.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    15.1: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    16: Create a new SYNC with SC=8
    17: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00223):
        RxIndication for SYNC arrives and will not be accepted because the difference
        between SYNC messages is greater than CanTSynGlobalTimeSequenceCounterJumpWidth
        and no timeout was reported.
    18: Check that CanTSyn module ignores SYNC frame.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    18.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    19: Create a new OFS message with SC=8;
    20: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00223):
        RxIndication for OFS arrives and will not be accepted because the difference
        between OFS messages is greater than CanTSynGlobalTimeSequenceCounterJumpWidth
        and no timeout was reported.
    21: Check that CanTSyn module ignores OFS frame.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    21.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    CanTSyn module shall not accept consecutive SYNC and OFS frames
    with sequence counter greater than CanTSynGlobalTimeSequenceCounterJumpWidth.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.syncIngressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.UnusedData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1596</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_009_FollowUpTimeout_Occurred_SequenceCounter_Checked</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>3905</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if Sequence Counter check is enabled (i.e., CanTSynGlobalTimeSequenceCounterJumpWidth &gt; 0),
    The SC will be invalid if SC JumpWidth exceeds CanTSynGlobalTimeSequenceCounterJumpWidth 
    also in case of CanTSynGlobalTimeFollowUpTimeout.
  
Test Object: 
    JumpWidth between two SYNC messages and two OFS messages will also be checked,
    if CanTSynGlobalTimeFollowUpTimeout timeout has been detected.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Execution: 
    01: Create SYNC frame.
    02: RxIndication for SYNC frame with SC=2 arrives.
    03: Check that SYNC frame was accepted and that StbM_GetCurrentVirtualLocalTime() and Crc_CalculateCRC8H2F() was called.
    04: Create OFS frame.
    05: RxIndication for OFS frame with SC=2 arrives.
    06: Check that OFS frame was accepted and that StbM_GetCurrentVirtualLocalTime() and Crc_CalculateCRC8H2F() were called.
    07: Wait 10 MFs for CanTSynGlobalTimeFollowUpTimeout for SYNC to expire
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    07.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    08: 11'th MF =&gt; CanTSynGlobalTimeFollowUpTimeout expired for SYNC frame
    09: Wait 2 MFs for CanTSynGlobalTimeFollowUpTimeout for OFS to expire
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    09.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    10: 13'th MF =&gt; CanTSynGlobalTimeFollowUpTimeout expired for OFS frame
-----------------------  Sequence Counter is still checked in case of CanTSynGlobalTimeFollowUpTimeout  ---------------------------------
    11: Create SYNC frame.
    12: RxIndication for SYNC frame with SC=9 arrives.
    13: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00223):
        Check that SYNC frame was not accepted (even if FollowUpTimeout occurred), because Jump Width was exceeded
        and that StbM_GetCurrentVirtualLocalTime, Crc_CalculateCRC8H2F and StbM_GetTimeBaseStatus were called.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    13.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    13.1: Check that for an invalid frame, if the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    14: Create OFS frame.
    15: RxIndication for OFS frame with SC=9 arrives.
    16: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00223):
        Check that OFS frame was not accepted (even if FollowUpTimeout occurred), because Jump Width was exceeded
        and that StbM_GetCurrentVirtualLocalTime, Crc_CalculateCRC8H2F and StbM_GetTimeBaseStatus were called.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    16.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
--------  Sequence Counter is checked if SYNC-FUP or OFS-OFNS sequence is not the first one and no TIMEOUT bit was set in StbM module -----
    17: A new SYNC-FUP sequence is awaited
        RxIndication for SYNC frame with SC=4 arrives and it's accepted because Jump Width is not exceeded.
    18: A new OFS-OFNS sequence is awaited
        RxIndication for OFS frame with SC=4 arrives and it's accepted because Jump Width is not exceeded.
    19: Wait until CanTSynGlobalTimeFollowUpTimeout for SYNC frame expires
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    19.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    19.1: Check that when SyncPairsPeriod timer expires and the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    19.1:In case CanTSynTimeValidationSupport is enabled, Check if StbM_CanSetSlaveTimingData() function was called with correct parameters
    20: RxIndication for FUP frame with SC=4 arrives
    21: Check that StbM_BusSetGlobalTime() was called after a successful SYNC-FUP reception.
    21.1:In case CanTSynTimeValidationSupport is enabled, Check if StbM_CanSetSlaveTimingData() function was called with correct parameters
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    21.2: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    22: Wait until CanTSynGlobalTimeFollowUpTimeout for OFS frame expires
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    22.1: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID.
:-/m4_ifelse( :elif: ),PM_Permutation,p1_TimeValidation_ALL,\-:m4_dnl
    22.1: Check that when SyncPairsPeriod timer expires and the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    23: RxIndication for OFNS frame with SC=4 arrives
    24: Check that StbM_BusSetGlobalTime() was called after a successful OFS-OFNS reception.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    24.1: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    CanTSyn module shall not accept consecutive SYNC and OFS frames
    with sequence counter greater than CanTSynGlobalTimeSequenceCounterJumpWidth,
    if CanTSynGlobalTimeFollowUpTimeout timeout has occurred.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.syncIngressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.UnusedData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1597</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_Det010_Rxindication_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>4437</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_RxIndication() is called with an invalid txPduId
    CANTSYN_E_INVALID_PDUID will be reported to DET.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call CanTSyn_RxIndication(TxPduId = 100U).
    02: VP(CanTSyn.SWS_CanTSyn_00097.INVALID_PDUID.RxIndication)
        Verify that CANTSYN_E_INVALID_PDUID was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00097.INVALID_PDUID.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1598</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_Det011_Rxindication_ModuleUninitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>4501</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_RxIndication() is called before initialization
    of CanTSyn module, CANTSYN_E_UNINIT will be reported to DET.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    Module is not initialized.
  
Test Execution: 
    01: Call CanTSyn_RxIndication(TxPduId = 0U).
    02: VP(CanTSyn.EB.RxIndication.Uninit)
        Verify that CANTSYN_E_UNINIT was reported to DET.
  
Test Input: None.
Test Output: 
  CanTSyn shall inform DET if, development error detection
  is enabled and if function call has failed because CanTSyn was not initialized.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.RxIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1599</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_Det012_Rxindication_PduInfoPtr_Null_Pointer</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>4551</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_RxIndication() is called with PduInfoPtr equals
    NULL_PTR, CANTSYN_E_NULL_POINTER will be reported to DET.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call CanTSyn_RxIndication(PduInfoPtr = NULL_PTR).
    02: VP(CanTSyn.SWS_CanTSyn_00097.PduInfoPtr.E_NULL_POINTER.RxIndication)
        Verify that CANTSYN_E_NULL_POINTER was reported to DET.
  
Test Input: None.
Test Output: 
  CanTSyn shall inform DET if, development error detection
  is enabled and if function call has failed because parameter PduInfoPtr = NULL_PTR.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00097.PduInfoPtr.E_NULL_POINTER.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1600</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_Det013_RxIndication_SduDataPtr_Null_Pointer</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>4599</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_RxIndication() is called with SduDataPtr equals
    NULL_PTR, CANTSYN_E_NULL_POINTER will be reported to DET.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call CanTSyn_RxIndication(SduDataPtr = NULL_PTR).
    02: VP(CanTSyn.SWS_CanTSyn_00097.SduDataPtr.E_NULL_POINTER.RxIndication)
        Verify that CANTSYN_E_NULL_POINTER was reported to DET.
  
Test Input: None.
Test Output: 
  CanTSyn shall inform DET if, development error detection
  is enabled and if function call has failed because parameter SduDataPtr = NULL_PTR.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00097.SduDataPtr.E_NULL_POINTER.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1601</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_Det022_RxIndication_SduLength_NonExteneded</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>4651</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_RxIndication() is called for non extended frame with SduLength is not equal
    eight, the CanTsyn shall ignore the message.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call CanTSyn_RxIndication(SduLength = 7).
    02: VP(CanTSyn.EB.DLC.NormalMessage.INVALID_PDU_LENGTH.RxIndication)
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
        Check that Dem was called for reporting invalid frame length.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
  the CanTsyn shall ignore the message, if function call has failed because parameter SduLength is not 8.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DLC.NormalMessage.INVALID_PDU_LENGTH.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1602</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_Det023_RxIndication_SduLength_Extended</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>4710</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_RxIndication() is called for extended frame with SduLength is not equal
    16, the CanTsyn shall ignore the message.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call CanTSyn_RxIndication(SduLength = 17).
    02: VP(CanTSyn.EB.DLC.ExtendedMessage.INVALID_PDU_LENGTH.RxIndication)
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
        Check that Dem was called for reporting invalid frame length.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
   the CanTsyn shall ignore the message, if CanTSyn_RxIndication call has failed because parameter SduLength is not 16.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DLC.ExtendedMessage.INVALID_PDU_LENGTH.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1603</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_014_RxIndication_UINT32_PduLengthType</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>4782</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_RxIndication() is called with
    an SduLength which has PduLengthType equals UINT32,
    the message will be ignored.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call CanTSyn_RxIndication(SduLength = 65600).
    02: VP(CanTSyn.EB.PDULENGTHTYPE001)
        Verify that message is ignored.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
        Check that Dem was called for reporting invalid frame length.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
  CanTSyn shall ignore the message, if CanTSyn_RxIndication was called with a
  UINT32 SduLength.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.PDULENGTHTYPE001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1604</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_015_OVS_Overflow_SecondsPortion</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>4847</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if the seconds and secondsHi portion is updated accordingly in case a overflow occurs.
  
Test Object: None.
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Receive a SYNC frame with 0xFFFFFFFE seconds portion.
    02: VP(CanTSyn.SWS_CanTSyn_00045):
        Check that SYNC frame was accepted and StbM_GetCurrentVirtualLocalTime() function was called.
    03: RxIndication for FUP frame arrives.
    04: VP(CanTSyn.SWS_CanTSyn_00045):
        Check that FUP frame was accepted and StbM_GetCurrentVirtualLocalTime() function was called.
    05: VP(CanTSyn.SWS_CanTSyn_00075):
        Check if StbM_BusSetGlobalTime() function was called with correct parameters,
        after a successful reception of FUP frame. The seconds portion is updated accordingly
        based on the OVS value.
    05.1:In case CanTSynTimeValidationSupport is enabled, Check if StbM_CanSetSlaveTimingData() function was called with correct parameters
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    05.2: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    CanTSyn module shall adjust the seconds/secondsHi portion based on the OVS value.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150.SwTimeStamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1605</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_016_TIMEOUT_bitWithinTimeBaseStatus_isSet_NoneStuck_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>5017</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verify when first SYNC (or OFS) message in Timeout with none stuck SC
    The time Slave shall consider the  Sequence Counter jump as valid.
  
Test Object: 
    JumpWidth between two SYNC messages and two OFS messages is not respected.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Receive a SYNC frame with SC=3.
    02: Check that the SYNC frame was accepted and StbM_GetCurrentVirtualLocalTime() function was called.
    03: Accept the reception of a OFS frame with SC=4.
    04: Receive the FUP frame with SC=3.
    05: Check that the FUP message was accepted (StbM_BusSetGlobalTime was called).
    05.1:In case CanTSynTimeValidationSupport is enabled, Check if StbM_CanSetSlaveTimingData() function was called.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    05.2: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    06: Receive the OFNS frame with SC=4.
    07: Check that the OFNS message was accepted (StbM_BusSetGlobalTime was called).
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    07.1: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    08: Receive another SYNC message with SC=8.
    09: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00225):
        Check that the SYNC message was accepted due to timeout in StbM (hysteresis disabled).
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    09.1: Check that DEM is called to report PREFAILED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    10: Receive another OFS message with SC=9.
    11: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00225):
        Check that the OFS message was accepted due to timeout in StbM (StbM_BusSetGlobalTime was called
        after the OFNS message was accepted; hysteresis disabled).
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    11.1: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    CanTSyn module shall accept SYNC and OFS frames with none stuck sequence counter 
    when Timeout is reported by StbM. (hysteresis disabled)
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1606</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_017_Invalid_OFNS_NanosecondsAboveDefinedRange</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>5263</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if the OFNS message is ignored in case received with invalid type or
    when the nanoseconds portion is outside the reserved range.
  
Test Object: 
    OFNS messages with invalid format shall be rejected.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Receive a valid OFS message.
    02: RxIndication for an invalid OFNS is received
    03: VP(CanTSyn.SWS_CanTSyn_00041):
        Check that the OFNS message with invalid Type is rejected
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    03.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    04: RxIndication for the new valid OFS frame is received
    05: Check that the new valid OFS frame was accepted

    06: RxIndication for the invalid OFNS is received - nanoseconds above defined range
    07: VP(CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_NsAboveDefinedRange_OfsRXWAIT):
        Check that the OFNS message with invalid nanoseconds portion (overflow of reserved range) is rejected.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    07.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    08: RxIndication for a valid OFNS is received
    09: VP(CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_NsAboveDefinedRange_OfsRXWAIT):
        Check that the valid OFNS message will not be accepted, because a new valid OFS is awaited
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    09.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    10: RxIndication for the new valid OFS frame is received
    11: Check that the new valid OFS frame was accepted
  
Test Input: None.
Test Output: 
    CanTSyn module shall accept SYNC and OFS frames with sequence counter greater than
    CanTSynGlobalTimeSequenceCounterJumpWidth when Timeout is reported by StbM.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_NsAboveDefinedRange_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1607</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_022_Invalid_FUP_NanosecondsAboveDefinedRange</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>5496</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if the FUP message is ignored in case it is received
    with the nanoseconds portion outside the reserved range.
  
Test Object: 
    FUP messages with invalid format shall be rejected.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Receive a valid SYNC message.
    02: RxIndication for the invalid FUP is received - nanoseconds above defined range
    03: Check that the FUP message with invalid nanoseconds portion (overflow of reserved range) is rejected.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    03.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    04: RxIndication for a valid FUP is received
    05: VP(CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_NsAboveDefinedRange_SyncRXWAIT):
        Check that the valid FUP message will not be accepted, because a new valid SYNC is awaited
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    05.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    06: RxIndication for the new valid SYNC frame is received
    07: Check that the new valid SYNC frame was accepted
  
Test Input: None.
Test Output: 
    CanTSyn module shall accept SYNC and OFS frames with sequence counter greater than
    CanTSynGlobalTimeSequenceCounterJumpWidth when Timeout is reported by StbM.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_NsAboveDefinedRange_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1608</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_023_FUP_OFNS_invalid_CRC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>5659</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that:
    - CanTSyn module will ignore FUP and OFNS frames with an invalid CRC and will reset the RxStatus and wait for a new valid SYNC/OFS frame
    - CanTSyn module will ignore FUP and OFNS frames with an invalid DOMAINID and will not reset the RxStatus and wait for a new FUP/OFNS frame with valid domain id
  
Test Object: 
    - If FUP and OFNS frames with an invalid TIME DOMAIN ID are received,
      they shall be ignored and the RxStatus shall not be reset.
    - If FUP and OFNS frames with an invalid CRC are received,
      they shall be ignored and the RxStatus shall be reset.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED
  
Test Execution: 
    01: Create SYNC frame.
    02: RxIndication for SYNC frame arrives.
    03: Check if StbM_GetCurrentVirtualLocalTime() function was called.
    04: Create OFS frame.
    05: RxIndication for OFS frame arrives.
    06: Call several times CanTSyn_MainFunction API
    --------------------------------- receive FUP with an invalid DOMAINID ------------------------------------
    07: Create FUP frame.
    08: RxIndication for FUP frame with an invalid DOMAINID arrives.
    09: Check that no function was called for a FUP frame with an invalid DOMAINID
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
        except reporting an invalid frame to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    10: Prepare a valid FUP frame
    11: RxIndication for a valid FUP frame arrives
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    11.1: Check that StbM_BusSetGlobalTime was called after a successful SYNC-FUP reception,
          and that the valid FUP frame was accepted if FollowUp timeout was not expired.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    12: Check that no other calls were performed
    13: Prepare a new valid SYNC frame
    14: RxIndication for a new valid SYNC frame arrives
    15: VP(CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidDOMAINID_SyncRXWAIT):
        Check that the new valid SYNC frame is accepted
    16: Call several times CanTSyn_MainFunction API
   --------------------------------- receive FUP with an invalid CRC ------------------------------------
    17: Create FUP frame.
    18: RxIndication for FUP frame with an invalid CRC arrives.
    19: Check that Crc_CalculateCRC8H2F function was called
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    19.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    20: Check that no function was called for a FUP frame with an invalid CRC
    21: Prepare a valid FUP frame
    22: RxIndication for a valid FUP frame arrives
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    22.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    23: Check that the valid FUP frame is ignored, because CanTSyn is waiting for a new SYNC reception
    24: Prepare a new valid SYNC frame
    25: RxIndication for a new valid SYNC frame arrives
    26: VP(CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidCRC_SyncRXWAIT):
        Check that the new valid SYNC frame is accepted
    27: Call several times CanTSyn_MainFunction API

    --------------------------------- receive OFNS with an invalid DOMAINID -------------------------------------
    28: Create OFNS frame.
    29: RxIndication for OFNS frame, with an invalid DOMAINID value, arrives.
    30: Check that StbM_BusSetGlobalTime was not called for a OFNS frame with an invalid DOMAINID
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
        and Dem was called for reporting a frame with an invalid domain Id
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    31: Prepare a valid OFNS frame
    32: RxIndication for a valid OFNS arrives
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    32.1: Check that StbM_BusSetGlobalTime was called after a successful OFS-OFNS reception,
          and that the valid OFNS frame was accepted if FollowUp timeout was not expired.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    33: Check that no other calls were performed
    34: Prepare a new valid OFS frame
    35: RxIndication for a new valid OFS frame arrives
    36: VP(CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidDOMAINID_OfsRXWAIT):
        Check that the new valid OFS frame is accepted
    --------------------------------- receive OFNS with an invalid CRC -------------------------------------
    37: Create OFNS frame.
    38: RxIndication for OFNS frame, with an invalid CRC value, arrives.
    39: Check that StbM_BusSetGlobalTime was not called for a OFNS frame with an invalid CRC
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    39.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    40: Prepare a valid OFNS frame
    41: RxIndication for a valid OFNS arrives
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    41.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    42: Check that the valid OFNS frame is ignored, because CanTSyn is waiting for a new OFS reception
    43: Prepare a new valid OFS frame
    44: RxIndication for a new valid OFS frame arrives
    45: VP(CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidCRC_OfsRXWAIT):
        Check that the new valid OFS frame is accepted
  
Test Input: None.
Test Output: 
    CanTSyn module shall ignore FUP and OFNS frames with an invalid CRC and reset the RxStatus and wait for a new valid SYNC/OFS frame
    CanTSyn module shall ignore FUP and OFNS frames with an invalid DOMAINID and not reset the RxStatus and wait for a new FUP/OFNS frame with valid domain id
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidCRC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1462</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidDOMAINID_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1461</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidCRC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1437</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidDOMAINID_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1609</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_018_IgnoreRx</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>6186</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if the state machine of CanTSyn relies on the return value of
    StbM_GetCurrentVirtualLocalTime(). When this API return E_NOT_OK
    the state machine shall be reset so that the message sequence starts again with SYNC messages.
  
Test Object: 
    Unexpected messages shall be rejected.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Receive a SYNC message that will be rejected because StbM_GetCurrentVirtualLocalTime() returns
        E_NOT_OK.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    01.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    02: VP(CanTSyn.EB.Rx_StbM_GetCurrentVirtualLocalTime_E_NOT_OK):
        Check that the followed FUP message is rejected.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    02.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    03: Receive another SYNC message (on the same PDU ID) which is accepted.
    04: VP(CanTSyn.EB.Rx_StbM_GetCurrentVirtualLocalTime_E_NOT_OK):
        The FUP message received is ignored because the StbM_GetCurrentVirtualLocalTime() returns
        E_NOT_OK.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    04.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    05: The status of CanTSyn reset to receive SYNC messages; the incoming FUP message
        is ignored.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    05.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    06: VP(CanTSyn.EB.Rx_StbM_GetCurrentVirtualLocalTime_E_NOT_OK):
        Check that a new SYNC message is accepted.
  
Test Input: None.
Test Output: 
    CanTSyn module shall fully process the SYNC and FUP frames only when StbM_GetCurrentVirtualLocalTime()
    and StbM_GetCurrentVirtualLocalTime() return E_OK.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Rx_StbM_GetCurrentVirtualLocalTime_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1610</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_019_Successful_SYNC_FUP_OFS_Extended_Reception</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>6390</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts extended:
    -SYNC frames with type 0x20 and a correct CRC
    -OFS frames with type 0x64 and a correct CRC value
    -FUP frames with correct SC, type equal to 0x28 and a correct CRC value
    if CanTSynRxCrcValidated is configured to CRC_VALIDATED.
    Test updated for ASCCANTSYN-155.
  
Test Object: 
    Successful reception of SYNC/FUP CRC, OFS/new OFS CRC extended frames followed by another OFS/new OFS CRC sequences with correct payload.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_VALIDATED.
  
Test Execution: 
    01: Preconditions
    02: Prepare Crc stubs for SYNC CRC extended frame.
    03: Create SYNC extended frame.
    04: Call CanTSyn_RxIndication() for SYNC CRC extended frame.
    05: Check if StbM_GetCurrentVirtualLocalTime() was called to retrieve T_VLT (virtual local time).
    06: Check if Crc_CalculateCRC8H2F() function was called with correct parameters.
    07: Create OFS extended frame.
    08: RxIndication for OFS extended arrives.
    09: Check if Crc_CalculateCRC8H2F() function was called with correct parameters.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    09.1: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    10: Wait until CanTSynGlobalTimeFollowUpTimeout for TimeDomain_0 expires.
    11: Create FUP CRC extended frame.
    12: Call CanTSyn_RxIndication() for FUP CRC extended frame.
    13: Check if StbM_GetCurrentVirtualLocalTime() was called to retrieve
        T_VLT (virtual local time).
    14: Check that StbM_BusSetGlobalTime() was called with correct parameters,
        after a successful reception of FUP CRC extended frame.
    14.1:In case CanTSynTimeValidationSupport is enabled, Check if StbM_CanSetSlaveTimingData() function was called with correct parameters
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    14.2: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    15: Create SYNC extended frame with the same SC as previous.
    16: RxIndication for SYNC extended arrives and is ignored (SC counter difference is 0).
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    16.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    17: Create OFS extended frame.
    18: RxIndication for OFS extended arrives.
    19: Check if Crc_CalculateCRC8H2F() and StbM_GetTimeBaseStatus() functions were called with correct parameters.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    19.1: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    20: Create OFS extended frame with same SC as previous.
    21: RxIndication for OFS extended arrives and is ignored (SC counter difference is 0).
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    21.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    22: Create second OFS extended frame.
    23: VP(CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_OfsRXWAIT):
        RxIndication for the second OFS extended frame arrives.
  
Test Input: None.
Test Output: 
    The SYNC/FUP CRC and OFS CRC sequences shall be successfully received.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00072.StbM.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.ExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1611</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_020_Invalid_OFS_extended</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>6977</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if the OFS extended message is ignored in case received with invalid type or
    when the nanoseconds portion is outside the reserved range.
  
Test Object: 
    OFS extended messages with invalid format shall be rejected.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Receive an invalid OFS extended message.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    01.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    02: VP(CanTSyn.SWS_CanTSyn_00041,
           CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_NsAboveDefinedRange_OfsRXWAIT):
        Check that the OFS extended message with invalid nanoseconds portion (overflow of reserved range) is rejected.
    03: VP(CanTSyn.ASR23-11.SWS_CanTSyn_00086):
        Check that the OFS extended message with invalid Type is rejected.
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    03.1: Check that for an invalid frame, DEM will be called with correct event ID and PREFAILED status.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    CanTSyn module shall accept SYNC and OFS frames with sequence counter greater than
    CanTSynGlobalTimeSequenceCounterJumpWidth when Timeout is reported by StbM.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_NsAboveDefinedRange_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1612</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest06_021_SYNC_FUP_OFS_OFNS_WithoutCRC_NoCRCCheckPerformed</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid/source/application/CanTSyn_ConTest_06_RX_SYNC_FUP_OFS_OFNS_CRCVALIDATED_TimeValid.c.m4</sourcefile>
      <sourceline>7117</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the CRC check is not performed for the following frames:
    -SYNC frames with type 0x10
    -OFS frames with type 0x34
    -FUP frames with correct SC, type equal to 0x18
    -OFNS frames with correct SC, type equal to 0x3C
    if CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED.
  
Test Object: 
    When receiving SYNC, FUP, OFS and OFNS frames without CRC, CRC check is not performed.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Prepare stubs ans initialize CanTSyn module
    02: Prepare the timeStamps which will be passed to StbM through StbM_BusSetGlobalTime,
        after receiving a valid SYNC-FUP sequence
    03: Prepare the userData which will be passed to StbM through StbM_BusSetGlobalTime,
        after receiving a valid SYNC-FUP sequence
    04: Prepare SYNC frame to be received
    05: SYNC frame is received
    06: Check that StbM_GetCurrentVirtualLocalTime was called after receiving SYNC.
    07: Check that CRC check was not performed for SYNC without CRC and that
        Crc_CalculateCRC8H2F was not called.
    08: Prepare OFS frame to be received
    09: OFS frame is received
    10: Check that StbM_GetCurrentVirtualLocalTime was called after receiving OFS.
    11: Check that CRC check was not performed for OFS without CRC and that
        Crc_CalculateCRC8H2F was not called.
    12: Wait until CanTSynGlobalTimeFollowUpTimeout expires
    13: Prepare FUP frame to be received.
    14: FUP frame is received
    15: Check that StbM_GetCurrentVirtualLocalTime was called after receiving FUP.
    16: Check that CRC check was not performed for FUP without CRC and that
        Crc_CalculateCRC8H2F was not called.
    17: Check that StbM_BusSetGlobalTime is called  after a valid SYNC-FUP sequence.
    17.1:In case CanTSynTimeValidationSupport is enabled, Check if StbM_CanSetSlaveTimingData() function was called with correct parameters
m4_ifelse(PM_Permutation,p0_No_TimeValidation,\-:m4_dnl
    17.2: Check that when StbM_BusSetGlobalTime is called, DEM is called to report PREPASSED
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    18: Wait until CanTSynGlobalTimeFollowUpTimeout expires
    19: Prepare OFNS frame to be received
    20: Prepare the timeStamps which will be passed to StbM through StbM_BusSetGlobalTime,
        after receiving a valid OFS-OFNS sequence
    21: OFNS frame is received
    22: Check that StbM_GetCurrentVirtualLocalTime was called after receiving OFNS.
    23: Check that CRC check was not performed for OFNS without CRC and that
        Crc_CalculateCRC8H2F was not called.
    24: Check that StbM_BusSetGlobalTime is called  after a valid OFS-OFNS sequence.
  
Test Input: None.
Test Output: 
    The SYNC/FUP no CRC and OFS/OFNS no CRC sequences shall be successfully received
  and CRC check shall not be performed for frames which do not have CRC_VALIDATED configured.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00058.SYNC.ValidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.ValidFUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069.ValidOFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00066.Valid.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.syncIngressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.UnusedData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1613</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest07_001_SYNC_OFS_FUP_OFNS_valid_type_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_07_RX_SYNC_FUP_OFS_OFNS_CRCIGNORED/source/application/CanTSyn_ConTest_07.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts:
      -SYNC frame with type 0x10 and 0x20
      -OFS frame with type 0x34 and 0x44
  
Test Object: 
    Successful reception of SYNC/FUP CRC and SYNC/FUP no CRC sequences with correct payload.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_IGNORED.
  
Test Execution: None.
Test Input: None.
Test Output: 

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00059.SYNC.ValidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062.ValidFUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067.Valid.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070.ValidOFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1614</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest07_002_SYNC_OFS_FUP_OFNS_invalid_type</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_07_RX_SYNC_FUP_OFS_OFNS_CRCIGNORED/source/application/CanTSyn_ConTest_07.c</sourcefile>
      <sourceline>279</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn ignores SYNC, OFS, FUP, OFNS frames with an invalid type.
  
Test Object: 
    SYNC and OFS reception with an invalid type
    FUP and OFNS reception with an invalid type
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_IGNORED.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall ignore SYNC, OFS, FUP, OFNS messages with an invalid type.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00059.SYNC.InvalidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067.InvalidType.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1615</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest07_003_FUP_OFNS_invalid_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_07_RX_SYNC_FUP_OFS_OFNS_CRCIGNORED/source/application/CanTSyn_ConTest_07.c</sourcefile>
      <sourceline>464</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module ignores FUP and OFNS frame with an invalid Sequence Counter.
  
Test Object: 
      Reception of FUP and OFNS with invalid SC
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_IGNORED.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall ignore FUP, OFNS messages with an invalid Sequence Counter.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00062.InvalidSC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00070.InvalidSC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1616</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest07_004_OFS_Extended_valid_type_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_07_RX_SYNC_FUP_OFS_OFNS_CRCIGNORED/source/application/CanTSyn_ConTest_07.c</sourcefile>
      <sourceline>607</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts:
      -OFS extended frames with type 0x54 and 0x64
  
Test Object: 
    Successful reception of SYNC/FUP CRC and SYNC/FUP no CRC sequences with correct payload.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_IGNORED.
  
Test Execution: None.
Test Input: None.
Test Output: 

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00067.Valid.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1617</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest08_001_Successful_SYNC_FUP_OFS_OFNS_Reception</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts:
       -SYNC frames with type 0x10
       -OFS frames with type 0x34
       -FUP frames with correct SC and type equal to 0x18
       -OFNS frames with correct SC, type equal to 0x3C,
    if CanTSynRxCrcValidated is configured to CRC_NOT_VALIDATED.
  
Test Object: 
    Successful reception of SYNC/FUP CRC and OFS/OFNS CRC sequences with correct payload.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated  is configured CRC_NOT_VALIDATED
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC/FUP CRC and OFS/OFNS CRC sequences shall be successfully received if CanTSynRxCrcValidated
    is configured to CRC_NOT_VALIDATED.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00058.SYNC.ValidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.ValidFUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00066.Valid.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069.ValidOFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1466</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_SyncRXWAIT-FupRXWAITTIMEOUT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1457</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1447</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfsRXWAIT-OfnsRXWAITTIMEOUT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1618</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_002_SYNC_OFS_FUP_OFNS_invalid_TYPE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>260</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module ignores SYNC, OFS, FUP and OFNS frames,
    with an invalid type.
  
Test Object: 
    SYNC, OFS, FUP, OFNS reception with an invalid type.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated  is configured CRC_NOT_VALIDATED
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall ignore SYNC, OFS, FUP and OFNS frames with invalid types.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00058.SYNC.InvalidType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00066.InvalidType.NormalOFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1619</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_003_FUP_OFNS_invalid_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>457</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module ignores FUP and OFNS frames,
    with invalid sequence counter.
  
Test Object: 
    FUP and OFNS reception with an invalid sequence counter.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated  is configured CRC_NOT_VALIDATED
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall ignore FUP and OFNS messaged, with an invalid Sequence Counter.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00061.InvalidSC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00069.InvalidSC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1620</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_004_RxFupFrame_NsecInRange</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>595</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts SYNC follow up frames when the value of
    global time seconds read from the bus is not equal with 0xFFFFFFFF.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated  is configured CRC_NOT_VALIDATED
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1621</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_005_RxFupFrame_NsecInRange</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>740</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts SYNC follow up frames when the value of
    global time seconds read from the bus is equal with 0xFFFFFFFF.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated  is configured CRC_NOT_VALIDATED
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1622</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_006_RxFupFrame_NsecOutOfRange</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>896</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn rejects the message if the nanoseconds portion from the Follow-Up
    frame does not match the defined range of StbM_TimeStampType.nanoseconds (999.999.999).
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated  is configured CRC_NOT_VALIDATED
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1623</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_007_RxFupFrame_OutOfRange</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>1036</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts SYNC follow up frames when the value of
    global time nanoseconds read from the bus is equal with 0xFFFFFFFF.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated  is configured CRC_NOT_VALIDATED
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1624</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_008_RxFollowUpTimeout_AwaitedFUP_ReceivedImmediately_AfterSYNC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>1192</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if after a received SYNC frame CanTSyn module accepts
    the immediately received awaited FUP frame,
    when CanTSynGlobalTimeFollowUpTimeout is disabled.
  
Test Object: 
    Successful reception of SYNC and FUP, when CanTSynGlobalTimeFollowUpTimeout is set to zero.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn shall accept the awaited FUP frame, immediately after reception of SYNC,
    without waiting for CanTSynGlobalTimeFollowUpTimeout to expire.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP.ReceivedImmediately.AfterSYNC.vc01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_SyncRXWAIT-FupRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1465</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1625</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_009_RxFollowUpTimeout_AwaitedFUP_ReceivedLater_AfterAFewMainFunctions</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>1374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if after a received SYNC frame, if CanTSynGlobalTimeFollowUpTimeout is configured to zero
    and the awaited FUP frame arrives later, after a few MFs, it shall be accepted
    and after that a new SYNC-FUP sequence shall be again awaited.
  
Test Object: 
    FUP frame will be accepted, even if it is received later, after a few MFs and
    CanTSynGlobalTimeFollowUpTimeout shall not be taken into consideration.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn shall accept the late received FUP frame (received after a few CanTSyn_MainFunctions).
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP.ReceivedLater.AfterAFewMainFunctions.vc02</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1626</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_010_RxFollowUpTimeout_AwaitedFUP_ReceiveSYNC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>1561</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that after the reception of a SYNC frame, if CanTSynGlobalTimeFollowUpTimeout is configured to zero
    and instead of the awaited FUP frame, a SYNC frame is received, it will be ignored.
  
Test Object: 
    When FUP frame is awaited and a SYNC frame is received, the RxStatus will be reseted, in order to wait for a new SYNC frame.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    If FUP frame is awaited and an invalid FUP frame is received,
    the CanTSyn RxStatus shall be reseted to wait for a new SYNC frame.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.FUP.ReceiveSync.vc03</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidTYPE_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1627</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_016_RxFollowUpTimeout_AwaitedFUP_ReceiveFUP_InvalidLENGTH_InvalidTYPE_InvalidSC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>1771</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that after the reception of a SYNC frame, if CanTSynGlobalTimeFollowUpTimeout is configured to a value greater than zero
    and instead of the awaited FUP frame, an invalid FUP frame (invalid length, type or sc) is received, it will be ignored and
    the RxStatus will be reset.
  
Test Object: 
    Invalid FUP frame reception will be ignored and a new valid SYNC-FUP sequence shall be awaited.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn shall not accept an invalid FUP frame and shall reset the RxStatus to wait for a new valid SYNC-FUP sequence.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidLENGTH_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1458</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidTYPE_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1463</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_InvalidSC_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1460</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAIT_NsAboveDefinedRange_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1628</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_011_RxFollowUpTimeout_AwaitedOFNS_ReceivedImmediately_AfterOFS</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>2122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if after a received OFS frame CanTSyn module accepts
    the immediately received awaited OFNS frame,
    when CanTSynGlobalTimeFollowUpTimeout is disabled.
  
Test Object: 
     Successful reception of OFS and immediate OFNS, when CanTSynGlobalTimeFollowUpTimeout is set to zero.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn shall accept the awaited OFNS frame, immediately after reception of OFS,
    without waiting for CanTSynGlobalTimeFollowUpTimeout to expire.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS.ReceivedImmediately.AfterOFS.vc01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfsRXWAIT-OfnsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1443</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1629</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_012_RxFollowUpTimeout_AwaitedOFNS_ReceivedLater_AfterAFewMainFunctions</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>2308</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if after a received OFS frame, if CanTSynGlobalTimeFollowUpTimeout is configured to zero
    and the awaited OFNS frame arrives later, after a few MFs, it shall be accepted
    and after that a new OFS-OFNS sequence shall be again awaited.
  
Test Object: 
    OFNS frame will be accepted, even if it is received later, after a few MFs and
    CanTSynGlobalTimeFollowUpTimeout shall not be taken into consideration.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn shall accept the late received OFNS frame (received after a few CanTSyn_MainFunctions).
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS.ReceivedLater.AfterAFewMainFunctions.vc02</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1630</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_013_RxFollowUpTimeout_AwaitedOFNS_ReceiveOFS</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>2496</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that after the reception of an OFS frame, if CanTSynGlobalTimeFollowUpTimeout is configured to zero
    and instead of the awaited OFNS frame, an OFS frame is received, it will be ignored.
  
Test Object: 
    OFS frame will be ignored, if OFNS frame is awaited.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn shall not accept a received OFS frame,
    even if it's received immediately after the first OFS or after a few CanTSyn_MainFunctions,
    if the awaited OFNS frame wasn't received.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.Awaited.OFNS.ReceiveOfs.vc03</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidTYPE_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1631</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_017_RxFollowUpTimeout_AwaitedOFNS_ReceiveOFNS_InvalidLENGTH_InvalidTYPE_InvalidSC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>2707</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that after the reception of a OFS frame, if CanTSynGlobalTimeFollowUpTimeout is configured to a value greater than zero
    and instead of the awaited OFNS frame, an invalid OFNS frame (invalid length, type or sc) is received, it will be ignored and
    the RxStatus will be reset.
  
Test Object: 
    Invalid OFNS frame reception will be ignored and a new valid OFS-OFNS sequence shall be awaited.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn shall not accept an invalid OFNS frame and shall reset the RxStatus to wait for a new valid OFS-OFNS sequence.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidLENGTH_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1440</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidTYPE_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1441</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_InvalidSC_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1442</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAIT_NsAboveDefinedRange_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1632</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_014_ReceptionOf_SYNC_WithSameSC_TIMEOUTBitSet_Ignored</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>3071</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that CanTSyn Will consider the SC invalid in case of timeout bit 
    is set and the SC was stuck, and the frame will be ignored.
  
Test Object: 
    This test tests if CanTSyn ignores a SYNC frame with a stuck SC, even if TIMEOUT occurred in StbM
  
Test Precondition: 
    - Module is initialized.
    - CanTSynGlobalTimeSequenceCounterJumpWidth is equal to 1 (not allowed to be 0)
    - TIMEOUT bit shall be set in StbM
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC/FUP CRC and OFS/OFNS CRC sequences shall be successfully received if CanTSynRxCrcValidated
    is configured to CRC_NOT_VALIDATED.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1633</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest08_015_Det_RxIndication_SduLength_No_Exteneded_Configured</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_08_RX_SYNC_FUP_OFS_OFNS_CRCNOTVALIDATED/source/application/CanTSyn_ConTest_08.c</sourcefile>
      <sourceline>3299</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_RxIndication() is called for non extended frame with SduLength is not equal
    eight, CANTSYN_E_INV_PDU_LENGTH will be reported to DET.
  
Test Object: 
    CanTSyn_RxIndication()
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call CanTSyn_RxIndication(SduLength = 9).
    02: VP(CanTSyn.EB.DLC.NormalMessage.INVALID_PDU_LENGTH.RxIndication)
  
Test Input: None.
Test Output: 
  the CanTsyn shall ignore the message, if function call has failed because parameter SduLength is not 8.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.DLC.NormalMessage.INVALID_PDU_LENGTH.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1634</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest09_001_SC_Wraps_Around</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_09_RX_SYNC_SC_WRAPS_AROUND/source/application/CanTSyn_ConTest_09.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module respects CanTSynGlobalTimeSequenceCounterJumpWidth,
    even if sequence counter was reseted.
  
Test Object: 
    Successful reception of SYNC/FUP CRC and OFS/OFNS CRC sequences with correct payload,
    even if SC wraps around.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated  is configured CRC_NOT_VALIDATED
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall accept frames after the reset of sequence counter.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_SyncRXWAIT_NoFupReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1453</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsOfns.CanTSynRxStatus_OfnsRXWAITTIMEOUT_OfsRXWAIT_NoOfnsReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1635</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest10_001_Immediate_Transmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_10_SYNC_OFS_Immediate_Transmission/source/application/CanTSyn_ConTest_10.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if CanTSyn module sends immediately SYNC and OFS messages,
    when all conditions for an immediate transmission are respected:
          1. CanTSynImmediateTimeSync is set to TRUE
          2. timeBaseUpdateCounter of a Time Base has changed
          3. GLOBAL_TIME_BASE bit of the timeBaseStatus is set
  
Test Object: 
    This test tests on-request transmission of TimeSync messages.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    If all conditions for an immediate transmission are fulfilled,
    CanTSyn module shall send SYNC and OFS messages immediately, otherwise a cyclic transmission will take place.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120.SYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120.OFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1636</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest10_002_Immediate_Transmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_10_SYNC_OFS_Immediate_Transmission/source/application/CanTSyn_ConTest_10.c</sourcefile>
      <sourceline>212</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if CanTSyn module sends synchronously SYNC and OFS messages,
    after CyclicMsgResumeTimeWait expires and load TxPeriod,
    when not all conditions for an immediate transmission are fulfilled:
          -GLOBAL_TIME_BASE bit within timeBaseStatus is not set for the frame which
           must not be sent.
  
Test Object: 
    This test tests on-request transmission of TimeSync messages.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    If all conditions for an immediate transmission are fulfilled,
    CanTSyn module shall send SYNC and OFS messages immediately, otherwise a cyclic transmission will take place.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00121.SYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00121.OFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1637</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest10_003_Immediate_Transmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_10_SYNC_OFS_Immediate_Transmission/source/application/CanTSyn_ConTest_10.c</sourcefile>
      <sourceline>516</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if CanTSyn module sends cyclic instead of immediately SYNC and OFS messages,
    when conditions for an immediate transmission are not respected:
          1. CanTSynImmediateTimeSync is set to TRUE
          2. timeBaseUpdateCounter of a Time Base has not changed
    See also ASCCANTSYN-104.
  
Test Object: 
    This test tests on-request transmission of TimeSync messages,
    when conditions for immediate transmission are not respected.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    If all conditions for an immediate transmission are fulfilled,
    CanTSyn module shall send SYNC and OFS messages immediately, otherwise a cyclic transmission will take place.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120.SYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00120.OFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00121.SYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00121.OFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1638</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest10_004_GlobalTimeBaseBit_StopsImmediateTransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_10_SYNC_OFS_Immediate_Transmission/source/application/CanTSyn_ConTest_10.c</sourcefile>
      <sourceline>810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if CanTSyn module sends SYNC and OFS messages and an immediate OFS message
    has the GLOBAL_TIME_BASE status bit set to 0, that OFS message shall not be sent immediately.
  
Test Object: 
    This test verifies the transmission of an OFS message if the GLOBAL_TIME_BASE bit is
    unexpectedly set to 0.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1639</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest01_001_ImmediateTransmission_OFS_TxPeriod_Zero</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_11_Immediate_TX_GlobalTimeTxPeriod_ZERO/source/application/CanTSyn_ConTest_11.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSynGlobalTimeTxPeriod is 0 and the immediate transmission is
    enabled an OFS immediate frame is transmitted.
  
Test Object: 
    CanTSyn_MainFunction()
  
Test Precondition: 
    Initialize CanIf and StbM stubs.
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON and CanTSynGlobalTimeTxPeriod is 0.
    CanTSynImmediateTimeSync is enabled.
  
Test Execution: 
    01: Prepare stubs.
    02: Master attempts to send an OFS frame.
    03: VP(CanTSyn.SWS_CanTSyn_00038): Check if CanIf, StbM stubs were called.
    04: VP(CanTSyn.SWS_CanTSyn_00038): Check if the OFS frame has been transmitted as an
        immediate frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1640</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest01_002_ImmediateTransmission_SYNC_TxPeriod_Zero</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_11_Immediate_TX_GlobalTimeTxPeriod_ZERO/source/application/CanTSyn_ConTest_11.c</sourcefile>
      <sourceline>150</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSynGlobalTimeTxPeriod is 0 and the immediate transmission is
    enabled an immediate SYNC frame is transmitted.
  
Test Object: 
    CanTSyn_MainFunction()
  
Test Precondition: 
    Initialize CanIf and StbM stubs.
    Module is initialized.
    TransmissionMode is CANTSYN_TX_ON and CanTSynGlobalTimeTxPeriod is 0.
    CanTSynImmediateTimeSync is enabled.
  
Test Execution: 
    01: Prepare stubs.
    02: Master attempts to send an SYNC frame.
    03: VP(CanTSyn.SWS_CanTSyn_00028): Check if CanIf, StbM stubs were not called.
    04: VP(CanTSyn.SWS_CanTSyn_00028): Check if SYNC frame has been transmitted as an
        immediate frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1641</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest12_001_ConfirmTxFromCanIfTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_12_AllowConfirmTxFromTransmit/source/application/CanTSyn_ConTest_12.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if CanTSyn module is capable to handle SYNC and OFS messages,
    when CanTSyn_TxConfirmation() arrives in context of CanIf_Transmit().
  
Test Object: 
    Message confirmation is handled on ISR.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall be able to handle the message sequences even if TxConfirmation is call from
    CanIf_Transmit.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00150.SwTimeStamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1642</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest13_001_Successful_SYNC_FUP_OFS_OFNS_CRC_Reception</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid/source/application/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid.c.m4</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts:
        -SYNC frames with type 0x20 and a correct CRC
        -OFS frames with type 0x40 and a correct CRC value
        -FUP frames with correct SC, type equal to 0x28 and a correct CRC value
        -OFNS frames with correct SC, type equal to 0x48 and a correct CRC value,
    if CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
  
Test Object: 
    Successful reception of SYNC/FUP CRC, OFS/OFNS CRC followed by another OFS/OFNS CRC sequences with correct payload.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC/FUP CRC and OFS/OFNS CRC sequences shall be successfully received.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.ValidSYNCMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.ValidFUPMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.ValidOFNSMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00072.StbM.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00077.OFSMatchOFNS.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00076.SYNCMatchFUP.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT1VLT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.InterruptProtection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.SetT2VLT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00144.RetrieveT0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.RetrieveData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ComputeT4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.CalculateTLSYNC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00148.ForwardRxTimeTuple</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.DissasembleMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00087.ForwardGlobalTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133.SyncToGTM.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00133.SyncToSubDomain.SGW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00085.CRC.NormalMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.SequenceCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.syncIngressTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.preciseOriginTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.UnusedData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00140.segmentId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1643</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest13_002_Successful_SYNC_FUP_OFS_OFNS_NOCRC_Reception</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid/source/application/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid.c.m4</sourcefile>
      <sourceline>532</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module doesn't ignore SYNC, OFS, FUP and OFNS frames with a non CRC type.
  
Test Object: 
    SYNC and OFS reception with No CRC.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The CanTSyn shall accept SYNC, FUP, OFS and OFNS correct non CRC types.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.ValidSYNCMessage.NoCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.NoCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.ValidFUPMessage.NoCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.ValidOFNSMessage.NoCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1644</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest13_003_SYNC_FUP_OFS_OFNS_Invalid_TYPE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid/source/application/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid.c.m4</sourcefile>
      <sourceline>899</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module ignores FUP and OFNS frames, with an invalid type.
  
Test Object: 
    SYNC, FUP, OFS and OFNS reception with an invalid type.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The CanTSyn shall ignore FUP and OFNS messages with an invalid type.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.InvalidType.SYNCMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.InvalidType.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidType.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.InvalidType.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1645</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest13_004_SYNC_FUP_OFS_OFNS_invalid_CRC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid/source/application/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid.c.m4</sourcefile>
      <sourceline>1199</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that CanTSyn will ignore a SYNC, FUP, OFS and OFNS frames with invalid CRC value.
  
Test Object: 
    SYNC, FUP, OFS and OFNS reception with an invalid CRC.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The CanTSyn module shall ignore FUP and OFNS messages with an invalid CRC.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.InvalidCRC.SYNCMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidCRC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.InvalidCRC.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.InvalidCRC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1646</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest13_005_FUP_OFNS_invalid_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid/source/application/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid.c.m4</sourcefile>
      <sourceline>1469</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that CanTSyn module will ignore FUP and OFNS frames
    with an invalid sequence counter.
  
Test Object: 
    FUP and OFNS reception with an invalid Sequence Counter.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The CanTSyn shall ignore FUP message with a different Sequence Counter than the value of the
    corresponding SYNC and OFNS message with a different SC than the value of the corresponding OFS message.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.InvalidSC.FUPMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00114.InvalidSC.OFNSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00076.NoMatchSYNC_FUP.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00077.NoMatchOFS_OFNS.SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1647</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest13_006_Successful_SYNC_FUP_OFS_Extended_Reception</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid/source/application/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid.c.m4</sourcefile>
      <sourceline>1620</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module accepts extended:
    -SYNC frames with type 0x20 and a correct CRC
    -OFS frames with type 0x64 and a correct CRC value
    -FUP frames with correct SC, type equal to 0x28 and a correct CRC value
  
Test Object: 
    Successful reception of SYNC/FUP CRC, OFS/new OFS CRC extended frames followed by another OFS/new OFS CRC sequences with correct payload.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynRxCrcValidated is configured to CRC_OPTIONAL.
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC/FUP CRC and OFS CRC sequences shall be successfully received.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00109.ValidSYNCMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00110.ValidFUPMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1648</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest13_007_OFS_extended</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid/source/application/CanTSyn_ConTest_13_RX_SYNC_FUP_OFS_OFNS_CRCOPTIONAL_TimeValid.c.m4</sourcefile>
      <sourceline>2117</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if the OFS extended message is accepted with CRC type and a valid CRC or with valid No CRC type and no CRC.
  
Test Object: 
    OFS extended messages with valid format shall be accepted.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall accept OFS frames with with valid format.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.CRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.ValidOFSMessage.NoCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00113.InvalidCRC.OFSMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1649</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest14_001_MasterSendsSync_TxConfirmationNOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_14_SyncReliableTxConf/source/application/CanTSyn_ConTest14.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Thie test verifies that if CanTSyn_TxConfirmation() with result = E_NOT_OK is called for a
    transmitted sync frame, the state machine shall be reset and a new sync frame shall be tranmitted
    as soon as CanTSynGlobalTimeTxPeriod elapses.
  
Test Object: 
    CanTSyn_TxConfirmation()
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: Call CanTSyn_MainFunction() to start transmitting the Sync frame.
    02: VP() Verify that the Sync frame was transmitted correctly.
    03: Verify that the sync frame has the correct payload and length.
    04: CanTSyn_TxConfirmation() with result E_NOT_OK is called.
    05: Verify that nothing was called after CanTSyn_TxConfirmation().
    06: Call CanTSyn_MainFunction() 40 times until CanTSynGlobalTimeTxPeriod elapses
    07: Verify that a new sync frame was transmitted.
    08: Call CanTSyn_TxConfirmation() with result OK.
    09: Call CanTSyn_MainFunction() enough times that the debounce counter elapses.
    10: Verify that the SyncFUp frame was successfully transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1650</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest14_002_MasterSendsSync_TxConfirmationBefore3Sec</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_14_SyncReliableTxConf/source/application/CanTSyn_ConTest14.c</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_TxConfirmation() with result = E_OK is called for a
    transmitted sync frame before 3 seconds pass, the frame shall be processed and SyncFUp frame shall
    be transmitted after debounce counter elapses.
  
Test Object: 
    CanTSyn_TxConfirmation()
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: Call CanTSyn_MainFunction() to start transmitting the Sync frame.
    02: VP() Verify that the Sync frame was transmitted correctly.
    03: Verify that the sync frame has the correct payload and length.
    04: Call CanTSyn_MainFunction() and stop before time reaches 3 seconds.
    05: CanTSyn_TxConfirmation() with result E_OK is called.
    06: Verify that StbM_GetCurrentVirtualLocalTime() was called.
    07: Call CanTSyn_MainFunction() enough times that the debounce counter elapses.
    08: Verify that the SyncFUp frame was succesfully tranmsitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1651</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest14_003_MasterSendsSync_TxConfirmationAfter3Sec</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_14_SyncReliableTxConf/source/application/CanTSyn_ConTest14.c</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_TxConfirmation() with result = E_OK is called for a
    transmitted sync frame after 3 seconds pass, the state machine shall be reset and
    a new Sync frame shall be transmitted when due.
  
Test Object: 
    CanTSyn_TxConfirmation()
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: Call CanTSyn_MainFunction() to start transmitting the Sync frame.
    02: VP() Verify that the Sync frame was transmitted correctly.
    03: Verify that the sync frame has the correct payload and length.
    04: Call CanTSyn_MainFunction() enough times so 3 seconds pass since the transmission.
    05: CanTSyn_TxConfirmation() with result E_OK is called.
    06: Verify that nothing is called after CanTSyn_TxConfirmation().
    07: Call CanTSyn_MainFunction() until debounce elapses.
    08: Verify that a new Sync frame was successfully transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1652</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest14_004_MasterSendsSync_TxConfirmationAfter5Sec</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_14_SyncReliableTxConf/source/application/CanTSyn_ConTest14.c</sourcefile>
      <sourceline>495</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that canTSyn shall wait for CanTSyn_TxConfirmation() for transmitted sync frame.
    If more than 3 seconds pass, it shall still wait, but frame shall be dropped and new Sync frame
    shall be transmitted once due.
  
Test Object: 
    SYNC frame followed by FUP frame
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
  
Test Execution: 
    01: Call CanTSyn_MainFunction() to start transmitting the Sync frame.
    02: VP() Verify that the Sync frame was transmitted correctly.
    03: Verify that the sync frame has the correct payload and length.
    04: Call CanTSyn_MainFunction() enough times so 5 seconds pass since the transmission.
    05: CanTSyn_TxConfirmation() with result E_OK is called.
    06: Verify that nothing is called after CanTSyn_TxConfirmation().
    07: Call CanTSyn_MainFunction() until debounce elapses.
    08: Verify that a new Sync frame was successfully transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00033.TxConfirmation.NotReceivedIn3s.Wait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1653</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest15_001_MasterSendsOFS_TxConfirmationNOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_15_OFSReliableTxConf/source/application/CanTSyn_ConTest_15.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_TxConfirmation() with result = E_NOT_OK is called for
    a transmitted OFS frame, no OFNS frame shall be transmitted as soon as the debounce  elapses.
  
Test Object: 
    CanTSyn_TxConfirmation()
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Call CanTSyn_MainFunction().
    02: VP(): Verify that valid OFS frame was tranmitted
    03: Verify if OFS frame has the correct payload and length.
    04: Call CanTSyn_TxConfirmation with result E_NOT_OK.
    05: Wait until CanTSynGlobalTimeDebounceTime expires.
    06: Call CanTSyn_MainFunction().
    07: Verify if OFNS frame was not transmitted.
    08: Call CanTSyn_MainFunction() enough times to that TxPeriod elapses.
    09: VP(): Verify that a valid OFS frame was transmitted.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1654</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest15_002_MasterSendsOFS_TxConfirmationBefore3Sec</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_15_OFSReliableTxConf/source/application/CanTSyn_ConTest_15.c</sourcefile>
      <sourceline>193</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_TxConfirmation() with result = E_OK is called for a
    transmitted OFS frame before 3 seconds pass, the frame shall be processed and OFNS frame shall
    be transmitted after debounce counter elapses.
  
Test Object: 
    CanTSyn_TxConfirmation()
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Call CanTSyn_MainFunction() to start transmitting the OFS frame.
    02: VP() Verify that the OFS frame was transmitted correctly.
    03: Verify that the OFS frame has the correct payload and length.
    04: Call CanTSyn_MainFunction() and stop before time reaches 3 seconds.
    05: CanTSyn_TxConfirmation() with result E_OK is called.
    06: Wait until CanTSynGlobalTimeDebounceTime expires.
    07: Call CanTSyn_MainFunction().
    08: Verify that the OFNS frame was successfully transmitted.
    09: Verify if OFNS frame has the correct payload and length.
    10: CanTSyn_TxConfirmation() for OFNS frame.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1655</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest15_003_MasterSendsOFS_TxConfirmationAfter3Sec</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_15_OFSReliableTxConf/source/application/CanTSyn_ConTest_15.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_TxConfirmation() with result = E_OK is called for a
    transmitted OFS frame after 3 seconds pass, the state machine shall be reset and
    a new OFS frame shall be transmitted when due.
  
Test Object: 
    CanTSyn_TxConfirmation()
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Call CanTSyn_MainFunction() to start transmitting the OFS frame.
    02: VP() Verify that the OFS frame was transmitted correctly.
    03: Verify that the OFS frame has the correct payload and length.
    04: Call CanTSyn_MainFunction() and stop when reaches 3 seconds.
    05: CanTSyn_TxConfirmation() with result E_OK is called.
    06: Call CanTSyn_MainFunction() until debounce elapses.
    07: Verify that a new OFS frame was transmitted.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.ReceivedAfter3s.E_OK.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1656</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest15_004_MasterSendsOFS_TxConfirmationAfter5Sec</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_15_OFSReliableTxConf/source/application/CanTSyn_ConTest_15.c</sourcefile>
      <sourceline>489</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that canTSyn shall wait for CanTSyn_TxConfirmation() for transmitted OFS frame.
    If more than 3 seconds pass, it shall still wait, but frame shall be dropped and new OFS frame
    shall be transmitted once due.
  
Test Object: 
    CanTSyn_TxConfirmation()
  
Test Precondition: 
    -CanIf and StbM stubs are initialized.
    -Module is initialized.
    -SetTransmissionMode is equal to CANTSYN_TX_ON.
  
Test Execution: 
    01: Call CanTSyn_MainFunction() to start transmitting the OFS frame.
    02: VP() Verify that the OFS frame was transmitted correctly.
    03: Verify that the OFS frame has the correct payload and length.
    04: Call CanTSyn_MainFunction() and stop when reaches 5 seconds.
    05: CanTSyn_TxConfirmation() with result E_OK is called.
    06: Call CanTSyn_MainFunction() until debounce elapses.
    07: Verify that a new OFS frame was transmitted.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00042.TxConfirmation.NotReceivedIn3s.Wait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1657</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest16_001_Multicore_SYNC_Master_Slave_DifferentPartitions</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore/source/application/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that:
    - CanTSyn_1_EcucPartition_0_MainFunction_Tx is called only SYNC master frame is transmitted
    - CanTSyn_1_EcucPartition_1_MainFunction_Rx is called only SYNC slave frame is processed
  
Test Object: 
    1. SYNC frames from MASTERs and SLAVEs linked to different partitions (EcucPartition_0 and EcucPartition_1), within same time domain,
       shall be successfully processed.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynMultiCoreSupport is enabled
    - Time Domains assigned to EcucPartitions
  
Test Execution: None.
Test Input: None.
Test Output: 
    1. SYNC frames from MASTERs and SLAVEs linked to different partitions (EcucPartition_0 and EcucPartition_1), within same time domain,
       are successfully processed.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1658</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest16_002_Multicore_OFS_Master_Slave_DifferentPartitions</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore/source/application/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore.c</sourcefile>
      <sourceline>273</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that:
    - CanTSyn_1_EcucPartition_2_MainFunction_Tx is called only OFS master frame is transmitted
    - CanTSyn_1_EcucPartition_3_MainFunction_Rx is called only OFS slave frame is processed
  
Test Object: 
    1. OFS frames from MASTERs and SLAVEs linked to different partitions (EcucPartition_2 and EcucPartition_3), within same time domain,
       shall be successfully processed.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynMultiCoreSupport is enabled
    - Time Domains assigned to EcucPartitions
  
Test Execution: None.
Test Input: None.
Test Output: 
    1. OFS frames from MASTERs and SLAVEs linked to different partitions (EcucPartition_0 and EcucPartition_1), within same time domain,
       are successfully processed.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1659</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest16_003_Multicore_Multiple_SYNC_Masters_Tx_SamePartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore/source/application/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore.c</sourcefile>
      <sourceline>497</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_1_EcucPartition_4_MainFunction_Tx is called,
    frames from both CanTSynGlobalTimeDomain_1_Tx_Part4 and CanTSynGlobalTimeDomain_2_Tx_Part4 masters will be transmitted.
  
Test Object: 
    Frames from both SYNC MASTERs (CanTSynGlobalTimeDomain_1_Tx_Part4 and CanTSynGlobalTimeDomain_2_Tx_Part4)
    linked to the same partition (EcucPartition_4) shall be transmitted.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynMultiCoreSupport is enabled
    - Time Domains assigned to EcucPartitions
  
Test Execution: None.
Test Input: None.
Test Output: 
    Frames from both SYNC MASTERs (CanTSynGlobalTimeDomain_1_Tx_Part4 and CanTSynGlobalTimeDomain_2_Tx_Part4)
    linked to the same partition (EcucPartition_4) are transmitted.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1660</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest16_004_Multicore_Multiple_OFS_Masters_Tx_SamePartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore/source/application/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore.c</sourcefile>
      <sourceline>702</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_1_EcucPartition_7_MainFunction_Tx is called,
    frames from both CanTSynGlobalTimeDomain_19_Tx_Part7 and CanTSynGlobalTimeDomain_20_Tx_Part7 masters will be transmitted.
  
Test Object: 
    Frames from both OFS MASTERs (CanTSynGlobalTimeDomain_19_Tx_Part7 and CanTSynGlobalTimeDomain_20_Tx_Part7)
    linked to the same partition (EcucPartition_7) shall be transmitted.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynMultiCoreSupport is enabled
    - Time Domains assigned to EcucPartitions
  
Test Execution: None.
Test Input: None.
Test Output: 
    Frames from both OFS MASTERs (CanTSynGlobalTimeDomain_19_Tx_Part7 and CanTSynGlobalTimeDomain_20_Tx_Part7)
    linked to the same partition (EcucPartition_7) are transmitted.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1661</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest16_005_Multicore_Multiple_SYNC_Slaves_Rx_SamePartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore/source/application/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore.c</sourcefile>
      <sourceline>903</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_1_EcucPartition_5_MainFunction_Rx is called,
    frames from both CanTSynGlobalTimeDomain_3_Rx_Part5 and CanTSynGlobalTimeDomain_4_Rx_Part5 sync slaves will be successfully processed.
  
Test Object: 
    1. Frames from both SYNC SLAVEs (CanTSynGlobalTimeDomain_3_Rx_Part5 and CanTSynGlobalTimeDomain_4_Rx_Part5)
       linked to the same partition (EcucPartition_5) shall be successfully processed.
    2. Frames from other SYNC SLAVEs (CanTSynGlobalTimeDomain_0_Tx_Part0_Rx_Part1) linked to other partitions (EcucPartition_1) shall not be processed
       on CanTSyn_1_EcucPartition_5_MainFunction_Rx().
  
Test Precondition: 
    - Module is initialized.
    - CanTSynMultiCoreSupport is enabled
    - Time Domains assigned to EcucPartitions
  
Test Execution: None.
Test Input: None.
Test Output: 
    1. Frames from both SYNC SLAVEs (CanTSynGlobalTimeDomain_3_Rx_Part5 and CanTSynGlobalTimeDomain_4_Rx_Part5)
       linked to the same partition (EcucPartition_5) are successfully processed.
    2. Frames from other SYNC SLAVEs (CanTSynGlobalTimeDomain_0_Tx_Part0_Rx_Part1) linked to other partitions (EcucPartition_1) are not processed
       on CanTSyn_1_EcucPartition_5_MainFunction_Rx().
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1662</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest16_006_Multicore_Multiple_OFS_Slaves_Rx_SamePartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore/source/application/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore.c</sourcefile>
      <sourceline>1174</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if CanTSyn_1_EcucPartition_6_MainFunction_Rx is called,
    frames from both CanTSynGlobalTimeDomain_17_Rx_Part6 and CanTSynGlobalTimeDomain_18_Rx_Part6 offset slaves will be successfully processed.
  
Test Object: 
    1. Frames from both OFFSET SLAVEs (CanTSynGlobalTimeDomain_17_Rx_Part6 and CanTSynGlobalTimeDomain_18_Rx_Part6)
       linked to the same partition (EcucPartition_6) shall be successfully processed.
    2. Frames from other OFFSET SLAVEs (CanTSynGlobalTimeDomain_16_Tx_Part2_Rx_Part3) linked to other partitions (EcucPartition_3) shall not be processed
       on CanTSyn_1_EcucPartition_6_MainFunction_Rx().
  
Test Precondition: 
    - Module is initialized.
    - CanTSynMultiCoreSupport is enabled
    - Time Domains assigned to EcucPartitions
  
Test Execution: None.
Test Input: None.
Test Output: 
    1. Frames from both OFFSET SLAVEs (CanTSynGlobalTimeDomain_17_Rx_Part6 and CanTSynGlobalTimeDomain_18_Rx_Part6)
       linked to the same partition (EcucPartition_6) are successfully processed.
    2. Frames from other OFFSET SLAVEs (CanTSynGlobalTimeDomain_16_Tx_Part2_Rx_Part3) linked to other partitions (EcucPartition_3) are not processed
       on CanTSyn_1_EcucPartition_6_MainFunction_Rx().
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1663</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest16_007_Multicore_Multiple_SYNC_OFS_Master_Slaves_SamePartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore/source/application/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore.c</sourcefile>
      <sourceline>1431</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that:
    - CanTSyn_1_EcucPartition_8_MainFunction_Tx is called SYNC frames from MASTER CanTSynGlobalTimeDomain_5_Tx_Rx_Part8 and
      OFS frames from MASTER CanTSynGlobalTimeDomain_21_Tx_Rx_Part8 will be successfully processed
    - CanTSyn_1_EcucPartition_8_MainFunction_Rx is called SYNC frames from SLAVE CanTSynGlobalTimeDomain_5_Tx_Rx_Part8 and
      OFS frames from SLAVE CanTSynGlobalTimeDomain_21_Tx_Rx_Part8 will be successfully processed
  
Test Object: 
    1. SYNC/FUP frames from CanTSynGlobalTimeDomain_5_Tx_Rx_Part8 and OFS/OFNS frames from CanTSynGlobalTimeDomain_21_Tx_Rx_Part8
       linked to the same partition (EcucPartition_8) shall be successfully processed.
  
Test Precondition: 
    - Module is initialized.
    - CanTSynMultiCoreSupport is enabled
    - Time Domains assigned to EcucPartitions
  
Test Execution: None.
Test Input: None.
Test Output: 
    1. SYNC/FUP frames from CanTSynGlobalTimeDomain_5_Tx_Rx_Part8 and OFS/OFNS frames from CanTSynGlobalTimeDomain_21_Tx_Rx_Part8
       linked to the same partition (EcucPartition_8) are successfully processed.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1664</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest16_008_Multicore_Multiple_SYNC_OFS_Master_Slaves_NoPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore/source/application/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore.c</sourcefile>
      <sourceline>1678</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that:
    - CanTSyn_MainFunction() is called, only frames from CanTSynGlobalTimeDomain_6_Tx_Rx_NoPart and CanTSynGlobalTimeDomain_22_Tx_Rx_NoPart
      will be transmitted/received.
    - No CanTSyn_1_EcucPartition_0_MainFunction_Tx_CanTSynGlobalTimeDomain_0_Tx_Part0_Rx_Part1(),
         CanTSyn_1_EcucPartition_1_MainFunction_Rx_CanTSynGlobalTimeDomain_0_Tx_Part0_Rx_Part1(),
         CanTSyn_1_EcucPartition_2_MainFunction_Tx_CanTSynGlobalTimeDomain_16_Tx_Part2_Rx_Part3(),
         CanTSyn_1_EcucPartition_3_MainFunction_Rx_CanTSynGlobalTimeDomain_16_Tx_Part2_Rx_Part3() are called, they will not be processed.
  
Test Object: 
    Successful transmission/reception of SYNC/FUP/OFS/OFNS frames from time domains which are not linked to any partition (normal MainFunction handling)
  
Test Precondition: 
    - Module is initialized.
    - CanTSynMultiCoreSupport is enabled
    - Time Domains are not assigned to any EcucPartitions
  
Test Execution: None.
Test Input: None.
Test Output: 
    The SYNC CRC/FUP CRC and OFS CRC/OFNS CRC frames, should be transmitted successfully
    when TxConfirmation arrives in time, and timeouts shall be respected.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeSlave_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1665</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest16_009_Multicore_SYNC_Slaves_DifferentPArtitions</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore/source/application/CanTSyn_ConTest_16_TX_RX_SYNC_FUP_OFS_OFNS_Multicore.c</sourcefile>
      <sourceline>1901</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if 2 SYNC SLAVEs are received and CanTSynGlobalTimeFollowUpTimeout expires only for 1 SYNC SLAVE,
    the reception of the second SYNC will continue without being impacted (FUP for second SYNC will be accepted).
  
Test Object: 
    1. If 2 SYNC SLAVEs are received and CanTSynGlobalTimeFollowUpTimeout expires only for 1 SYNC SLAVE,
       the reception of the second SYNC shall continue without being impacted (FUP for second SYNC shall be accepted).
  
Test Precondition: 
    - Module is initialized.
    - CanTSynMultiCoreSupport is enabled
    - Time Domains assigned to EcucPartitions
  
Test Execution: None.
Test Input: None.
Test Output: 
    1. If 2 SYNC SLAVEs are received and CanTSynGlobalTimeFollowUpTimeout expires only for 1 SYNC SLAVE,
       the reception of the second SYNC continues without being impacted (FUP for second SYNC is accepted).
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Multicore.CanTSynGlobalTimeMaster_MainFunctions_NormalHandling_Multicore_ON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1666</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest17_001_SYNC_FUP_Reception</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_17_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DEM/source/application/CanTSyn_ConTest_17_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DEM.c.m4</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that each dropped SYNC/FUP frame will be reported to Dem, for one of the following reasons:
    - wrong length
    - wrong time domain id
    - wrong CRC
    - wrong message type
    - wrong SC
    - nanoseconds over the accepted range
  
Test Object: 
    DEM events are reported by CanTSyn when:
    - a SYNC/FUP frame with wrong length is received
    - a SYNC/FUP frame with wrong time domain id is received
    - a SYNC/FUP frame with wrong CRC is received
    - a SYNC/FUP frame with wrong message type is received
    - a SYNC/FUP frame with wrong SC is received
    - a FUP frame with the nanoseconds over the accepted range is received
  
Test Precondition: 
    - Module is initialized.
    - CanTSynSyncFailedReportError is set to DEM.
  
Test Execution: 
    01: Preconditions
    02: Call CanTSyn_RxIndication() for SYNC CRC frame with wrong length.

m4_ifelse(m4_ifelse(PM_Permutation,p0_WrongLength_OnlySyncRx,t,m4_ifelse(PM_Permutation,p18_WrongLength_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    03: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    03: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    04: Call CanTSyn_RxIndication() for SYNC CRC frame with a wrong time domain id
m4_ifelse(m4_ifelse(PM_Permutation,p1_WrongTimeDomainId_OnlySyncRx,t,m4_ifelse(PM_Permutation,p19_WrongTimeDomainId_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    05: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    05: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    06: Call CanTSyn_RxIndication() for SYNC CRC frame with a wrong CRC
m4_ifelse(m4_ifelse(PM_Permutation,p3_WrongCRC_OnlySyncRx,t,m4_ifelse(PM_Permutation,p21_WrongCRC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    07: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    07: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    08: Call CanTSyn_RxIndication() for SYNC CRC frame with a wrong message type
m4_ifelse(m4_ifelse(PM_Permutation,p2_WrongMsgType_OnlySyncRx,t,m4_ifelse(PM_Permutation,p20_WrongMsgType_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    09: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    09: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    10: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    11: Wait for FollowUp timeout to expire
    12: Call CanTSyn_RxIndication() for a FUP CRC frame with a wrong length
m4_ifelse(m4_ifelse(PM_Permutation,p0_WrongLength_OnlySyncRx,t,m4_ifelse(PM_Permutation,p18_WrongLength_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    13: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    13: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    
    14: Call CanTSyn_RxIndication() for a SYNC CRC frame with a wrong SC
m4_ifelse(m4_ifelse(PM_Permutation,p4_WrongSC_OnlySyncRx,t,m4_ifelse(PM_Permutation,p22_WrongSC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    15: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    15: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    16: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    17: Wait for FollowUp timeout to expire
    18: Call CanTSyn_RxIndication() for a FUP CRC frame with a wrong time domain
    19: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
    
    20: FollowUp timeout expired
    21: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem, when FollowUp timeout expired
    22: Call CanTSyn_RxIndication() for a FUP CRC frame with a valid time domain
m4_ifelse(m4_ifelse(PM_Permutation,p2_WrongMsgType_OnlySyncRx,t,m4_ifelse(PM_Permutation,p20_WrongMsgType_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    23: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
        and the valid FUP frame is not accepted anymore, because FollowUp timeout expired
:-/,m4_ifelse( :else: )\-:
    23: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    24: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    25: Wait for FollowUp timeout to expire
    26: Call CanTSyn_RxIndication() for a FUP CRC frame with a wrong CRC
m4_ifelse(m4_ifelse(PM_Permutation,p3_WrongCRC_OnlySyncRx,t,m4_ifelse(PM_Permutation,p21_WrongCRC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    27: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    27: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    28: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    29: Wait for FollowUp timeout to expire
    30: Call CanTSyn_RxIndication() for a FUP CRC frame with a wrong message type
m4_ifelse(m4_ifelse(PM_Permutation,p2_WrongMsgType_OnlySyncRx,t,m4_ifelse(PM_Permutation,p20_WrongMsgType_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    31: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    31: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    32: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    33: Wait for FollowUp timeout to expire
    34: Call CanTSyn_RxIndication() for a FUP CRC frame with a wrong SC
m4_ifelse(m4_ifelse(PM_Permutation,p4_WrongSC_OnlySyncRx,t,m4_ifelse(PM_Permutation,p22_WrongSC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    35: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    35: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    36: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    37: Wait for FollowUp timeout to expire
    38: Call CanTSyn_RxIndication() for a FUP CRC frame with a nanoseconds over the accepted range (999999999)
m4_ifelse(m4_ifelse(PM_Permutation,p5_NanosecondsOverAcceptedRange_OnlySyncRx,t,m4_ifelse(PM_Permutation,p23_NanosecondsOverAcceptedRange_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    39: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    39: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    40: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    41: Wait for FollowUp timeout to expire
    42: Call CanTSyn_RxIndication() for an invalid FUP CRC frame
    43: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem,
        because FollowUp timeout did not expire yet
    44: Call CanTSyn_RxIndication() for a valid FUP CRC frame
    45: Check that StbM_BusSetGlobalTime was called after a successful SYNC-FUP reception
    46: Check that event status DEM_EVENT_STATUS_PREPASSED was reported to Dem
  
Test Input: None.
Test Output: 
    The SYNC CRC/FUP CRC and OFS CRC/OFNS CRC frames, should be transmitted successfully
    when TxConfirmation arrives in time, and timeouts shall be respected.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DEM_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1667</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest17_002_NormalOFS_OFNS_Reception</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_17_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DEM/source/application/CanTSyn_ConTest_17_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DEM.c.m4</sourcefile>
      <sourceline>808</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that each dropped OFS/OFNS frame will be reported to Dem, for one of the following reasons:
    - wrong length
    - wrong time domain id
    - wrong CRC
    - wrong message type
    - wrong SC
    - nanoseconds over the accepted range
  
Test Object: 
    DEM events are reported by CanTSyn when:
    - a OFS/OFNS frame with wrong length is received
    - a OFS/OFNS frame with wrong time domain id is received
    - a OFS/OFNS frame with wrong CRC is received
    - a OFS/OFNS frame with wrong message type is received
    - a OFS/OFNS frame with wrong SC is received
    - a OFNS frame with the nanoseconds over the accepted range is received
  
Test Precondition: 
    - Module is initialized.
    - CanTSynSyncFailedReportError is set to DEM.
  
Test Execution: 
    01: Preconditions
    
    02: Call CanTSyn_RxIndication() for OFS CRC frame with wrong length.
m4_ifelse(m4_ifelse(PM_Permutation,p6_WrongLength_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p18_WrongLength_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    03: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    03: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
    
    04: Call CanTSyn_RxIndication() for OFS CRC frame with a wrong time domain id
m4_ifelse(m4_ifelse(PM_Permutation,p7_WrongTimeDomainId_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p19_WrongTimeDomainId_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    05: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    05: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    06: Call CanTSyn_RxIndication() for OFS CRC frame with a wrong CRC
m4_ifelse(m4_ifelse(PM_Permutation,p9_WrongCRC_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p21_WrongCRC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    07: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    07: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    08: Call CanTSyn_RxIndication() for OFS CRC frame with a wrong message type
m4_ifelse(m4_ifelse(PM_Permutation,p8_WrongMsgType_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p20_WrongMsgType_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    09: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    09: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    10: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    11: Wait for FollowUp timeout to expire
    12: Call CanTSyn_RxIndication() for a OFNS CRC frame with a wrong length
m4_ifelse(m4_ifelse(PM_Permutation,p6_WrongLength_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p18_WrongLength_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    13: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    13: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    14: Call CanTSyn_RxIndication() for a OFS CRC frame with a wrong SC
m4_ifelse(m4_ifelse(PM_Permutation,p10_WrongSC_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p22_WrongSC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    15: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    15: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    16: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    17: Wait for FollowUp timeout to expire
    18: Call CanTSyn_RxIndication() for a OFNS CRC frame with a wrong time domain
    19: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem

    20: FollowUp timeout expired
    21: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem, when FollowUp timeout expired
    22: Call CanTSyn_RxIndication() for a OFNS CRC frame with a valid time domain
m4_ifelse(m4_ifelse(PM_Permutation,p8_WrongMsgType_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p20_WrongMsgType_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    23: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
        and the valid OFNS frame is not accepted anymore, because FollowUp timeout expired
:-/,m4_ifelse( :else: )\-:
    23: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    24: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    25: Wait for FollowUp timeout to expire
    26: Call CanTSyn_RxIndication() for a OFNS CRC frame with a wrong CRC
m4_ifelse(m4_ifelse(PM_Permutation,p9_WrongCRC_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p21_WrongCRC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    27: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    27: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    28: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    29: Wait for FollowUp timeout to expire
    30: Call CanTSyn_RxIndication() for a OFNS CRC frame with a wrong message type
m4_ifelse(m4_ifelse(PM_Permutation,p8_WrongMsgType_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p20_WrongMsgType_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    31: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    31: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    32: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    33: Wait for FollowUp timeout to expire
    34: Call CanTSyn_RxIndication() for a OFNS CRC frame with a wrong SC
m4_ifelse(m4_ifelse(PM_Permutation,p10_WrongSC_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p22_WrongSC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    35: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    35: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    36: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    37: Wait for FollowUp timeout to expire
    38: Call CanTSyn_RxIndication() for a OFNS CRC frame with a nanoseconds over the accepted range (999999999)
m4_ifelse(m4_ifelse(PM_Permutation,p11_NanosecondsOverAcceptedRange_OnlyOfsRx,t,m4_ifelse(PM_Permutation,p23_NanosecondsOverAcceptedRange_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    39: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    39: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    40: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    41: Wait for FollowUp timeout to expire
    42: Call CanTSyn_RxIndication() for an invalid OFNS CRC frame
    43: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem,
        because FollowUp timeout did not expire yet
    44: Call CanTSyn_RxIndication() for a valid OFNS CRC frame
    45: Check that StbM_BusSetGlobalTime was called after a successful OFS-OFNS reception
    46: Check that event status DEM_EVENT_STATUS_PREPASSED was reported to Dem
    
m4_ifelse(m4_ifelse(PM_Permutation,p6_WrongLength_OnlyOfsRx,t),t,\-:m4_dnl
    47: Call CanTSyn_RxIndication() for a valid OFS CRC frame, while RxDebounce is not expired
    48: Wait for RxDebounce timeout to expire
    49: Call CanTSyn_RxIndication() for a valid OFS CRC frame and that that it is accepted
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    DEM events are reported by CanTSyn when:
    - a OFS/OFNS frame with wrong length is received
    - a OFS/OFNS frame with wrong time domain id is received
    - a OFS/OFNS frame with wrong CRC is received
    - a OFS/OFNS frame with wrong message type is received
    - a OFS/OFNS frame with wrong SC is received
    - a OFNS frame with the nanoseconds over the accepted range is received
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DEM_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1668</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest17_003_ExtendedOFS_Reception</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_17_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DEM/source/application/CanTSyn_ConTest_17_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DEM.c.m4</sourcefile>
      <sourceline>1622</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that each dropped Extended OFS frame will be reported to Dem, for one of the following reasons:
    - wrong length
    - wrong time domain id
    - wrong CRC
    - wrong message type
    - wrong SC
    - nanoseconds over the accepted range
  
Test Object: 
    DEM events are reported by CanTSyn when:
    - an Extended OFS frame with wrong length is received
    - an Extended OFS frame with wrong time domain id is received
    - an Extended OFS frame with wrong CRC is received
    - an Extended OFS frame with wrong message type is received
    - an Extended OFS frame with wrong SC is received
    - an Extended OFS frame with the nanoseconds over the accepted range is received
  
Test Precondition: 
    - Module is initialized.
    - CanTSynSyncFailedReportError is set to DEM.
  
Test Execution: 
    01: Preconditions

    02: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong length
m4_ifelse(m4_ifelse(PM_Permutation,p12_WrongLength_OnlyOfsExtRx,t,m4_ifelse(PM_Permutation,p18_WrongLength_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    03: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    03: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    04: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong time domain id
m4_ifelse(m4_ifelse(PM_Permutation,p13_WrongTimeDomainId_OnlyOfsExtRx,t,m4_ifelse(PM_Permutation,p19_WrongTimeDomainId_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    05: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    05: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    06: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong message type
m4_ifelse(m4_ifelse(PM_Permutation,p14_WrongMsgType_OnlyOfsExtRx,t,m4_ifelse(PM_Permutation,p20_WrongMsgType_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    07: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    07: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    08: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong CRC
m4_ifelse(m4_ifelse(PM_Permutation,p15_WrongCRC_OnlyOfsExtRx,t,m4_ifelse(PM_Permutation,p21_WrongCRC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    09: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    09: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    10: Call CanTSyn_RxIndication() for an Extended OFS CRC frame with a nanoseconds over the accepted range (999999999)
m4_ifelse(m4_ifelse(PM_Permutation,p17_NanosecondsOverAcceptedRange_OnlyOfsExtRx,t,m4_ifelse(PM_Permutation,p23_NanosecondsOverAcceptedRange_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    11: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    11: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    12: Call CanTSyn_RxIndication() for a valid Extended OFS CRC frame
    13: Check that StbM_BusSetGlobalTime() was called after a successful Extended OFS CRC frame reception
    14: Check that event status DEM_EVENT_STATUS_PREPASSED was reported to Dem
 
    15: Wait for CanTSynReceivePairsPeriod to expire
    16: Check that when SyncPairsPeriod timer expires, DEM will be called to report PREFAILED with correct event ID
    
    17: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong SC
m4_ifelse(m4_ifelse(PM_Permutation,p16_WrongSC_OnlyOfsExtRx,t,m4_ifelse(PM_Permutation,p22_WrongSC_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    18: Check that event status DEM_EVENT_STATUS_PREFAILED was reported to Dem
:-/,m4_ifelse( :else: )\-:
    18: Check that event status DEM_EVENT_STATUS_PREFAILED was not reported to Dem
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    DEM events are reported by CanTSyn when:
    - an Extended OFS frame with wrong length is received
    - an Extended OFS frame with wrong time domain id is received
    - an Extended OFS frame with wrong CRC is received
    - an Extended OFS frame with wrong message type is received
    - an Extended OFS frame with wrong SC is received
    - an Extended OFS frame with the nanoseconds over the accepted range is received
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DEM_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_3_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1669</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest18_001_SYNC_FUP_Reception_ReportErrorsTo_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_18_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DET/source/application/CanTSyn_ConTest_18_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DET.c.m4</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that after: 
    - 5 failed SYNC/FUP pairs because of wrong length OR
    - 5 failed SYNC/FUP pairs because of wrong time domain id OR
    - 5 failed SYNC/FUP pairs because of wrong CRC OR
    - 5 failed SYNC/FUP pairs because of wrong message type OR
    - 5 failed SYNC/FUP pairs because of wrong SC OR
    - 5 failed SYNC/FUP pairs because of nanoseconds over the accepted range OR
    - 5 failed SYNC/FUP pairs because of anyone of the above reasons
    CanTSyn will call Det_ReportError API.
  
Test Object: 
    Error shall be reported to DET by CanTSyn when:
    - 5 failed SYNC/FUP pairs with wrong length were received
    - 5 failed SYNC/FUP pairs with wrong time domain id were received
    - 5 failed SYNC/FUP pairs with wrong message type were received
    - 5 failed SYNC/FUP pairs with wrong CRC were received
    - 5 failed SYNC/FUP pairs with wrong SC were received
    - 5 failed SYNC/FUP pairs with exceeded nanoseconds range were received
  
Test Precondition: 
    - Module is initialized.
    - CanTSynSyncFailedReportError is set to DET.
  
Test Execution: 
    01: Preconditions
    
    02: Call CanTSyn_RxIndication() for SYNC CRC frame with wrong length.
m4_ifelse(m4_ifelse(PM_Permutation,p0_WrongLength_OnlySyncRx,t,m4_ifelse(PM_Permutation,p18_WrongLength_SyncOfsOfsExtRx,t,m4_ifelse(PM_Permutation,p24_AllSpecificDemEventsActivated_OnlySyncRx,t,m4_ifelse(PM_Permutation,p27_AllSpecificDemEventsActivated_SyncOfsOfsExtRx,t)))),t,\-:m4_dnl
    03: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    03: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    04: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    05: Call CanTSyn_RxIndication() for a valid FUP CRC frame
    
    06: Call CanTSyn_RxIndication() for SYNC CRC frame with a wrong time domain id
m4_ifelse(m4_ifelse(PM_Permutation,p1_WrongTimeDomainId_OnlySyncRx,t,m4_ifelse(PM_Permutation,p19_WrongTimeDomainId_SyncOfsOfsExtRx,t,m4_ifelse(PM_Permutation,p24_AllSpecificDemEventsActivated_OnlySyncRx,t,m4_ifelse(PM_Permutation,p27_AllSpecificDemEventsActivated_SyncOfsOfsExtRx,t)))),t,\-:m4_dnl
    07: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    07: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    08: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    09: Call CanTSyn_RxIndication() for a valid FUP CRC frame

    10: Call CanTSyn_RxIndication() for SYNC CRC frame with a wrong CRC
m4_ifelse(m4_ifelse(PM_Permutation,p3_WrongCRC_OnlySyncRx,t,m4_ifelse(PM_Permutation,p21_WrongCRC_SyncOfsOfsExtRx,t,m4_ifelse(PM_Permutation,p24_AllSpecificDemEventsActivated_OnlySyncRx,t,m4_ifelse(PM_Permutation,p27_AllSpecificDemEventsActivated_SyncOfsOfsExtRx,t)))),t,\-:m4_dnl
    11: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    11: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    12: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    13: Call CanTSyn_RxIndication() for a valid FUP CRC frame

    14: Call CanTSyn_RxIndication() for SYNC CRC frame with a wrong message type
m4_ifelse(m4_ifelse(PM_Permutation,p2_WrongMsgType_OnlySyncRx,t,m4_ifelse(PM_Permutation,p20_WrongMsgType_SyncOfsOfsExtRx,t,m4_ifelse(PM_Permutation,p24_AllSpecificDemEventsActivated_OnlySyncRx,t,m4_ifelse(PM_Permutation,p27_AllSpecificDemEventsActivated_SyncOfsOfsExtRx,t)))),t,\-:m4_dnl
    15: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    15: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    16: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    17: Call CanTSyn_RxIndication() for a valid FUP CRC frame

    18: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    19: Wait for FollowUp timeout to expire
    20: Call CanTSyn_RxIndication() for a FUP CRC frame with a wrong length
m4_ifelse(m4_ifelse(PM_Permutation,p0_WrongLength_OnlySyncRx,t,m4_ifelse(PM_Permutation,p18_WrongLength_SyncOfsOfsExtRx,t,m4_ifelse(PM_Permutation,p24_AllSpecificDemEventsActivated_OnlySyncRx,t,m4_ifelse(PM_Permutation,p27_AllSpecificDemEventsActivated_SyncOfsOfsExtRx,t)))),t,\-:m4_dnl
    21: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    21: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    22: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    23: Call CanTSyn_RxIndication() for a valid FUP CRC frame

    24: Call CanTSyn_RxIndication() for a SYNC CRC frame with a wrong SC
m4_ifelse(m4_ifelse(PM_Permutation,p4_WrongSC_OnlySyncRx,t,m4_ifelse(PM_Permutation,p22_WrongSC_SyncOfsOfsExtRx,t,m4_ifelse(PM_Permutation,p24_AllSpecificDemEventsActivated_OnlySyncRx,t,m4_ifelse(PM_Permutation,p27_AllSpecificDemEventsActivated_SyncOfsOfsExtRx,t)))),t,\-:m4_dnl
    25: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    25: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    26: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    27: Call CanTSyn_RxIndication() for a valid FUP CRC frame

    28: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    29: Wait for FollowUp timeout to expire
    30: Call CanTSyn_RxIndication() for a FUP CRC frame with a wrong SC
m4_ifelse(m4_ifelse(PM_Permutation,p4_WrongSC_OnlySyncRx,t,m4_ifelse(PM_Permutation,p22_WrongSC_SyncOfsOfsExtRx,t,m4_ifelse(PM_Permutation,p24_AllSpecificDemEventsActivated_OnlySyncRx,t,m4_ifelse(PM_Permutation,p27_AllSpecificDemEventsActivated_SyncOfsOfsExtRx,t)))),t,\-:m4_dnl
    31: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    31: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    32: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    33: Call CanTSyn_RxIndication() for a valid FUP CRC frame
    
    34: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    35: Wait for FollowUp timeout to expire
    36: Call CanTSyn_RxIndication() for a FUP CRC frame with a nanoseconds over the accepted range (999999999)
m4_ifelse(m4_ifelse(PM_Permutation,p5_NanosecondsOverAcceptedRange_OnlySyncRx,t,m4_ifelse(PM_Permutation,p23_NanosecondsOverAcceptedRange_SyncOfsOfsExtRx,t,m4_ifelse(PM_Permutation,p24_AllSpecificDemEventsActivated_OnlySyncRx,t,m4_ifelse(PM_Permutation,p27_AllSpecificDemEventsActivated_SyncOfsOfsExtRx,t)))),t,\-:m4_dnl
    37: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    37: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

m4_ifelse(m4_ifelse(PM_Permutation,p24_AllSpecificDemEventsActivated_OnlySyncRx,t,m4_ifelse(PM_Permutation,p27_AllSpecificDemEventsActivated_SyncOfsOfsExtRx,t)),t,\-:m4_dnl
    38: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    39: Call CanTSyn_RxIndication() for a valid FUP CRC frame
    
    40: Call CanTSyn_RxIndication() for a SYNC CRC frame with wrong length
    41: Check that no DET is called if the number of needed DET events is not reached.
    
    42: Call CanTSyn_RxIndication() for a SYNC CRC frame with wrong time domain
    43: Check that no DET is called if the number of needed DET events is not reached.
    
    44: Call CanTSyn_RxIndication() for a SYNC CRC frame with wrong CRC
    45: Check that no DET is called if the number of needed DET events is not reached.
    
    46: Call CanTSyn_RxIndication() for a SYNC CRC frame with wrong message type
    47: Check that no DET is called if the number of needed DET events is not reached.
    
    48: Call CanTSyn_RxIndication() for a valid SYNC CRC frame
    49: Call CanTSyn_RxIndication() for a FUP CRC frame with nanoseconds over the accepted range
    50: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    Error is reported to DET by CanTSyn when:
    - 5 failed SYNC/FUP pairs with wrong length were received
    - 5 failed SYNC/FUP pairs with wrong time domain id were received
    - 5 failed SYNC/FUP pairs with wrong message type were received
    - 5 failed SYNC/FUP pairs with wrong CRC were received
    - 5 failed SYNC/FUP pairs with wrong SC were received
    - 5 failed SYNC/FUP pairs with exceeded nanoseconds range were received
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_SyncFailed_DET_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1670</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest18_002_NormalOFS_OFNS_Reception_ReportErrorsTo_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_18_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DET/source/application/CanTSyn_ConTest_18_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DET.c.m4</sourcefile>
      <sourceline>1139</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that after: 
    - 5 failed OFS/OFNS pairs because of wrong length OR
    - 5 failed OFS/OFNS pairs because of wrong time domain id OR
    - 5 failed OFS/OFNS pairs because of wrong CRC OR
    - 5 failed OFS/OFNS pairs because of wrong message type OR
    - 5 failed OFS/OFNS pairs because of wrong SC OR
    - 5 failed OFS/OFNS pairs because of nanoseconds over the accepted range OR
    - 5 failed OFS/OFNS pairs because of anyone of the above reasons
  
Test Object: 
    Error shall be reported to DET by CanTSyn when:
    - 5 failed OFS/OFNS pairs with wrong length were received
    - 5 failed OFS/OFNS pairs with wrong time domain id were received
    - 5 failed OFS/OFNS pairs with wrong message type were received
    - 5 failed OFS/OFNS pairs with wrong CRC were received
    - 5 failed OFS/OFNS pairs with wrong SC were received
    - 5 failed OFS/OFNS pairs with exceeded nanoseconds range were received
  
Test Precondition: 
    - Module is initialized.
    - CanTSynSyncFailedReportError is set to DET.
  
Test Execution: 
    01: Preconditions
    
    02: Call CanTSyn_RxIndication() for OFS CRC frame with wrong length.
m4_ifelse(m4_ifelse(m4_index(\-:"p0_WrongLength" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    03: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    03: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    04: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    05: Call CanTSyn_RxIndication() for a valid OFNS CRC frame
    
    06: Call CanTSyn_RxIndication() for OFS CRC frame with a wrong time domain id
m4_ifelse(m4_ifelse(m4_index(\-:"p1_WrongTimeDomainId" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    07: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    07: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    08: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    09: Call CanTSyn_RxIndication() for a valid OFNS CRC frame

    10: Call CanTSyn_RxIndication() for OFS CRC frame with a wrong CRC
m4_ifelse(m4_ifelse(m4_index(\-:"p3_WrongCRC" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    11: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    11: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    12: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    13: Call CanTSyn_RxIndication() for a valid OFNS CRC frame

    14: Call CanTSyn_RxIndication() for OFS CRC frame with a wrong message type
m4_ifelse(m4_ifelse(m4_index(\-:"p2_WrongMsgType" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    15: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    15: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    16: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    17: Call CanTSyn_RxIndication() for a valid OFNS CRC frame

    18: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    19: Wait for FollowUp timeout to expire
    20: Call CanTSyn_RxIndication() for a OFNS CRC frame with a wrong length
m4_ifelse(m4_ifelse(m4_index(\-:"p0_WrongLength" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    21: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    21: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    22: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    23: Call CanTSyn_RxIndication() for a valid OFNS CRC frame

    24: Call CanTSyn_RxIndication() for a OFS CRC frame with a wrong SC
m4_ifelse(m4_ifelse(m4_index(\-:"p4_WrongSC" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    25: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    25: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    26: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    27: Call CanTSyn_RxIndication() for a valid OFNS CRC frame

    28: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    29: Wait for FollowUp timeout to expire
    30: Call CanTSyn_RxIndication() for a OFNS CRC frame with a wrong SC
m4_ifelse(m4_ifelse(m4_index(\-:"p4_WrongSC" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    31: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    31: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    32: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    33: Call CanTSyn_RxIndication() for a valid OFNS CRC frame
    
    34: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    35: Wait for FollowUp timeout to expire
    36: Call CanTSyn_RxIndication() for a OFNS CRC frame with a nanoseconds over the accepted range (999999999)
m4_ifelse(m4_ifelse(m4_index(\-:"p3_WrongCRC" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    37: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    37: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

m4_ifelse(PM_Permutation,p6_AllSpecificDemEventsActivated,\-:m4_dnl
    38: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    39: Call CanTSyn_RxIndication() for a valid OFNS CRC frame
    
    40: Call CanTSyn_RxIndication() for a OFS CRC frame with wrong length
    41: Check that no DET is called if the number of needed DET events is not reached.
    
    42: Call CanTSyn_RxIndication() for a OFS CRC frame with wrong time domain
    43: Check that no DET is called if the number of needed DET events is not reached.
    
    44: Call CanTSyn_RxIndication() for a OFS CRC frame with wrong CRC
    45: Check that no DET is called if the number of needed DET events is not reached.
    
    46: Call CanTSyn_RxIndication() for a OFS CRC frame with wrong message type
    47: Check that no DET is called if the number of needed DET events is not reached.
    
    48: Call CanTSyn_RxIndication() for a valid OFS CRC frame
    49: Call CanTSyn_RxIndication() for a OFNS CRC frame with nanoseconds over the accepted range
    50: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    Error is reported to DET by CanTSyn when:
    - 5 failed OFS/OFNS pairs with wrong length were received
    - 5 failed OFS/OFNS pairs with wrong time domain id were received
    - 5 failed OFS/OFNS pairs with wrong message type were received
    - 5 failed OFS/OFNS pairs with wrong CRC were received
    - 5 failed OFS/OFNS pairs with wrong SC were received
    - 5 failed OFS/OFNS pairs with exceeded nanoseconds range were received
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_OfsFailed_DET_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1671</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest18_003_ExtendedOFS_Reception_ReportErrorsTo_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_18_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DET/source/application/CanTSyn_ConTest_18_RX_SYNC_OFS_ExtOFS_CRC_SpecificDemEv_DET.c.m4</sourcefile>
      <sourceline>2233</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that after: 
    - 5 failed Extended OFS frames because of wrong length OR
    - 5 failed Extended OFS frames because of wrong time domain id OR
    - 5 failed Extended OFS frames because of wrong CRC OR
    - 5 failed Extended OFS frames because of wrong message type OR
    - 5 failed Extended OFS frames because of wrong SC OR
    - 5 failed Extended OFS frames because of nanoseconds over the accepted range OR
    - 5 failed Extended OFS frames because of anyone of the above reasons
  
Test Object: 
    Error shall be reported to DET by CanTSyn when:
    - 5 failed Extended OFS frames with wrong length were received
    - 5 failed Extended OFS frames with wrong time domain id were received
    - 5 failed Extended OFS frames with wrong message type were received
    - 5 failed Extended OFS frames with wrong CRC were received
    - 5 failed Extended OFS frames with wrong SC were received
    - 5 failed Extended OFS frames with exceeded nanoseconds range were received
  
Test Precondition: 
    - Module is initialized.
    - CanTSynSyncFailedReportError is set to DET.
  
Test Execution: 
    01: Preconditions

    02: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong length
m4_ifelse(m4_ifelse(m4_index(\-:"p0_WrongLength" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    03: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    03: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    04: Call CanTSyn_RxIndication() for a valid Extended OFS CRC frame
    05: Check that StbM_BusSetGlobalTime() was called after a successful Extended OFS CRC frame reception

    06: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong time domain id
m4_ifelse(m4_ifelse(m4_index(\-:"p1_WrongTimeDomainId" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    07: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    07: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    08: Call CanTSyn_RxIndication() for a valid Extended OFS CRC frame
    09: Check that StbM_BusSetGlobalTime() was called after a successful Extended OFS CRC frame reception

    10: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong message type
m4_ifelse(m4_ifelse(m4_index(\-:"p2_WrongMsgType" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    11: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    11: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    12: Call CanTSyn_RxIndication() for a valid Extended OFS CRC frame
    13: Check that StbM_BusSetGlobalTime() was called after a successful Extended OFS CRC frame reception

    14: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong CRC
m4_ifelse(m4_ifelse(m4_index(\-:"p3_WrongCRC" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    15: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    15: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    16: Call CanTSyn_RxIndication() for a valid Extended OFS CRC frame
    17: Check that StbM_BusSetGlobalTime() was called after a successful Extended OFS CRC frame reception

    18: Call CanTSyn_RxIndication() for an Extended OFS CRC frame with a nanoseconds over the accepted range (999999999)
m4_ifelse(m4_ifelse(m4_index(\-:"p5_NanosecondsOverAcceptedRange" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    19: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    19: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

    20: Call CanTSyn_RxIndication() for a valid Extended OFS CRC frame
    21: Check that StbM_BusSetGlobalTime() was called after a successful Extended OFS CRC frame reception
    
    

    22: Call CanTSyn_RxIndication() for a Extended OFS CRC frame with a wrong SC
m4_ifelse(m4_ifelse(m4_index(\-:"p4_WrongSC" "p6_AllSpecificDemEventsActivated":-/,"PM_Permutation"),-1,f,t),t,\-:m4_dnl
    23: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/,m4_ifelse( :else: )\-:
    23: Check that when the number of needed DET events is reached, DET will not be called.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

m4_ifelse(PM_Permutation,p6_AllSpecificDemEventsActivated,\-:m4_dnl
    24: Call CanTSyn_RxIndication() for a valid Extended OFS CRC frame
    25: Check that StbM_BusSetGlobalTime() was called after a successful Extended OFS CRC frame reception
    
    26: Call CanTSyn_RxIndication() for an Extended OFS CRC frame with wrong length
    27: Check that no DET is called if the number of needed DET events is not reached.
    
    28: Call CanTSyn_RxIndication() for an Extended OFS CRC frame with wrong time domain
    29: Check that no DET is called if the number of needed DET events is not reached.
    
    30: Call CanTSyn_RxIndication() for an Extended OFS CRC frame with wrong CRC
    31: Check that no DET is called if the number of needed DET events is not reached.
    
    32: Call CanTSyn_RxIndication() for an Extended OFS CRC frame with wrong message type
    33: Check that no DET is called if the number of needed DET events is not reached.
    
    34: Call CanTSyn_RxIndication() for an Extended OFS CRC frame with nanoseconds over the accepted range
    35: Check that only when the number of needed DET events is reached, DET will be called with correct event ID and api ID.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: None.
Test Output: 
    Error is reported to DET by CanTSyn when:
    - 5 failed Extended OFS frames with wrong length were received
    - 5 failed Extended OFS frames with wrong time domain id were received
    - 5 failed Extended OFS frames with wrong message type were received
    - 5 failed Extended OFS frames with wrong CRC were received
    - 5 failed Extended OFS frames with wrong SC were received
    - 5 failed Extended OFS frames with exceeded nanoseconds range were received
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongTimeDomainId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongMsgType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongCRC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_WrongSC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_ExtOfsFailed_DET_ExceededNanosecondsRange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Diagnostic_CanTSynReceivePairsPeriod_Expire_3_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1672</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest09_001_Sync_Hysteresis</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_19_Rx_SYNC_OFS_Hysteresis/source/application/CanTSyn_ConTest_19.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module respects CanTSynGlobalTimeSequenceCounterHysteresis during TIMEOUT state.
  
Test Object: 
    Successful Time Tuple forward to StbM after the CanTSynGlobalTimeSequenceCounterHysteresis number of consecutive valid message pairs
    is received.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall forward the Time Tuple to StbM after the defined number of valid message pairs is received
    (defined via CanTSynGlobalTimeSequenceCounterHysteresis).
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1673</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest09_002_Ofs_Hysteresis</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_19_Rx_SYNC_OFS_Hysteresis/source/application/CanTSyn_ConTest_19.c</sourcefile>
      <sourceline>315</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module respects CanTSynGlobalTimeSequenceCounterHysteresis during TIMEOUT state.
  
Test Object: 
    Successful Time Tuple forward to StbM after the CanTSynGlobalTimeSequenceCounterHysteresis number of consecutive valid message pairs
    is received.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall forward the Time Tuple to StbM after the defined number of valid message pairs is received
    (defined via CanTSynGlobalTimeSequenceCounterHysteresis).
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1674</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest09_003_SC_JumpWidth_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_19_Rx_SYNC_OFS_Hysteresis/source/application/CanTSyn_ConTest_19.c</sourcefile>
      <sourceline>555</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if the Sequence Counter check is disabled for SYNC (or OFS) messages 
	  (CanTSynGlobalTimeSequenceCounterJumpWidth == 0), a Time Slave shall consider the Sequence Counter 
    value of the SYNC (or OFS) message as valid.
  
Test Object: 
    Successful Time Tuple forward to StbM independent of the received SC (CanTSynGlobalTimeSequenceCounterJumpWidth is zero).
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall forward the Time Tuple to StbM after a valid SYNC/FUP pair is received (since
    CanTSynGlobalTimeSequenceCounterJumpWidth equals zero).
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1675</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest09_004_Sync_ResetHysteresis_Invalid_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_19_Rx_SYNC_OFS_Hysteresis/source/application/CanTSyn_ConTest_19.c</sourcefile>
      <sourceline>714</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module respects CanTSynGlobalTimeSequenceCounterHysteresis during TIMEOUT state.
    SC hysteresis must be reset if messages with invalid SC (SC Jump Width not considered) after the first Sync pair
    messages are received during timeout.
  
Test Object: 
    Successful Time Tuple forward to StbM after the CanTSynGlobalTimeSequenceCounterHysteresis number of consecutive valid message pairs
    is received.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall forward the Time Tuple to StbM after the defined number of valid message pairs is received
    (defined via CanTSynGlobalTimeSequenceCounterHysteresis).
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1676</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest09_005_Ofs_ResetHysteresis_Invalid_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_19_Rx_SYNC_OFS_Hysteresis/source/application/CanTSyn_ConTest_19.c</sourcefile>
      <sourceline>998</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module respects CanTSynGlobalTimeSequenceCounterHysteresis during TIMEOUT state.
    SC hysteresis must be reset if messages with invalid SC after the first Ofs pair
    messages are received during timeout.
  
Test Object: 
    Successful Time Tuple forward to StbM after the CanTSynGlobalTimeSequenceCounterHysteresis number of consecutive valid message pairs
    is received.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall forward the Time Tuple to StbM after the defined number of valid message pairs is received
    (defined via CanTSynGlobalTimeSequenceCounterHysteresis).
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1677</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest09_006_NoHyteresis_Stuck_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_19_Rx_SYNC_OFS_Hysteresis/source/application/CanTSyn_ConTest_19.c</sourcefile>
      <sourceline>1366</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module does not consider CanTSynGlobalTimeSequenceCounterHysteresis (equals zero) during TIMEOUT state.
  
Test Object: 
    Successful Time Tuple forward to StbM after the first OFS/OFNS pair is received.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall forward the Time Tuple to StbM after the first of valid message pair is received.
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1678</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest09_008_Sync_ResetHysteresis_Stuck_SC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_19_Rx_SYNC_OFS_Hysteresis/source/application/CanTSyn_ConTest_19.c</sourcefile>
      <sourceline>1545</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies if CanTSyn module respects CanTSynGlobalTimeSequenceCounterHysteresis during TIMEOUT state.
    SC hysteresis must be reset during invalid SYNC message (delta SC equals zero).
  
Test Object: 
    Successful Time Tuple forward to StbM after the CanTSynGlobalTimeSequenceCounterHysteresis number of consecutive valid message pairs
    is received.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: None.
Test Input: None.
Test Output: 
    CanTSyn module shall forward the Time Tuple to StbM after the defined number of valid message pairs is received
    (defined via CanTSynGlobalTimeSequenceCounterHysteresis).
  </description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1679</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest20_001_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is retrieved from StbM
     4. ICV is generated by Csm
     3. CanTSyn Master sends Secured FUP frame
     4. TxConfirmation for FUP is received
     5. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness returns E_OK
    Csm_MacGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC1
    03: VP():
        Check that SYNC1 was successfully sent
    04: VP():
        Check that SYNC1 frame has the correct payload and length
    05: TxConfirmation for SYNC1 frame is received
    06: VP():
        Check that TxConfirmation is successfully processed
    07: Wait until CanTSynGlobalTimeDebounceTime expires.
    08: Try to send FUP1
    09: VP():
        Check that FUP1 was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    10: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    11: VP(CanTSyn.EB.Check.Tx.IcvGenerationIndication.JobId.NullPtr):
        Check that CANTSYN_E_PARAM and CANTSYN_E_NULL_POINTER are reported to Det for
        two consecutive CanTSyn_IcvGenerationIndication received with invalid 'job' parameter 
    12: CanTSyn_IcvGenerationIndication is received with result E_OK
    13: Send FUP1 frame;
    14: VP():
        Check that FUP1 was successfully sent
    15: VP():
        Check that FUP1 frame has the correct payload and length
    16: TxConfirmation for FUP1 frame is received
    17: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful SYNC-FUP transmission

    18: Wait for CanTSynGlobalTimeTxPeriod to expire
    19: Send SYNC2
    20: VP():
        Check that SYNC2 was successfully sent
    21: VP():
        Check that SYNC2 frame has the correct payload and length
    22: TxConfirmation for SYNC2 frame is received
    23: VP():
        Check that TxConfirmation is successfully processed
    24: Wait for CanTSynGlobalTimeDebounceTime to expire
    25: Try to send FUP2
    26: VP():
        Check that FUP2 was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    27: Wait a couple of MF for CanTSyn_IcvGenerationIndication
    28: CanTSyn_IcvGenerationIndication is received with result E_OK
    29: Send FUP2
    30: VP():
        Check that FUP2 was successfully sent
    31: VP():
        Check that FUP2 frame has the correct payload and length
    32: TxConfirmation for FUP2 frame is received
    33: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful SYNC-FUP transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.ICVinFUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.SetFVL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFVinICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91002.Signature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_CONSTR_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Initial_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1473</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Received_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1470</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Received</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1471</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_NotRequested_Pending</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1472</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Check.Tx.IcvGenerationIndication.JobId.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1680</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_002_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>660</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is not retrieved from StbM (StbM_GetTxFreshness returns E_NOT_OK) -&gt; fill 0 for FVL and ICVL
     4. ICV generation by Csm stopped
     5. Call Det_ReportRuntimeError with the parameter ErrorId set to CANTSYN_E_FRESHNESSFAILURE
     6. Call IdsM_SetSecurityEventWithContextData with the parameter EventId set to CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE
     7. CanTSyn Master sends Secured FUP frame, with FVL=0 and ICVL=0
     8. TxConfirmation for FUP is received
     9. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness returns E_NOT_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC1
    03: VP():
        Check that SYNC1 was successfully sent
    04: VP():
        Check that SYNC1 frame has the correct payload and length
    05: TxConfirmation for SYNC1 frame is received
    06: VP():
        Check that TxConfirmation is successfully processed
    07: Wait until CanTSynGlobalTimeDebounceTime expires.
    08: Try to send FUP1
    09: VP():
        Check that FUP1 was successfully transmitted with FVL=0 and ICVL=0
    10: VP():
        Check that FUP1 frame has the correct payload and length
    11: TxConfirmation for FUP1 frame is received
    12: VP():
        Check that StbM_SPduTxConfirmation() was called
    13: Wait for CanTSynGlobalTimeTxPeriod to expire
    14: Send SYNC2
    15: VP():
        Check that SYNC2 was successfully sent
    16: VP():
        Check that SYNC2 frame has the correct payload and length
    17: TxConfirmation for SYNC2 frame is received
    18: VP():
        Check that TxConfirmation is successfully processed
    19: Wait for CanTSynGlobalTimeDebounceTime to expire
    20: Try to send FUP2
    21: VP():
        Check that FUP2 was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    22: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    23: CanTSyn_IcvGenerationIndication is received with result E_OK
    24: Send FUP2
    25: VP():
        Check that FUP2 was successfully sent
    26: VP():
        Check that FUP2 frame has the correct payload and length
    27: TxConfirmation for FUP2 frame is received
    28: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful SYNC-FUP transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFVinICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.ECUC_CanTSyn_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1681</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_003_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>1115</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is retrieved from StbM
     4. ICV is not generated by Csm (Csm_MacGenerate returns E_NOT_OK) -&gt; stop ICV generation and fill 0 for ICVL
     5. Call IdsM_SetSecurityEventWithContextData with the parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED
     6. CanTSyn Master sends Secured FUP frame, with ICVL=0 and FVL=0
     7. TxConfirmation for FUP is received
     8. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness returns E_OK
    Csm_MacGenerate returns E_NOT_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED.
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC
    03: VP():
        Check that SYNC was successfully sent
    04: VP():
        Check that SYNC frame has the correct payload and length
    05: Wait until CanTSynGlobalTimeDebounceTime expires.
    06: Send a FUP frame;
    07: VP():
        Verify that the follow up frame has the correct payload and length.
    08: CanTSyn_TxConfirmation arrives;
    09: VP():
        Check that FUP was successfully transmitted with ICVL=0
    10: VP():
        Check that FUP frame has the correct payload and length
    11: TxConfirmation for FUP frame is received
    12: Wait for CanTSynGlobalTimeTxPeriod to expire
    13: Send SYNC
    14: VP():
        Check that SYNC was successfully sent
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Failed_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1682</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_004_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>1406</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is retrieved from StbM
     4. CanTSyn_IcvGenerationIndication() is received too late and ICV generation stops
     5. Call IdsM_SetSecurityEventWithContextData() with the parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED
     6. CanTSyn Master sends Secured FUP frame, with ICVL=0 and FVL=0
     7. TxConfirmation for FUP is received
     8. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness returns E_OK
    Csm_MacGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received too late with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC
    03: VP():
        Check that SYNC was successfully sent
    04: VP():
        Check that SYNC frame has the correct payload and length
    05: Wait until CanTSynGlobalTimeDebounceTime expires.
    06: Send a FUP frame;
    07: VP():
        Verify that the follow up frame has the correct payload and length.
    08: CanTSyn_TxConfirmation arrives;
    09: VP():
        Check that FUP was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    10: Wait until CanTSyn_IcvGenerationIndication expires (CanTSynIcvGenerationTimeout = 25ms)
    11: CanTSynIcvGenerationTimeout expired -&gt; send FUP, with ICVL=0 (because generation indication was received too late)
    12: CanTSyn_IcvGenerationIndication is received too late with result E_OK and it is ignored
    13: VP():
        Check that FUP was successfully sent
    14: VP():
        Check that FUP frame has the correct payload and length
    15: TxConfirmation for FUP frame is received
    16: Wait for CanTSynGlobalTimeTxPeriod to expire
    17: Send SYNC
    18: VP():
        Check that SYNC was successfully sent
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Failed_TimeoutExpired</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1683</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_005_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>1731</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is retrieved from StbM
     4. ICV is generated by Csm
     3. CanTSyn Master sends Secured FUP frame
     4. TxConfirmation for FUP is received
     5. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshnessTruncData returns E_OK
    Csm_SignatureGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send Extended SYNC
    03: VP():
        Check that Extended SYNC was successfully sent
    04: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    05: VP():
        Check that Extended SYNC frame has the correct payload and length
    06: TxConfirmation for Extended SYNC frame is received
    07: VP():
        Check that TxConfirmation is successfully processed
    08: Wait for CanTSynGlobalTimeDebounceTime to expire
    09: Try to send Secured FUP
    10: VP():
        Check that Secured FUP was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    11: Wait a couple of MF for CanTSyn_IcvGenerationIndication
    12: CanTSyn_IcvGenerationIndication is received with result E_OK
    13: Send Secured FUP
    14: VP():
        Check that FUP was successfully sent
    15: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    16: VP():
        Check that Secured FUP frame has the correct payload and length
    17: TxConfirmation for Secured FUP frame is received
    18: Wait for CanTSynGlobalTimeTxPeriod to expire
    19: Send Extended SYNC
    20: VP():
        Check that Extended SYNC was successfully sent
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.AuthenticatedExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167.TruncatedFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167.SetFVL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167.UseFullFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1684</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_006_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>2139</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is not retrieved from StbM (StbM_GetTxFreshnessTruncData returns E_NOT_OK) -&gt; fill 0 for FVL and ICVL
     4. ICV generation by Csm stopped
     5. Call Det_ReportRuntimeError with the parameter ErrorId set to CANTSYN_E_FRESHNESSFAILURE
     6. Call IdsM_SetSecurityEventWithContextData with the parameter EventId set to CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE
     7. CanTSyn Master sends Secured FUP frame, FVL=0 and with ICVL=0
     8. TxConfirmation for FUP is received
     9. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshnessTruncData returns E_NOT_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send Extended SYNC
    03: VP():
        Check that Extended SYNC was successfully sent
    04: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    05: VP():
        Check that Extended SYNC frame has the correct payload and length
    06: TxConfirmation for Extended SYNC frame is received
    07: VP():
        Check that TxConfirmation is successfully processed
    08: Wait until CanTSynGlobalTimeDebounceTime expires.
    09: Try to send Secured FUP
    10: VP():
        Check that Secured FUP was transmitted, with FVL=0 and ICVL=0
    11: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    12: VP():
        Check that Secured FUP frame has the correct payload and length.
    13: TxConfirmation for Secured FUP frame is received
    14: Wait for CanTSynGlobalTimeTxPeriod to expire
    15: Send Extended SYNC
    16: VP():
        Check that Extended SYNC was successfully sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1685</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_007_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>2455</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is retrieved from StbM
     4. ICV is not generated by Csm (Csm_SignatureGenerate returns E_NOT_OK) -&gt; stop ICV generation and fill 0 for ICVL
     5. Call IdsM_SetSecurityEventWithContextData with the parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED
     6. CanTSyn Master sends Secured FUP frame, with ICVL=0 and FVL=0
     7. TxConfirmation for FUP is received
     8. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshnessTruncData returns E_OK
    Csm_SignatureGenerate returns E_NOT_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED.
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC
    03: VP():
        Check that SYNC was successfully sent
    04: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    05: VP():
        Check that SYNC frame has the correct payload and length
    06: TxConfirmation for Extended SYNC frame is received
    07: VP():
        Check that TxConfirmation is successfully processed
    08: Wait until CanTSynGlobalTimeDebounceTime expires.
    09: Try to send Secured FUP
    10: VP():
        Check that Secured FUP was successfully transmitted with ICVL=0
    11: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    12: VP():
        Check that Secured FUP frame has the correct payload and length
    13: TxConfirmation for Secured FUP frame is received
    14: Wait for CanTSynGlobalTimeTxPeriod to expire
    15: Send Extended SYNC
    16: VP():
        Check that Extended SYNC was successfully sent
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynTxIcvStatus_Pending_Failed_GenNotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1686</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_008_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>2797</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is retrieved from StbM
     4. CanTSyn_IcvGenerationIndication() is received too late and ICV generation stops
     5. Call IdsM_SetSecurityEventWithContextData() with the parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED
     6. CanTSyn Master sends Secured FUP frame, with ICVL=0 and FVL=0
     7. TxConfirmation for FUP is received
     8. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness returns E_OK
    Csm_SignatureGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received too late with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC
    03: VP():
        Check that SYNC was successfully sent
    04: VP():
        Check that SYNC frame has the correct payload and length
    05: Wait until CanTSynGlobalTimeDebounceTime expires.
    06: Send a FUP frame;
    07: VP():
        Verify that the follow up frame has the correct payload and length.
    08: CanTSyn_TxConfirmation arrives;
    09: VP():
        Check that FUP was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    10: Wait until CanTSyn_IcvGenerationIndication expires (CanTSynIcvGenerationTimeout = 25ms)
    11: CanTSyn_IcvGenerationIndication is received too late with result E_OK
    12: Send FUP, with ICVL=0 (because generation indication was received too late)
    13: VP():
        Check that FUP was successfully sent
    14: VP():
        Check that FUP frame has the correct payload and length
    15: TxConfirmation for FUP frame is received
    16: Wait for CanTSynGlobalTimeTxPeriod to expire
    17: Send SYNC
    18: VP():
        Check that SYNC was successfully sent
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.SetFVL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFVinICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1687</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_009_ExtSyncMaster_ExtFupMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>3176</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is not retrieved from StbM, because there is no reference to FV
     4. ICV is generated by Csm
     3. CanTSyn Master sends Secured FUP frame
     4. TxConfirmation for FUP is received
     5. StbM_SPduTxConfirmation() is not called after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness not used
    Csm_SignatureGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynIcvGenerationFvIdRef = EMPTY
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC
    03: VP():
        Check that SYNC was successfully sent
    04: VP():
        Check that SYNC frame has the correct payload and length
    05: TxConfirmation for SYNC frame is received
    06: VP():
        Check that TxConfirmation is successfully processed
    07: Wait for CanTSynGlobalTimeDebounceTime to expire
    08: Try to send FUP
    09: VP():
        Check that FUP was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    10: VP():
        Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    11: CanTSyn_IcvGenerationIndication is received with result E_OK
    12: Send FUP, with FVL=0 and configured ICVL
    13: VP():
        Check that FUP was successfully sent
    14: VP():
        Check that FUP frame has the correct payload and length
    15: TxConfirmation for FUP frame is received
    16: Wait for CanTSynGlobalTimeTxPeriod and Debounce to expire
    17: Send SYNC
    18: VP():
        Check that SYNC was successfully sent
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.ICVinFUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1688</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_010_ExtSyncMaster_ExtFupMaster_CRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>3471</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is not retrieved from StbM, because there is no reference to FV
     4. ICV is generated by Csm
     3. CanTSyn Master sends Secured FUP frame
     4. TxConfirmation for FUP is received
     5. StbM_SPduTxConfirmation() is not called after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness not used
    Csm_MacGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynIcvGenerationFvIdRef = EMPTY
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send Extended SYNC
    03: VP():
        Check that Extended SYNC was successfully sent
    04: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    05: VP():
        Check that Extended SYNC frame has the correct payload and length
    06: TxConfirmation for Extended SYNC frame is received
    07: VP():
        Check that TxConfirmation is successfully processed
    08: Wait for CanTSynGlobalTimeDebounceTime to expire
    09: Try to send Secured FUP
    10: VP():
        Check that Secured FUP was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    11: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    12: CanTSyn_IcvGenerationIndication is received with result E_OK
    13: Send Secured FUP, with FVL=0 and ICVL=54
    14: VP():
        Check that FUP was successfully sent
    15: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    16: VP():
        Check that Secured FUP frame has the correct payload and length
    17: TxConfirmation for Secured FUP frame is received
    18: Wait for CanTSynGlobalTimeTxPeriod to expire
    19: Send Extended SYNC
    20: VP():
        Check that Extended SYNC was successfully sent
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1689</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_011_ParalelTransmission_ExtSyncICV_ExtSyncICV_ExtSyncNoICV_StdSyncNoICV</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>3878</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends Extended SYNC noCRC ICV, Extended SYNC CRC ICV, Extended SYNC noCRC noICV and Standard SYNC noCRC noICV frames
     2. TxConfirmation for all of them is received in time
     3. FV is retrieved for those which support ICV
     4. ICV is generated for those which support ICV
     3. CanTSyn Master sends Secured FUP noCRC ICV, Secured FUP CRC ICV, Extended FUP noCRC noICV and Standard FUP noCRC noICV frames
     4. TxConfirmation for all of them is received in time
     5. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Successful paralel transmission of:
     - Extended SYNC noCRC ICV TD=0
     - Extended SYNC CRC ICV TD=1
     - Extended SYNC noCRC noICV TD=5
     - Standard SYNC noCRC noICV TD=6
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON for:
      - Extended SYNC noCRC ICV TD=0
      - Extended SYNC CRC ICV TD=1
      - Extended SYNC noCRC noICV TD=5
      - Standard SYNC noCRC noICV TD=6
    - CanTSyn_IcvGenerationSupport
      - ICV_SUPPORTED for Extended SYNC noCRC ICV
      - ICV_SUPPORTED for Extended SYNC CRC ICV
      - ICV_NOT_SUPPORTED for Extended SYNC noCRC noICV
      - ICV_NOT_SUPPORTED for Standard SYNC noCRC noICV
    - CanTSynIcvGenerationBase
      - ICV_MAC for Extended SYNC noCRC ICV
      - ICV_SIGNATURE for Extended SYNC CRC ICV
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength for Extended SYNC noCRC ICV
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength for Extended SYNC CRC ICV
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send Extended SYNC noCRC ICV, Extended SYNC CRC ICV, Extended SYNC noCRC noICV, Standard SYNC noCRC, noICV

    03: Check that Extended SYNC noCRC ICV was successfully sent
    04: Check that Extended SYNC noCRC ICV frame has the correct payload and length
    05: Check that Extended SYNC CRC ICV was successfully sent
    06: Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    07: Check that Extended SYNC frame has the correct payload and length
    08: Check that Extended SYNC noCRC noICV was successfully sent
    09: Check that Extended SYNC noCRC noICV frame has the correct payload and length
    10: Check that Standard SYNC noCRC noICV was successfully sent
    11: Check that Standard SYNC noCRC noICV frame has the correct payload and length

    12: TxConfirmation for Extended SYNC noCRC ICV frame is received and accepted
    13: TxConfirmation for Extended SYNC CRC ICV frame is received and accepted
    14: TxConfirmation for Extended SYNC noCRC noICV frame is received and accepted
    15: TxConfirmation for Standard SYNC noCRC noICV frame is received and accepted

    16: Wait for CanTSynGlobalTimeDebounceTime to expire for Standard SYNC noCRC noICV
    17: Try to send Standard FUP
    18: Check that Standard FUP was successfully transmitted
    19: Check that Standard FUP frame has the correct payload and length

    20: Wait for CanTSynGlobalTimeDebounceTime to expire for Extended SYNC noCRC ICV and Extended SYNC CRC ICV

    21: TxConfirmation for Standard FUP noCRC noICV frame is received

    22: Still wait for CanTSynGlobalTimeDebounceTime to expire for Extended SYNC noCRC ICV and Extended SYNC CRC ICV

    23: Try to send Secured FUP noCRC ICV and Secured FUP CRC ICV
    24: Check that Secured FUP noCRC ICV was not sent yet, still waiting for Generation Indication
    25: Check that Secured FUP CRC ICV was not sent yet, still waiting for Generation Indication

    26: Wait for CanTSynGlobalTimeDebounceTime to expire for Extended SYNC noCRC noICV
    27: Try to send Extended FUP noCRC noICV
    28: Check that Extended FUP noCRC noICV was successfully transmitted
    29: Check that Extended FUP noCRC noICV frame has the correct payload and length

    30: Wait for TxConfirmation for Extended FUP noCRC noICV, meanwhile CanTSyn_IcvGenerationIndication() is awaited for SYNC noCRC ICV

    31: TxConfirmation for Secured FUP CRC ICV frame is received

    32: CanTSyn_IcvGenerationIndication() is awaited for SYNC noCRC ICV
    33: CanTSyn_IcvGenerationIndication is received for SYNC noCRC ICV with result E_OK
    34: Send Secured FUP noCRC ICV
    35: Check that Secured FUP noCRC ICV was successfully sent
    36: Check that Secured FUP noCRC ICV frame has the correct payload and length

    37: CanTSyn_IcvGenerationIndication() is awaited for SYNC CRC ICV
    38: CanTSyn_IcvGenerationIndication is received for SYNC CRC ICV with result E_OK
    39: Send Secured FUP noCRC ICV and Secured FUP CRC ICV
    40: Check that Secured FUP CRC ICV was successfully sent
    41: Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    42: Check that Secured FUP frame has the correct payload and length

    43: TxConfirmation for Extended FUP noCRC ICV frame is received
    44: Check that StbM_SPduTxConfirmation() was called after a successful transmission of Extended SYNC noCRC ICV - Secured FUP noCRC ICV sequence

    45: TxConfirmation for Extended FUP CRC ICV frame is received
    46: Check that StbM_SPduTxConfirmation() was called after a successful transmission of Extended SYNC CRC ICV - Secured FUP CRC ICV sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1690</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_012_ExtOfsMaster_NoCRC_IcvSecured_RefToFV</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>4668</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. FV is retrieved from StbM
     2. ICV is generated by Csm
     3. CanTSyn Master sends Secured OFS frame
     4. TxConfirmation for Secured OFS is received
     5. Call StbM_SPduTxConfirmation() after a successful Secured OFS transmission
  
Test Object: 
    StbM_GetTxFreshness returns E_OK
    Csm_MacGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received with E_OK
    Successful Secured OFS frame tranmsmission
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynGlobalTimeDomainId &gt;= 16
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS1
    03: VP():
        Check that Secured OFS1 was not sent yet
    04: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    05: CanTSyn_IcvGenerationIndication is received with result E_OK
    06: Send Secured OFS1
    07: VP():
        Check that Secured OFS1 was successfully sent
    08: VP():
        Check that Secured OFS1 frame has the correct payload and length
    09: TxConfirmation for Secured OFS1 frame is received
    10: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission

    11: Wait for CanTSynGlobalTimeTxPeriod to expire
    12: Send Secured OFS2
    13: VP():
        Check that Secured OFS2 was not sent yet
    14: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    15: CanTSyn_IcvGenerationIndication is received with result E_OK
    16: Send Secured OFS2
    17: VP():
        Check that Secured OFS2 was successfully sent
    18: VP():
        Check that Secured OFS2 frame has the correct payload and length
    19: TxConfirmation for Secured OFS2 frame is received
    20: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.ICVinOFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.SetFVL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFVinICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1691</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_013_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVNotRetrieved</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>5160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     3. FV is not retrieved from StbM (StbM_GetTxFreshness returns E_NOT_OK) -&gt; fill 0 for FVL and ICVL
     4. ICV generation by Csm stopped
     5. Call Det_ReportRuntimeError with the parameter ErrorId set to CANTSYN_E_FRESHNESSFAILURE
     6. Call IdsM_SetSecurityEventWithContextData with the parameter EventId set to CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE
     7. CanTSyn Master sends Secured OFS frame, with FVL=0 and ICVL=0
     8. TxConfirmation for Secured OFS is received
     9. Call StbM_SPduTxConfirmation() after a successful Secured OFS transmission
  
Test Object: 
    StbM_GetTxFreshness returns E_NOT_OK
    Successful Secured OFS frame tranmsmission with FVL=0 and ICVL=0
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynGlobalTimeDomainId &gt;= 16
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS1
    03: VP():
        Check that Secured OFS1 was sent with FVL=0 and ICVL=0
    04: VP():
        Check that Secured OFS1 frame has the correct payload and length
    05: TxConfirmation for Secured OFS1 frame is received
    06: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS ICV transmission
    07: Wait for CanTSynGlobalTimeTxPeriod to expire
    08: Try to send Secured OFS2
    09: Check that Secured OFS2 was not sent yet
    10: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    11: CanTSyn_IcvGenerationIndication is received with result E_OK
    12: Send Secured OFS2
    13: VP():
        Check that Secured OFS2 was successfully sent
    14: VP():
        Check that Secured OFS2 frame has the correct payload and length
    15: TxConfirmation for Secured OFS2 frame is received
    16: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1692</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_014_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>5528</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is retrieved from StbM
     4. ICV is not generated by Csm (Csm_MacGenerate returns E_NOT_OK) -&gt; stop ICV generation and fill 0 for ICVL
     5. Call IdsM_SetSecurityEventWithContextData with the parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED
     6. CanTSyn Master sends Secured FUP frame, with ICVL=0 and FVL=0
     7. TxConfirmation for FUP is received
     8. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness returns E_OK
    Csm_MacGenerate returns E_NOT_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED.
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS1
    03: VP():
        Check that Secured OFS1 was sent with ICVL=0
    04: VP():
        Check that Secured OFS1 frame has the correct payload and length
    05: TxConfirmation for Secured OFS1 frame is received
    06: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS ICV transmission
    07: Wait for CanTSynGlobalTimeTxPeriod to expire
    08: Try to send Secured OFS2
    09: VP():
        Check that Secured OFS2 was not sent yet
    10: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    11: CanTSyn_IcvGenerationIndication is received with result E_OK
    12: Send Secured OFS2
    13: VP():
        Check that Secured OFS2 was successfully sent
    14: VP():
        Check that Secured OFS2 frame has the correct payload and length
    15: TxConfirmation for Secured OFS2 frame is received
    16: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1693</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_015_ExtOfsMaster_NoCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>5927</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is retrieved from StbM
     4. CanTSyn_IcvGenerationIndication() is received too late and ICV generation stops
     5. Call IdsM_SetSecurityEventWithContextData() with the parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED
     6. CanTSyn Master sends Secured FUP frame, with ICVL=0 and FVL=0
     7. TxConfirmation for FUP is received
     8. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness returns E_OK
    Csm_MacGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received too late with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC
    03: VP():
        Check that SYNC was successfully sent
    04: VP():
        Check that SYNC frame has the correct payload and length
    05: Wait until CanTSynGlobalTimeDebounceTime expires.
    06: Send a FUP frame;
    07: VP():
        Verify that the follow up frame has the correct payload and length.
    08: CanTSyn_TxConfirmation arrives;
    09: VP():
        Check that FUP was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    10: Wait until CanTSyn_IcvGenerationIndication expires (CanTSynIcvGenerationTimeout = 25ms)
    11: CanTSynIcvGenerationTimeout expired -&gt; send FUP, with ICVL=0 (because generation indication was received too late)
    12: CanTSyn_IcvGenerationIndication is received too late with result E_OK and it is ignored
    13: VP():
        Check that FUP was successfully sent
    14: VP():
        Check that FUP frame has the correct payload and length
    15: TxConfirmation for FUP frame is received
    16: Wait for CanTSynGlobalTimeTxPeriod to expire
    17: Send SYNC
    18: VP():
        Check that SYNC was successfully sent
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1694</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_016_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>6357</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. FV is retrieved from StbM
     2. ICV is generated by Csm
     3. CanTSyn Master sends Secured OFS frame
     4. TxConfirmation for Secured OFS is received
     5. Call StbM_SPduTxConfirmation() after a successful Secured OFS transmission
  
Test Object: 
    StbM_GetTxFreshnessTruncData returns E_OK
    Csm_SignatureGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received with E_OK
    Successful Secured OFS frame transmission
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynGlobalTimeDomainId &gt;= 16
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS1
    03: VP():
        Check that Secured OFS1 was not sent yet
    04: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    05: CanTSyn_IcvGenerationIndication is received with result E_OK
    06: Send Secured OFS1
    07: VP():
        Check that Secured OFS1 was successfully sent
    08: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    09: VP():
        Check that Secured OFS1 frame has the correct payload and length
    10: TxConfirmation for Secured OFS1 frame is received
    11: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission

    12: Wait for CanTSynGlobalTimeTxPeriod to expire
    13: Send Secured OFS2
    14: VP():
        Check that Secured OFS2 was not sent yet
    15: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    16: CanTSyn_IcvGenerationIndication is received with result E_OK
    17: Send Secured OFS2
    18: VP():
        Check that Secured OFS2 was successfully sent
    19: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    20: VP():
        Check that Secured OFS2 frame has the correct payload and length
    21: TxConfirmation for Secured OFS2 frame is received
    22: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167.TruncatedFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167.SetFVL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00167.UseFullFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1695</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_017_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVNotRetrieved</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>6921</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. FV is not retrieved from StbM (StbM_GetTxFreshnessTruncData returns E_NOT_OK) -&gt; fill 0 for FVL and ICVL
     2. ICV generation by Csm stopped
     3. Call Det_ReportRuntimeError with the parameter ErrorId set to CANTSYN_E_FRESHNESSFAILURE
     4. Call IdsM_SetSecurityEventWithContextData with the parameter EventId set to CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE
     5. CanTSyn Master sends Secured OFS frame, FVL=0 and with ICVL=0
     6. TxConfirmation for Secured OFS is received
     7. Call StbM_SPduTxConfirmation() after a successful Secured OFS transmission
  
Test Object: 
    StbM_GetTxFreshnessTruncData returns E_NOT_OK
    Successful transmission of Secured OFS frame
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynGlobalTimeDomainId &gt;= 16
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS1
    03: VP():
        Check that Secured OFS1 was not sent yet
    04: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    05: VP():
        Check that Secured OFS1 frame has the correct payload and length
    06: TxConfirmation for Secured OFS1 frame is received
    07: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS ICV transmission

    08: Wait for CanTSynGlobalTimeTxPeriod to expire
    09: Send Secured OFS2
    10: VP():
        Check that Secured OFS2 was not sent yet
    11: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    12: CanTSyn_IcvGenerationIndication is received with result E_OK
    13: Send Secured OFS2
    14: VP():
        Check that Secured OFS2 was successfully sent
    15: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    16: VP():
        Check that Secured OFS2 frame has the correct payload and length
    17: TxConfirmation for Secured OFS2 frame is received
    18: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00168.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1696</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_018_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_CsmNotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>7360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     3. FV is retrieved from StbM
     4. ICV is not generated by Csm (Csm_SignatureGenerate returns E_NOT_OK) -&gt; stop ICV generation and fill 0 for ICVL
     5. Call IdsM_SetSecurityEventWithContextData with the parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED
     6. CanTSyn Master sends Secured OFS frame, with ICVL=0 and FVL=0
     7. TxConfirmation for Secured OFS is received
     8. Call StbM_SPduTxConfirmation() after a successful Secured OFS transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshnessTruncData returns E_OK
    Csm_SignatureGenerate returns E_NOT_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynGlobalTimeDomainId &gt;= 16
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED.
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS1
    03: VP():
        Check that Secured OFS1 was not sent yet
    04: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    05: VP():
        Check that Secured OFS1 frame has the correct payload and length
    06: TxConfirmation for Secured OFS1 frame is received
    07: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS ICV transmission

    08: Wait for CanTSynGlobalTimeTxPeriod to expire
    09: Send Secured OFS2
    10: VP():
        Check that Secured OFS2 was not sent yet
    11: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    12: CanTSyn_IcvGenerationIndication is received with result E_OK
    13: Send Secured OFS2
    14: VP():
        Check that Secured OFS2 was successfully sent
    15: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    16: VP():
        Check that Secured OFS2 frame has the correct payload and length
    17: TxConfirmation for Secured OFS2 frame is received
    18: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1697</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_019_ExtOfsMaster_CRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated_GenIndicationNotReceived</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>7832</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     3. FV is retrieved from StbM
     4. CanTSyn_IcvGenerationIndication() is received too late and ICV generation stops
     5. Call IdsM_SetSecurityEventWithContextData() with the parameters EventId set to CANTSYN_SEV_ICV_GENERATION_FAILED
     6. CanTSyn Master sends Secured OFS frame, with ICVL=0 and FVL=0
     7. TxConfirmation for Secured OFS is received
     8. Call StbM_SPduTxConfirmation() after a successful Secured OFS transmission
  
Test Object: 
    StbM_GetTxFreshnessTruncData returns E_OK
    Csm_SignatureGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received too late with E_OK
    Successful transmission of Secured OFS frame
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynGlobalTimeDomainId &gt;= 16
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS1
    03: VP():
        Check that Secured OFS1 was not sent yet
    04: Wait a couple of MF for CanTSyn_IcvGenerationIndication
    05: Send Secured OFS1
    06: CanTSyn_IcvGenerationIndication is received with result E_OK and it is ignored
    07: VP():
        Check that Secured OFS1 was successfully sent
    08: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    09: VP():
        Check that Secured OFS1 frame has the correct payload and length
    10: TxConfirmation for Secured OFS1 frame is received
    11: Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS ICV transmission

    12: Wait for CanTSynGlobalTimeTxPeriod to expire
    13: Try to send Secured OFS2
    14: VP():
        Check that Secured OFS2 was not sent yet
    15: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    16: CanTSyn_IcvGenerationIndication is received with result E_OK
    17: Send Secured OFS2
    18: VP():
        Check that Secured OFS2 was successfully sent
    19: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    20: VP():
        Check that Secured OFS2 frame has the correct payload and length
    21: TxConfirmation for Secured OFS2 frame is received
    22: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.StopICVGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00175.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1698</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_020_ExtOfsMaster_NoCRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>8335</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. FV is not retrieved from StbM, because there is no reference to FV
     2. ICV is generated by Csm
     3. CanTSyn Master sends Secured OFS frame
     4. TxConfirmation for Secured OFS is received
     5. StbM_SPduTxConfirmation() is not called after a successful Secured OFS transmission
  
Test Object: 
    StbM_GetTxFreshness/StbM_GetTxFreshnessTruncData not used
    Csm_SignatureGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received with E_OK
    Successful transmission of Secured OFS frame
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynGlobalTimeDomainId &gt;= 16
    - CanTSynIcvGenerationFvIdRef = EMPTY
    - CanTSynGlobalTimeTxCrcSecured = CRC_NOT_SUPPORTED
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS
    03: VP():
        Check that Secured OFS was not sent yet
    04: Wait a couple of MF for CanTSyn_IcvGenerationIndication
    05: CanTSyn_IcvGenerationIndication is received with result E_OK
    06: Send Secured OFS with FVL=0 and configured ICVL (in this case min ICVL configured)
    07: VP():
        Check that Secured OFS was successfully sent
    08: VP():
        Check that Secured OFS frame has the correct payload and length
    09: TxConfirmation for Secured OFS frame is received
    10: VP():
        Check that StbM_SPduTxConfirmation() was not called after a successful Secured OFS ICV transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.ICVinOFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1699</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_021_ExtOfsMaster_CRC_IcvSecured_NoRefToFV_FVNotUsed_ICVGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>8561</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. FV is not retrieved from StbM, because there is no reference to FV
     2. ICV is generated by Csm
     3. CanTSyn Master sends Secured OFS frame
     4. TxConfirmation for Secured OFS is received
     5. StbM_SPduTxConfirmation() is not called after a successful Secured OFS transmission
  
Test Object: 
    StbM_GetTxFreshness/StbM_GetTxFreshnessTruncData not used
    Csm_MacGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received with E_OK
    Successful transmission of Secured OFS frame
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynGlobalTimeDomainId &gt;= 16
    - CanTSynIcvGenerationFvIdRef = EMPTY
    - CanTSynGlobalTimeTxCrcSecured = CRC_SUPPORTED
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS1
    03: VP():
        Check that Secured OFS1 was not sent yet
    04: Wait a couple of MF for CanTSyn_IcvGenerationIndication
    05: CanTSyn_IcvGenerationIndication is received with result E_OK
    06: Send Secured OFS1 with FVL=0 and configured ICVL (in this case min ICVL configured)
    07: VP():
        Check that Secured OFS1 was successfully sent
    08: VP():
        Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    09: VP():
        Check that Secured OFS1 frame has the correct payload and length
    10: TxConfirmation for Secured OFS1 frame is received
    11: VP():
        Check that StbM_SPduTxConfirmation() was not called after a successful Secured OFS ICV transmission
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1700</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_022_ParalelTransmission_ExtOfsICV_ExtOfsICV_ExtOfsNoICV_StdOfsNoICV</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>8855</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     3. FV is retrieved for those which support ICV
     4. ICV is generated for those which support ICV
     3. CanTSyn Master sends Extended OFS noCRC ICV, Extended OFS CRC ICV, Extended OFS noCRC noICV and Standard OFS noCRC noICV frames
     4. TxConfirmation for all of them is received in time
     5. Call StbM_SPduTxConfirmation() after a successful Extended OSF tranmsission.
  
Test Object: 
    Successful paralel transmission of:
     - Extended OFS noCRC ICV TD=16
     - Extended OFS CRC ICV TD=17
     - Extended OFS noCRC noICV TD=21
     - Standard OFS noCRC noICV TD=22
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON for:
      - Extended OFS noCRC ICV TD=16
      - Extended OFS CRC ICV TD=17
      - Extended OFS noCRC noICV TD=21
      - Standard OFS noCRC noICV TD22
    - CanTSyn_IcvGenerationSupport
      - ICV_SUPPORTED for Extended OFS noCRC ICV
      - ICV_SUPPORTED for Extended OFS CRC ICV
      - ICV_NOT_SUPPORTED for Extended OFS noCRC noICV
      - ICV_NOT_SUPPORTED for Standard OFS noCRC noICV
    - CanTSynIcvGenerationBase
      - ICV_MAC for Extended OFS noCRC ICV
      - ICV_SIGNATURE for Extended OFS CRC ICV
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength for Extended OFS noCRC ICV
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength for Extended OFS CRC ICV
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Secured OFS noCRC ICV, Secured OFS CRC ICV, Extended OFS noCRC noICV and Standard OFS noCRC noICV

    03: Check that Secured OFS noCRC ICV was not sent yet
    04: Check that Secured OFS CRC ICV was not sent yet
    05: Check that Extended OFS noCRC noICV was sent
    06: Check that Extended OFS noCRC noICV frame has the correct payload and length
    07: Check that Standard OFS noCRC noICV was sent
    08: Check that Standard OFS noCRC noICV frame has the correct payload and length

    09: Wait a couple of MF for CanTSyn_IcvGenerationIndication()
    10: CanTSyn_IcvGenerationIndication is received with result E_OK
    11: Send Secured OFS noCRC ICV
    12: Check that Secured OFS noCRC ICV was successfully sent
    13: Check that Secured OFS noCRC ICV frame has the correct payload and length

    14: TxConfirmation for Extended OFS noCRC noICV frame is received

    15: TxConfirmation for Extended OFS noCRC ICV frame is received
    16: Check that StbM_SPduTxConfirmation() was called after a successful transmission of Extended OFS noCRC ICV

    17: CanTSyn_IcvGenerationIndication is received with result E_OK
    18: Send Secured OFS CRC ICV
    19: Check that Secured OFS2 was successfully sent
    20: Check that Crc_CalculateCRC8H2F() was called with expected CRC data and length
    21: Check that Secured OFS2 frame has the correct payload and length

    22: TxConfirmation for Standard OFS noCRC noICV frame is received

    23: Wait a couple of MFs for TxConfirmation for Secured OFS CRC ICV frame
    24: TxConfirmation for Secured OFS CRC ICV frame is received
    25: Check that StbM_SPduTxConfirmation() was called after a successful transmission of Extended OFS CRC ICV

    26: Wait for Debounce to expire for Standard OFS noCRC noICV
    27: Send Standard OFNS noCRC noICV frame
    28: Check that Standard OFS noCRC noICV was sent
    29: Check that Secured OFS1 frame has the correct payload and length
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1701</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_023_ParalelTransmission_ExtSyncMaster_ExtOfsMaster_noCRC_IcvSecured_RefToFV_FVRetrieved_ICVGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>9491</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     3. FV is retrieved for those which support ICV
     4. ICV is generated for those which support ICV
     3. CanTSyn Master sends Extended SYNC noCRC ICV and Extended OFS noCRC ICV frames
     4. TxConfirmation for all of them is received in time
     5. Call StbM_SPduTxConfirmation() after a successful Extended SYNC and Extended OSF tranmsission.
  
Test Object: 
    Successful paralel transmission of:
     - Extended SYNC noCRC ICV TD=0
     - Extended OFS no CRC ICV TD=16
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON for:
      - Extended SYNC noCRC ICV TD=0
      - Extended OFS noCRC ICV TD=16
    - CanTSyn_IcvGenerationSupport
      - ICV_SUPPORTED for Extended SYNC noCRC ICV
      - ICV_SUPPORTED for Extended OFS noCRC ICV
    - CanTSynIcvGenerationBase
      - ICV_MAC for Extended SYNC noCRC ICV
      - ICV_MAC for Extended OFS noCRC ICV
    - CsmMacGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength for Extended SYNC noCRC ICV
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength for Extended OFS noCRC ICV
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Extended SYNC noCRC ICV and Extended OSF noCRC ICV
    03: VP():
        Check that Extended SYNC noCRC ICV was successfully sent
    04: VP():
        Check that Extended SYNC noCRC ICV frame has the correct payload and length
    05: VP():
        Check that Secured OFS noCRC ICV was not sent yet
    06: TxConfirmation for Extended SYNC noCRC ICV frame is received
    07: Wait for Debounce to expire for Extended SYNC noCRC ICV
    08: Try to send Secured FUP noCRC ICV
    09: VP():
        Check that Secured FUP noCRC ICV was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    10: Wait a couple of MF for CanTSyn_IcvGenerationIndication
    11: CanTSyn_IcvGenerationIndication is received for Secured OFS noCRC ICV with result E_OK
    12: Send Secured OFS
    13: VP():
        Check that Secured OFS noCRC ICV was successfully sent
    14: VP():
        Check that Secured OFS noCRC ICV frame has the correct payload and length
    15: TxConfirmation for Secured OFS noCRC ICV frame is received
    16: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS transmission
    17: Wait a couple of MF for CanTSyn_IcvGenerationIndication for Secured FUP noCRC ICV
    18: CanTSyn_IcvGenerationIndication is received with result E_OK
    19: Send Secured FUP
    20: VP():
        Check that Secured FUP noCRC ICV was successfully sent
    21: VP():
        Check that Secured FUP noCRC ICV frame has the correct payload and length
    22: TxConfirmation for Secured FUP noCRC ICV frame is received
    23: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful SYNC-FUP transmission
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1702</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_024_ExtSyncMaster_ExtFupMaster_CRC_NoIcv</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>9976</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. CanTSyn Master sends Extended FUP frame
     4. TxConfirmation for FUP is received
  
Test Object: 
    Ext SYNC frame followed by Ext FUP frame
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_NOT_SUPPORTED
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send Extended SYNC
    03: VP():
        Check that Extended SYNC was successfully sent
    04: VP():
        Check that Extended SYNC frame has the correct payload and length
    05: TxConfirmation for Extended SYNC frame is received
    06: VP():
        Check that TxConfirmation is successfully processed
    07: Wait for CanTSynGlobalTimeDebounceTime to expire
    08: Try to send Extended FUP
    09: VP():
        Check that Extended FUP was transmitted
    10: VP():
        Check that Secured FUP frame has the correct payload and length
    11: TxConfirmation for Secured FUP frame is received
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1703</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest20_025_ExtOfsMaster_CRC_NoIcv</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_20_SecureTime_TX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>10184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn Master sends Extended OFS frame
     2. TxConfirmation for Ext OFS frame is received
  
Test Object: 
    Successful Extended OFS frame transmission
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynGlobalTimeDomainId &gt;= 16
    - CanTSyn_IcvGenerationSupport = ICV_NOT_SUPPORTED
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send Extended OFS
    03: VP():
        Check that Extended OFS was sent
    04: VP():
        Check that Extended OFS frame has the correct payload and length
    05: TxConfirmation for Extended OFS frame is received
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1704</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest21_001_SYNC_NoCRC_IcvSecured_RefToFV_FVOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Extended SYNC - Secured FUP reception
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Secured FUP frame is received while RxDebounce is still running and it is ignored
    05: Extended SYNC frame is received
    06: VP():
        Check that Extended SYNC frame was accepted
    07: Secured FUP frame is received
    08: VP():
        Check that Secured FUP frame was accepted
    09: VP():
        Check that StbM_GetRxFreshness() was called
    10: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame.
    11: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    12: Verification indication received for FUP frame
    13: Call CanTSyn_MainFunction()
    14: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR23-11.SWS_CanTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91003.Signature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00183.AlsoLoadDebounce</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Initial_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1425</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Verified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1424</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_NotRequested_Pending</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1705</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_002_SYNC_NoCRC_IcvSecured_RefToFV_FVL_Zero</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>411</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP with FVL=0 frame is received
     3. FV is not retrieved from FvM
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Extended SYNC - Secured FUP noFV reception
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness not used
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04:  Wait for RxDebounce to expire
    05: Wait for Extended FUP frame before CanTSynGlobalTimeFollowUpTimeout expiration

    06: Extended SYNC frame is received instead of FUP
    07: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR
    08: Wait for RxDebounce to expire after reset of sequence

    09: A new Extended SYNC frame is received
    10: VP():
        Check that Extended SYNC frame was accepted
    11: Wait for RxDebounce to expire
    12: Wait for Extended FUP frame before CanTSynGlobalTimeFollowUpTimeout expiration
    13: Secured FUP frame with FVL=0 is received
    14: VP():
        Check that Secured FUP with FVL=0 frame was accepted
    15: VP():
        Check that StbM_GetRxFreshness() was not called
    16: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and no FV used and ICV from the received frame
    17: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    18: Verification indication received for FUP frame
    19: Call CanTSyn_MainFunction()
    20: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1706</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_003_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>739</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM at the 3'rd attempt
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Extended SYNC - Secured FUP reception
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_NOT_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    09: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    10: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    11: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    12: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    13: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_OK
    14: VP():
        Check that StbM_GetRxFreshness() was called and FV was retrieved
    15: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame.
    16: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    17: Verification indication received for FUP frame
    18: Call CanTSyn_MainFunction()
    19: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence

    20: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
    21: Wait for CanTSynGlobalTimeFollowUpTimeout to expire after FUP reception
    22: Extended SYNC frame is received
    23: VP():
        Check that Extended SYNC frame was accepted
    24: Wait for CanTSynGlobalTimeFollowUpTimeout to expire
    25: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    26: Secured FUP frame is received
    27: VP():
        Check that Secured FUP frame was accepted
    28: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    29: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    30: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    31: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    32: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    33: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_OK
    34: VP():
        Check that StbM_GetRxFreshness() was called and FV was retrieved
    35: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame.
    36: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    37: Verification indication received for FUP frame
    38: Call CanTSyn_MainFunction()
    39: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00192.StbMCallRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00192.IncrementAttemptCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_NotRequested_RecovError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1707</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_004_SYNC_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>1374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV could not be retrieved from FvM, maximum number of attempts is reached
     4. Det_ReportRuntimeError() is called with ErrorId EBTEST_E_FRESHNESSFAILURE
     5. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Ext SYNC frame reception not followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_NOT_OK/STBM_E_BUSY until the maximum number of attempts is reached
    Det_ReportRuntimeError()
    IdsM_SetSecurityEventWithContextData()
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that StbM_GetRxFreshness() was called - E_NOT_OK
    09: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    10: VP():
        Check that StbM_GetRxFreshness() was called
    11: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    12: VP():
        Check that StbM_GetRxFreshness() was called
    13: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    14: VP():
        Check that StbM_GetRxFreshness() was called
    15: VP():
        Check that Det_ReportRuntimeError() was called with ErrorId EBTEST_E_FRESHNESSFAILURE
    16: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
    17: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
    18: Wait for CanTSynGlobalTimeFollowUpTimeout to expire after FUP reception
    19: Extended SYNC frame is received
    20: VP():
        Check that Extended SYNC frame was accepted

    21: Wait for CanTSynGlobalTimeFollowUpTimeout to expire
    22: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    23: Secured FUP frame is received
    24: VP():
        Check that Secured FUP frame was accepted
    25: VP():
        Check that StbM_GetRxFreshness() was called - STBM_E_BUSY
    26: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    27: VP():
        Check that StbM_GetRxFreshness() was called
    28: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    29: VP():
        Check that StbM_GetRxFreshness() was called
    30: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    31: VP():
        Check that StbM_GetRxFreshness() was called
    32: VP():
        Check that Det_ReportRuntimeError() was called with ErrorId EBTEST_E_FRESHNESSFAILURE
    33: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Failed_MaxAttemptReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1415</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.SyncFup.CanTSynRxStatus_FupRXWAITTIMEOUT_FailedIcvAuth_SyncRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1708</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_005_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmBusy_CsmQueueFull_RetrySuccessful</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>1860</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm - at the 3'rd attempt
     5. StbM_BusSetGlobalTime() is called after a successful Extended SYNC - Secured FUP reception
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns CRYPTO_E_BUSY/CRYPTO_E_QUEUE_FULL for 3 attempts
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
  01: Initialize CanTSyn module
  02: Extended SYNC frame is received
  03: VP():
      Check that Extended SYNC frame was accepted
  04: Wait for RxDebounce to expire
  05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
  06: Secured FUP frame is received
  07: VP():
      Check that Secured FUP frame was accepted
  08: VP():
      Check that StbM_GetRxFreshness() was called
  09: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_BUSY
  10: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
  11: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  12: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
  13: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  14: Retry calling the Csm_MacVerify() in order to verify MAC - E_OK
  15: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  16: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
  17: Verification indication received for FUP frame
  18: Call CanTSyn_MainFunction()
  19: VP():
      Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence

  20: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
  21: Wait for CanTSynGlobalTimeFollowUpTimeout to expire after FUP reception
  22: Extended SYNC frame is received
  23: VP():
      Check that Extended SYNC frame was accepted
  24: Wait for CanTSynGlobalTimeFollowUpTimeout to expire
  25: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
  26: Secured FUP frame is received
  27: VP():
      Check that Secured FUP frame was accepted
  28: VP():
      Check that StbM_GetRxFreshness() was called
  29: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_QUEUE_FULL
  30: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
  31: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  32: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
  33: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  34: Retry calling the Csm_MacVerify() in order to verify MAC - E_OK
  35: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  36: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
  37: Verification indication received for FUP frame
  38: Call CanTSyn_MainFunction()
  39: VP():
      Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Pending</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1419</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Verified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1709</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_006_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmBusy_CsmQueueFull_RetryNotSuccessful</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>2657</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV could not be verified by Csm, maximum number of attempts is reached
     5. Det_ReportRuntimeError() is called with ErrorId CANTSYN_E_FRESHNESSFAILURE
     6. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns CRYPTO_E_BUSY/CRYPTO_E_QUEUE_FULL, maximum number of attempts is reached
    Det_ReportRuntimeError()
    IdsM_SetSecurityEventWithContextData()
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that StbM_GetRxFreshness() was called

    09: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_BUSY
    10: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
    11: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    12: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
    13: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    14: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
    15: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame.
    16: VP():
        Check that Det_ReportRuntimeError() was called with ErrorId EBTEST_E_FRESHNESSFAILURE
    17: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED

    18: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
    19: Wait for CanTSynGlobalTimeFollowUpTimeout to expire after FUP reception
    20: Extended SYNC frame is received
    21: VP():
        Check that Extended SYNC frame was accepted
    22: Wait for CanTSynGlobalTimeFollowUpTimeout to expire
    23: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    24: Secured FUP frame is received
    25: VP():
        Check that Secured FUP frame was accepted
    26: VP():
        Check that StbM_GetRxFreshness() was called

    27: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_QUEUE_FULL
    28: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
    29: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    30: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
    31: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    32: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
    33: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame.
    34: VP():
        Check that Det_ReportRuntimeError() was called with ErrorId EBTEST_E_FRESHNESSFAILURE
    35: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_RecovError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1710</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_007_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmNotOk_CsmKeyFailure</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>3383</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV could not be verified by Csm - E_NOT_OK / CRYPTO_E_KEY_NOT_VALID
     6. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
        and no retry is performed for non-recoverable errors
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_NOT_OK / CRYPTO_E_KEY_NOT_VALID
    IdsM_SetSecurityEventWithContextData() and no retry is performed
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that StbM_GetRxFreshness() was called

    09: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - E_NOT_OK
    10: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED

    11: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
    12: Wait for CanTSynGlobalTimeFollowUpTimeout to expire after FUP reception
    13: Extended SYNC frame is received
    14: VP():
        Check that Extended SYNC frame was accepted
    15: Wait for CanTSynGlobalTimeFollowUpTimeout to expire
    16: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    17: Secured FUP frame is received
    18: VP():
        Check that Secured FUP frame was accepted
    19: VP():
        Check that StbM_GetRxFreshness() was called

    20: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_KEY_NOT_VALID
    21: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1711</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_008_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>3787</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. CanTSyn_IcvVerificationIndication() received in time with result E_NOT_OK
     6. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_NOT_OK
    IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04:  Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that StbM_GetRxFreshness() was called
    09: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame.
    10: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    11: Verification indication received for FUP frame with result E_NOT_OK
    12: Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
    13: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
    14: Wait for CanTSynGlobalTimeFollowUpTimeout to expire after FUP reception
    15: Extended SYNC frame is received
    16: VP():
        Check that Extended SYNC frame was accepted
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1712</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_009_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotReceived</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>4082</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. CanTSyn_IcvVerificationIndication received with E_OK, but too late
     5. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK, but too late
    IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04:  Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that StbM_GetRxFreshness() was called
    09: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame.
    10: Wait a couple of MFs for CanTSyn_IcvVerificationIndication to expire
    11: Call CanTSyn_MainFunction()
    12: Verification indication received for FUP frame too late
    13: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED

    14: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
    15: Wait for CanTSynGlobalTimeFollowUpTimeout to expire after FUP reception
    16: Extended SYNC frame is received
    17: VP():
        Check that Extended SYNC frame was accepted
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Failed_TimeoutExpired</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1713</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_010_SYNC_CRC_IcvSecured_RefToFV_FVOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>4383</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Extended SYNC - Secured FUP reception
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_SignatureVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that StbM_GetRxFreshness() was called
    09: VP():
        Check that Csm_SignatureVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame.
    10: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    11: Verification indication received for FUP frame
    12: Call CanTSyn_MainFunction()
    13: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.AuthenticatedExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1714</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_011_SYNC_NoCRC_NoIcvSecured</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>4652</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Extended SYNC - Secured FUP reception
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_NOT_VERIFIED
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04:  Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00179.ICVNotVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1715</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_029_SYNC_NoCRC_NoRefToFV_ICVVerification</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>4823</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. ICV is verified by Csm without using FV (no reference to FV is configured)
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception, when there's no reference to FV configured
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04:  Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received with FVL = 0 and no reference to FV is configured
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that Csm_SignatureVerify() was called with correct Secured FUP data and FV retrieved from FvM and ICV from the received frame.
    09: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    10: Verification indication received for Secured FUP frame
    11: Call CanTSyn_MainFunction()
    12: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured FUP sequence
    13: Extended SYNC frame is received
    14: VP():
        Check that Extended SYNC frame was accepted
    15: Secured FUP frame is received with FVL &gt; 0 and no reference to FV is configured
    16: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1716</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_030_SYNC_CRC_NoRefToFV_ICVVerification</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>5144</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. ICV is verified by Csm without using FV (no reference to FV is configured)
  
Test Object: 
    Ext SYNC CRC frame reception followed by Secured FUP CRC frame reception, when there's no reference to FV configured
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Wait for RxDebounce to expire
    05: Wait for Extended SYNC frame before CanTSynGlobalTimeFollowUpTimeout expiration
    06: Secured FUP frame is received with FVL = 0 (no reference to FV is configured)
    07: VP():
        Check that Secured FUP frame was accepted
    08: VP():
        Check that Csm_MacVerify() was called with correct Secured FUP data and FV retrieved from FvM and ICV from the received frame
    09: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    10: Verification indication received for Secured FUP frame
    11: Call CanTSyn_MainFunction()
    12: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1717</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_012_OFS_NoCRC_IcvSecured_RefToFV_FVOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>5475</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     2. Secured OFS frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Secured OFS reception
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received
    03: VP():
        Check that Secured OFS frame was accepted
    04: VP():
        Check that StbM_GetRxFreshness() was called
    05: VP():
        Check that Csm_MacVerify() was called with correct Secured OFS data and FV retrieved from FvM and ICV from the received frame
    06: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    07: Verification indication received for Secured OFS frame
    08: Call CanTSyn_MainFunction()
    09: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1718</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_013_OFS_NoCRC_IcvSecured_RefToFV_FVL_Zero</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>5700</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     2. Secured OFS frame is received
     3. FV is not used in ICV verification - FVL = 0
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Secured OFS reception
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness not used
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received
    03: VP():
        Check that Secured OFS frame was accepted
    04: VP():
        Check that StbM_GetRxFreshness() was not called
    05: VP():
        Check that Csm_MacVerify() was called with correct Secured OFS data and ICV from the received frame
    06: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    07: Verification indication received for Secured OFS frame
    08: Call CanTSyn_MainFunction()
    09: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1719</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_014_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetrySuccessful</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>5893</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     2. Secured OFS frame is received
     3. FV is retrieved from FvM at the 3'rd attempt
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Secured OFS reception
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness returns E_NOT_OK/STBM_E_BUSY
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received
    03: VP():
        Check that Secured OFS frame was accepted
    04: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    05: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    06: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    07: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    08: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    09: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_OK
    10: VP():
        Check that StbM_GetRxFreshness() was called and FV was retrieved
    11: VP():
        Check that Csm_MacVerify() was called with correct OFS data and FV retrieved from FvM and ICV from the received frame.
    12: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    13: Verification indication received for OFS frame
    14: Call CanTSyn_MainFunction()
    15: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence

    16: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
    17: Secured OFS frame is received
    18: VP():
        Check that Secured OFS frame was accepted
    19: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV - STBM_E_BUSY
    20: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    21: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    22: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    23: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    24: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_OK
    25: VP():
        Check that StbM_GetRxFreshness() was called and FV was retrieved
    26: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame.
    27: Wait a couple of MFs for CanTSyn_IcvVerificationIndication
    28: Verification indication received for OFS frame
    29: Call CanTSyn_MainFunction()
    30: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00192.StbMCallRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00192.IncrementAttemptCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeRxDebounceTime.ExtOfs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1720</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_015_OFS_NoCRC_IcvSecured_RefToFV_FVNotOk_FVBusy_RetryNotSuccessful</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>6480</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Secured OFS frame is received
     2. FV could not be retrieved from FvM, maximum number of attempts is reached
     3. Det_ReportRuntimeError() is called with ErrorId EBTEST_E_FRESHNESSFAILURE
     4. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness returns E_NOT_OK/STBM_E_BUSY until the maximum number of attempts is reached
    Det_ReportRuntimeError()
    IdsM_SetSecurityEventWithContextData()
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received
    03: VP():
        Check that Secured OFS frame was accepted
    04: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV - E_NOT_OK
    05: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    06: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    07: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    08: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    09: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    10: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    11: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - E_NOT_OK
    12: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    13: VP():
        Check that Det_ReportRuntimeError() was called with ErrorId EBTEST_E_FRESHNESSFAILURE
    14: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED

    15: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
    16: Secured OFS frame is received
    17: VP():
        Check that Secured OFS frame was accepted
    18: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV - STBM_E_BUSY
    19: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    20: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    21: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    22: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    23: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    24: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    25: Retry calling the StbM_GetRxFreshness() in order to get FV from FvM - STBM_E_BUSY
    26: VP():
        Check that StbM_GetRxFreshness() was called and couldn't retrieve FV
    27: VP():
        Check that Det_ReportRuntimeError() was called with ErrorId EBTEST_E_FRESHNESSFAILURE
    28: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00193.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.OfsExtended.CanTSynRxStatus_OfsRXWAIT_FailedIcvAuth_OfsRXWAIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1721</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_016_OFS_NoCRC_IcvSecured_RefToFV_FVOk_CsmBusy_CsmQueueFull_RetrySuccessful</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>6914</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Secured OFS frame is received
     2. FV is retrieved from FvM
     3. ICV is verified by Csm - at the 3'rd attempt
     4. StbM_BusSetGlobalTime() is called after a successful Extended SYNC - Secured FUP reception
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns CRYPTO_E_BUSY/CRYPTO_E_QUEUE_FULL for 3 attempts
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
  01: Initialize CanTSyn module
  02: Secured OFS frame is received
  03: VP():
      Check that Secured OFS frame was accepted
  04: VP():
      Check that StbM_GetRxFreshness() was called
  05: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_BUSY
  06: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
  07: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  08: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
  09: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  10: Retry calling the Csm_MacVerify() in order to verify MAC - E_OK
  11: VP():
      Check that Csm_MacVerify() was called with correct OFS data and FV retrieved from FvM and ICV from the received frame
  12: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
  13: Verification indication received for FUP frame
  14: Call CanTSyn_MainFunction()
  15: VP():
      Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence

  16: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
  17: Secured FUP frame is received
  18: VP():
      Check that Secured FUP frame was accepted
  19: VP():
      Check that StbM_GetRxFreshness() was called
  20: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_QUEUE_FULL
  21: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
  22: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  23: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
  24: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  25: Retry calling the Csm_MacVerify() in order to verify MAC - E_OK
  26: VP():
      Check that Csm_MacVerify() was called with correct OFS data and FV retrieved from FvM and ICV from the received frame
  27: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
  28: Verification indication received for FUP frame
  29: Call CanTSyn_MainFunction()
  30: VP():
      Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1722</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_017_OFS_NoCRC_IcvSecured_RefToFV_FVOk_CsmBusy_CsmQueueFull_RetryNotSuccessful</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>7598</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Secured OFS frame is received
     2. FV is retrieved from FvM
     3. ICV could not be checked - RYPTO_E_BUSY/CRYPTO_E_KEY_NOT_VALID, maximum number of attempts is reached
     4. Det_ReportRuntimeError() is called with ErrorId EBTEST_E_FRESHNESSFAILURE
     5. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Secured OFS frame reception
    Csm_MacVerify returns CRYPTO_E_BUSY/CRYPTO_E_KEY_NOT_VALID until the maximum number of attempts is reached
    Det_ReportRuntimeError()
    IdsM_SetSecurityEventWithContextData()
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
  01: Initialize CanTSyn module
  02: Secured OFS frame is received
  03: VP():
      Check that Secured OFS frame was accepted
  04: VP():
      Check that StbM_GetRxFreshness() was called
  05: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_BUSY
  06: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
  07: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  08: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
  09: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  10: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
  11: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  12: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_BUSY
  13: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  14: VP():
      Check that Det_ReportRuntimeError() was called with ErrorId EBTEST_E_FRESHNESSFAILURE
  15: VP():
      Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED

  16: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
  17: Secured FUP frame is received
  18: VP():
      Check that Secured FUP frame was accepted
  19: VP():
      Check that StbM_GetRxFreshness() was called
  20: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_QUEUE_FULL
  21: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
  22: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  23: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
  24: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  25: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
  26: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  27: Retry calling the Csm_MacVerify() in order to verify MAC - CRYPTO_E_QUEUE_FULL
  28: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
  29: VP():
      Check that Det_ReportRuntimeError() was called with ErrorId EBTEST_E_FRESHNESSFAILURE
  30: VP():
      Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED

  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1723</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_018_OFS_NoCRC_IcvSecured_RefToFV_FVOk_CsmNotOk_CsmKeyFailure</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>8310</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Secured OFS frame is received
     2. FV is retrieved from FvM
     3. ICV could not be verified by Csm - E_NOT_OK/CRYPTO_E_KEY_NOT_VALID
     4. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_NOT_OK/CRYPTO_E_KEY_NOT_VALID
    No retry, IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
  01: Initialize CanTSyn module
  02: Secured OFS frame is received
  03: VP():
      Check that Secured OFS frame was accepted
  04: VP():
      Check that StbM_GetRxFreshness() was called
  05: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - E_NOT_OK
  06: Check that no retry was performed for non-recoerable error E_NOT_OK and that
      IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE

  07: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
  08: Secured FUP frame is received
  09: VP():
      Check that Secured FUP frame was accepted
  10: VP():
      Check that StbM_GetRxFreshness() was called
  11: VP():
      Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame - CRYPTO_E_KEY_NOT_VALID
  12: Check that no retry was performed for non-recoerable error E_NOT_OK and that
      IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_FRESHNESS_NOT_AVAILABLE
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1724</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_019_OFS_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>8621</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     2. Secured OFS frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. CanTSyn_IcvVerificationIndication() received in time with result E_NOT_OK
     6. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_NOT_OK
    IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured FUP frame is received
    03: VP():
        Check that Secured FUP frame was accepted
    04: VP():
        Check that StbM_GetRxFreshness() was called
    05: VP():
        Check that Csm_MacVerify() was called with correct OFS data and FV retrieved from FvM and ICV from the received frame.
    06: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    07: Verification indication received for OFS frame with result E_NOT_OK
    08: Call CanTSyn_MainFunction()
    09: Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
    10: Wait for CanTSynGlobalTimeRxDebounceTime to expire after FUP reception
    11: Secured OFS frame is received
    12: VP():
        Check that Secured OFS frame was accepted
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1725</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_020_OFS_NoCRC_IcvSecured_RefToFV_FVOk_ICVVerification_VerIndicationNotReceived</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>8874</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     2. Secured OFS frame is received
     3. FV is retrieved from FvM
     4. CanTSyn_IcvVerificationIndication received with E_OK, but too late
     5. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK, but too late
    IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured FUP frame is received
    03: VP():
        Check that Secured FUP frame was accepted
    04: VP():
        Check that StbM_GetRxFreshness() was called
    05: VP():
        Check that Csm_MacVerify() was called with correct OFS data and FV retrieved from FvM and ICV from the received frame.
    06: Wait a couple of MFs for CanTSyn_IcvVerificationIndication to expire
    07: Call CanTSyn_MainFunction()
    08: Verification indication received for OFS frame too late
    09: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.StopICVVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00200.CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1726</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_021_OFS_CRC_IcvSecured_RefToFV_FVOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>9074</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     2. Secured OFS frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Secured OFS reception
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength &lt; StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received
    03: VP():
        Check that Secured OFS frame was accepted
    04: VP():
        Check that StbM_GetRxFreshness() was called
    05: VP():
        Check that Csm_MacVerify() was called with correct Secured OFS data and FV retrieved from FvM and ICV from the received frame
    06: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    07: Verification indication received for Secured OFS frame
    08: Call CanTSyn_MainFunction()
    09: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1727</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_022_OFS_NoCRC_NoIcvSecured</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>9310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended OFS frame is received
     2. StbM_BusSetGlobalTime() is called after a successful Extended OFS reception
  
Test Object: 
    Extended OFS frame reception
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_NOT_VERIFIED
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended OFS frame is received
    03: VP():
        Check that Extended OFS frame was accepted
    04: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended OFS sequence
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00185.ICVNotVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1728</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_031_OFS_NoCRC_NoRefToFV_ICVVerification</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>9426</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Secured OFS frame is received
     2. ICV is verified by Csm without using FV (no reference to FV is configured)
  
Test Object: 
    Secured OFS frame reception, when there's no reference to FV configured
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received
    03: VP():
        Check that Secured OFS frame was accepted
    04: VP():
        Check that Csm_SignatureVerify() was called with correct Secured OFS data and FV retrieved from FvM and ICV from the received frame
    05: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    06: Verification indication received for Secured OFS frame
    07: Call CanTSyn_MainFunction()
    08: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1729</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_032_OFS_CRC_NoRefToFV_ICVVerification</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>9608</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Secured OFS frame is received
     2. ICV is verified by Csm without using FV (no reference to FV is configured)
  
Test Object: 
    Secured OFS frame reception, when there's no reference to FV configured
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received
    03: VP():
        Check that Secured OFS frame was accepted
    04: VP():
        Check that Csm_MacVerify() was called with correct Secured OFS data and FV retrieved from FvM and ICV from the received frame
    05: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    06: Verification indication received for Secured OFS frame
    07: Call CanTSyn_MainFunction()
    08: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1730</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_023_SYNC_MessageFiltering_When_ICV_VERIFIED</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>9891</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the CanTSyn rejects the following invalid FUP frames:
      - Extended noCRC noICV FUP
      - Extended CRC noICV FUP
  
Test Object: 
    Rejection of invalid FUP frames when CanTSyn_IcvGenerationSupport = ICV_VERIFIED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_VERIFIED
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Extended FUP frame is received - wrong type (FUP noCRC noICV)
    05: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR

    06: Extended SYNC frame is received
    07: VP():
        Check that Extended SYNC frame was accepted
    08: Extended FUP frame is received - wrong type (FUP CRC noICV)
    09: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178.FailedVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.SyncFupSeqErrorSEV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1731</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_024_SYNC_MessageFiltering_When_ICV_OPTIONAL</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>10217</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the CanTSyn does not verify the ICV for the following FUP frames:
      - Extended noCRC noICV FUP (0x18)
      - Extended CRC noICV FUP (0x28)
    and does verify ICV for the following FUP frames:
      - Secured noCRC ICV FUP (0x78)
      - Secured CRC ICV FUP (0x88)
  
Test Object: 
    Verification of ICV for FUP frames when CanTSyn_IcvGenerationSupport = ICV_OPTIONAL
    Extended noCRC noICV FUP (0x18) - no ICV verification
    Secured noCRC ICV FUP (0x78) - ICV verification
    Extended CRC noICV FUP (0x28) - no ICV verification
    Secured CRC ICV FUP (0x88) - ICV verification
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynRxIcvVerificationType = ICV_OPTIONAL
  
Test Execution: 
    01: Initialize CanTSyn module

    --------------------- SYNC - FUP noCRC noICV ------------------------------
    02: Extended SYNC noCRC noICV frame is received
    03: VP():
        Check that Extended SYNC noCRC noICV frame was accepted
    04: Extended FUP noCRC noICV frame is received
    05: VP():
        Check that Extended FUP noCRC noICV frame was accepted and that no ICV verification was done for it

    --------------------- SYNC - FUP CRC noICV -----------------------------
    06: Extended SYNC CRC noICV frame is received
    07: VP():
        Check that Extended SYNC CRC noICV frame was accepted
    08: Extended FUP CRC noICV frame is received
    09: VP():
        Check that Extended FUP CRC noICV frame was accepted and that no ICV verification was done for it

    --------------------- SYNC - FUP noCRC ICV ------------------------------
    10: Extended SYNC noCRC ICV frame is received
    11: VP():
        Check that Extended SYNC noCRC ICV frame was accepted
    12: Secured FUP noCRC ICV frame is received
    13: VP():
        Check that Secured FUP noCRC ICV frame was accepted
    14: VP():
        Check that StbM_GetRxFreshness() was called
    15: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    16: Verification indication received for Secured FUP noCRC ICV frame
    17: Call CanTSyn_MainFunction
    18: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence

     --------------------- SYNC - FUP CRC ICV ------------------------------
    19: Extended SYNC CRC ICV frame is received
    20: VP():
        Check that Extended SYNC CRC ICV frame was accepted
    21: Secured FUP CRC ICV frame is received
    22: VP():
        Check that Secured FUP frame was accepted
    23: VP():
        Check that StbM_GetRxFreshness() was called
    24: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    25: Verification indication received for Secured FUP CRC ICV frame
    26: Call CanTSyn_MainFunction
    27: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00181.ICVOptional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00181.FUPNoICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1732</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_025_SYNC_MessageFiltering_When_ICV_IGNORED</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>10874</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the CanTSyn will not perform ICV verification for the following FUP messages:
      - Extended noCRC ICV FUP (0x78)
      - Extended CRC ICV FUP (0x88)
  
Test Object: 
    Rejection of invalid FUP frames when CanTSyn_IcvGenerationSupport = ICV_IGNORED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_IGNORED
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Secured FUP frame is received (FUP noCRC ICV)
    05: VP():
        Check that Secured FUP frame was accepted without ICVverification
    06: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence

    07: Extended SYNC frame is received
    08: VP():
        Check that Extended SYNC frame was accepted
    09: Secured FUP frame is received (FUP CRC ICV)
    10: VP():
        Check that Secured FUP frame was accepted without ICVverification
    11: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
    12: Standard SYNC frame is received, when instead a Extended SYNC frame should have been received and it is ignored
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1733</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_026_OFS_MessageFiltering_When_ICV_VERIFIED</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>11193</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the CanTSyn rejects the following invalid OFS frames:
      - Extended noCRC noICV OFS
      - Extended CRC noICV OFS
  
Test Object: 
    Rejection of invalid OFS frames when CanTSyn_IcvGenerationSupport = ICV_VERIFIED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_VERIFIED
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received - wrong type (OFS noCRC noICV)
    03: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED

    04: Extended OFS frame is received - wrong length (OFS CRC noICV)
    05: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
    06: Secured OFS frame is received - wrong length and it is ignored
    07: Secured OFS frame is received- wrong type (OFS CRC noICV) and it is ignored
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ExtendedOFSNoICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1734</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_027_OFS_MessageFiltering_When_ICV_OPTIONAL</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>11423</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the CanTSyn does not verify the ICV for the following OFS frames:
      - Extended noCRC noICV OFS (0x54)
      - Extended CRC noICV OFS (0x64)
    and does verify ICV for the following OFS frames:
      - Secured noCRC ICV OFS (0x94)
      - Secured CRC ICV OFS (0xA4)
  
Test Object: 
    Verification of ICV for OFS frames when CanTSynRxIcvVerificationType = ICV_OPTIONAL
    Extended noCRC noICV OFS (0x54) - no ICV verification
    Secured noCRC ICV OFS (0x94) - ICV verification
    Extended CRC noICV OFS (0x64) - no ICV verification
    Secured CRC ICV OFS (0xA4) - ICV verification
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynRxIcvVerificationType = ICV_OPTIONAL
  
Test Execution: 
    01: Initialize CanTSyn module
    ---------------------------------------- OFS noCRC noICV ----------------------------------
    02: Extended OFS noCRC noICV frame is received
    03: VP():
        Check that Extended OFS noCRC noICV frame was accepted
    04: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence

    ----------------------------- OFS noCRC ICV ---------------------------------------
    05: Secured OFS noCRC ICV frame is received
    06: VP():
        Check that Secured OFS noCRC ICV frame was accepted
    07: VP():
        Check that StbM_GetRxFreshness() was called
    08: VP():
        Check that Csm_MacVerify() was called with correct Secured OFS data and FV retrieved from FvM and ICV from the received frame
    09: Verification indication received for Secured OFS frame
    10: Call CanTSyn_MainFunction()
    11: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence

    -------------------------------- OFS CRC noICV --------------------------------------
    12: Extended OFS CRC noICV frame is received
    13: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence

    -------------------------------- OFS CRC ICV --------------------------------------
    14: Secured OFS CRC ICV frame is received
    15: VP():
        Check that Secured OFS CRC ICV frame was accepted
    16: VP():
        Check that StbM_GetRxFreshness() was called
    17: VP():
        Check that Csm_MacVerify() was called with correct Secured OFS data and FV retrieved from FvM and ICV from the received frame
    18: Verification indication received for Secured OFS frame
    19: Call CanTSyn_MainFunction(
    20: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00187.ICVOptional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00187.OFSNoICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1735</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_028_OFS_MessageFiltering_When_ICV_IGNORED</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>11912</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the CanTSyn will not perform ICV verification for the following FUP messages:
      - Extended noCRC ICV OFS (0x94)
      - Extended CRC ICV OFS (0xA4)
  
Test Object: 
    Rejection of invalid FUP frames when CanTSyn_IcvGenerationSupport = ICV_IGNORED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_IGNORED
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received (OFS noCRC ICV)
    03: VP():
        Check that Secured OFS frame was accepted without ICVverification
    04: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence

    05: Secured OFS frame is received (OFS CRC ICV)
    06: VP():
        Check that Secured OFS frame was accepted without ICVverification
    07: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1736</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_033_SYNC_MessageFiltering_When_ICV_NOT_VERIFIED</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>12146</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the CanTSyn rejects the following invalid FUP frames:
      - Secured noCRC ICV FUP (0x78)
      - Secured CRC ICV FUP (0x88)
  
Test Object: 
    Rejection of invalid FUP frames when CanTSyn_IcvGenerationSupport = ICV_NOT_VERIFIED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_NOT_VERIFIED
  
Test Execution: 
    01: Initialize CanTSyn module

    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Secured FUP frame is received - wrong type (FUP noCRC ICV)
    05: VP():
        Check that frame is dropped

    06: Extended SYNC frame is received
    07: VP():
        Check that Extended SYNC frame was accepted
    08: Extended FUP frame is received - wrong type (FUP CRC ICV)
    09: VP():
        Check that frame is dropped
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00179.FailedVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1737</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_034_OFS_MessageFiltering_When_ICV_NOT_VERIFIED</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>12474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the CanTSyn rejects the following invalid OFS frames:
      - Secured noCRC ICV OFS (0x94)
      - Secured CRC ICV OFS (0xA4)
  
Test Object: 
    Rejection of invalid OFS frames when CanTSyn_IcvGenerationSupport = ICV_NOT_VERIFIED
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSynRxIcvVerificationType = ICV_NOT_VERIFIED
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received - wrong type (OFS noCRC ICV)
    03: VP():
        Check that Secured OFS frame was not accepted

    04: Secured OFS frame is received - wrong type (OFS CRC ICV)
    05: VP():
        Check that Secured OFS frame was not accepted
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00185.FailedVerification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1738</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_035_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmOK_VerInd_BUSY</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>12630</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. Verfication indication is received with result E_BUSY
     6. Retry on next MFs until maximum number of attempts is reached
     7. Det_ReportRuntimeError() is called with ErrorId EBTEST_E_FRESHNESSFAILURE
     8. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_BUSY
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted

    04: Secured FUP frame is received while RxDebounce is still running and it is ignored
    05: Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR

    06: A new extended SYNC frame is received after RxDebounce expired
    07: Check that Extended SYNC frame was accepted
    08: Secured FUP frame is received
    09: VP():
        Check that Secured FUP frame was accepted
    10: VP():
        Check that StbM_GetRxFreshness() was called
    11: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    12: VP(CanTSyn.EB.Check.Rx.IcvVerificationIndication.JobId.NullPtr):
        Check that CANTSYN_E_PARAM and CANTSYN_E_NULL_POINTER are reported to Det for
        two consecutive CanTSyn_IcvVerificationIndication received with invalid 'job' parameter
    13: Verification indication received for FUP frame with result E_BUSY

    14: Call CanTSyn_MainFunction()
    15: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    16: Verification indication received for FUP frame with result E_BUSY

    17: Call CanTSyn_MainFunction()
    18: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    19: Verification indication received for FUP frame with result E_BUSY

    20: Call CanTSyn_MainFunction()
    21: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    22: VP():
        Check that Det_ReportRuntimeError() was called with ErrorId EBTEST_E_FRESHNESSFAILURE
    23: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED -
        because number of attepts was reached
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.Check.Rx.IcvVerificationIndication.JobId.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1739</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_036_StdOFS_NoCRC_NoIcv</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>13143</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies Standard OFS-OFNS reception when global SecureTime is activated in configuration.
  
Test Object: 
    Standard OFS - Standard OFNS frame reception
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_NOT_VERIFIED
    - STANDARD_CAN pdu
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Standard OFS frame is received
    03: VP():
        Check that Standard OFS frame was accepted

    04: Standard OFNS frame is received before RxDebounce expires
    05: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR

    06: Wait for RxDebounce to expire
    07: Standard OFS frame is received
    08: Check that Standard OFS frame was accepted
    09: Wait for RxDebounce to expire
    10: Wait for FUP before FollowUp timeout expires

    11: Standard OFS frame is received instead of OFNS
    12: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR

    13: Wait for RxDebounce to expire
    14: A new Standard OFS frame is received
    15: VP():
        Check that Standard OFS frame was accepted
    16: Wait for RxDebounce to expire
    17: Wait for FUP before FollowUp timeout expires
    18: Standard OFNS frame is received
    19: VP():
        Check that Standard OFNS frame was accepted
    20: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Standard OFS-OFNS sequence
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeRxDebounceTime.OfsOfnsPair</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.EB.CanTSynGlobalTimeFollowUpTimeout.OfsOfnsPair</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1740</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_037_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmVERNOTOK_VerIndOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>13451</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm and returns CRYPTO_E_VER_NOT_OK
     5. Verfication indication is received with result E_OK
     6. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK and verification result CRYPTO_E_VER_NOT_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted

    04: Secured FUP frame is received while RxDebounce is still running and it is ignored
    05: Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR

    06: Extended SYNC frame is received
    07: VP():
        Check that Extended SYNC frame was accepted
    08: Secured FUP frame is received
    09: VP():
        Check that Secured FUP frame was accepted
    10: VP():
        Check that StbM_GetRxFreshness() was called
    11: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    12: Verification indication received for FUP frame with result E_OK
    13: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED -
        because Csm_MacVerify returned  verifyPtr = CRYPTO_E_VER_NOT_OK
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91003.Signature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Failed_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1414</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Pending_Failed_VerifNotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1741</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_038_SYNC_CRCOPTIONAL_Icv</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>13800</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Extended SYNC - Secured FUP reception
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CRC_OPTIONAL
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Secured FUP frame is received
    05: VP():
        Check that Secured FUP frame was accepted
    06: VP():
        Check that StbM_GetRxFreshness() was called
    07: VP():
        Check that Csm_SignatureVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    08: Verification indication received for FUP frame
    09: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00055.CRC.AuthenticatedExtendedMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_Verified_NotRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1742</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_039_OFS_CRCOPTIONAL_Icv</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>14079</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     2. Secured OFS frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Secured OFS reception
  
Test Object: 
    Secured OFS frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_OK
    CanTSyn_IcvVerificationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CRC OPTIONAL
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received
    03: VP():
        Check that Secured OFS frame was accepted
    04: VP():
        Check that StbM_GetRxFreshness() was called
    05: VP():
        Check that Csm_MacVerify() was called with correct Secured OFS data and FV retrieved from FvM and ICV from the received frame
    06: Verification indication received for Secured OFS frame
    07: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1743</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest21_040_SYNC_NoCRC_IcvSecured_RefToFV_FVOk_CsmBUSY_CsmOK_CsmResultNotOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS/source/application/CanTSyn_ConTest_21_SecureTime_RX_ExtSYNC_ExtFUP_ExtOFS.c.m4</sourcefile>
      <sourceline>14306</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Extended SYNC frame is received
     2. Secured FUP frame is received
     3. FV is retrieved from FvM
     4. Csm_MacVerify returns E_BUSY and result E_VER_OK at first retry
     5. Csm_MacVerify returns E_OK and result E_VER_NOT_OK at second retry
     6. IdsM_SetSecurityEventWithContextData() is called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
    StbM_GetRxFreshness returns E_OK
    Csm_MacVerify returns E_BUSY and result E_VER_OK
    Csm_MacVerify returns E_OK and result E_VER_NOT_OK
    IdsM_SetSecurityEventWithContextData is called
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvVerificationBase = ICV_MAC
    - CsmMacVerifyProcessing = PM_YmlCsmGenerateProcessing
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Extended SYNC frame is received
    03: VP():
        Check that Extended SYNC frame was accepted
    04: Secured FUP frame is received
    05: VP():
        Check that Secured FUP frame was accepted
    06: VP():
        Check that StbM_GetRxFreshness() was called
    07: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
        and it returns E_BUSY and result = CRYPTO_E_VER_OK at first retry

    08: Call CanTSyn_MainFunction()
    09: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
        and it returns E_OK and result = CRYPTO_E_VER_NOT_OK at second retry

    10: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_ICV_VERIFICATION_FAILED -
        because Csm_MacVerify returned result=CRYPTO_E_VER_NOT_OK
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.Dsn.CanTSynRxIcvStatus_RecovError_Failed_VerifNotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1744</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest22_001_ExtSync_SecFup_CRC_IcvSecured_RefToFV_Gateway</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_22_SecureTime_GATEWAY/source/application/CanTSyn_ConTest_22_SecureTime_GATEWAY.c.m4</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     - CanTSyn master sends Extended SYNC - Secured FUP frames and they are successfully received on the slave side
  
Test Object: 
    Ext SYNC frame transmission followed by Secured FUP frame transmission on master side
    Ext SYNC frame reception followed by Secured FUP frame reception on slave side
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynGlobalTimeTxCrcSecured = CRC_SUPPORTED
    - CanTSynRxCrcValidated = CRC_VALIDATED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = CSM_ASYNCHRONOUS
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC
    03: VP():
        Check that SYNC was successfully sent
    04: VP():
        Check that SYNC frame has the correct payload and length

    05: Extended SYNC frame is received on the slave side

    06: VP():
        Check that Extended SYNC frame was accepted
    07: TxConfirmation for the transmitted SYNC frame is received
    08: VP():
        Check that TxConfirmation is successfully processed
    09: Wait for CanTSynGlobalTimeDebounceTime to expire
    10: Try to send FUP
    11: VP():
        Check that FUP was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    12: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    13: CanTSyn_IcvGenerationIndication is received with result E_OK

    14: Send FUP
    15: VP():
        Check that FUP was successfully sent
    16: VP():
        Check that FUP frame has the correct payload and length

    17: Secured FUP frame is received on the slave side

    18: VP():
        Check that Secured FUP frame was accepted
    19: VP():
        Check that StbM_GetRxFreshness() was called
    20: VP():
        Check that Csm_MacVerify() was called with correct SYNC-FUP data and FV retrieved from FvM and ICV from the received frame
    21: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    22: Verification indication received for FUP frame
    23: TxConfirmation for FUP frame is received
    24: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful SYNC-FUP transmission
    25: Call CanTSyn_MainFunction()
    26: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.ICVinFUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1745</internalId></specobject>
    <specobject>
      <id>CanTSyn_ConTest22_002_SecOfs_CRC_IcvSecured_RefToFV_Gateway</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_22_SecureTime_GATEWAY/source/application/CanTSyn_ConTest_22_SecureTime_GATEWAY.c.m4</sourcefile>
      <sourceline>486</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     - CanTSyn master sends Extended SYNC - Secured FUP frames and they are successfully received on the slave side
  
Test Object: 
    Ext SYNC frame transmission followed by Secured FUP frame transmission on master side
    Ext SYNC frame reception followed by Secured FUP frame reception on slave side
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynGlobalTimeTxCrcSecured = CRC_SUPPORTED
    - CanTSynRxCrcValidated = CRC_VALIDATED
    - CanTSynIcvGenerationBase = ICV_SIGNATURE
    - CsmSignatureGenerateProcessing = CSM_ASYNCHRONOUS
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Try to send OFS
    03: VP():
        Check that Secured OFS was not sent yet
    04: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    05: CanTSyn_IcvGenerationIndication is received with result E_OK
    06: Send Secured OFS
    07: VP():
        Check that Secured OFS was successfully sent
    08: VP():
        Check that Secured OFS frame has the correct payload and length
    09: Secured OFS frame is received on the slave side
    10: VP():
        Check that Secured OFS frame was accepted
    11: VP():
        Check that StbM_GetRxFreshness() was called
    12: VP():
        Check that Csm_SignatureVerify() was called with correct Secured OFS data and FV retrieved from FvM and ICV from the received frame
    13: TxConfirmation for Secured OFS frame is received
    14: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful Secured OFS ICV transmission
    15: Wait a couple of MFs for for CanTSyn_IcvVerificationIndication
    16: Verification indication received for Secured OFS frame
    17: Call CanTSyn_MainFunction()
    18: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00162.ICVinOFS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1746</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest23_001_SecureTime_RX_OnlySYNC_NoCRC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_23_SecureTime_RX_OnlySYNC/source/application/CanTSyn_ConTest_23_SecureTime_RX_OnlySYNC.c.m4</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. Frames with wrong length are discarded
     2. Extended SYNC frame is received
     3. Secured FUP frame is received
     4. FV is retrieved from FvM
     5. ICV is verified by Csm
     6. StbM_BusSetGlobalTime() is called after a successful Extended SYNC - Secured FUP reception
  
Test Object: 
    Ext SYNC frame reception followed by Secured FUP frame reception
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = CSM_ASYNCHRONOUS
  
Test Execution: 
    01: Initialize CanTSyn module
    02: First invalid frame is received
    03: Second invalid frame is received
    04: Extended SYNC frame is received
    05: VP():
        Check that Extended SYNC frame was accepted

    06: Secured FUP frame is received before RxDebounce expires and it is ignored

    07: Extended SYNC frame is received
    08: VP():
        Check that Extended SYNC frame was accepted
    09: Secured FUP frame is received
    10: VP():
        Check that Secured FUP frame was accepted
    11: Verification indication received for FUP frame
    12: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Extended SYNC - Secured FUP sequence

    13: Extended SYNC frame is received
    14: VP():
        Check that Extended SYNC frame was accepted
    15: Secured FUP frame is received with a wrong type (CRC instead if noCRC)
    16: VP():
        Check that IdsM_SetSecurityEventWithContextData() was called with EventId CANTSYN_SEV_SYNC_FUP_SEQUENCE_ERROR
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00178.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91003.Signature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1747</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest24_001_SecureTime_TX_OnlySYNC_NoCRC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_24_SecureTime_TX_OnlySYNC/source/application/CanTSyn_ConTest_24_SecureTime_TX_OnlySYNC.c.m4</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     1. CanTSyn master sends SYNC frame
     2. TxConfirmation for SYNC is received
     3. FV is retrieved from StbM
     4. ICV is generated by Csm
     3. CanTSyn Master sends Secured FUP frame
     4. TxConfirmation for FUP is received
     5. Call StbM_SPduTxConfirmation() after a successful SYNC-Secured FUP transmission
  
Test Object: 
    Ext SYNC frame followed by Secured FUP frame
    StbM_GetTxFreshness returns E_OK
    Csm_MacGenerate returns E_OK
    CanTSyn_IcvGenerationIndication received with E_OK
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - Tx mode is ON.
    - Only TX SYNC time domain configured
    - CanTSyn_IcvGenerationSupport = ICV_SUPPORTED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = CSM_ASYNCHRONOUS
    - StbMFreshnessValueTruncLength = StbMFreshnessValueLength
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Send SYNC1
    03: VP():
        Check that SYNC1 was successfully sent
    04: VP():
        Check that SYNC1 frame has the correct payload and length
    05: TxConfirmation for SYNC1 frame is received
    06: VP():
        Check that TxConfirmation is successfully processed
    07: Wait until CanTSynGlobalTimeDebounceTime expires.
    08: Try to send FUP1
    09: VP():
        Check that FUP1 was not transmitted, because CanTSyn still waits for CanTSyn_IcvGenerationIndication
    10: Wait a couple of MF for CanTSyn_IcvGenerationIndication (CanTSynIcvGenerationTimeout = 25ms)
    11: CanTSyn_IcvGenerationIndication is received with result E_OK
    12: Send FUP1 frame;
    13: VP():
        Check that FUP1 was successfully sent
    14: VP():
        Check that FUP1 frame has the correct payload and length
    15: TxConfirmation for FUP1 frame is received
    16: VP():
        Check that StbM_SPduTxConfirmation() was called after a successful SYNC-FUP transmission

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.Payload</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00161.ICVinFUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.SetFVL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00166.FullFVinICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_91002.Signature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1748</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>CanTSyn_ConTest25_001_SecureTime_RxOFSExt_NoCRC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Conformance/IN/CanTSyn_ConTest_25_SecureTime_RX_OFSExt_noCRC/source/application/CanTSyn_ConTest_25_SecureTime_RX_OFSExt_noCRC.c.m4</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the following scenario:
     2. Secured OFS frame is received
     3. FV is retrieved from FvM
     4. ICV is verified by Csm
     5. StbM_BusSetGlobalTime() is called after a successful Secured OFS reception
  
Test Object: 
    Secured OFS frame reception
  
Test Precondition: 
    - Initialized CanIf and StbM stubs.
    - Module is initialized.
    - CanTSyn_IcvVerificationSupport = ICV_VERIFIED
    - CanTSynIcvGenerationBase = ICV_MAC
    - CsmMacGenerateProcessing = CSM_ASYNCHRONOUS
  
Test Execution: 
    01: Initialize CanTSyn module
    02: Secured OFS frame is received
    03: VP():
        Check that Secured OFS frame was accepted
    04: Verification indication received for Secured OFS frame
    05: VP():
        Check that StbM_BusSetGlobalTime() was called after a successful reception of Secured OFS sequence

    06: Secured OFS frame is received before RxDebounce expires and it is ignored

    07: Secured OFS frame is received with wrong type (CRC instead of noCRC)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.SWS_CanTSyn_00010.DLC.ExtendedMessageICVNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>CanTSyn.ASR22-11.SWS_CanTSyn_00184.ICVVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1749</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TEST_CanTSyn_01_PreCompileConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_CanTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CanTSyn/test/ts5/Implementation/IN/CanTSyn_ImplTest_1/source/application/CanTSyn_ImplTest_1.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies that CanTSyn supports the configuration variant
      VARIANT-PRE-COMPILE.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
      01: VP(CanTSyn.dsn.PrecompileTimeConfig):
          The config structures:
          - CanTSyn_OffsetMasterType
          - CanTSyn_OffsetSlaveType
          - CanTSyn_SyncMasterType
          - CanTSyn_SyncSlaveType
          as stated in the design document exist
      02: VP(CanTSyn.dsn.PrecompileTimeConfig):
          All members (with integral data type) of the the config structure
          CanTSyn_OffsetMasterType have the type as stated in the design document.
      03: VP(CanTSyn.dsn.PrecompileTimeConfig):
          All members (with integral data type) of the the config structure
          CanTSyn_OffsetSlaveType have the type as stated in the design document.
      04: VP(CanTSyn.dsn.PrecompileTimeConfig):
          All members (with integral data type) of the the config structure
          CanTSyn_SyncMasterType have the type as stated in the design document.
      05: VP(CanTSyn.dsn.PrecompileTimeConfig):
          All members (with integral data type) of the the config structure
          CanTSyn_SyncSlaveType have the type as stated in the design document.
      06: VP(CanTSyn.dsn.PrecompileTimeConfig):
          All members (with integral data type) of the the config structure
          CanTSyn_TimeMasterDomainConfigType have the type as stated in the design document.
      07: VP(CanTSyn.dsn.PrecompileTimeConfig):
          All members (with integral data type) of the the config structure
          CanTSyn_TimeSlaveDomainConfigType have the type as stated in the design document.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CanTSyn.dsn.PrecompileTimeConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1750</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
