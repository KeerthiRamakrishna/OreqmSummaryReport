<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_MemMap_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_Native/asc_MemMap_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_Native/asc_MemMap_requirements_AUTOSAR_SWS_MemMap_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_Native/asc_MemMap_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_GenericImporter/reqm_TCS.reqm</commandline>
    <timestamp>Mon Jun 17 19:33:53 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_MemMap_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_Native/asc_MemMap_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_Native/asc_MemMap_requirements_AUTOSAR_SWS_MemMap_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_Native/asc_MemMap_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/build/reqm/ReqM2_GenericImporter/reqm_TCS.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>lim.MemMap.EB_INTREQ_MemMap_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        When a module has a memory section referencing the SwAddrMethod CODE in both the basic software and software component description,
        the same MemMapAddressingMode should be used for both memory sections when creating the MemMapSectionSpecificMappings.
      </description>
      <rationale>
        The memory sections CODE need to be mapped to the same MemMapAddressingMode to ensure the mapping is consistent.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>MemMap.ECUC_MemMap_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | MemMapAddressingModeSet
        Parent Container | MemMap 
        Description | Defines a set of addressing modes which might apply to a SwAddrMethod.
        Configuration Parameters 
        Included Parameters 
        Parameter Name | SWS Item ID 
        MemMapCompilerMemClassSymbolImpl | ECUC_MemMap_00018 
        MemMapSupportedAddressingMethodOption | ECUC_MemMap_00009 
        MemMapSupportedMemoryAllocationKeywordPolicy | ECUC_MemMap_00017 
        MemMapSupportedSectionInitializationPolicy | ECUC_MemMap_00008 
        MemMapSupportedSectionType | ECUC_MemMap_00007 
        Included Containers 
        Container Name | Multiplicity | Scope / Dependency 
        MemMapAddressingMode | 1..* | Defines a addressing mode with a set of #pragma statements 
        implementing the start and the stop of a section.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_62</srcid><srcstatus/><internalId>305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | MemMapAddressingMode
        Parent Container | MemMapAddressingModeSet 
        Description | Defines a addressing mode with a set of #pragma statements implementing the start 
        and the stop of a section.
        Configuration Parameters 
        Included Parameters 
        Parameter Name | SWS Item ID 
        MemMapAddressingModeStart | ECUC_MemMap_00004 
        MemMapAddressingModeStop | ECUC_MemMap_00005 
        MemMapAlignmentSelector | ECUC_MemMap_00006 
        No Included Containers 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_244</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapAddressingModeStart 
        Parent Container | MemMapAddressingMode 
        Description | Defines a set of #pragma statements implementing the start of a section.
        Multiplicity | 1 
        Type | EcucMultilineStringParamDef 
        Default value 
        maxLength 
        minLength 
        regularExpression 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_256</srcid><srcstatus/><internalId>315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapAddressingModeStop 
        Parent Container | MemMapAddressingMode 
        Description | Defines a set of #pragma statements implementing the start of a section.
        Multiplicity | 1 
        Type | EcucMultilineStringParamDef 
        Default value 
        maxLength 
        minLength 
        regularExpression 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_275</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapAlignmentSelector 
        Parent Container | MemMapAddressingMode 
        Description | Defines a the alignments for which the MemMapAddressingMode applies.The to be 
        used alignment is defined in the alignment attribute of the MemorySection. If the 
        MemMapAlignmentSelector fits to alignment attribute of the MemorySection the set of #pragmas of 
        the related MemMapAddressingMode shall be used to implement the start and the stop of a section.
        Please note that the same MemMapAddressingMode can be applicable for several alignments, e.g. "
        8" bit and "UNSPECIFIED"
        Multiplicity | 1..*
        Type | EcucStringParamDef 
        Default value 
        maxLength 
        minLength 
        regularExpression | [1-9][0-9]*|0x[0-9a-f]*|0[0-7]*|0b[0-1]*|UNSPECIFIED|UNKNOWN|BOOLEAN|PTR 
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_294</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapSupportedSectionType 
        Parent Container | MemMapAddressingModeSet 
        swAddrMethods. The attribute sectionType of a swAddrMethod mapped via MemMapGenericMapping or 
        MemMapSectionSpecificMapping to this MemMapAddressingModeSet shall be equal to one of the 
        configured MemMapSupportedSectionType's.
        Multiplicity | 0..*
        Type | EcucEnumerationParamDef 
        Range |
        MEMMAP_SECTION_TYPE_CAL_PRM | To be used for calibratable constants of ECU-functions.
        MEMMAP_SECTION_TYPE_CODE | To be used for mapping code to application block, boot block, 
        external flash etc.
        MEMMAP_SECTION_TYPE_CONFIG_DATA | Constants with attributes that show that they reside in one 
        segment for module configuration.
        MEMMAP_SECTION_TYPE_CONST | To be used for global or static constants.
        MEMMAP_SECTION_TYPE_EXCLUDE_FROM_FLASH | Values existing in the ECU but not dropped down in the 
        binary file. No upload should be needed to obtain access to the ECU data. The ECU will never be 
        touched by the instrumentation tool, with the exception of upload. These are memory areas which 
        are not overwritten by downloading the executable.
        MEMMAP_SECTION_TYPE_VAR | To be used for global or static variables. The expected 
        initialization is specified with the attribute sectionInitializationPolicy.
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_192</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapSupportedAddressingMethodOption 
        Parent Container | MemMapAddressingModeSet 
        Description | This constrains the usage of this addressing mode set for Generic Mappings to 
        swAddrMethods. The attribute option of a swAddrMethod mapped via MemMapGenericMapping to this 
        MemMapAddressingModeSet shall be equal to one of the configured 
        MemMapSupportedAddressMethodOption's 
        Multiplicity | 0..*
        Type | EcucStringParamDef 
        Default value 
        maxLength 
        minLength 
        regularExpression | [a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_102</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | MemMapAllocation
        Parent Container | MemMap 
        Description | Defines which MemorySection of a BSW Module or a Software Component is 
        implemented with which MemMapAddressingModeSet. This can either be specified for a set of 
        MemorySections which refer to an identical SwAddrMethod (MemMapGenericMapping) or for 
        individual MemorySections (MemMapSectionSpecificMapping). If both are defined for the same 
        MemorySection the MemMapSectionSpecificMapping overrules the MemMapGenericMapping.
        Configuration Parameters 
        No Included Parameters 
        Included Containers 
        Container Name | Multiplicity | Scope / Dependency 
        MemMapGenericMapping | 0..* | Defines which SwAddrMethod is implemented with which 
        MemMapAddressingModeSet. The pragmas for the implementation of the MemorySelectorKeywords are 
        taken from the MemMapAddressingModeStart and MemMapAddressingModeStop parameters of the 
        MemMapAddressingModeSet for the individual alignments. That this mapping becomes valid requires 
        matching MemMapSupportedSectionType's, MemMapSupportedSectionInitializationPolicy's and 
        MemMapSupportedAddressingMethodOption's. The MemMapGenericMapping applies only if it is not 
        overruled by an MemMapSectionSpecificMapping 
        MemMapMappingSelector | 0..* | The container holds a section criteria reusable for 
        MemMapGenericMappings.
        MemMapSectionSpecificMapping | 0..* | Defines which MemorySection of a BSW Module or a Software 
        Component is implemented with which MemMapAddressingModeSet. The pragmas for the implementation 
        of the MemorySelectorKeywords are taken from the MemMapAddressingModeStart and 
        MemMapAddressingModeStop parameters of the MemMapAddressingModeSet for the specific alignment 
        of the MemorySection. The MemMapSectionSpecificMapping precedes a mapping defined by 
        MemMapGenericMapping.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_348</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | MemMapGenericMapping
        Parent Container | MemMapAllocation 
        Description | Defines which SwAddrMethod is implemented with which MemMapAddressingModeSet. The 
        pragmas for the implementation of the MemorySelectorKeywords are taken from the 
        MemMapAddressingModeStart and MemMapAddressingModeStop parameters of the 
        MemMapAddressingModeSet for the individual alignments. That this mapping becomes valid requires 
        matching MemMapSupportedSectionType's, MemMapSupportedSectionInitializationPolicy's and 
        MemMapSupportedAddressingMethodOption's. The MemMapGenericMapping applies only if it is not 
        overruled by an MemMapSectionSpecificMapping 
        Configuration Parameters 
        Included Parameters 
        Parameter Name | SWS Item ID 
        MemMapAddressingModeSetRef | ECUC_MemMap_00012 
        MemMapMappingSelectorRef | ECUC_MemMap_00023 
        MemMapSwAddressMethodRef | ECUC_MemMap_00013 
        No Included Containers 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_358</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapAddressingModeSetRef 
        Parent Container | MemMapGenericMapping 
        Description | Reference to the MemMapAddressingModeSet which applies to the 
        MemMapGenericMapping.
        Multiplicity | 1 
        Type | Reference to [ MemMapAddressingModeSet 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_383</srcid><srcstatus/><internalId>324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | MemMapSectionSpecificMapping
        Parent Container | MemMapAllocation 
        Description | Defines which MemorySection of a BSW Module or a Software Component is 
        implemented with which MemMapAddressingModeSet. The pragmas for the implementation of the 
        MemorySelectorKeywords are taken from the MemMapAddressingModeStart and 
        MemMapAddressingModeStop parameters of the MemMapAddressingModeSet for the specific alignment 
        of the MemorySection. The MemMapSectionSpecificMapping precedes a mapping defined by 
        MemMapGenericMapping.
        Configuration Parameters 
        Included Parameters 
        Parameter Name | SWS Item ID 
        MemMapAddressingModeSetRef | ECUC_MemMap_00015 
        MemMapMemorySectionRef | ECUC_MemMap_00016 
        No Included Containers 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_479</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapAddressingModeSetRef 
        Parent Container | MemMapSectionSpecificMapping 
        Description | Reference to the MemMapAddressingModeSet which applies to the 
        MemMapModuleSectionSpecificMapping.
        Multiplicity | 1 
        Type | Reference to [ MemMapAddressingModeSet 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_505</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00001</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        For each build scenario (e.g. Boot loader, ECU Application) an own set of memory mapping files 
        has to be provided.
      </description>
      <comment>
        This requirement is informational only. The build scenario is ECU configuration and the MemMap module generate the headers according to the ECU configuration.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The memory mapping file name shall be {Mip}_MemMap.h for basic software modules and {
        componentTypeName}_MemMap.h for software components where {Mip} is the Module implementation 
        prefix and {componentTypeName} is the name of the software component type.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Header.Mip</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Header.BSW</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Header.BSWSWC</srcid><srcstatus/><internalId>65</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00003</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Each AUTOSAR basic software module and software component shall wrap declaration and definition 
        of code, variables and constants using the following mechanism:
        Definition of start symbol for module memory section
        Inclusion of the memory mapping header file
        Declaration/definition of code, variables or constants belonging to the specified section
        Definition of stop symbol for module memory section
        Inclusion of the memory mapping header file
        For code which is invariably implemented as inline function the wrapping with Memory Allocation 
        Keywords is not required.
      </description>
      <comment>
        This requirement is not applicable to the MemMap module.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The memory mapping header files shall provide a mechanism to select different code, variable or 
        constant sections by checking the definition of the module specific Memory Allocation Key Words 
        for starting a section . Code, variables or constants declared after this selection shall be 
        mapped to this section.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Macro.Start</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.Stop</srcid><srcstatus/><internalId>67</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The memory mapping header files shall provide a mechanism to deselect different code and 
        variable sections by checking the definition of the module specific Memory Allocation Key Words 
        for stopping a section . The selected section shall be deactivated if the section macro is 
        defined before include of the memory mapping header file. Code or variables declared after this 
        selection shall be mapped to an section collecting those inaccurate non-handled objects from 
        BSW Module or software component implementation.Since its error prone to determined expected 
        properties for memory which is not explicitly handled by Memory Allocation Key Words usually 
        those objects are treated in away to cause linker errors. The default sections might be used to 
        catch those non-handled objects.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_83</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_32</srcid><srcstatus/><internalId>288</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Validate_Sections</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The memory mapping header files shall check if they have been included with a valid memory 
        mapping symbol and in a valid sequence (no START preceded by a START, no STOP without the 
        corresponding START). This shall be done by a preprocessor check.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapValidateSections</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapValidateSections.Sequence</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapValidateSections.Symbol</srcid><srcstatus/><internalId>97</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        If a compiler/linker does not require specific commands to implement the functionality of SWS 
        Memory Mapping, the Memory Allocation Keyword defines might be undefined without further effect.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_102</srcid><srcstatus/><internalId>178</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_49</srcid><srcstatus/><internalId>290</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The memory mapping header files shall undefine the module or software component specific Memory 
        Allocation Key Words for starting or stopping a section.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_103</srcid><srcstatus/><internalId>179</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_50</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The memory mapping header files shall use if-else structures to reduce the compilation effort.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_84</srcid><srcstatus/><internalId>177</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_33</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The selected section shall be activated, if the section macro is defined before include of the 
        memory mapping header file.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_81</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_42</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The selection of a section shall only influence the linker's behavior for one of the three 
        different object types code, variables or constants concurrently.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Macro.Start</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.Stop</srcid><srcstatus/><internalId>67</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00018</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Each AUTOSAR basic software module and software component shall support, for all C-objects, the 
        configuration of the assignation to one of the memory types (code, variables and constants)
      </description>
      <comment>
        This requirement is not applicable to the MemMap module.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00020</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The SWS Memory Mapping is applicable for each AUTOSAR basic software module and software 
        component. Therefore the implementation of memory mapping files shall fulfill the 
        implementation and configuration specific needs of each software module in a specific build 
        scenario. See also SWS_MemMap_00038, SWS_MemMap_00003, SWS_MemMap_00018 and SWS_MemMap_00001.
      </description>
      <comment>
        This requirement is not applicable to the MemMap module. Each BSW and SWC must fullfill the sub-requirements MEMMAP003, MEMMAP018 and MEMMAP001.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The keywords to be used before inclusion of the memory mapping header file shall use the 
        templates &lt;PREFIX&gt;_START_SEC_&lt;NAME&gt; or &lt;PREFIX&gt;_STOP_SEC_&lt;NAME&gt; 
        Where:
        - &lt;PREFIX&gt; is composed according &lt;snp&gt;[_&lt;vi&gt;_&lt;ai&gt;] for basic software modules where
          - &lt;snp&gt; is the Section Name Prefix which shall be the Module Abbreviation from the BSW Module list 
            e.g. "EEP" or "CAN") in upper case letters of the BSW module.
          For the generation of the MemMap.h file following rules apply:
          - &lt;snp&gt; shall be the BswModuleDescription's Referrable.shortName converted in upper case letters 
            if no SectionNamePrefix is defined for the MemorySection.
          - &lt;snp&gt; shall be the symbol of the SectionNamePrefix associated to the MemorySection if a 
            SectionNamePrefix is defined for the MemorySection.
          - &lt;vi&gt; is the Implementation.vendorId of the BSW module, which shall be in upper case.
            &lt;ai&gt; is the BswImplementation.vendorApiInfix of the BSW module, which shall be in upper case.
        - The sub part in squared brackets [_&lt;vi&gt;_&lt;ai&gt;] is omitted if no BswImplementation.vendorApiInfix 
          is defined for the Basic Software Module which indicates that it does not use multiple 
          instantiation.
          OR
        - &lt;PREFIX&gt; is the Referrable.shortName of the software component type for software components 
          (case sensitive) if no SectionNamePrefix is defined for the MemorySection.
          OR
        - &lt;PREFIX&gt; is the SectionNamePrefix.symbol of the SectionNamePrefix if a SectionNamePrefix is 
          defined for the MemorySection.
        AND
        - &lt;NAME&gt; is the Referrable.shortName of the MemorySection described in Basic Software Module 
          Description or a Software Component Description (case sensitive) if the MemorySection has no 
          MemorySection.symbol attribute defined.
          OR
        - &lt;NAME&gt; is the MemorySection.symbol of the MemorySection described in Basic Software Module 
          Description or a Software Component Description (case sensitive) if the MemorySection has a 
          MemorySection.symbol attribute defined.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Macro.Start</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.Stop</srcid><srcstatus/><internalId>67</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.BSW.Prefix</srcid><srcstatus/><internalId>68</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.SWC.Prefix</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.Name.BSW.ShortName</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.Name.SWC.ShortName</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.Name.BSW.Symbol</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.Name.SWC.Symbol</srcid><srcstatus/><internalId>78</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00023</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Memory mapping header files shall not be included inside the body of a function.
      </description>
      <comment>
        This requirement is not applicable to the MemMap module.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Each BSW memory mapping header file shall support the Memory Allocation Keywords to start and 
        to stop a section for each belonging MemorySection defined in a BswImplementation which is part 
        of the input configuration.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_133</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Invalid_SystemDescription</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The software component type specific memory mapping header file {componentTypeName}_MemMap.h 
        shall support the Memory Allocation Keywords to start and to stop a section for each 
        MemorySection defined in a SwcImplementation associated of this software component type.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Header.SWC.InternalBehavior</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Header.SWC.Rte</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Memory Mapping shall provide a BSW memory mapping header file if any of the BSW Module 
        Descriptions is describing a DependencyOnArtifact as Implementation.requiredArtifact.
        DependencyOnArtifact.Identifiable.category = MEMMAP In this case the file name of the BSW 
        memory mapping header file name is defined by the attribute value Implementation.
        requiredArtifact.DependencyOnArtifact.artifactDescriptor.EngineeringObject.shortLabel in the 
        BSW Module Description.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.DependencyOnArtifact</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        For each software component type which is part of the input configuration a software component 
        type specific memory mapping header file {componentTypeName}_MemMap.h shall be provided by the 
        Memory Mapping.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_224</srcid><srcstatus/><internalId>247</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Invalid_SystemDescription</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00999</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        These requirements are not applicable to this specification.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapCompilerMemClassSymbolImpl 
        Parent Container | MemMapAddressingModeSet 
        Description | Defines the implementation behind a MemClassSymbol and configures the Compiler 
        Abstraction.
        Multiplicity | 1 
        Type | EcucStringParamDef 
        Default value 
        maxLength 
        minLength 
        regularExpression 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_76</srcid><srcstatus/><internalId>306</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.UnsupportedFunctionalities</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | MemMapGenericCompilerMemClass 
        Parent Container | MemMap 
        Description | The shortName of the container defines the name of the generic Compiler memclass 
        which is global for all using modules, e.g. REGSPACE.The configures the Compiler Abstraction.
        Configuration Parameters 
        Included Parameters 
        Parameter Name | SWS Item ID 
        MemMapGenericCompilerMemClassSymbolImpl | ECUC_MemMap_00020 
        No Included Containers 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_523</srcid><srcstatus/><internalId>331</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.UnsupportedFunctionalities</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapGenericCompilerMemClassSymbolImpl 
        Parent Container | MemMapGenericCompilerMemClass 
        Description | Defines the implementation behind the generic MemClassSymbol and configures the 
        Compiler Abstraction.
        Multiplicity | 1 
        Type | EcucStringParamDef 
        Default value 
        maxLength 
        minLength 
        regularExpression 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_545</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.UnsupportedFunctionalities</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        For each basic software module description which is part of the input configuration a basic 
        software module specific memory mapping header file {Mip}_MemMap.h shall be provided by the 
        Memory Mapping if the BSW Module Descriptions is NOT describing a DependencyOnArtifact as 
        Implementation.requiredArtifact.DependencyOnArtifact.Identifiable.category = MEMMAP. Hereby {
        Mip} is composed according &lt;Msn&gt;[_&lt;vi&gt;_&lt;ai&gt;] for basic software modules where
        Msn&gt; is the Referrable.shortName (case sensitive) of the BswModuleDescription
        vi&gt; is the Implementation.vendorId of the BSW module
        ai&gt; is the BswImplementation.vendorApiInfix of the BSW module
        The sub part in squared brackets [_&lt;vi&gt;_&lt;ai&gt;] is omitted if no vendorApiInfix is defined for 
        the Basic Software Module which indicates that it does not use multiple instantiation.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Header.BSW.Mip</srcid><srcstatus/><internalId>60</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Header.BSW.MipAi</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Header.BSW.MipSubPart</srcid><srcstatus/><internalId>64</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        All MemorySections defined in a BswImplementation belong to the {Mip}_MemMap.h memory mapping 
        header file if the BswImplementation does NOT contain a DependencyOnArtifact as Implementation.
        requiredArtifact.DependencyOnArtifact.Identifiable.category = MEMMAP
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.DependencyOnArtifact</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        All MemorySection defined in a BswImplementation belong to the memory mapping header file 
        defined by the attribute Implementation.requiredArtifact.DependencyOnArtifact.
        artifactDescriptor.EngineeringObject.shortLabel if the BswImplementation does contain exactly 
        one DependencyOnArtifact as Implementation.requiredArtifact.DependencyOnArtifact.Identifiable.
        category = MEMMAP
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.DependencyOnArtifact</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        All MemorySection defined in a BswImplementation and associated with the identical
        SectionNamePrefix belong to the memory mapping header file defined by the attribute
        requiredArtifact.artifactDescriptor.shortLabel of the DependencyOnArtifact which is referenced
        by the SectionNamePrefix with a implementedIn reference.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.DependencyOnArtifact</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        If a compiler/linker does not support mandatory functionality for the kind of MemorySection 
        used by the BSW module or software component the Memory Allocation Keyword shall be defined to 
        raise an error.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_135</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_99</srcid><srcstatus/><internalId>302</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Bsw_Error_Report</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The part &lt;NAME&gt; from SWS_MemMap_00022 may contain the following ASIL keywords to indicate the 
        restriction/qualifications: {safety} = QM, ASIL_A, ASIL_B, ASIL_C, ASIL_D The {safety} tag is 
        optional and indicates the maximum possible safety level. Down-scaling in the project is 
        possible inside memory mapping header files. If no {safety} keyword is added the default shall 
        be treated as QM (without any ASIL qualification)
      </description>
      <comment>
        The {safety} tag is optional and indicates the maximum possible safety level. Downscaling in the project is possible inside memory mapping
        header files. If no {safety} keyword is added the default shall be treated as QM (without any ASIL qualification).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Safety</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Safety.Optional</srcid><srcstatus/><internalId>101</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Safety.Default</srcid><srcstatus/><internalId>102</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Safety.AsilA</srcid><srcstatus/><internalId>103</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Safety.AsilB</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Safety.AsilC</srcid><srcstatus/><internalId>105</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Safety.AsilD</srcid><srcstatus/><internalId>106</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Safety.Name</srcid><srcstatus/><internalId>109</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapSupportedSectionInitializationPolicy 
        Parent Container | MemMapAddressingModeSet 
        Description | This constrains the usage of this addressing mode set for Generic Mappings to 
        swAddrMethods. The sectionIntializationPolicy attribute value of a swAddrMethod mapped via 
        MemMapGenericMapping to this MemMapAddressingModeSet shall be equal to one of the configured 
        MemMapSupportedSectionIntializationPolicy's Please note that SectionInitializationPolicyType 
        describes the intended initialization of MemorySections. The following values are standardized 
        in AUTOSAR Methodology:
        NO-INIT: No initialization and no clearing is performed. Such data elements must not be read 
        before one has written a value into it.
        INIT: To be used for data that are initialized by every reset to the specified value (initValue)
        POWER-ON-INIT: To be used for data that are initialized by "Power On" to the specified value (
        initValue). Note: there might be several resets between power on resets.
        CLEARED: To be used for data that are initialized by every reset to zero.
        POWER-ON-CLEARED: To be used for data that are initialized by "Power On" to zero. Note: there 
        might be several resets between power on resets.
        Please note that the values are defined similar to the representation of enumeration types in 
        the XML schema to ensure backward compatibility.
        Multiplicity | 0.*
        Type | EcucStringParamDef 
        Default value 
        maxLength 
        minLength 
        regularExpression 
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_163</srcid><srcstatus/><internalId>311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapSupportedMemoryAllocationKeywordPolicy 
        Parent Container | MemMapAddressingModeSet 
        Description | This constrains the usage of this addressing mode set for Generic Mappings to 
        swAddrMethods. The attribute MemoryAllocationKeywordPolicy of a swAddrMethod mapped via 
        MemMapGenericMapping to this MemMapAddressingModeSet shall be equal to one of the configured 
        MemMapSupportedMemoryAllocationKeywordPolicy's 
        Multiplicity | 0..*
        Type | EcucEnumerationParamDef 
        Range | 
        MEMMAP_ALLOCATION_KEYWORD_POLICY_ADDR_METHOD_SHORT_NAME | The Memory Allocation Keyword is 
        build with the short name of the SwAddrMethod. This is the default value if the attribute does 
        not exist in the SwAddrMethod.
        MEMMAP_ALLOCATION_KEYWORD_POLICY_ADDR_METHOD_SHORT_NAME_AND_ALIGNMENT | The Memory Allocation 
        Keyword is build with the the short name of the SwAddrMethod and the alignment attribute of the 
        MemorySection. This requests a separation of objects in memory dependent from the alignment and 
        is not applicable for RunnableEntitys and BswSchedulableEntitys.
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_131</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Each AUTOSAR basic software module and software component should support the configuration of 
        at least the following different memory types as described in
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_VAR_{INIT_POLICY}[_{safety}][_{
        coreScope}]_{ALIGNMENT} {PREFIX}_STOP_SEC_VAR_{INIT_POLICY}[_{safety}][_{coreScope}]_{ALIGNMENT}
        Description | To be used for all global or static variables. The name part _{safety} shall 
        contain the safety integrity level with at most one of the strings QM, ASIL_A, ASIL_B, ASIL_C, 
        ASIL_D. In case of QM the name part may be omitted. The name part _{coreScope} shall contain 
        the core scope qualification with at most one of the strings GLOBAL, LOCAL. In case of GLOBAL 
        the name part may be omitted. In the related SwAddrMethod one option attribute shall describe 
        the safety integrity level with the possible values {safetyQM, safetyAsilA, safetyAsilB, 
        safetyAsilC, safetyAsilD}. In case of safetyQM the attribute may be omitted. In the related 
        SwAddrMethod one option attribute shall describe the core scope qualification with at most one 
        of the possible values {coreGlobal, coreLocal}. In case of coreGlobal the attribute may be 
        omitted.
        Memory Section Type | VAR 
        Section Initialization Policy | {INIT_POLICY}
        Status 
        Section Type VAR
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_VAR_FAST_{INIT_POLICY}[_{safety}][_{
        coreScope}]_{ALIGNMENT} {PREFIX}_STOP_SEC_VAR_FAST_{INIT_POLICY}[_{safety}][_{coreScope}]_{
        ALIGNMENT}
        Description | To be used for all global or static variables. To be used for all global or 
        static variables that have at least one of the following properties:
        accessed bitwise
        frequently used
        high number of accesses in source code
        Some platforms allow the use of bit instructions for variables located in this specific RAM 
        area as well as shorter addressing instructions. This saves code and runtime. The name part _{
        safety} shall contain the safety integrity level with at most one of the strings QM, ASIL_A, 
        ASIL_B, ASIL_C, ASIL_D. In case of QM the name part may be omitted. The name part _{coreScope} 
        shall contain the core scope qualification with at most one of the strings GLOBAL, LOCAL. In 
        case of GLOBAL the name part may be omitted. In the related SwAddrMethod one option attribute 
        shall describe the safety integrity level with the possible values {safetyQM, safetyAsilA, 
        safetyAsilB, safetyAsilC, safetyAsilD}. In case of safetyQM the attribute may be omitted. In 
        the related SwAddrMethod one option attribute shall describe the core scope qualification with 
        at most one of the possible values {coreGlobal, coreLocal}. In case of coreGlobal the attribute 
        may be omitted.
        Memory Section Type | VAR 
        Section Initialization Policy | {INIT_POLICY}
        Status 
        Section Type VAR_FAST
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_VAR_SLOW_{INIT_POLICY}[_{safety}][_{
        coreScope}]_{ALIGNMENT} {PREFIX}_STOP_SEC_VAR_SLOW_{INIT_POLICY}[_{safety}][_{coreScope}]_{
        ALIGNMENT}
        Description | To be used for all infrequently accessed global or static variables. The name 
        part _{safety} shall contain the safety integrity level with at most one of the strings QM, 
        ASIL_A, ASIL_B, ASIL_C, ASIL_D. In case of QM the name part may be omitted. The name part _{
        coreScope} shall contain the core scope qualification with at most one of the strings GLOBAL, 
        LOCAL. In case of GLOBAL the name part may be omitted. In the related SwAddrMethod one option 
        attribute shall describe the safety integrity level with the possible values {safetyQM, 
        safetyAsilA, safetyAsilB, safetyAsilC, safetyAsilD}. In case of safetyQM the attribute may be 
        omitted. In the related SwAddrMethod one option attribute shall describe the core scope 
        qualification with at most one of the possible values {coreGlobal, coreLocal}. In case of 
        coreGlobal the attribute may be omitted.
        Memory Section Type | VAR 
        Section Initialization Policy | {INIT_POLICY}
        Status 
        Section Type VAR_SLOW
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_INTERNAL_VAR_{INIT_POLICY}[_{safety}][
        _{coreScope}]_{ALIGNMENT} {PREFIX}_STOP_SEC_INTERNAL_VAR_{INIT_POLICY}[_{safety}][_{coreScope}]
        _{ALIGNMENT}
        Description | To be used for global or static variables those are accessible from a calibration 
        tool. The name part _{safety} shall contain the safety integrity level with at most one of the 
        strings QM, ASIL_A, ASIL_B, ASIL_C, ASIL_D. In case of QM the name part may be omitted. The 
        name part _{coreScope} shall contain the core scope qualification with at most one of the 
        strings GLOBAL, LOCAL. In case of GLOBAL the name part may be omitted. In the related 
        SwAddrMethod one option attribute shall describe the safety integrity level with the possible 
        values {safetyQM, safetyAsilA, safetyAsilB, safetyAsilC, safetyAsilD}. In case of safetyQM the 
        attribute may be omitted. In the related SwAddrMethod one option attribute shall describe the 
        core scope qualification with at most one of the possible values {coreGlobal, coreLocal}. In 
        case of coreGlobal the attribute may be omitted.
        Memory Section Type | VAR 
        Section Initialization Policy | {INIT_POLICY}
        Status 
        Section Type INTERNAL_VAR
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_VAR_SAVED_ZONE{anyNamePart}[_{safety}]
        _{ALIGNMENT} {PREFIX}_STOP_SEC_VAR_SAVED_ZONE{anyNamePart}[_{safety}]_{ALIGNMENT}
        Description | To be used for RAM buffers of variables saved in non volatile memory. {
        anyNamePart} denotes the specific content of the saved zone. In the related SwAddrMethod the 
        sectionInitializationPolicy attribute shall be set to NO-INIT. The name part _{safety} shall 
        contain the safety integrity level with at most one of the strings QM, ASIL_A, ASIL_B, ASIL_C, 
        ASIL_D. In case of QM the name part may be omitted. In the related SwAddrMethod one option 
        attribute shall describe the safety integrity level with the possible values {safetyQM, 
        safetyAsilA, safetyAsilB, safetyAsilC, safetyAsilD}. In case of safetyQM the attribute may be 
        omitted.
        Memory Section Type | VAR 
        Section Initialization Policy | NO_INIT 
        Status 
        Section Type VAR_SAVED_ZONE
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_CONST_SAVED_RECOVERY_ZONE{anyNamePart}
        _{safety}]_{ALIGNMENT} {PREFIX}_STOP_SEC_CONST_SAVED_RECOVERY_ZONE{anyNamePart}[_{safety}]_{
        ALIGNMENT}
        Description | To be used for ROM buffers of variables saved in non volatile memory. {
        anyNamePart} denotes the specific content of the recovery zone. The name part _{safety} shall 
        contain the safety integrity level with at most one of the strings QM, ASIL_A, ASIL_B, ASIL_C, 
        ASIL_D. In case of QM the name part may be omitted. In the related SwAddrMethod one option 
        attribute shall describe the safety integrity level with the possible values {safetyQM, 
        safetyAsilA, safetyAsilB, safetyAsilC, safetyAsilD}. In case of safetyQM the attribute may be 
        omitted.
        Memory Section Type | CONST 
        Section Initialization Policy 
        Status 
        Section Type CONST_SAVED_RECOVERY_ZONE
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_CONST[_{accessPeriod}][_{safety}]_{
        ALIGNMENT} {PREFIX}_STOP_SEC_CONST[_{accessPeriod}][_{safety}]_{ALIGNMENT}
        Description | To be used for global or static constants. {accessPeriod} is the typical period 
        time value and unit of the ExecutableEntitys in this MemorySection. The name part _{
        accessPeriod} is optional. Units are:
        US microseconds
        MS milli second
        S second
        For example: 100US, 400US, 1MS, 5MS, 10MS, 20MS, 100MS, 1S Please note that deviations from 
        this typical period time are possible due to integration decisions (e.g. RTEEvent To Task 
        Mapping). Further on in special modes of the ECU the code may be scheduled with a higher or 
        lower period. The name part _{safety} shall contain the safety integrity level with at most one 
        of the strings QM, ASIL_A, ASIL_B, ASIL_C, ASIL_D. In case of QM the name part may be omitted. 
        In the related SwAddrMethod one option attribute shall describe the safety integrity level with 
        the possible values {safetyQM, safetyAsilA, safetyAsilB, safetyAsilC, safetyAsilD}. In case of 
        safetyQM the attribute may be omitted.
        Memory Section Type | CONST 
        Section Initialization Policy 
        Status 
        Section Type CONST
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_CALIB[_{safety}]_{ALIGNMENT} {PREFIX}
        _STOP_SEC_CALIB[_{safety}]_{ALIGNMENT}
        Description | To be used for calibration constants. The name part _{safety} shall contain the 
        safety integrity level with at most one of the strings QM, ASIL_A, ASIL_B, ASIL_C, ASIL_D. In 
        case of QM the name part may be omitted. In the related SwAddrMethod one option attribute shall 
        describe the safety integrity level with the possible values {safetyQM, safetyAsilA, 
        safetyAsilB, safetyAsilC, safetyAsilD}. In case of safetyQM the attribute may be omitted.
        Memory Section Type | CALPRM 
        Section Initialization Policy 
        Status 
        Section Type CALIB
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_CONFIG_DATA_{configClass}[_{safety}]_{
        ALIGNMENT} {PREFIX}_STOP_SEC_CONFIG_DATA_{configClass}[_{safety}]_{ALIGNMENT}
        Description | Constants with attributes that show that they reside in one segment for module 
        configuration. The name part _{safety} shall contain the safety integrity level with at most 
        one of the strings QM, ASIL_A, ASIL_B, ASIL_C, ASIL_D. In case of QM the name part may be 
        omitted. The name part {configClass} shall contain the configClass with one of the strings 
        PREBUILD or POSTBUILD. In the related SwAddrMethod one option attribute shall describe the 
        safety integrity level with the possible values {safetyQM, safetyAsilA, safetyAsilB, 
        safetyAsilC, safetyAsilD}. In case of safetyQM the attribute may be omitted. In the related 
        SwAddrMethod one option attribute shall describe the configClass with the possible values {
        configClassPreBuild, configClassPostBuild}
        Memory Section Type | CONFIG-DATA 
        Section Initialization Policy 
        Status 
        Section Type CONFIG_DATA
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_CODE[_{codePeriod}][_{safety}][_{
        coreScope}] {PREFIX}_STOP_SEC_CODE[_{codePeriod}][_{safety}][_{coreScope}
        Description | To be used for mapping code to application block, boot block, external flash etc.
        codePeriod} is the typical period time value and unit of the ExecutableEntitys in this 
        MemorySection. The name part _{codePeriod} is optional. Units are:
        US microseconds
        MS milli second
        S second
        For example: 100US, 400US, 1MS, 5MS, 10MS, 20MS, 100MS, 1S Please note that deviations from 
        this typical period time are possible due to integration decisions (e.g. RTEEvent To Task 
        Mapping). Further on in special modes of the ECU the code may be scheduled with a higher or 
        lower period. The name part _{safety} shall contain the safety integrity level with at most one 
        of the strings QM, ASIL_A, ASIL_B, ASIL_C, ASIL_D. In case of QM the name part may be omitted. 
        The name part _{coreScope} shall contain the core scope qualification with at most one of the 
        strings GLOBAL, LOCAL. In case of GLOBAL the name part may be omitted. In the related 
        SwAddrMethod one option attribute shall describe the safety integrity level with the possible 
        values {safetyQM, safetyAsilA, safetyAsilB, safetyAsilC, safetyAsilD}. In case of safetyQM the 
        attribute may be omitted. In the related SwAddrMethod one option attribute shall describe the 
        core scope qualification with at most one of the possible values {coreGlobal, coreLocal}. In 
        case of coreGlobal the attribute may be omitted.
        Memory Section Type | CODE 
        Section Initialization Policy 
        Status 
        Section Type CODE
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_CALLOUT_CODE[_{safety}][_{coreScope}
        PREFIX}_STOP_SEC_CALLOUT_CODE[_{safety}][_{coreScope}
        Description | To be used for mapping callouts of the BSW Modules which shall typically use the 
        global linker settings for callouts. The name part _{safety} shall contain the safety integrity 
        level with at most one of the strings QM, ASIL_A, ASIL_B, ASIL_C, ASIL_D. In case of QM the 
        name part may be omitted. The name part _{coreScope} shall contain the core scope qualification 
        with at most one of the strings GLOBAL, LOCAL. In case of GLOBAL the name part may be omitted. 
        In the related SwAddrMethod one option attribute shall describe the safety integrity level with 
        the possible values {safetyQM, safetyAsilA, safetyAsilB, safetyAsilC, safetyAsilD}. In case of 
        safetyQM the attribute may be omitted. In the related SwAddrMethod one option attribute shall 
        describe the core scope qualification with at most one of the possible values {coreGlobal, 
        coreLocal}. In case of coreGlobal the attribute may be omitted.
        Memory Section Type | CODE 
        Section Initialization Policy 
        Status 
        Section Type CALLOUT_CODE
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_CODE_FAST[_{safety}][_{coreScope}] {
        PREFIX}_STOP_SEC_CODE_FAST[_{safety}][_{coreScope}
        Description | To be used for code that shall go into fast code memory segments. The FAST 
        sections should be used when the execution does not happen in a well defined period times but 
        with the knowledge of high frequent access and /or high execution time. For example, a callback 
        for a frequent notification. The name part _{safety} shall contain the safety integrity level 
        with at most one of the strings QM, ASIL_A, ASIL_B, ASIL_C, ASIL_D. In case of QM the name part 
        may be omitted. The name part _{coreScope} shall contain the core scope qualification with at 
        most one of the strings GLOBAL, LOCAL. In case of GLOBAL the name part may be omitted. In the 
        related SwAddrMethod one option attribute shall describe the safety integrity level with the 
        possible values {safetyQM, safetyAsilA, safetyAsilB, safetyAsilC, safetyAsilD}. In case of 
        safetyQM the attribute may be omitted. In the related SwAddrMethod one option attribute shall 
        describe the core scope qualification with at most one of the possible values {coreGlobal, 
        coreLocal}. In case of coreGlobal the attribute may be omitted.
        Memory Section Type | CODE 
        Section Initialization Policy 
        Status 
        Section Type CODE_FAST
        Syntax of Memory Allocation Keyword | {PREFIX}_START_SEC_CODE_SLOW[_{safety}][_{coreScope}] {
        PREFIX}_STOP_SEC_CODE_SLOW[_{safety}][_{coreScope}
        Description | To be used for code that shall go into slow code memory segments. The SLOW 
        sections should be used when the execution does not happen in a well defined period times but 
        with the knowledge of low frequent access. For example, a callback in case of seldom error. The 
        name part _{safety} shall contain the safety integrity level with at most one of the strings QM,
        ASIL_A, ASIL_B, ASIL_C, ASIL_D. In case of QM the name part may be omitted. The name part _{
        coreScope} shall contain the core scope qualification with at most one of the strings GLOBAL, 
        LOCAL. In case of GLOBAL the name part may be omitted. In the related SwAddrMethod one option 
        attribute shall describe the safety integrity level with the possible values {safetyQM, 
        safetyAsilA, safetyAsilB, safetyAsilC, safetyAsilD}. In case of safetyQM the attribute may be 
        omitted. In the related SwAddrMethod one option attribute shall describe the core scope 
        qualification with at most one of the possible values {coreGlobal, coreLocal}. In case of 
        coreGlobal the attribute may be omitted.
        Memory Section Type | CODE 
        Section Initialization Policy 
        Status 
        Section Type CODE_SLOW
        It is allowed to add module specific sections as they are mapped and thus are configurable 
        within the module's configuration file. The shortcut {ALIGNMENT} means the typical variable 
        alignment. In order to avoid memory gaps variables are allocated separately according their 
        size for the kind of memory sections where a high amount of variables is expected, e.g. VAR. 
        Hereby it is the task of the implementer to ensure the proper granularity by defining memory 
        sections with different {ALIGNMENT} postfixes for variables of different element sizes as 
        described below. It is the integrator's job to ensure via appropriate memory mapping 
        configuration (i.e. using the proper alignment #pragmas or omitting them at all to let the 
        compiler decide) that the platform specific alignment requirements of objects of the respective 
        size are honored. Thereby the effective alignment can deviate from the {ALIGNMENT} post-fix. 
        BOOLEAN, used for variables and constants of size 1 bit 8, used for variables and constants 
        which have to be aligned to 8 bit. For instance used for variables and constants of size 8 bit 
        or used for composite data types: arrays, structs and unions containing elements of maximum 8 
        bits. 16, used for variables and constants which have to be aligned to 16 bit. For instance 
        used for variables and constants of size 16 bit or used for composite data types: arrays, 
        structs and unions containing elements of maximum 16 bits 32, used for variables and constants 
        which have to be aligned to 32 bit. For instance used for variables and constants of size 32 
        bit or used for composite data types: arrays, structs and unions containing elements of maximum 
        32 bits. PTR, used for variables and constants whose value is the address of another variable, 
        so called pointers. UNSPECIFIED, used for variables, constants, structure, array and unions 
        when size (alignment) does not fit the criteria of 8,16, 32 bit or PTR. For instance used for 
        variables and constants of unknown size In case structures and unions, it shall be allowed to 
        use an alignment larger than the bit size of the elements. For instance to facilitate copy 
        instruction a structure may have minimum 2 byte alignment, even if members are byte aligned. In 
        this case, it should be possible to use alignment 16 bit instead of 8 bit for this structure. 
        The shortcut {INIT_POLICY} means the initialization policy of variables. Possible INIT_POLICY 
        postfixes are:
        NO_INIT, used for variables that are never cleared and never initialized.
        CLEARED, used for variables that are cleared to zero after every reset.
        POWER_ON_CLEARED, used for variables that are cleared to zero only after power on reset.
        INIT, used for variables that are initialized with values after every reset.
        POWER_ON_INIT, used for variables that are initialized with values only after power on reset.
        Use INIT or CLEARED also for those variables which might be initialized at a later time in the 
        program flow, e.g. by an initialization routine. NO_INIT shall be used for variables which 
        shall survive resets only. Note 1: For microcontrollers / processors which are equipped with 
        Error Correction Codes (ECC), the hardware needs to initialize the according memory in case of 
        under voltage due to lost ECC. This includes:
        Any 'normal' system RAM without external supply, which needs to be initialized when the 
        microcontroller voltage drops below a threshold as the ECC codes become invalid. This usually 
        happens in case of a cold power on reset.
        Any 'standby' supplied RAM, which needs to be initialized when the standby voltage drops below 
        a threshold and the ECC codes become invalid.
        As a consequence NO_INIT symbols cannot be stored inside of those memory areas. Note 2: Please 
        consider that microcontrollers / processors with embedded LBIST (Logical Build In Self Test), 
        MBIST (Memory Build In Self Test) will initialize a specified amount of memory when those tests 
        are executed. So these memory devices shall not be used for NO_INIT, POWER_ON_INIT, 
        POWER_ON_CLEARED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.DifferentMemoryTypes</srcid><srcstatus/><internalId>163</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        The part &lt;NAME&gt; from SWS_MemMap_00022 shall contain the following core scope keywords to 
        indicate the restriction/qualifications: {coreScope}
        GLOBAL is code/data which can be executed/accessed by any core in case of multi-core ECUs.
        LOCAL code/data must be mapped by the integrator to a specific core (Core 0, Core 1,...) in 
        case of multi-core ECUs.
        The {coreScope} tag can be considered optional in case it is GLOBAL. Means in case no {
        coreScope} keyword is added the default shall be treated as GLOBAL. Instead the {coreScope} tag 
        LOCAL shall be considered as mandatory. Background: Scope of LOCAL SwAddrMethod is visible and 
        can not be mixed up with GLOBAL SwAddrMethods.
      </description>
      <comment>
        The {coreScope} tag is optional after the safety keyword. If no {coreScope} keyword is added the default shall be treated as GLOBAL.
        The combinations of {coreScope} LOCAL is only permitted for {INIT_POLICY} equal CLEARED or INIT.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.CoreScope</srcid><srcstatus/><internalId>113</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.CoreScope.Optional</srcid><srcstatus/><internalId>114</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.CoreScope.Default</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.CoreScope.VAR</srcid><srcstatus/><internalId>116</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.CoreScope.CODE</srcid><srcstatus/><internalId>117</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.CoreScope.Local</srcid><srcstatus/><internalId>118</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.CoreScope.Name</srcid><srcstatus/><internalId>121</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | MemMapMappingSelector 
        Parent Container | MemMapAllocation 
        Description | The container holds a section criteria reusable for MemMapGenericMappings.
        Configuration Parameters 
        Included Parameters 
        Parameter Name | SWS Item ID 
        MemMapPrefixSelector | ECUC_MemMap_00022 
        No Included Containers 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_424</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.UnsupportedFunctionalities</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapPrefixSelector 
        Parent Container | MemMapMappingSelector 
        Description | The parameter MemMapPrefixSelector defines a regular expression which shall be 
        applied to the &lt;PREFIX&gt; part of the memory allocation keywords.The mapping using this selector 
        is only effective for those memories where the &lt;PREFIX&gt; part of the memory allocation keyword 
        matches the regular expression. Note: This is in particular intended the restrict the usage of 
        of a MemMapAddressingModeSet for a sub set of BSW Modules or Software Components or a subset of 
        allocatable memory parts inside BSW Modules or Software Components.
        Multiplicity | 0..1 
        Type | EcucStringParamDef 
        Default value 
        maxLength 
        minLength 
        regularExpression 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_447</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.UnsupportedFunctionalities</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapMappingSelectorRef 
        Parent Container | MemMapGenericMapping 
        Description | Reference to a MemMapPrefixSelector. The owning MemMapGenericMapping is only 
        effective for those memories where the MemMapMappingSelector matches.
        Multiplicity | 0..1 
        Type | Reference to [ MemMapMappingSelector 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_397</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.UnsupportedFunctionalities</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        When a BSW module or Software Component is split into allocatable memory parts the &lt;PREFIX&gt; as 
        described in SWS_MemMap_00022 shall be sub-structured in the following way: &lt;PREFIX&gt; = &lt;snp&gt;[_&lt;
        vi&gt;_&lt;ai&gt;]_&lt;feature&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.AllocatableMemory</srcid><srcstatus/><internalId>164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>MemMap.SWS_MemMap_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        When a BSW module or Software Component is split into allocatable memory parts the resulting &lt;
        PREFIX&gt; as specified in SWS_MemMap_00040 (inclusive [_&lt;vi&gt;_&lt;ai&gt;]) shall be described as a 
        SectionNamePrefix and all belonging MemorySections.MemorySection.prefix needs to reference the 
        SectionNamePrefix.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.MemMap.AllocatableMemory</srcid><srcstatus/><internalId>164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Module Name | MemMap 
        Module Description | Configuration of the Memory Mapping and Compiler Abstraction module.
        Post-Build Variant Support | false 
        Supported Config Variants | VARIANT-PRE-COMPILE 
        Included Containers 
        Container Name | Multiplicity | Scope / Dependency 
        MemMapAddressingModeSet | 0..* | Defines a set of addressing modes which might apply to a 
        SwAddrMethod.
        MemMapAllocation | 0..* | Defines which MemorySection of a BSW Module or a Software Component 
        is implemented with which MemMapAddressingModeSet. This can either be specified for a set of 
        MemorySections which refer to an identical SwAddrMethod (MemMapGenericMapping) or for 
        individual MemorySections (MemMapSectionSpecificMapping). If both are defined for the same 
        MemorySection the MemMapSectionSpecificMapping overrules the MemMapGenericMapping.
        MemMapGenericCompilerMemClass | 0..* | The shortName of the container defines the name of the 
        generic Compiler memclass which is global for all using modules, e.g. REGSPACE.The configures 
        the Compiler Abstraction.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_15</srcid><srcstatus/><internalId>304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapSwAddressMethodRef 
        Parent Container | MemMapGenericMapping 
        Description | Reference to the SwAddrMethod which applies to the MemMapGenericMapping.
        Multiplicity | 1 
        Type | Foreign reference to [ SW-ADDR-METHOD 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_369</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>MemMap.ECUC_MemMap_00016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_MemoryMapping.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | MemMapMemorySectionRef 
        Parent Container | MemMapSectionSpecificMapping 
        Description | Reference to the MemorySection which applies to the MemMapSectionSpecificMapping.
        Multiplicity | 1 
        Type | Foreign reference to [ MEMORY-SECTION 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_491</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>MemMap.EB.Header.Identification</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap.h file shall provide version and identification information.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_52</srcid><srcstatus/><internalId>165</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_28</srcid><srcstatus/><internalId>269</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_28</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Version_Check</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.CustomHeaderFiles</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap.h file shall include all the custom header files configured in MemMapHeaderFiles.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_66</srcid><srcstatus/><internalId>166</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_113</srcid><srcstatus/><internalId>270</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_113</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_MemMapHeader</srcid><srcstatus/><internalId>352</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Invalid_SystemDescription</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Header.CustomHeaderFiles.Order</srcid><srcstatus/><internalId>56</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapHeaderFiles</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.CustomHeaderFiles.Order</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The included MemMapHeaderFiles shall appear in alphabetical order in MemMap.h.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_106</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Invalid_SystemDescription</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.CustomHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.Mip</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap.h file shall include all the generated {Mip}_MemMap.h files.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_83</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_133</srcid><srcstatus/><internalId>272</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_133</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_MemMapHeader</srcid><srcstatus/><internalId>352</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Header.Mip.Order</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.Order</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.Mip.Order</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The included header files {Mip}_MemMap.h shall appear in alphabetical order in MemMap.h.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_80</srcid><srcstatus/><internalId>167</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_130</srcid><srcstatus/><internalId>271</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_130</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Invalid_SystemDescription</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Mip</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.BSW</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall generate one {Mip}_MemMap.h for every basic software modules where {Mip} is the name of the Module implementation prefix.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_333</srcid><srcstatus/><internalId>250</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_BswSwc</srcid><srcstatus/><internalId>343</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_MemMapHeader</srcid><srcstatus/><internalId>352</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.BSW.Mip</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>&lt;Mip&gt; shall be composed according to the template &lt;Msn&gt;[_&lt;vi&gt;_&lt;ai&gt;].</description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Header.BSW.MipMsn</srcid><srcstatus/><internalId>61</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Header.BSW.MipVi</srcid><srcstatus/><internalId>62</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.BSW.MipMsn</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The &lt;Msn&gt; part of &lt;Mip&gt; shall be the shortName (case sensitive) of the BswModuleDescription.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_355</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.Mip</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.BSW.MipVi</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The &lt;vi&gt; part of &lt;Mip&gt; shall be the vendorId of the BSW module.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_356</srcid><srcstatus/><internalId>252</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw_Multi</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.Mip</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.BSW.MipAi</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The &lt;ai&gt; part of &lt;Mip&gt; shall be the vendorApiInfix of the BSW module.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_357</srcid><srcstatus/><internalId>253</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw_Multi</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.BSW.MipSubPart</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The sub part [_&lt;vi&gt;_&lt;ai&gt;] of &lt;Mip&gt; is omitted if no vendorApiInfix is defined for the Basic Software Module which indicates that it does not use multiple instantiation.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_408</srcid><srcstatus/><internalId>258</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.BSWSWC</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The Memory Mapping shall only provide exactly one memory mapping header file implementing the mappings for the basic software module and the software component
                   if {Mip} and {componentTypeName} are identical.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_89</srcid><srcstatus/><internalId>242</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_BswSwc</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.Start</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The memory allocation key words that start a section shall use the templates &lt;PREFIX&gt;_START_SEC_&lt;NAME&gt;.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_63</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_16</srcid><srcstatus/><internalId>285</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.Stop</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The memory allocation key words that stop a section shall use the templates &lt;PREFIX&gt;_STOP_SEC_&lt;NAME&gt;.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_67</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_20</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.BSW.Prefix</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>For basic software modules the &lt;PREFIX&gt; shall be composed according to the template &lt;snp&gt;[_&lt;vi&gt;_&lt;ai&gt;].</description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.Macro.BSW.PrefixSnpName</srcid><srcstatus/><internalId>69</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.BSW.PrefixSnpSymbol</srcid><srcstatus/><internalId>70</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.BSW.PrefixVi</srcid><srcstatus/><internalId>71</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.BSW.PrefixAi</srcid><srcstatus/><internalId>72</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.Macro.BSW.PrefixSubPart</srcid><srcstatus/><internalId>73</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.BSW.PrefixSnpName</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The &lt;snp&gt; part of &lt;PREFIX&gt; shall be the BswModuleDescription’s shortName converted in upper case letters if no SectionNamePrefix is defined for the MemorySection.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_383</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.Prefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.BSW.PrefixSnpSymbol</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The &lt;snp&gt; part of &lt;PREFIX&gt; shall be the symbol of the SectionNamePrefix associated to the MemorySection if a SectionNamePrefix is defined for the MemorySection.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_375</srcid><srcstatus/><internalId>254</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.Prefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.BSW.PrefixVi</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The &lt;vi&gt; part of &lt;PREFIX&gt; shall be the vendorId of the BSW module.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_384</srcid><srcstatus/><internalId>256</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw_Multi</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.Prefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.BSW.PrefixAi</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The &lt;ai&gt; part of &lt;PREFIX&gt; shall be the vendorApiInfix of the BSW module.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_385</srcid><srcstatus/><internalId>257</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw_Multi</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.Prefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.BSW.PrefixSubPart</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The sub part [_&lt;vi&gt;_&lt;ai&gt;] of &lt;PREFIX&gt; shall be omitted if no vendorApiInfix is defined for the Basic Software Module which indicates that it does not use multiple instantiation.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_409</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.Prefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.SWC.Prefix</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>For software components the &lt;PREFIX&gt; shall be the shortName of the software component type, case sensitive.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_188</srcid><srcstatus/><internalId>246</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Swc</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.Name.BSW.ShortName</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>&lt;NAME&gt; shall be the shortName of the MemorySection described in Basic Software Module Description if the MemorySection has no symbol attribute defined.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java_85</srcid><srcstatus/><internalId>267</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.Name.SWC.ShortName</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>&lt;NAME&gt; shall be the shortName of the MemorySection described in Software Component Description (case sensitive) if the MemorySection has no symbol attribute defined.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java_86</srcid><srcstatus/><internalId>268</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Swc</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.Name.BSW.Symbol</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>&lt;NAME&gt; shall be the symbol of the MemorySection described in Basic Software Module Description if the MemorySection has a symbol attribute defined.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java_79</srcid><srcstatus/><internalId>265</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Bsw</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.Name.SWC.Symbol</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>&lt;NAME&gt; shall be the symbol of the MemorySection described in Software Component Description (case sensitive) if the MemorySection has a symbol attribute defined.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java_80</srcid><srcstatus/><internalId>266</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Swc</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.SwAddrMethodRef</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>Memory allocation keywords shall not be generated for memory sections that have invalid software addressing method references.</description>
      <comment>A warning is reported in this case.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Warnings</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_168</srcid><srcstatus/><internalId>245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.Duplicate</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall report a warning if different modules generate the same memory allocation keyword.</description>
      <comment>A warning is reported in this case.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_DuplicatedMacros</srcid><srcstatus/><internalId>366</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapStatus.java_226</srcid><srcstatus/><internalId>241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Macro.Order</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The generated memory sections macros shall appear in alphabetical order in the MemMap header files.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Invalid_SystemDescription</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_150</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Mip</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAS40Compatibility</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall provide a boolean configuration parameter 'MemMapAS40Compatibility' in the container 'MemMapAS40Compatibility'
                   to enable or disable the compatibility with Autosar 4.0.2</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_AS40CompatibilityDisabled</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_AS40CompatibilityEnabled</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_115</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_573</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapAS40Compatibility.True</srcid><srcstatus/><internalId>83</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapAS40Compatibility.False</srcid><srcstatus/><internalId>84</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAS40Compatibility.True</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapAS40Compatibility' is enabled the macros for the MemorySection CONFIG_DATA shall be defined as [PREFIX]_[START|STOP]_SEC_CONFIG_DATA_[ALIGNMENT]
                   and PREFIX_[START|STOP]_CONFIG_DATA_[ALIGNMENT].</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_AS40CompatibilityEnabled</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_110</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_74</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAS40Compatibility.False</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapAS40Compatibility' is disabled the macros for the MemorySection CONFIG_DATA shall be defined as [PREFIX]_[START|STOP]_SEC_CONFIG_DATA_[ALIGNMENT].</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_AS40CompatibilityDisabled</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_111</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_75</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenerateEmptyHeaderFile</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall provide a boolean configuration parameter 'MemMapGenerateEmptyHeaderFile' in the container 'MemMapGenerateEmptyHeaderFile'
                   to enable or disable the generation of empty header files.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_SwcBsw_NoMemorySection</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Bsw_Error_Report</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Bsw_No_Memory_Section</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Bsw_NotGenerated</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Swc_Error_Report</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_599</srcid><srcstatus/><internalId>334</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapGenerateEmptyHeaderFile.Error</srcid><srcstatus/><internalId>86</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.True</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.False</srcid><srcstatus/><internalId>88</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.True</srcid><srcstatus/><internalId>89</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.False</srcid><srcstatus/><internalId>90</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.True</srcid><srcstatus/><internalId>91</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.False</srcid><srcstatus/><internalId>92</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenerateEmptyHeaderFile.Error</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The empty header file shall report an error if it is used.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Bsw_No_Memory_Section</srcid><srcstatus/><internalId>363</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_136</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_100</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.True</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>{componentTypeName}_MemMap.h shall be generated if the 'MemMapGenerateEmptyHeaderFile' configuration parameter is set to true and the SWC-implementation does not contain any 'MEMORY-SECTION'.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_78</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_39</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Swc_Error_Report</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Swc_No_Memory_Section</srcid><srcstatus/><internalId>375</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.False</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>{componentTypeName}_MemMap.h shall not be generated if the 'MemMapGenerateEmptyHeaderFile' configuration parameter is set to false and the SWC-implementation does not contain any 'MEMORY-SECTION'.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_70</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_31</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Swc_NotGenerated</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.True</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>{Mip}_MemMap.h shall be generated if the 'MemMapGenerateEmptyHeaderFile' configuration parameter is set to true and the BSW-implementation does not contain any 'MEMORY-SECTION'.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_86</srcid><srcstatus/><internalId>169</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_79</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_136</srcid><srcstatus/><internalId>273</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_136</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_40</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Bsw_Error_Report</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Bsw_No_Memory_Section</srcid><srcstatus/><internalId>363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.False</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>{Mip}_MemMap.h shall not be generated if the 'MemMapGenerateEmptyHeaderFile' configuration parameter is set to false and the BSW-implementation does not contain any 'MEMORY-SECTION'.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_104</srcid><srcstatus/><internalId>171</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_71</srcid><srcstatus/><internalId>182</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_154</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_154</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_32</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Bsw_NotGenerated</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.True</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>{Mip}_MemMap.h shall be generated if the 'MemMapGenerateEmptyHeaderFile' configuration parameter is set to true, the BSW-implementation and SWC-implementation
                   do not contain any 'MEMORY-SECTION' and {componentTypeName} is equals to {Mip}.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_87</srcid><srcstatus/><internalId>170</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_80</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_137</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_137</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_41</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Bsw_No_Memory_Section</srcid><srcstatus/><internalId>363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.False</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>{Mip}_MemMap.h shall not be generated if the 'MemMapGenerateEmptyHeaderFile' configuration parameter is set to true and the BSW-implementation and SWC-implementation
                   do not contain any 'MEMORY-SECTION' and {componentTypeName} is equals to {Mip}.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_105</srcid><srcstatus/><internalId>172</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_72</srcid><srcstatus/><internalId>183</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_155</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_155</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_33</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_SwcBsw_NoMemorySection</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_SwcBsw_NotGenerated</srcid><srcstatus/><internalId>373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapHeaderFiles</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall provide a configuration parameter list 'MemMapHeaderFiles' in the container 'MemMapHeaderFiles'
                   to provide support for including custom header files in the generated MemMap.h.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_MemMapHeader</srcid><srcstatus/><internalId>352</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_634</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapHeaderFiles.Empty</srcid><srcstatus/><internalId>94</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.CustomHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapHeaderFiles.Empty</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>Empty entries in MemMapHeaderFiles are ignored.</description>
      <comment>A warning is reported in this case.</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_98</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_MemMapHeader</srcid><srcstatus/><internalId>352</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Warnings</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateSections</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall provide a boolean configuration parameter 'MemMapValidateSections' in the container 'MemMapValidateSections'
                   to enable and disable the sequence checks.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsDisabled</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Validate_Sections</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java_23</srcid><srcstatus/><internalId>260</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_788</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapValidateSections.Sequence</srcid><srcstatus/><internalId>96</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateSections.Sequence</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The memory mapping header files shall check if they have been included in a valid sequence(no START preceded by a START, no STOP without the corresponding START).</description>
      <comment>This shall be done by a preprocessor check</comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapValidateSections.Sequence.True</srcid><srcstatus/><internalId>98</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapValidateSections.Sequence.False</srcid><srcstatus/><internalId>99</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateSections.Symbol</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The memory mapping header files shall check if they have been included with a valid memory mapping symbol.</description>
      <comment>This shall be done by a preprocessor check.</comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.memmap.sybmolcheck</srcid><srcstatus/><internalId>161</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateSections.Sequence.True</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapValidateSections' is enabled the sections shall be validated.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsEnabled</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Validate_Sections</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_79</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_28</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Sequence</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateSections.Sequence.False</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapValidateSections' is disabled the sections shall not be validated.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_ValidateSectionsDisabled</srcid><srcstatus/><internalId>359</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_144</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_81</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Sequence</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The part &lt;NAME&gt; from [SWS_MemMap_00022] may contain the following ASIL keywords to indicate the restriction/qualifications: {safety} = QM, ASIL_A, ASIL_B, ASIL_C, ASIL_D.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_371</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety.Optional</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The {safety} tag is optional and indicates the maximum possible safety level.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_343</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety.Default</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If no {safety} keyword is added the default shall be treated as QM.</description>
      <comment>Without any ASIL qualification.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_390</srcid><srcstatus/><internalId>236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety.AsilA</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The safety level ASIL_A is valid if the safety level option is set to safetyAsilA for both the memory section and the SwAddrMethod it references and the name or symbol
                   of the memory sections contains the word ASIL_A.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Safety_Error</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_350</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety.AsilB</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The safety level ASIL_B is valid if the safety level option is set to safetyAsilB for both the memory section and the SwAddrMethod it references and the name or symbol
                   of the memory sections contains the word ASIL_B.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Safety_Error</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_351</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety.AsilC</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The safety level ASIL_C is valid if the safety level option is set to safetyAsilC for both the memory section and the SwAddrMethod it references and the name or symbol
                   of the memory sections contains the word ASIL_C.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Safety_Error</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_352</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety.AsilD</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The safety level ASIL_D is valid if the safety level option is set to safetyAsilD for both the memory section and the SwAddrMethod it references and the name or symbol
                   of the memory sections contains the word ASIL_D.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Safety_Error</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_353</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety.MemorySection.Option</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>Only one safety level option shall be set for a memory section.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Safety_Error</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_404</srcid><srcstatus/><internalId>237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety.SwAddrMethod.Option</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>Only one safety level option shall be set for a SwAddrMethod.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Safety_Error</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_405</srcid><srcstatus/><internalId>238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Safety.Name</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>Only one safety key word shall be set for a memory section.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Safety_Error</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_380</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateSafety</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall provide a boolean configuration parameter 'MemMapValidateSafety' in the container 'MemMapValidateSections'
                   to enable and disable the safety levels validation.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidSafety_NoError</srcid><srcstatus/><internalId>349</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_ValidCoreScopeSafety</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Safety_Error</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java_27</srcid><srcstatus/><internalId>262</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_740</srcid><srcstatus/><internalId>338</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapValidateSafety.True</srcid><srcstatus/><internalId>111</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapValidateSafety.False</srcid><srcstatus/><internalId>112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateSafety.True</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapValidateSafety' is enabled the usage of safety levels is validated.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScopeSafety</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_ValidSafety</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Safety_Error</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_324</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateSafety.False</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapValidateSafety' is disabled the usage of safety levels is not validated.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidSafety_NoError</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_325</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>MemMap.EB.CoreScope</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The part &lt;NAME&gt; from [SWS_MemMap_00022] may contain the following core scope keywords to indicate the restriction/qualifications: {coreScope} = GLOBAL, LOCAL.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_240</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>MemMap.EB.CoreScope.Optional</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The {coreScope} tag is optional after the safety keyword.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_208</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>MemMap.EB.CoreScope.Default</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If no {coreScope} keyword is added the default shall be treated as GLOBAL.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_259</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>MemMap.EB.CoreScope.VAR</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The combinations of {coreScope} LOCAL shall be permitted for variables with {INIT_POLICY} equal to CLEARED or INIT.</description>
      <comment>An error is reported if this requirement or the MemMap.EB.CoreScope.CODE requirement are not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_CoreScope_Error</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_219</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>MemMap.EB.CoreScope.CODE</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The combinations of {coreScope} LOCAL shall be permitted for code sections.</description>
      <comment>An error is reported if this requirement or the MemMap.EB.CoreScope.VAR requirement are not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_CoreScope_Error</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_220</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>MemMap.EB.CoreScope.Local</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The core scope LOCAL is valid if the core scope option is set to coreLocal for both the memory section and the SwAddrMethod
                   it references and the name or symbol of the memory sections contains the word LOCAL.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_CoreScope_Error</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_227</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>MemMap.EB.CoreScope.MemorySection.Option</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>Only one coreScope option shall be set for a memory section.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_CoreScope_Error</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_273</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>MemMap.EB.CoreScope.SwAddrMethod.Option</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>Only one coreScope option shall be set for a SwAddrMethod.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_CoreScope_Error</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_274</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>MemMap.EB.CoreScope.Name</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>Only one coreScope key word shall be set for a memory section.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_CoreScope_Error</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_249</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateCoreScope</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall provide a boolean configuration parameter 'MemMapValidateCoreScope' in the container 'MemMapValidateSections'
                   to enable and disable the coreScope validation.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java_25</srcid><srcstatus/><internalId>261</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_697</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidCoreScope_NoError</srcid><srcstatus/><internalId>347</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_ValidCoreScopeSafety</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_CoreScope_Error</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapValidateCoreScope.True</srcid><srcstatus/><internalId>123</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapValidateCoreScope.False</srcid><srcstatus/><internalId>124</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateCoreScope.True</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapValidateCoreScope' is enabled the usage of coreScope is validated.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_191</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_ValidCoreScope</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_ValidCoreScopeSafety</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_CoreScope_Error</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateCoreScope.False</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapValidateCoreScope' is disabled the usage of coreScope is not validated.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_192</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidCoreScope_NoError</srcid><srcstatus/><internalId>347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateMappings</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall provide a boolean configuration parameter 'MemMapValidateMappings' in the container 'MemMapValidateMappings'
                   to enable and disable the log entries for the invalid generic and specific mappings.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java_29</srcid><srcstatus/><internalId>263</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_653</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_SpecificMapping</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Errors</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapValidateMappings.True</srcid><srcstatus/><internalId>126</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapValidateMappings.False</srcid><srcstatus/><internalId>127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateMappings.True</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapValidateMappings' is enabled error and warnings are reported for invalid generic and specific mappings.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_SpecificMapping</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Errors</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_443</srcid><srcstatus/><internalId>206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapValidateMappings.False</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the parameter 'MemMapValidateMappings' is disabled the invalid generic and specific mappings are silently ignored.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidGenericMapping_NoError</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_InvalidSpecificMapping_NoError</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_444</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAlignmentSelector</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>In the configuration parameter MemMapAlignmentSelector at least one alignment shall be defined for which the MemMapAddressingMode applies.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_SpecificMapping</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_336</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAlignmentSelector.Unique</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMapAlignmentSelector values shall be unique for multiple instances of MemMapAddressingMode configured for the same MemMapAddressingModeSet.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Schema_Errors</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapXPathFunctions.java_35</srcid><srcstatus/><internalId>264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAlignmentSelector.Mapping</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If the MemMapAlignmentSelector fits to the alignment attribute of the MemorySection the set of #pragmas of the related MemMapAddressingMode
                   shall be used to implement the start and the stop of a section.</description>
      <comment>A warning is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_SpecificMapping</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_474</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAlignmentSelector.Value</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The allowed values for MemMapAlignmentSelector shall be numerical values (decimal, hexadecimal, octal, dual), BOOLEAN, UNSPECIFIED, UNKNOWN and an empty value.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_SpecificMapping</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_468</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAlignmentSelector.EmptyValue</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The empty value set in MemMapAlignmentSelector shall match the MemorySections without the alignment attribute set.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_469</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAddressingModeStart.Empty</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version> 
      <description>The MemMap module shall report a warning when MemMapAddressingModeStart it is not configured or it contains only whitespaces or non-printable characters.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidGenericMapping_NoError</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_InvalidSpecificMapping_NoError</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Empty_Pragmas</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_269</srcid><srcstatus/><internalId>316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapAddressingModeStop.Empty</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMap module shall report a warning when MemMapAddressingModeStop it is not configured or it contains only whitespaces or non-printable characters.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidGenericMapping_NoError</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_InvalidSpecificMapping_NoError</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Empty_Pragmas</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_288</srcid><srcstatus/><internalId>318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedSectionType</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>In the configuration parameter MemMapSupportedSectionType shall constrain the usage of this addressing mode set for Generic Mappings to SwAddrMethods.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping_Constrains</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_284</srcid><srcstatus/><internalId>198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedSectionType.NoConfig</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If MemMapSupportedSectionType is not configured the attribute sectionType of a swAddrMethod mapped via MemMapGenericMapping to this MemMapAddressingModeSet shall
                   shall not affect the generic mappings.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_307</srcid><srcstatus/><internalId>199</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedSectionType.Value</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The allowed values for MemMapAlignmentSelector shall be MEMMAP_SECTION_TYPE_CALIBRATION_OFFLINE, MEMMAP_SECTION_TYPE_CALIBRATION_ONLINE, MEMMAP_SECTION_TYPE_CAL_PRM,
                   MEMMAP_SECTION_TYPE_CODE, MEMMAP_SECTION_TYPE_CONFIG_DATA, MEMMAP_SECTION_TYPE_CONST, MEMMAP_SECTION_TYPE_EXCLUDE_FROM_FLASH, MEMMAP_SECTION_TYPE_USER_DEFINED, 
                   MEMMAP_SECTION_TYPE_VAR, MEMMAP_SECTION_TYPE_VAR_FAST, MEMMAP_SECTION_TYPE_VAR_NO_INIT and MEMMAP_SECTION_TYPE_VAR_POWER_ON_INIT.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping_Constrains</srcid><srcstatus/><internalId>346</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_227</srcid><srcstatus/><internalId>313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedSectionInitializationPolicy</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>In the configuration parameter MemMapSupportedSectionInitializationPolicy shall constrain the usage of this addressing mode set for Generic Mappings to SwAddrMethods.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping_Constrains</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_325</srcid><srcstatus/><internalId>200</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedSectionInitializationPolicy.NoConfig</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If MemMapSupportedSectionInitializationPolicy is not configured the attribute sectionIntializationPolicy of a swAddrMethod mapped via MemMapGenericMapping to this MemMapAddressingModeSet shall
                   shall not affect the generic mappings.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_344</srcid><srcstatus/><internalId>201</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedAddressingMethodOption</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>In the configuration parameter MemMapSupportedAddressingMethodOption shall constrain the usage of this addressing mode set for Generic Mappings to SwAddrMethods.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping_Constrains</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_407</srcid><srcstatus/><internalId>204</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedAddressingMethodOption.NoConfig</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If MemMapSupportedAddressingMethodOption is not configured the attribute option of a swAddrMethod mapped via MemMapGenericMapping to this
                   MemMapAddressingModeSet shall not affect the generic mappings.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_413</srcid><srcstatus/><internalId>205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedAddressingMethodOption.Value</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The allowed values for MemMapSupportedAddressingMethodOption shall be string and numerical values.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping_Constrains</srcid><srcstatus/><internalId>346</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_123</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenericMapping</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>In the configuration parameter MemMapGenericMapping shall define which SwAddrMethod is implemented with which MemMapAddressingModeSet.</description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapGenericMapping.Valid.Ref</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.Package</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.NoRef</srcid><srcstatus/><internalId>150</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenericMapping.Pragmas</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The pragmas for the implementation of the MemorySelectorKeywords shall be taken from the MemMapAddressingModeStart and MemMapAddressingModeStop parameters
                   of the MemMapAddressingModeSet for the individual alignments.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_473</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenericMapping.Valid.Param</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>A valid MemMapGenericMapping shall require matching MemMapSupportedSectionType's, MemMapSupportedSectionInitializationPolicy's, MemMapSupportedAddressingMethodOption's
                   and MemMapSupportedMemoryAllocationKeywordPolicy's.</description>
      <comment>A warning is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_235</srcid><srcstatus/><internalId>197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenericMapping.Valid.Ref</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>A valid MemMapGenericMapping shall require valid MemMapSwAddressMethodRef and MemMapAddressingModeSetRef.</description>
      <comment>A warning is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_200</srcid><srcstatus/><internalId>195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenericMapping.Overruled</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMapGenericMapping shall apply only if it is not overruled by a MemMapSectionSpecificMapping.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_Mapping_Overruled</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_56</srcid><srcstatus/><internalId>192</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMapSwAddressMethodRef values shall be unique in the MemMap configuration.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_GenTest_Mapping_Errors</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_78</srcid><srcstatus/><internalId>194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.Package</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>When memory sections references the same SwAddrMethod as the one in MemMapSwAddressMethodRef but from a different package the MemMapGenericMapping shall be considered valid.</description>
      <comment>A warning is reported in this case.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidGenericMapping_NoError</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapStatus.java_210</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.NoRef</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMapGenericMapping with the SwAddressMethod set for MemMapSwAddressMethodRef is not referenced by any memory section shall be ignored.</description>
      <comment>A warning is reported in this case.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidGenericMapping_NoError</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapStatus.java_185</srcid><srcstatus/><internalId>239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSectionSpecificMapping</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>In the configuration parameter MemMapSectionSpecificMapping shall define which MemorySection of a BSW Module or a Software Component is implemented with which MemMapAddressingModeSet.</description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap.EB.MemMapSectionSpecificMapping.Valid.Ref</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>MemMap.EB.MemMapSectionSpecificMapping.MemMapMemorySectionRef</srcid><srcstatus/><internalId>154</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSectionSpecificMapping.Pragmas</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The pragmas for the implementation of the MemorySelectorKeywords shall be taken from the MemMapAddressingModeStart and MemMapAddressingModeStop parameters
                   of the MemMapAddressingModeSet for the specific alignment of the MemorySection.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_SpecificMapping</srcid><srcstatus/><internalId>353</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_472</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSectionSpecificMapping.Valid.Ref</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>A valid MemMapSectionSpecificMapping shall require valid MemMapMemorySectionRef and MemMapAddressingModeSetRef.</description>
      <comment>A warning is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidSpecificMapping_NoError</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>MemMap_ComTest_SpecificMapping</srcid><srcstatus/><internalId>353</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_201</srcid><srcstatus/><internalId>196</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSectionSpecificMapping.MemMapMemorySectionRef</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemMapMemorySectionRef shall be unique in the MemMap configuration.</description>
      <comment>An error is reported if this requirement is not fulfilled.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_InvalidSpecificMapping_NoError</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Errors</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_71</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>In the configuration parameter MemMapSupportedMemoryAllocationKeywordPolicy shall constrain the usage of this addressing mode set for Generic Mappings to SwAddrMethods.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping_Constrains</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>MemMap_GenTest_Mapping_Warnings</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_362</srcid><srcstatus/><internalId>202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy.NoConfig</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>If MemMapSupportedMemoryAllocationKeywordPolicy is not configured the attribute MemoryAllocationKeywordPolicy of a swAddrMethod mapped via MemMapGenericMapping to
                   this MemMapAddressingModeSet shall not affect the generic mappings.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_384</srcid><srcstatus/><internalId>203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy.Value</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The allowed values for MemMapSupportedMemoryAllocationKeywordPolicy shall be MEMMAP_ALLOCATION_KEYWORD_POLICY_ADDR_METHOD_SHORT_NAME and
                   MEMMAP_ALLOCATION_KEYWORD_POLICY_ADDR_METHOD_SHORT_NAME_AND_ALIGNMENT.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_GenericMapping_Constrains</srcid><srcstatus/><internalId>346</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/MemMap.xdm.m4_156</srcid><srcstatus/><internalId>310</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.SWC.InternalBehavior</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemorySection defined in a SwcImplementation shall be generated in a {componentTypeName}_MemMap.h if the SwcImplementation is associated to the SwComponentType by the SwcInternalBehavior.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_245</srcid><srcstatus/><internalId>248</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_ComTest_BswSwc</srcid><srcstatus/><internalId>343</internalId></linkedfrom><linkedfrom><srcid>MemMap_CompileTest_Swc</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>MemMap.EB.Header.SWC.Rte</id>
      <status>approved</status>
      <source>Elektrobit Automotive</source>
      <version>1</version>
      <description>The MemorySection defined in a SwcImplementation shall be generated in a {componentTypeName}_MemMap.h if the SwcImplementation is associated to the SwComponentType by the Ecu Configuration of the Rte using the two references RteComponentTypeRef and RteImplementationRef.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_286</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>MemMap_CompileTest_Swc</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.MemMap.UnsupportedFunctionalities</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>11</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>dev.memmap.sybmolcheck</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Symbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>dev.MemMap.DependencyOnArtifact</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>dev.MemMap.DifferentMemoryTypes</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>dev.MemMap.AllocatableMemory</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_52</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Identification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_66</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.CustomHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Mip.Order</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_83</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Mip</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_86</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_87</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java_105</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemMapHeader.java</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_63</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Stop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_79</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Sequence.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_83</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_84</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java_144</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/MemorySectionTemplate.java</sourcefile>
      <sourceline>144</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Sequence.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_70</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_71</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_72</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>72</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_78</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_79</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java_136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generated/jet/Module_MemMapHeader.java</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_56</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.Overruled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_71</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping.MemMapMemorySectionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_78</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.Valid.Ref</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping.Valid.Ref</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_235</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.Valid.Param</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_284</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>284</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionType.NoConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_325</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>325</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionInitializationPolicy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_344</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionInitializationPolicy.NoConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_362</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>362</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_384</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy.NoConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedAddressingMethodOption</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_413</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>413</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedAddressingMethodOption.NoConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_443</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>443</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_468</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>468</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.EmptyValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_472</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>472</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping.Pragmas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_473</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>473</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.Pragmas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java_474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapAllocation.java</sourcefile>
      <sourceline>474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Mapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_98</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapHeaderFiles.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_106</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>106</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.CustomHeaderFiles.Order</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_115</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>115</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_208</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_219</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope.VAR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_220</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope.CODE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_227</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>227</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Local</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Name</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Default</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_273</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>273</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope.MemorySection.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_274</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope.SwAddrMethod.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_325</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>325</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_343</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>343</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_350</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>350</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_351</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>351</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_353</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>353</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_371</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.Name</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_390</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>390</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.Default</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.MemorySection.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java_405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapGeneratorUtil.java</sourcefile>
      <sourceline>405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.SwAddrMethod.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapStatus.java_185</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapStatus.java</sourcefile>
      <sourceline>185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.NoRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapStatus.java_210</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapStatus.java</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.Package</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapStatus.java_226</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapStatus.java</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Duplicate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_89</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSWSWC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_150</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>150</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Order</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_168</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.SwAddrMethodRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_188</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>188</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.SWC.Prefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_224</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>224</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_245</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>245</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.SWC.InternalBehavior</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_286</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>286</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.SWC.Rte</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.MipMsn</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_356</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>356</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.MipVi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_357</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.MipAi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixSnpSymbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_383</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixSnpName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_384</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixVi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixAi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_408</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>408</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.MipSubPart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java_409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapSystemModel.java</sourcefile>
      <sourceline>409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixSubPart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java_29</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapValidation.java</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapXPathFunctions.java_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/MemMapXPathFunctions.java</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Unique</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java_79</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Name.BSW.Symbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Name.SWC.Symbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java_85</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Name.BSW.ShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java_86</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/Java/dreisoft/tresos/memmap/generator/Section.java</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Name.SWC.ShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Identification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_113</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.CustomHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Mip.Order</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Mip</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_154</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet_155</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet</sourcefile>
      <sourceline>155</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Identification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_113</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.CustomHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Mip.Order</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Mip</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_154</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4_155</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemMapHeader.jet.m4</sourcefile>
      <sourceline>155</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_16</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet</sourcefile>
      <sourceline>16</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Stop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Sequence.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_49</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_50</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/MemorySectionTemplate.jet</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Sequence.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_31</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_40</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_75</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_99</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/plugin.MemMapExt.Autosar/jet_templates/Module_MemMapHeader.jet</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_62</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_76</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedAddressingMethodOption.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_131</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_163</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_227</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>227</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionType.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_244</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_256</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAddressingModeStart.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_275</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_288</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>288</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAddressingModeStop.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_294</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_336</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>336</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_383</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_397</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_424</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>424</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_447</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>447</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_479</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>479</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_491</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>491</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_545</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>545</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.ECUC_MemMap_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_573</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>573</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_599</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>599</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_653</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>653</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_697</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>697</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_740</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>740</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/MemMap.xdm.m4_788</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/src/Autosar/config/MemMap.xdm.m4</sourcefile>
      <sourceline>788</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_AS40CompatibilityDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_AS40CompatibilityDisabled/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that the ConfigData macros are not compatible with AS40.&lt;/pre&gt;</description>
      <testin>A MemMap configuration with enabled ValidateSections configuration parameter.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_AS40CompatibilityEnabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_AS40CompatibilityEnabled/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that the ConfigData macros are also compatible with AS40.&lt;/pre&gt;</description>
      <testin>A MemMap configuration with enabled ValidateSections and enabled MemMapAS40Compatibility configuration parameters.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAS40Compatibility.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_CompileTest_Bsw</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_Bsw/source/application/Test.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Compile test that checks for a BSW-Implementation that the macros are correctly generated from the memory sections.&lt;/pre&gt;</description>
      <testin>A BSW-Implementation with two MemorySections.
                  - TestModule VAR the memory section has both a symbol and a section name prefix defined.
                  - TestModule NO_SYMBOL_NO_SNP_MEM the memory section has no symbol and no section name prefix defined.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.MipMsn</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.MipSubPart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixSnpName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixSnpSymbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixSubPart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.Name.BSW.ShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.Name.BSW.Symbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_BswSwc</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_BswSwc/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Compile test that checks that the memory sections of a BSW and a SWC description
are generated in the same header file if the shortName of the BswModuleDescription is equal to componentTypeName.&lt;/pre&gt;</description>
      <testin>A SWC memmmap configuration with most of the features used.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSWSWC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.BSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.SWC.InternalBehavior</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_CompileTest_Bsw_Multi</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_Bsw_Multi/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that MemMap generates Memory sections correctly when vendorId and vendorApiInfix are used.&lt;/pre&gt;</description>
      <testin>BswModuleDescriptions configurations with multiple BswImplementations.
                  - TestModule MemorySection VAR_8 with vendorApiInfix and no vendorId
                  - TestModule MemorySection VAR_16 with vendorApiInfix and vendorId
                  - TestModule1 MemorySection VAR with no vendorApiInfix and vendorId</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.MipVi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.BSW.MipAi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixVi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.BSW.PrefixAi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_GenericMapping</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_GenericMapping/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that the MemMapAddressingModeStart and MemMapAddressingModeStop of a valid GenericMapping are generated as expected when MemMapValidateMappings is set to true.
MemMapAddressingModeSet_GenericNoConfig has a referenced SwAddrMethod NOKEYWORDNOSUPPORTED which has no SECTION-TYPE and no MEMORY-ALLOCATION-KEYWORD-POLICY attribute.</description>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.Pragmas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.Valid.Param</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.Valid.Ref</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Mapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionType.NoConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionInitializationPolicy.NoConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedAddressingMethodOption.NoConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy.NoConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_GenericMapping_Constrains</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_GenericMapping_Constrains/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that the mapping between the SwAddrmethod and the MemMapAddressingModeSet is performed only if the params of the MemMapAddressingModeSet match.</description>
      <testin>Multiple MemMapAddressingModeSets with different configurations:
                    MemMapAddressingModeSet_SupportedSectionType has the MemMapSupportedSectionType set to MEMMAP_SECTION_TYPE_CONFIG_DATA and the referenced SwAddrMethod is CONFIG_DATA which has the Section Type CONFIG-DATA.
                    MemMapAddressingModeSet_SupportedSectionInitializationPolicy has the MemMapSupportedSectionInitializationPolicy set to INIT and the referenced SwAddrMethod is VAR_INIT which has the Section Initalization Policy INIT.
                    MemMapAddressingModeSet_SupportedAddressingMethodOption has the MemMapSupportedAddressingMethodOption set to coreLocal and the referenced SwAddrMethod is CALLOUT_CODE_LOCAL which has the Option coreLocal.
                    MemMapAddressingModeSet_SupportedMemoryAllocationKeywordPolicy has the MemMapSupportedMemoryAllocationKeywordPolicy set to MEMMAP_ALLOCATION_KEYWORD_POLICY_ADDR_METHOD_SHORT_NAME and the referenced SwAddrMethod is CODE which has the Memory Allocation Keyword Policy ADDR-METHOD-SHORT-NAME.
                    MemMapAddressingModeSet_NoSupportedSection has the referenced SwAddrMethod NoSupportedSection which has no SECTION-TYPE attribute.
                    MemMapAddressingModeSet_NoSupportedKeyword has the referenced SwAddrMethod NoSupportedKeyword which has no MEMORY-ALLOCATION-KEYWORD-POLICY attribute.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionType.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionInitializationPolicy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedAddressingMethodOption</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedAddressingMethodOption.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_InvalidCoreScope_NoError</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_InvalidCoreScope_NoError/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that when MemMapValidateCoreScope is set to false MemoryAllocationKeywords are generated for memory sections with invalid coreScope usage:</description>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_InvalidGenericMapping_NoError</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_InvalidGenericMapping_NoError/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that generic mappings are silently ignored when the parameter MemMapValidateMappings is set to false&lt;/pre&gt;</description>
      <testin>Multiple MemMapAddressingModeSets with different configurations:
                    MemMapAddressingModeSet_EmptyStartLine has a MemMapAddressingMode_EmptyStartLine with an empty MemMapAddressingModeStart and the test checks that only pragmaStopEmptyStart is defined in TestModule_MemMap.h.
                    MemMapAddressingModeSet_EmptyStopLine has a MemMapAddressingMode_EmptyStopLine with an empty MemMapAddressingModeStop and the test checks that only pragmaStartEmptyStop is defined in TestModule_MemMap.h.
                    MemMapAddressingModeSet_UniqueSwAddrMethod_0 and MemMapAddressingModeSet_UniqueSwAddrMethod_1 have corresponding generic mappings with MemMapSwAddressMethodRef and both reference the SwAddrMethod CONST. Only one mapping is taken into account.
                    MemMapAddressingModeSet_NoRefFromMemorySection is referenced by a generic mapping which has MemMapSwAddressMethodRef referencing CONFIG_DATA but no memory section with this SwAddrMethod reference exists.
                    MemMapAddressingModeSet_DifferentPackage has a generic mapping with MemMapSwAddressMethodRef referencing CALLOUT_CODE from package AUTOSAR_MemMap and the memory section references the SwAddrMethod from package MemMap.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAddressingModeStart.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAddressingModeStop.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.NoRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.Package</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_InvalidSafety_NoError</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_InvalidSafety_NoError/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that when MemMapValidateSafety is set to false MemoryAllocationKeywords are generated for memory sections with invalid safety level usage:</description>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_InvalidSpecificMapping_NoError</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_InvalidSpecificMapping_NoError/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that specific mappings are silently ignored when the parameter MemMapValidateMappings is set to false</description>
      <testin>Multiple MemMapAddressingModeSets with different configurations:
                    MemMapAddressingModeSet_EmptyStartLine has a MemMapAddressingMode_EmptyStartLine with an empty MemMapAddressingModeStart and the test checks that only pragmaStopEmptyStart is defined in TestModule_MemMap.h.
                    MemMapAddressingModeSet_EmptyStopLine has a MemMapAddressingMode_EmptyStopLine with an empty MemMapAddressingModeStop and the test checks that only pragmaStartEmptyStop is defined in TestModule_MemMap.h.
                    MemMapAddressingModeSet_Multi has two specific mappings MemMapSectionSpecificMapping_Multi_0 and MemMapSectionSpecificMapping_Multi_1 which reference the same memory section.
                    MemMapAddressingModeSet_MismatchedAlignments has the alignment 8 and the referenced memory section of the specific mapping has the alignment 16 and the test verifies that the pragmas are not defined in TestModule_MemMap.h.
                    MemMapAddressingModeSet_InvalidMemSectionRef and MemMapAddressingModeSet_InvalidMemSectionRef_1 reference the same memory section and only one specific mapping should be taken into account.
                    MemMapAddressingModeSet_NoMemSectionRef has the specific mapping MemMapSectionSpecificMapping_NoMemSectionRef which does not reference any Memory Section.
                    MemMapSectionSpecificMapping_NoAddressingModeSetRef this specific mapping has no MemMapAddresingModeSetRef but has a valid Memory Section NoAddressingModeSetRef.
                    MemMapSectionSpecificMapping_InvalidPathRef the paths referencing the MemMapAddresingModeSet and the Memory Section are invalid.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAddressingModeStart.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAddressingModeStop.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping.MemMapMemorySectionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping.Valid.Ref</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_Mapping_Overruled</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_Mapping_Overruled/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that a MemMapSectionSpecificMapping precedes a mapping defined by MemMapGenericMapping.&lt;/pre&gt;</description>
      <testin>Memory Section OVERRULED:
                   - MemMapGenericMapping_0 for SwAddrMethod VAR with MemMapAddressingModeSet_Generic is ignored.
                   - MemMapSectionSpecificMapping_0 with MemMapAddressingModeSet_Specific is used.
                 Memory Section GENERIC:
                   - MemMapGenericMapping_0 for SwAddrMethod VAR with MemMapAddressingModeSet_Generic is used.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for each permutation of this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.Overruled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_MemMapHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_MemMapHeader/source/application/Test.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Compile test that checks that header files are included in MemMap.h&lt;/pre&gt;</description>
      <testin>A BSW memmmap configuration with most of the features used.
                  - TestModule VAR the macro is defined in the header file TestModule_MemMap.h.
                  - Custom CODE the macro is defined in the custom header file Custom_MemMap.h.
                  - An empy header value is ignored.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.CustomHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.Mip</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.BSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapHeaderFiles.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_SpecificMapping</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_SpecificMapping/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that the MemMapAddressingModeStart and MemMapAddressingModeStop of a valid SpecificMapping are generated as expected when MemMapValidateMappings is set to true.</description>
      <testexec>The test is supposed to compile.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Mapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping.Pragmas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping.Valid.Ref</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_CompileTest_Swc</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_Swc/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>Compile test that for a SWC-Implementations that MemMap header files &lt;componentTypeName&gt;_MemMap.h is created and contains specific macros.
SwComponentType1 has an InternalBehavior which is referenced by SwImplementation_SWCT1_1 and has the memory section CODE 
SwComponentType2 is referenced by two implementations: SwImplementation_SWCT2_1 and SwImplementation_SWCT2_2. 
   Only SwImplementation_SWCT2_2 with memory section CODE2 is taken into account because the Rte configuration has precedence over the implementation SwImplementation_SWCT2_1.
SwComponentType3 is referenced by two implementations: SwImplementation_SWCT3_1 and SwImplementation_SWCT3_2, both are connected to the SwComponentType3 through RteSwComponentType_2 and RteSwComponentType_3.
   Only SwImplementation_SWCT3_1 with memory section CODE3 is taken into account.</description>
      <testin>A SWC memmmap configuration with most of the features used.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.SWC.Prefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.Name.SWC.ShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.Name.SWC.Symbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.SWC.InternalBehavior</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.SWC.Rte</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_SwcBsw_NoMemorySection</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_SwcBsw_NoMemorySection/source/application/Test.c.m4</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Compile test that checks that the memory allcation keywords are define in Det_MemMap.h when 
is set to false.&lt;/pre&gt;</description>
      <testin>MemMapGenerateEmptyHeaderFile is set to false:
                 - p0 SWC-implementation has memory sections, BSW-implementation does not have memory sections.
                 - p1 SWC-implementation does not have memory sections, BSW-implementation has memory sections.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_ValidCoreScope</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_ValidCoreScope/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that the coreScope LOCAL and GLOBAL are present in the Memory Allocation Keywords
 - TestModule CODE_LOCAL the memory section and SwAddrMethod contain the coreLocal option.
 - TestModule CODE_GLOBAL the memory section and SwAddrMethod contain the coreGlobal option.
 - TestModule VAR_INIT_8_LOCAL the memory section and SwAddrMethod contain the coreLocal option and INIT_POLICY is equal INIT
 - TestModule VAR_INIT_8 the word GLOBAL is not present in the name since the default is GLOBAL and the memory section contains the coreGlobal option
 - TestModule VAR_CLEARED_8_LOCAL the memory section and SwAddrMethod contain the coreLocal option and INIT_POLICY is equal CLEARED
 - TestModule VAR_CLEARED_GLOBAL neither the memory section nor the SwAddrMethod contain the option coreGlobal
 - TestModule VAR_INIT_16_GLOBAL the SwAddrMethod contains the option coreGlobal and the memory section does not have the option coreGlobal
 - TestModule VAR_FAST_GLOBAL the memory section contains the option coreGlobal and the SwAddrMethod does not have the option coreGlobal
 - TestModule VAR_INIT_GLOBAL the option coreGlobal is present in both the memory section and SwAddrMethod</description>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.CoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Default</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.VAR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.CODE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Local</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Name</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.MemorySection.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.SwAddrMethod.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_ValidCoreScopeSafety</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_ValidCoreScopeSafety/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that the the Memory Allocation Keywords are generated for memory sections with valid coreScope and safety level
 - TestModule VAR_INIT_ASIL_A_LOCAL_8 the keywords are ASIL_A and LOCAL and the options are safetyAsilA and coreLocal
 - TestModule CODE_ASIL_A_GLOBAL the keywords are ASIL_A and GLOBAL and the options are safetyAsilA and coreLocalTest
 - TestModule VAR_INIT_QM_LOCAL_8 the keywords are QM and LOCAL and the options are safetyAsilTest and coreLocal
 - TestModule VAR_INIT_QM_GLOBAL_OPTIONS_MEM_SW the keywords are QM and GLOBAL and the options safetyQM and coreGlobal are present in both in the memory section and the SwAddrMethod
 - TestModule VAR_INIT_QM_GLOBAL_NO_OPTIONS the keywords are QM and GLOBAL and the options safteyQM and coreGlobal are not present in neither the memory section nor the SwAddrMethod
 - TestModule VAR_INIT_QM_GLOBAL_TEST_OPTION the keywords are QM and GLOBAL and the memory section contains the option coreTest
 - TestModule VAR_INIT_NO_OPTIONS the memory section has no options configured and neither does the SwAddrMethod</description>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_ComTest_ValidSafety</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_ValidSafety/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that the safety QM, ASIL_A, ASIL_B, ASIL_C and ASIL_D are present in the Memory Allocation Keywords.
 - TestModule VAR_INIT_ASIL_A_16 contains the keyword ASIL_A in the symbol and the memory section has the option safetyAsilA
 - TestModule VAR_CLEARED_ASIL_B_8 contains the keyword ASIL_B in the symbol and the memory section has the option safetyAsilB
 - TestModule CODE_ASIL_C contains the keyword ASIL_C in the symbol and the memory section has the option safetyAsilC
 - TestModule CALLOUT_CODE_ASIL_D contains the keyword  ASIL_D in the symbol and the memory section has the option safetyAsilD
 - TestModule CODE_QM contains the keyword QM in the symbol and the memory section has no option (which is valid because of MemMap.EB.Safety.Default)
 - TestModule CONFIG_DATA_QM contains QM in the symbol and the memory section has the option safetyQM
 - TestModule VAR_FAST_QM_8 the memory section does not contain the option safteyQM neithr does the SwAddrMethod
 - TestModule CONFIG_DATA_QM_8 contains the option safteyQM only in the SwAddrMethod and the option is missing from the memory section
 - TestModule VAR_FAST_QM contains the option safteyQM only in the memory section and the option is missing from the SwAddrMethod
 - TestModule CONFIG_DATA_QM_16 contains the option safteyQM in both the memory section and the SwAddrMethod</description>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.Default</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.MemorySection.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.SwAddrMethod.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.Name</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_CompileTest_ValidateSectionsDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_ValidateSectionsDisabled/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that the MemMap header file doesn't check that the memory sections
are in a valid sequence.&lt;/pre&gt;</description>
      <testin>A MemMap configuration with disabled ValidateSections configuration parameter.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Sequence.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_CompileTest_ValidateSectionsEnabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_ValidateSectionsEnabled/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that after an opened and closed memory sections the corresponding
macros are defined correctly.&lt;/pre&gt;</description>
      <testin>A MemMap configuration with enabled ValidateSections configuration parameter.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Sequence.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.Start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.Stop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.SwAddrMethodRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_CompileTest_Version_Check</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Compile/IN/MemMap_ComTest_Version_Check/source/application/Test.c.m4</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that in the MemMap.h file all M4 macros
were resolved and they have a specific value.&lt;/pre&gt;</description>
      <testin>MEMMAP_VENDOR_ID, MEMMAP_MODULE_ID, MEMMAP_AR_MAJOR_VERSION, 
                 MEMMAP_AR_MINOR_VERSION, MEMMAP_AR_PATCH_VERSION, 
                 MEMMAP_SW_MAJOR_VERSION, MEMMAP_SW_MINOR_VERSION, 
                 MEMMAP_SW_PATCH_VERSION have the correct values, values 
                 that are taken from config.mk file.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile without errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Header.Identification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Bsw_Error_Report</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Bsw_Error_Report/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that:
    - header file TestModule_MemMap.h reports the error MEMMAP_ERROR_TESTMODULE when TESTMODULE_START_SEC_CODE is defined
    - header file Ts5Atl_MemMap.h reports the error MEMMAP_ERROR when TESTMODULE_START_SEC_CODE is defined
    - header file MemMap.h reports the error MEMMAP_ERROR when TESTMODULE_START_SEC_CODE is defined</description>
      <testin>The TestModule BSW description does not provide any 'MEMORY-SECTION' specifications. 
                 The Ts5Atl BSW description does provide 'MEMORY-SECTION' specifications.</testin>
      <testexec>The test is supposed to not compile.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile with errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Bsw_No_Memory_Section</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Bsw_No_Memory_Section/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>Generic test that check if there are no memory section defined for:
    BSW the &lt;BSW&gt;_MemMap.h is still created. &lt;BSW&gt;_MemMap.h contains the error definition and check.
    SWC and BSW where BswModuleDescription and componentTypeName are equal the &lt;Mip&gt;_MemMap.h is still created. &lt;Mip&gt;_MemMap.h contains the error definition and check.</description>
      <testin>A BSW configuration with no memory sections defined.</testin>
      <testexec>The test is supposed to not compile.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall not compile.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Bsw_NotGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Bsw_NotGenerated/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Generic test that check if the empty MemMap header file is not created
and the non-empty MemMap header files are still created&lt;/pre&gt;</description>
      <testin>A BSW memmmap configuration with most of the features used.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall not compile.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSW.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_CoreScope_Error</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_CoreScope_Error/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that when MemMapValidateCoreScope is set to true:&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateCoreScope.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.VAR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.CODE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Local</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.Name</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.SwAddrMethod.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.CoreScope.MemorySection.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_DuplicatedMacros</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_DuplicatedMacros/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;A warning will be reported for the same macros generated by the following memory sections:&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.Duplicate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Empty_Pragmas</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Empty_Pragmas/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test that warnings are reported for empty pragmas&lt;/pre&gt;</description>
      <testin>MemMapAddressingModeSet_0 with empty MemMapAddressingModeStart and MemMapAddressingModeStop referenced in MemMapSectionSpecificMapping_0
                 MemMapAddressingModeSet_1 with only whitespaces in MemMapAddressingModeStart and MemMapAddressingModeStop</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall not compile.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAddressingModeStart.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAddressingModeStop.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Invalid_SystemDescription</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Invalid_SystemDescription/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Generic test that checks if the generated header files (MemMap.h, SWC_MemMap.h) 
are not different to the expected ones.&lt;/pre&gt;</description>
      <testin>An invalid (no resource consumption) BSWD and SWCD are imported in a config project without validation.</testin>
      <testexec>The test is supposed to not compile.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall not compile.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.CustomHeaderFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.CustomHeaderFiles.Order</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Header.Mip.Order</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Macro.Order</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Mapping_Errors</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Mapping_Errors/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>This test verifies that if the same MemMapSwAddressMethodRef is used in multiple MemMapGenericMapping or the same MemMapMemorySectionRef is used in multiple MemMapSectionSpecificMapping
MemMap reports the error MEMMAP_10:
   - MemMapSwAddressMethodRef CODE is used in MemMapAllocation CODE: MemMapGenericMapping_0 and MemMapGenericMapping_1
   - MemMapSwAddressMethodRef CALLOUT_CODE is used in MemMapAllocation CALLOUT_CODE: MemMapGenericMapping_0 and MemMapGenericMapping_1
   - MemMapSwAddressMethodRef VAR is used in MemMapAllocation VAR: MemMapGenericMapping_0 and in MemMapAllocation VAR_1: MemMapGenericMapping_0
   - MemMapSwAddressMethodRef VAR_INIT is used in MemMapAllocation VAR_INIT: MemMapGenericMapping_0 and in MemMapAllocation VAR_INIT_1: MemMapGenericMapping_0
   - MemMapSwAddressMethodRef VAR_NO_INIT is used in MemMapAllocation VAR_NO_INIT: MemMapGenericMapping_0 and MemMapGenericMapping_1
   - MemMapSwAddressMethodRef VAR_FAST is used in MemMapAllocation VAR_FAST: MemMapGenericMapping_0 and in MemMapAllocation VAR_FAST_1: MemMapGenericMapping_0
                                           and in MemMapAllocation VAR_FAST_1_1: MemMapGenericMapping_0 and in MemMapAllocation VAR_FAST_1_1_1: MemMapGenericMapping_0
   - MemMapMemorySectionRef CODE is used in MemMapAllocation CODE: MemMapSectionSpecificMapping_0 and MemMapSectionSpecificMapping_1
   - MemMapMemorySectionRef CALLOUT_CODE is used in MemMapAllocation CALLOUT_CODE_1: MemMapSectionSpecificMapping_0 and MemMapSectionSpecificMapping_1
   - MemMapMemorySectionRef VAR is used in MemMapAllocation VAR: MemMapSectionSpecificMapping_0 and in MemMapAllocation VAR_1: MemMapSectionSpecificMapping_0
   - MemMapMemorySectionRef VAR_INIT is used in MemMapAllocation INIT: MemMapSectionSpecificMapping_0 and in MemMapAllocation VAR_INIT_3: MemMapSectionSpecificMapping_0
   - MemMapMemorySectionRef VAR_NO_INIT is used in MemMapAllocation VAR_NO_INIT: MemMapSectionSpecificMapping_0 and in MemMapAllocation VAR_NO_INIT_1: MemMapSectionSpecificMapping_0
   - MemMapMemorySectionRef VAR_FAST is used in MemMapAllocation VAR_FAST_1: MemMapSectionSpecificMapping_0, MemMapSectionSpecificMapping_1
                                         and in MemMapAllocation VAR_FAST_1_1_1: MemMapSectionSpecificMapping_0, MemMapSectionSpecificMapping_10</description>
      <testexec>The test is supposed to not compile.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall not compile.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSectionSpecificMapping.MemMapMemorySectionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Mapping_Warnings</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Mapping_Warnings/source/application/Test.c</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <description>This test verifies that warnings are reported when the configuration has invalid generic and specific mappings and MemMapValidateMappings is set to true.
No warnigs will be reported for mappings that have invalide refes because Tresos Studio already reports warnings:
    - MemMapGenericMapping_5 because the MemMapSwAddressMethodRef is invalid.
    - MemMapGenericMapping_6 because the MemMapSwAddressMethodRef is invalid.
    - MemMapGenericMapping_7 because the MemMapAddressingModeSetRef is invalid.
    - MemMapGenericMapping_8 because the MemMapAddressingModeSetRef is invalid.
    - MemMapSectionSpecificMapping_1 because the MemMapMemorySectionRef is invalid.
    - MemMapSectionSpecificMapping_2 because the MemMapMemorySectionRef is invalid.
    - MemMapSectionSpecificMapping_3 because the MemMapAddressingModeSetRef is invalid.
    - MemMapSectionSpecificMapping_4 because the MemMapAddressingModeSetRef is invalid.
The warning MEMMAP_6 will be reported for:
    - MemMapGenericMapping_0 because the MemMapAddressingModeSet_0 does contain the same Option as SwAddressMethod CODE. 
      coreGlobal vs. no options.
    - MemMapGenericMapping_1 because the MemMapAddressingModeSet_1 does contain the same AllocationKeywordPolicy as SwAddressMethod CONFIG_DATA. 
      MEMMAP_ALLOCATION_KEYWORD_POLICY_ADDR_METHOD_SHORT_NAME vs. MEMMAP_ALLOCATION_KEYWORD_POLICY_ADDR_METHOD_SHORT_NAME_AND_ALIGNMENT
    - MemMapGenericMapping_2 because the MemMapAddressingModeSet_2 does contain the same InitializationPolicy as SwAddressMethod CONST.
      POWER-ON-CLEARED vs. no InitializationPolicy.
    - MemMapGenericMapping_3 because the MemMapAddressingModeSet_3 does contain the same SectionType as SwAddressMethod VAR.
      MEMMAP_SECTION_TYPE_VAR_POWER_ON_INIT vs. no SectionType.
The warning MEMMAP_7 will be reported for:
    - MemMapGenericMapping_4 because the MemMapAddressingModeSet_4 does contain the same AlignmentSelector as MemMapMemorySection TestModuleVar8.
      UNSPECIFIED vs. 8
    - MemMapSectionSpecificMapping_0 because the MemMapAddressingModeSet_4 does contain the same AlignmentSelector as MemMapMemorySection TestModuleCode.
      UNSPECIFIED vs. no AlignmentSelector
The warning MEMMAP_8 will be reported for:
    - MemMapGenericMapping_9 because the MemMapSwAddressMethodRef is not referenced by any memory section in the system description.
The warning MEMMAP_9 will be reported for:
    - MemMapGenericMapping_10 because the SwAddrMethod /AUTOSAR_TestModule/VAR_POWER_ON_INIT is not referenced by all MemorySections.
      EBStubs VAR_POWER_ON_INIT_BOOLEAN references the SwAddrMethod AUTOSAR_MemMap/SwAddrMethods.</description>
      <testexec>The test is supposed to compile.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall not compile.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.Package</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.MemMapSwAddressMethodRef.NoRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenericMapping.Valid.Ref</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Mapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.EmptyValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedAddressingMethodOption</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedMemoryAllocationKeywordPolicy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionInitializationPolicy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapSupportedSectionType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateMappings.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Safety_Error</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Safety_Error/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that when MemMapValidateSafety is set to false:&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.AsilD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.MemorySection.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.SwAddrMethod.Option</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.Safety.Name</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSafety.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Schema_Errors</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Schema_Errors/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;MemMapAlignmentSelectors are unique for every MemMapAddressingMode.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapAlignmentSelector.Unique</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_SwcBsw_NotGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_SwcBsw_NotGenerated/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Generic test that check if the empty MemMap header file is not created
when the BSW module BswModuleDescription shortName is equal to the SWC
module componentTypeName and no memory sections are defined for both the modules&lt;/pre&gt;</description>
      <testin>A SWC and BSW implementation with no memory sections defined</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall not compile.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.BSWSWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Swc_Error_Report</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Swc_Error_Report/source/application/Test.c</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that:
    - header file Server_MemMap.h reports the error MEMMAP_ERROR_SERVER when Server_START_SEC_CODE is defined
    - header file Client1_MemMap.h reports the error MEMMAP_ERROR when Server_START_SEC_CODE is defined&lt;/pre&gt;</description>
      <testin>The ImplementationClient1 SWC-IMPLEMENTATION does provide 'MEMORY-SECTION' specifications.
                 The ImplementationServer SWC-IMPLEMENTATION does not provide any 'MEMORY-SECTION' specifications.</testin>
      <testexec>The test is supposed to not compile.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile with errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Swc_No_Memory_Section</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Swc_No_Memory_Section/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Generic test that check if there are no memory section defined 
for a SWC the &lt;SWC&gt;_MemMap.h is still created. &lt;SWC&gt;_MemMap.h contains
the error definition and check.&lt;/pre&gt;</description>
      <testin>A SWC configuration with no memory sections defined.</testin>
      <testexec>The test is supposed to not compile.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test should not compile.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Swc_NotGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Swc_NotGenerated/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Generic test that check if the empty MemMap header file is not created
and the non-empty MemMap header files are still created&lt;/pre&gt;</description>
      <testin>A SWC memmmap configuration with most of the features used.</testin>
      <testexec>The test is supposed to compile only.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall not compile.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.MemMapGenerateEmptyHeaderFile.SWC.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Validate_Sections</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Validate_Sections/source/application/Test.c.m4</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test verifies that:
p0: two opened memory sections without closing them gives a specific compile errors
p1: opening a memory section and closing another memory section gives a specific compile errors
p2: a closed memory section without an opened memory section gives a specific compile errors&lt;/pre&gt;</description>
      <testin>A MemMap configuration with enabled ValidateSections configuration parameter.</testin>
      <testexec>The test is supposed to not compile.</testexec>
      <testout>A binary file is produced for this test.</testout>
      <testpasscrit>The test shall compile with errors.</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>MemMap.SWS_MemMap_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapValidateSections.Sequence.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>MemMap_GenTest_Warnings</id>
      <status>approved</status>
      <source>EB test case specification (asc_MemMap)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_MemMap/test/ts5/Generic/IN/MemMap_GenTest_Warnings/source/application/Test.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>The warning MEMMAP_1 will be reported for SWC-IMPLEMENTATION and BSW-IMPLEMENTATION. MEMMAP_3 will be reported for MemMapHeaderFiles.</description>
      <providescoverage>
        <provcov>
          <linksto>MemMap.EB.Macro.SwAddrMethodRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>MemMap.EB.MemMapHeaderFiles.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
