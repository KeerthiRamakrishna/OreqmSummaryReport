<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_Crc_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_requirements_AUTOSAR_SWS_CRCLibrary_4_0_3.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_requirements_AUTOSAR_SWS_CRCLibrary_R21-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_test_manTest_ResourceConsumption.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/common_req/Crc_DbgInst_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/common_req/Crc_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:17:18 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_Crc_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_requirements_AUTOSAR_SWS_CRCLibrary_4_0_3.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_requirements_AUTOSAR_SWS_CRCLibrary_R21-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_Native/asc_Crc_test_manTest_ResourceConsumption.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/common_req/Crc_DbgInst_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/common_req/Crc_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="swurs">
    <specobject>
      <id>Crc.ASR40.SWS_Crc_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R4.0.3</source>
      <version>1</version>
      <description>
        Crc.c shall check if the correct version of Crc.h is included. This shall be done by a 
        preprocessor check of the version number CRC_MAJOR_VERSION and CRC_MINOR_VERSION.
      </description>
      <comment>
        {pre=Done with common M4 file fragments.}
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Crc.c.m4_30</srcid><srcstatus/><internalId>102</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    <specobject>
      <id>Crc.ASR40.SWS_Crc_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R4.0.3</source>
      <version>1</version>
      <description>
        The Crc module shall comply with the following include file structure: Crc.h shall include 
        Crc_Cfg.h and MemMap.h Crc_xxx.c shall include Crc.h
      </description>
      <comment>
        {pre=Only one Crc.c file is used in the EB implementation.}
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Crc.h_13</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Crc.h_42</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Crc.c.m4_21</srcid><srcstatus/><internalId>100</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    <specobject>
      <id>Crc.ASR40.SWS_Crc_00023</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R4.0.3</source>
      <version>1</version>
      <description>
        Users of the Crc module (e.g. NVRAM Manager) shall only include Crc.
      </description>
      <comment>
        {pre=This requirement is not applicable: it concerns NvM.}
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>Crc.ASR40.SWS_Crc_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R4.0.3</source>
      <version>1</version>
      <description>
        The Crc module shall provide the following files: C file Crc_xxx.c containing parts of CRC code 
        An API interface Crc.h providing the function prototypes to access the library CRC functions A 
        header file Crc_Cfg.h providing specific parameters for the CRC. Figure 1: File structure
      </description>
      <comment>
        {pre=Only one Crc.c file is used in the EB implementation.}
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Crc_Cfg.h_5</srcid><srcstatus/><internalId>94</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Crc.h_5</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Crc.c.m4_15</srcid><srcstatus/><internalId>99</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    <specobject>
      <id>Crc.ASR40.SWS_Crc_00036</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R4.0.3</source>
      <version>1</version>
      <description>
        Each variable that shall be accessible by AUTOSAR Debugging, shall be defined as global 
        variable.
      </description>
      <comment>
        {pre=This requirement is not applicable because no variable in CRC module shall be accessible by AUTOSAR Debugging.}
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>
    <specobject>
      <id>Crc.ASR40.SWS_Crc_00037</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R4.0.3</source>
      <version>1</version>
      <description>
        All type definitions of variables that shall be debugged shall be accessible by the header file 
        CrC.h.
      </description>
      <comment>
        {pre=This requirement is not applicable because no variable in CRC module shall be debugged.}
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
    <specobject>
      <id>Crc.ASR40.SWS_Crc_00038</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R4.0.3</source>
      <version>1</version>
      <description>
        The declaration of variables in the header file shall be such, that it is possible to calculate 
        the size of the variables by C-"sizeof"
      </description>
      <comment>
        {pre=This requirement is not applicable because no variable is needed in CRC header file.}
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
    <specobject>
      <id>Crc.ASR40.SWS_Crc_00039</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R4.0.3</source>
      <version>1</version>
      <description>
        Variables available for debugging shall be described in the respective Basic Software Module 
        Description.
      </description>
      <comment>
        {pre=This requirement is not applicable because no variable in CRC module shall be debugged.}
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
    <specobject>
      <id>Crc.ASR40.SWS_Crc_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R4.0.3</source>
      <version>1</version>
      <description>
        Only parameters with "Pre-compile time" configuration are allowed in this variant.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_81</srcid><srcstatus/><internalId>105</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_125</srcid><srcstatus/><internalId>106</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_162</srcid><srcstatus/><internalId>108</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_206</srcid><srcstatus/><internalId>109</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_248</srcid><srcstatus/><internalId>111</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_292</srcid><srcstatus/><internalId>112</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_420</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_465</srcid><srcstatus/><internalId>116</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_501</srcid><srcstatus/><internalId>118</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_546</srcid><srcstatus/><internalId>119</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_583</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_627</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>8</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>Crc.ECUC_Crc_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name | CrcGeneralCrcGeneral 
        Parent Container | Crc 
        Description | General configuration of CRC module 
        Configuration Parameters 
        Included Parameters 
        Parameter Name | SWS Item ID 
        Crc16ARCMode | ECUC_Crc_00035 
        Crc16Mode | ECUC_Crc_00025 
        Crc32Mode | ECUC_Crc_00026 
        Crc32P4Mode | ECUC_Crc_00032 
        Crc64Mode | ECUC_Crc_00034 
        Crc8H2FMode | ECUC_Crc_00031 
        Crc8Mode | ECUC_Crc_00030 
        No Included Containers 
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification. Setting coverage to NONE.
      AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>
    <specobject>
      <id>Crc.ECUC_Crc_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name | Crc16Mode 
        Parent Container | CrcGeneral 
        Description | Switch to select one of the available CRC 16-bit (CCITT) calculation methods 
        Multiplicity | 0..1 
        Type | EcucEnumerationParamDef 
        Range | CRC_16_HARDWARECrcGeneral.Crc16Mode.CRC_16_HARDWARE | hardware based CRC16 calculation 
        CRC_16_RUNTIMECrcGeneral.Crc16Mode.CRC_16_RUNTIME | runtime based CRC16 calculation 
        CRC_16_TABLECrcGeneral.Crc16Mode.CRC_16_TABLE | table based CRC16 calculation (default 
        selection)
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <comment>
        The module does not support hardware Crc.
      AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Crc.Crc16Mode.HardwareBased</srcid><srcstatus/><internalId>64</internalId></linkedfrom><linkedfrom><srcid>Crc.Crc16Mode_Conf</srcid><srcstatus/><internalId>65</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_60</srcid><srcstatus/><internalId>104</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
    <specobject>
      <id>Crc.ECUC_Crc_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name | Crc32Mode 
        Parent Container | CrcGeneral 
        Description | Switch to select one of the available CRC 32-bit (IEEE-802.3 CRC32 Ethernet 
        Standard) calculation methods 
        Multiplicity | 0..1 
        Type | EcucEnumerationParamDef 
        Range | CRC_32_HARDWARECrcGeneral.Crc32Mode.CRC_32_HARDWARE | hardware based CRC32 calculation 
        CRC_32_RUNTIMECrcGeneral.Crc32Mode.CRC_32_RUNTIME | runtime based CRC32 calculation 
        CRC_32_TABLECrcGeneral.Crc32Mode.CRC_32_TABLE | table based CRC32 calculation (default 
        selection)
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <comment>
        The module does not support hardware Crc.
      AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Crc.Crc32Mode.HardwareBased</srcid><srcstatus/><internalId>68</internalId></linkedfrom><linkedfrom><srcid>Crc.Crc32Mode_Conf</srcid><srcstatus/><internalId>69</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_222</srcid><srcstatus/><internalId>110</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>
    <specobject>
      <id>Crc.ECUC_Crc_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name | Crc8Mode 
        Parent Container | CrcGeneral 
        Description | Switch to select one of the available CRC 8-bit (SAE J1850) calculation methods 
        Multiplicity | 0..1 
        Type | EcucEnumerationParamDef 
        Range | CRC_8_HARDWARECrcGeneral.Crc8Mode.CRC_8_HARDWARE | hardware based CRC8 calculation 
        CRC_8_RUNTIMECrcGeneral.Crc8Mode.CRC_8_RUNTIME | runtime based CRC8 calculation 
        CRC_8_TABLECrcGeneral.Crc8Mode.CRC_8_TABLE | table based CRC8 calculation (default selection)
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <comment>
        The module does not support hardware Crc.
      AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Crc.Crc8Mode.HardwareBased</srcid><srcstatus/><internalId>72</internalId></linkedfrom><linkedfrom><srcid>Crc.Crc8Mode_Conf</srcid><srcstatus/><internalId>73</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_562</srcid><srcstatus/><internalId>120</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
    <specobject>
      <id>Crc.ECUC_Crc_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name | Crc8H2FMode 
        Parent Container | CrcGeneral 
        Description | Switch to select one of the available CRC 8-bit (2Fh polynomial) calculation 
        methods 
        Multiplicity | 0..1 
        Type | EcucEnumerationParamDef 
        Range | CRC_8H2F_HARDWARECrcGeneral.Crc8H2FMode.CRC_8H2F_HARDWARE | hardware based CRC8H2F 
        calculation 
        CRC_8H2F_RUNTIMECrcGeneral.Crc8H2FMode.CRC_8H2F_RUNTIME | runtime based CRC8H2F calculation 
        CRC_8H2F_TABLECrcGeneral.Crc8H2FMode.CRC_8H2F_TABLE | table based CRC8H2F calculation (default 
        selection)
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <comment>
        The module does not support hardware Crc.
      AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Crc.Crc8H2FMode.HardwareBased</srcid><srcstatus/><internalId>70</internalId></linkedfrom><linkedfrom><srcid>Crc.Crc8H2FMode_Conf</srcid><srcstatus/><internalId>71</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_481</srcid><srcstatus/><internalId>117</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CRC module shall implement the CRC16 routine based on the CCITT-FALSE CRC16 Standard: Note 
        concerning the standard document ITU_2d_T_2d_X_2d_25: The computed FCS is equal to CRC16 XOR 
        FFFFh when the frame is built (first complement of the CCITT-FALSE CRC16). For the verification,
        the CRC16 (CCITT-FALSE) is computed on the same data + FCS, and the resulting value is always 
        1D0Fh. Note that, if during the verification, the check would have been done on data + CRC16 (i.
        e. FCS XOR FFFFh) the resulting value would have been 0000h that is the CCITT-FALSE magic check.
        CRC result width: | 16 bits 
        Polynomial: | 1021h 
        Initial value: | FFFFh 
        Input data reflected: | No 
        Result data reflected: | No 
        XOR value: | 0000h 
        Check: | 29B1h 
        Magic check: | 0000h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc16Runtime</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_1</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_256Elements</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_2</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_3</srcid><srcstatus/><internalId>157</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CRC module shall implement the CRC32 routine based on the IEEE-802.3 CRC32 Ethernet 
        Standard: CRC result width: | 32 bits 
        Polynomial: | 04C11DB7h 
        Initial value: | FFFFFFFFh 
        Input data reflected: | Yes 
        Result data reflected: | Yes 
        XOR value: | FFFFFFFFh 
        Check: | CBF43926h 
        Magic check*: | DEBB20E3h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc32Runtime</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_1</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_256Elements</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_2</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_3</srcid><srcstatus/><internalId>158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the CRC calculation within the function Crc_CalculateCRC16 is performed by hardware, then 
        the CRC module's implementer shall ensure reentrancy of this function by implementing a (
        software based) locking mechanism.
      </description>
      <comment>
        The module does not support hardware Crc.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the CRC calculation within the function Crc_CalculateCRC32 is performed by hardware, then 
        the CRC module's implementer shall ensure reentrancy of this function by implementing a (
        software based) locking mechanism.
      </description>
      <comment>
        The module does not support hardware Crc.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_GetVersionInfo shall return the version information of the CRC module. The 
        version information includes:
        Module Id
        Vendor Id
        Vendor specific version numbers (SRS_BSW_00407)
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_VersionInfo</srcid><srcstatus/><internalId>141</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00013</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        If CRC routines are to be used as a library, the CRC modules' implementer shall develop the CRC 
        module in a way that only those parts of the CRC code that are used by other modules are linked 
        into the final binary.
      </description>
      <comment>
        This requirement is not applicable: EB does not deliver the Crc module as a
          pre-compiled library. Preprocessor switched en/disable the functions.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CRC function (with parameter Crc_IsFirstCall = TRUE) shall do the following operations:
        As 'Initial value' of the CRC computation, uses the attribute 'Initial value' of the polynomial:
        begin{displaymath}Crc = PolynomialInitVal\end{displaymath}
        If the attribute 'Input data reflected' of the polynomial is TRUE, then reflects input data (
        byte per byte) obtained via parameters Crc_DataPtr and Crc_Length: \begin{displaymath}Data = \
        mathrm{reflect}_8 (Data) \textrm{ (in the case 'Input data reflected' is TRUE)}\end{displaymath}
        Compute the CRC over the data, the last CRC and the CRC polynomial: \begin{displaymath}Crc = f(
        Data, Crc, Polynomial)\end{displaymath}
        Execute the XOR operation between crc and 'XOR value' of the polynomial: \begin{displaymath}Crc 
        Crc \oplus PolynomialXORVal\end{displaymath}
        If the attribute 'Result data reflected' of the polynomial is TRUE, then reflect the CRC (over 
        8, 16 or 32 bits, depending on the CRC size): \begin{displaymath}Crc = reflect_{Crc size} (Crc)
        textrm{ (in the case 'Result data reflected' is TRUE)} \end{displaymath}
        The CRC is returned: \begin{displaymath}return\;Crc\end{displaymath}
        Steps 2 and 3 are performed as long as data are available
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc16Runtime</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCRuntime</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Runtime</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Runtime</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Runtime</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2FRuntime</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Runtime</srcid><srcstatus/><internalId>140</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC16 shall perform a CRC16 calculation using polynomial 0x1021 on 
        Crc_CalculateCRC16.Crc_Length data bytes, pointed to by Crc_CalculateCRC16.Crc_DataPtr, with 
        the starting value of Crc_CalculateCRC16.Crc_StartValue16.
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc16Runtime</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_1</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_256Elements</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_2</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_3</srcid><srcstatus/><internalId>157</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC32 shall perform a CRC32 calculation using polynomial 0x04C11DB7 
        on Crc_CalculateCRC32.Crc_Length data bytes, pointed to by Crc_CalculateCRC32.Crc_DataPtr, with 
        the starting value of Crc_CalculateCRC32.Crc_StartValue32.
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc32Runtime</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_1</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_256Elements</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_2</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_3</srcid><srcstatus/><internalId>158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        If source code for caller and callee of the function Crc_GetVersionInfo is available, the CRC 
        module should realize this function as a macro, defined in the modules header file.
      </description>
      <comment>
        Implementing as function increases robustness.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoGetVersionAsMacro</srcid><srcstatus/><internalId>91</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00018</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Module | Header File | Imported Type 
        Std | Std_Types.h | Std_VersionInfoType 
      </description>
      <comment>
        This requirement is informational only.
      AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name | Crc_CalculateCRC16 
        Syntax 
        uint16 Crc_CalculateCRC16 (const uint8* Crc_DataPtr, uint32 Crc_Length, uint16 Crc_StartValue16,
        boolean Crc_IsFirstCall)
        Service ID [hex] | 0x02 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | Crc_DataPtr | Pointer to start address of data block to be calculated.
        Crc_Length | Length of data block to be calculated in bytes.
        Crc_StartValue16 | Start value when the algorithm starts.
        Crc_IsFirstCall | TRUE: First call in a sequence or individual CRC calculation; start from 
        initial value, ignore Crc_StartValue16. FALSE: Subsequent call in a call sequence; 
        Crc_StartValue16 is interpreted to be the return value of the previous function call.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | uint16 | 16 bit result of CRC calculation.
        Description | This service makes a CRC16 calculation on Crc_Length data bytes.
        Available via | Crc.h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstDisabled</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstRuntime</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_16_Elements</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_256_Elements</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Runtime</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_1</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_256Elements</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_2</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_3</srcid><srcstatus/><internalId>157</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name | Crc_CalculateCRC32 
        Syntax 
        uint32 Crc_CalculateCRC32 (const uint8* Crc_DataPtr, uint32 Crc_Length, uint32 Crc_StartValue32,
        boolean Crc_IsFirstCall)
        Service ID [hex] | 0x03 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | Crc_DataPtr | Pointer to start address of data block to be calculated.
        Crc_Length | Length of data block to be calculated in bytes.
        Crc_StartValue32 | Start value when the algorithm starts.
        Crc_IsFirstCall | TRUE: First call in a sequence or individual CRC calculation; start from 
        initial value, ignore Crc_StartValue32. FALSE: Subsequent call in a call sequence; 
        Crc_StartValue32 is interpreted to be the return value of the previous function call.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | uint32 | 32 bit result of CRC calculation.
        Description | This service makes a CRC32 calculation on Crc_Length data bytes.
        Available via | Crc.h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstDisabled</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstRuntime</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_16_Elements</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_256_Elements</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Runtime</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_1</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_256Elements</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_2</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_3</srcid><srcstatus/><internalId>158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name | Crc_GetVersionInfo 
        Syntax 
        void Crc_GetVersionInfo (Std_VersionInfoType* Versioninfo)
        Service ID [hex] | 0x04 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | Versioninfo | Pointer to where to store the version information of this 
        module.
        Return value | None 
        Description | This service returns the version information of this module.
        Available via | Crc.h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstRuntime</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_16_Elements</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_256_Elements</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_VersionInfo</srcid><srcstatus/><internalId>141</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Crc_CalculateCRC8 function of the CRC module shall implement the CRC8 routine based on the 
        SAE-J1850 CRC8 Standard: CRC result width: | 8 bits 
        Polynomial: | 1Dh 
        Initial value: | FFh 
        Input data reflected: | No 
        Result data reflected: | No 
        XOR value: | FFh 
        Check: | 4Bh 
        Magic check: | C4h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc8Runtime</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_16Elements_1</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_256Elements</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2F_16_Crc8_256_2</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2F_256_Crc8_16_3</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name | Crc_CalculateCRC8 
        Syntax 
        uint8 Crc_CalculateCRC8 (const uint8* Crc_DataPtr, uint32 Crc_Length, uint8 Crc_StartValue8, 
        boolean Crc_IsFirstCall)
        Service ID [hex] | 0x01 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | Crc_DataPtr | Pointer to start address of data block to be calculated.
        Crc_Length | Length of data block to be calculated in bytes.
        Crc_StartValue8 | Start value when the algorithm starts.
        Crc_IsFirstCall | TRUE: First call in a sequence or individual CRC calculation; start from 
        initial value, ignore Crc_StartValue8. FALSE: Subsequent call in a call sequence; 
        Crc_StartValue8 is interpreted to be the return value of the previous function call.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | uint8 | 8 bit result of CRC calculation.
        Description | This service makes a CRC8 calculation on Crc_Length data bytes, with SAE J1850 
        parameters 
        Available via | Crc.h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstDisabled</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Runtime</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_16Elements_1</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_256Elements</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2F_16_Crc8_256_2</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2F_256_Crc8_16_3</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC8 shall perform a CRC8 calculation using polynomial 0x1D on 
        Crc_CalculateCRC8.Crc_Length data bytes, pointed to by Crc_CalculateCRC8.Crc_DataPtr, with the 
        starting value of Crc_CalculateCRC8.Crc_StartValue8.
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc8Runtime</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_16Elements_1</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_256Elements</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2F_16_Crc8_256_2</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2F_256_Crc8_16_3</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the CRC calculation within the function Crc_CalculateCRC8 is performed by hardware, then the 
        CRC module's implementer shall ensure reentrancy of this function by implementing a (software 
        based) locking mechanism.
      </description>
      <comment>
        The module does not support hardware Crc.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CRC function (with parameter Crc_IsFirstCall = FALSE) shall do the following operations:
        As 'Initial value' of the CRC computation, uses the parameter Crc_StartValueX (where X is 8, 
        8H2F, 16, 32, P4 or 64) that should be the CRC result of the last call. The result is then 
        XORed with 'XOR value' and reflected if 'Result data reflected' of the polynomial is TRUE: \
        begin{displaymath}Crc = Crc\_StartValueX \oplus PolynomialXORVal\end{displaymath} \begin{
        displaymath}Crc = \mathrm{reflect}_{Crc size} (Crc) \textrm{ (in the case 'Result data 
        reflected' is TRUE)}\end{displaymath}
        Steps 2 to 6 are identical to SWS_Crc_00014.
      </description>
      <comment>AUTOSAR R21-11 comment: Enhanced description
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc16Runtime</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCRuntime</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Runtime</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Runtime</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Runtime</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2FRuntime</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Runtime</srcid><srcstatus/><internalId>140</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Crc_CalculateCRC8H2F function of the CRC module shall implement the CRC8 routine based on 
        the generator polynomial 0x2F: CRC result width: | 8 bits 
        Polynomial: | 2Fh 
        Initial value: | FFh 
        Input data reflected: | No 
        Result data reflected: | No 
        XOR value: | FFh 
        Check: | DFh 
        Magic check: | 42h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc8H2FRuntime</srcid><srcstatus/><internalId>139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name | Crc_CalculateCRC8H2F 
        Syntax 
        uint8 Crc_CalculateCRC8H2F (const uint8* Crc_DataPtr, uint32 Crc_Length, uint8 
        Crc_StartValue8H2F, boolean Crc_IsFirstCall)
        Service ID [hex] | 0x05 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | Crc_DataPtr | Pointer to start address of data block to be calculated.
        Crc_Length | Length of data block to be calculated in bytes.
        Crc_StartValue8H2F | Start value when the algorithm starts.
        Crc_IsFirstCall | TRUE: First call in a sequence or individual CRC calculation; start from 
        initial value, ignore Crc_StartValue8H2F. FALSE: Subsequent call in a call sequence; 
        Crc_StartValue8H2F is interpreted to be the return value of the previous function call.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | uint8 | 8 bit result of CRC calculation.
        Description | This service makes a CRC8 calculation with the Polynomial 0x2F on Crc_Length 
        Available via | Crc.h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstDisabled</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstRuntime</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_16_Elements</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_256_Elements</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2FRuntime</srcid><srcstatus/><internalId>139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC8H2F shall perform a CRC8 calculation with the polynomial 0x2F on 
        Crc_CalculateCRC8H2F.Crc_Length data bytes, pointed to by Crc_CalculateCRC8H2F.Crc_DataPtr, 
        with the starting value of Crc_CalculateCRC8H2F.Crc_StartValue8H2F.
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc8H2FRuntime</srcid><srcstatus/><internalId>139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the CRC calculation within the function Crc_CalculateCRC8H2F is performed by hardware, then 
        the CRC module's implementer shall ensure reentrancy of this function by implementing a (
        software based) locking mechanism.
      </description>
      <comment>
        The module does not support hardware Crc.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The standardized common published parameters as required by SRS_BSW_00402 in the SRS General on 
        Basic Software Modules SRS_2d_SRSBSWGeneral shall be published within the header file of this 
        module and need to be provided in the BSW ModuleDescription. The according module abbreviation 
        can be found in the List of Basic Software Modules TR_2d_BSWModuleList.
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstRuntime</srcid><srcstatus/><internalId>131</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Crc_Version.h.m4_1</srcid><srcstatus/><internalId>98</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/Crc_Bswmd.arxml.m4_726</srcid><srcstatus/><internalId>124</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00051</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        These requirements are not applicable to this specification.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Crc_CalculateCRC8 function of the CRC module shall provide the following CRC results: Data 
        bytes (hexadecimal) | CRC 
        00 | 00 | 00 | 00 | | | | | | 59 
        F2 | 01 | 83 | | | | | | | 37 
        0F | AA | 00 | 55 | | | | | | 79 
        00 | FF | 55 | 11 | | | | | | B8 
        33 | 22 | 55 | AA | BB | CC | DD | EE | FF | CB 
        92 | 6B | 55 | | | | | | | 8C 
        FF | FF | FF | FF | | | | | | 74 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc8Runtime</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_16Elements_1</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_256Elements</srcid><srcstatus/><internalId>152</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Crc_CalculateCRC8H2F function of the CRC module shall provide the following CRC results: 
        Data bytes (hexadecimal) | CRC 
        00 | 00 | 00 | 00 | | | | | | 12 
        F2 | 01 | 83 | | | | | | | C2 
        0F | AA | 00 | 55 | | | | | | C6 
        00 | FF | 55 | 11 | | | | | | 77 
        33 | 22 | 55 | AA | BB | CC | DD | EE | FF | 11 
        92 | 6B | 55 | | | | | | | 33 
        FF | FF | FF | FF | | | | | | 6C 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc8H2FRuntime</srcid><srcstatus/><internalId>139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Crc_CalculateCRC16 function of the CRC module shall provide the following CRC results: Data 
        bytes (hexadecimal) | CRC 
        00 | 00 | 00 | 00 | | | | | | 84C0 
        F2 | 01 | 83 | | | | | | | D374 
        0F | AA | 00 | 55 | | | | | | 2023 
        00 | FF | 55 | 11 | | | | | | B8F9 
        33 | 22 | 55 | AA | BB | CC | DD | EE | FF | F53F 
        92 | 6B | 55 | | | | | | | 0745 
        FF | FF | FF | FF | | | | | | 1D0F 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc16Runtime</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_1</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_256Elements</srcid><srcstatus/><internalId>148</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Crc_CalculateCRC32 function of the CRC module shall provide the following CRC results: Data 
        bytes (hexadecimal) | CRC 
        00 | 00 | 00 | 00 | | | | | | 2144DF1C 
        F2 | 01 | 83 | | | | | | | 24AB9D77 
        0F | AA | 00 | 55 | | | | | | B6C9B287 
        00 | FF | 55 | 11 | | | | | | 32A06212 
        33 | 22 | 55 | AA | BB | CC | DD | EE | FF | B0AE863D 
        92 | 6B | 55 | | | | | | | 9CDEA29B 
        FF | FF | FF | FF | | | | | | FFFFFFFF 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc32Runtime</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_1</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_256Elements</srcid><srcstatus/><internalId>150</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>Crc.ECUC_Crc_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name | Crc32P4Mode 
        Parent Container | CrcGeneral 
        Description | Switch to select one of the available CRC 32-bit E2E Profile 4 calculation 
        methods.
        Multiplicity | 0..1 
        Type | EcucEnumerationParamDef 
        Range | CRC_32P4_HARDWARECrcGeneral.Crc32P4Mode.CRC_32P4_HARDWARE | hardware based CRC32P4 
        calculation 
        CRC_32P4_RUNTIMECrcGeneral.Crc32P4Mode.CRC_32P4_RUNTIME | runtime based CRC32P4 calculation 
        CRC_32P4_TABLECrcGeneral.Crc32P4Mode.CRC_32P4_TABLE | table based CRC32P4 calculation (default 
        selection)
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Crc.Crc32P4Mode.HardwareBased</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>Crc.Crc32P4Mode_Conf</srcid><srcstatus/><internalId>75</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_308</srcid><srcstatus/><internalId>113</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CRC module shall implement the CRC32 routine using the 0xF4'AC'FB'13 polynomial: CRC result 
        width: | 32 bits 
        Polynomial: | F4'AC'FB'13h 
        Initial value: | FFFFFFFFh 
        Input data reflected: | Yes 
        Result data reflected: | Yes 
        XOR value: | FFFFFFFFh 
        Check: | 16'97'D0'6Ah 
        Magic check*: | 90'4C'DD'BFh 
        Hamming distance: | 6, up to 4096 bytes (including CRC)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc32P4Runtime</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_16Elements_1</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_256Elements</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Crc_CalculateCRC32P4 function of the CRC module shall provide the following CRC results: 
        Data bytes (hexadecimal) | CRC 
        00 | 00 | 00 | 00 | | | | | | 6FB32240h 
        F2 | 01 | 83 | | | | | | | 4F721A25h 
        0F | AA | 00 | 55 | | | | | | 20662DF8h 
        00 | FF | 55 | 11 | | | | | | 9BD7996Eh 
        33 | 22 | 55 | AA | BB | CC | DD | EE | FF | A65A343Dh 
        92 | 6B | 55 | | | | | | | EE688A78h 
        FF | FF | FF | FF | | | | | | FFFFFFFFh 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc32P4Runtime</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_16Elements_1</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_256Elements</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name | Crc_CalculateCRC32P4 
        Syntax 
        uint32 Crc_CalculateCRC32P4 (const uint8* Crc_DataPtr, uint32 Crc_Length, uint32 
        Crc_StartValue32, boolean Crc_IsFirstCall)
        Service ID [hex] | 0x06 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | Crc_DataPtr | Pointer to start address of data block to be calculated.
        Crc_Length | Length of data block to be calculated in bytes.
        Crc_StartValue32 | Start value when the algorithm starts.
        Crc_IsFirstCall | TRUE: First call in a sequence or individual CRC calculation; start from 
        initial value, ignore Crc_StartValue32. FALSE: Subsequent call in a call sequence; 
        Crc_StartValue32 is interpreted to be the return value of the previous function call.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | uint32 | 32 bit result of CRC calculation.
        Description | This service makes a CRC32 calculation on Crc_Length data bytes, using the 
        polynomial 0xF4ACFB13. This CRC routine is used by E2E Profile 4.
        Available via | Crc.h 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstDisabled</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstRuntime</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_16_Elements</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_256_Elements</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Runtime</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_16Elements_1</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_256Elements</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC32P4 shall perform a CRC32 calculation using polynomial 0xF4ACFB13 
        on Crc_CalculateCRC32P4.Crc_Length data bytes, pointed to by Crc_CalculateCRC32P4.Crc_DataPtr, 
        with the starting value of Crc_CalculateCRC32P4.Crc_StartValue32.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc32P4Runtime</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_16Elements_1</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_256Elements</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the CRC calculation within the function Crc_CalculateCRC32P4 is performed by hardware, then 
        the CRC module's implementer shall ensure reentrancy of this function by implementing a (
        software based) locking mechanism.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>Crc.ECUC_Crc_00034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name | Crc64Mode 
        Parent Container | CrcGeneral 
        Description | Switch to select one of the available CRC 64-bit calculation methods.
        Multiplicity | 0..1 
        Type | EcucEnumerationParamDef 
        Range | CRC_64_HARDWARECrcGeneral.Crc64Mode.CRC_64_HARDWARE | hardware based CRC64 calculation 
        CRC_64_RUNTIMECrcGeneral.Crc64Mode.CRC_64_RUNTIME | runtime based CRC64 calculation 
        CRC_64_TABLECrcGeneral.Crc64Mode.CRC_64_TABLE | table based CRC64 calculation (default 
        selection)
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <comment>
        The module does not support hardware Crc.
      AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Crc.Crc64Mode.HardwareBased</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>Crc.Crc64Mode_Conf</srcid><srcstatus/><internalId>77</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_391</srcid><srcstatus/><internalId>114</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name | Crc_CalculateCRC64 
        Syntax 
        uint64 Crc_CalculateCRC64 (const uint8* Crc_DataPtr, uint32 Crc_Length, uint64 Crc_StartValue64,
        boolean Crc_IsFirstCall)
        Service ID [hex] | 0x07 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | Crc_DataPtr | Pointer to start address of data block to be calculated.
        Crc_Length | Length of data block to be calculated in bytes.
        Crc_StartValue64 | Start value when the algorithm starts.
        Crc_IsFirstCall | TRUE: First call in a sequence or individual CRC calculation; start from 
        initial value, ignore Crc_StartValue64. FALSE: Subsequent call in a call sequence; 
        Crc_StartValue64 is interpreted to be the return value of the previous function call.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | uint64 | 64 bit result of CRC calculation.
        Description | This service makes a CRC64 calculation on Crc_Length data bytes, using the 
        polynomial 0x42F0E1EBA9EA3693. This CRC routine is used by E2E Profile 7.
        Available via | Crc.h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstDisabled</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstRuntime</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_16_Elements</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_256_Elements</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Runtime</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_16Elements_1</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_256Elements</srcid><srcstatus/><internalId>153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CRC module shall implement the CRC64 routine using the 0x42'F0'E1'EB'A9'EA'36'93 polynomial:
        CRC result width: | 64 bits 
        Polynomial: | 42'F0'E1'EB'A9'EA'36'93h 
        Initial value: | FFFFFFFFFFFFFFFFh 
        Input data reflected: | Yes 
        Result data reflected: | Yes 
        XOR value: | FFFFFFFFFFFFFFFFh 
        Check: | 99'5D'C9'BB'DF'19'39'FAh 
        Magic check*: | 49'95'8C'9A'BD'7D'35'3Fh 
        Hamming distance: | 4, up to almost 8 GB 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc64Runtime</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_16Elements_1</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_256Elements</srcid><srcstatus/><internalId>153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Crc_CalculateCRC64 function of the CRC module shall provide the following CRC results: Data 
        bytes (hexadecimal) | CRC 
        00 | 00 | 00 | 00 | | | | | | F4A586351E1B9F4Bh 
        F2 | 01 | 83 | | | | | | | 319C27668164F1C6h 
        0F | AA | 00 | 55 | | | | | | 54C5D0F7667C1575h 
        00 | FF | 55 | 11 | | | | | | A63822BE7E0704E6h 
        33 | 22 | 55 | AA | BB | CC | DD | EE | FF | 701ECEB219A8E5D5h 
        92 | 6B | 55 | | | | | | | 5FAA96A9B59F3E4Eh 
        FF | FF | FF | FF | | | | | | FFFFFFFF00000000h 
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc64Runtime</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_16Elements_1</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_256Elements</srcid><srcstatus/><internalId>153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC64 shall perform a CRC64 calculation using polynomial 
        0x42F0E1EBA9EA3693 on Crc_CalculateCRC64.Crc_Length data bytes, pointed to by 
        Crc_CalculateCRC64.Crc_DataPtr, with the starting value of Crc_CalculateCRC64.Crc_StartValue64.
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc64Runtime</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_16Elements_1</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_256Elements</srcid><srcstatus/><internalId>153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the CRC calculation within the function Crc_CalculateCRC64 is performed by hardware, then 
        the CRC module's implementer shall ensure reentrancy of this function by implementing a (
        software based) locking mechanism.
      </description>
      <comment>
        The module does not support hardware Crc.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
    <specobject>
      <id>Crc.ECUC_Crc_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name | Crc16ARCMode 
        Parent Container | CrcGeneral 
        Description | Switch to select one of the available CRC-16/ARC (polynomial 8005) calculation 
        methods 
        Multiplicity | 0..1 
        Type | EcucEnumerationParamDef 
        Range | CRC_16_ARC_HARDWARECrcGeneral.Crc16ARCMode.CRC_16_ARC_HARDWARE | hardware based CRC16 
        calculation 
        CRC_16_ARC_RUNTIMECrcGeneral.Crc16ARCMode.CRC_16_ARC_RUNTIME | runtime based CRC16 calculation 
        CRC_16_ARC_TABLECrcGeneral.Crc16ARCMode.CRC_16_ARC_TABLE | table based CRC16 calculation (
        default selection)
        Post-Build Variant Multiplicity | false 
        Post-Build Variant Value | false 
        Multiplicity Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Crc.Crc16ARCMode.HardwareBased</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>Crc.Crc16ARCMode_Conf</srcid><srcstatus/><internalId>67</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CRC module shall implement the CRC16 based on the CRC-16/ARC Standard: CRC result width: | 
        16 bits 
        Polynomial: | 8005h 
        Initial value: | 0000h 
        Input data reflected: | Yes 
        Result data reflected: | Yes 
        XOR value: | 0000h 
        Check: | BB3Dh 
        Magic check: | 0000h 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc16ARCRuntime</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_16Elements_1</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_256Elements</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Crc_CalculateCRC16ARC function of the CRC module shall provide the following CRC results: 
        Data bytes (hexadecimal) | CRC 
        00 | 00 | 00 | 00 | | | | | | 0000 
        F2 | 01 | 83 | | | | | | | C2E1 
        0F | AA | 00 | 55 | | | | | | 0BE3 
        00 | FF | 55 | 11 | | | | | | 6CCF 
        33 | 22 | 55 | AA | BB | CC | DD | EE | FF | AE98 
        92 | 6B | 55 | | | | | | | E24E 
        FF | FF | FF | FF | | | | | | 9401 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc16ARCRuntime</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_16Elements_1</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_256Elements</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC16ARC shall perform a CRC16 calculation using polynomial 0x8005 on 
        Crc_CalculateCRC16ARC.Crc_Length data bytes, pointed to by Crc_CalculateCRC16ARC.Crc_DataPtr, 
        with the starting value of Crc_CalculateCRC16ARC.Crc_StartValue16.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_Crc16ARCRuntime</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_16Elements_1</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_256Elements</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the CRC calculation within the function Crc_CalculateCRC16ARC is performed by hardware, then 
        the CRC module's implementer shall ensure reentrancy of this function by implementing a (
        software based) locking mechanism.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name | Crc_CalculateCRC16ARC 
        Syntax 
        uint16 Crc_CalculateCRC16ARC (const uint8* Crc_DataPtr, uint32 Crc_Length, uint16 
        Crc_StartValue16, boolean Crc_IsFirstCall)
        Service ID [hex] | 0x08 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | Crc_DataPtr | Pointer to start address of data block to be calculated.
        Crc_Length | Length of data block to be calculated in bytes.
        Crc_StartValue16 | Start value when the algorithm starts.
        Crc_IsFirstCall | TRUE: First call in a sequence or individual CRC calculation; start from 
        initial value, ignore Crc_StartValue16. FALSE: Subsequent call in a call sequence; 
        Crc_StartValue16 is interpreted to be the return value of the previous function call.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | uint16 | 16 bit result of CRC calculation.
        Description | This service makes a CRC16 calculation on Crc_Length data bytes, using the 
        polynomial 0x8005.
        Available via | Crc.h 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstDisabled</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstRuntime</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_16_Elements</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_256_Elements</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCRuntime</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_16Elements_1</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_256Elements</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>Crc.ECUC_Crc_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Module Name | Crc
        Module Description | Configuration of the Crc (Crc routines) module.
        Post-Build Variant Support | false 
        Supported Config Variants | VARIANT-PRE-COMPILE 
        Included Containers 
        Container Name | Multiplicity | Scope / Dependency 
        CrcGeneral | 1 | General configuration of CRC module 
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_17</srcid><srcstatus/><internalId>103</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        Information elements 
        Information element name | Type / Range | Information element description 
        CRC_VENDOR_ID | #define/ uint16 | Vendor ID of the dedicated implementation of this module 
        according to the AUTOSAR vendor list 
        CRC_MODULE_ID | #define/ uint16 | Module ID of this module from Module List 
        CRC_AR_RELEASE_MAJOR_VERSION | #define/ uint8 | Major version number of AUTOSAR release on 
        which the appropriate implementation is based on.
        CRC_AR_RELEASE_MINOR_VERSION | #define/ uint8 | Minor version number of AUTOSAR release on 
        which the appropriate implementation is based on.
        CRC_AR_RELEASE_REVISION_VERSION | #define/ uint8 | Patch level version number of AUTOSAR 
        release on which the appropriate implementation is based on.
        CRC_SW_MAJOR_VERSION | #define/ uint8 | Major version number of the vendor specific 
        implementation of the module. The numbering is vendor specific.
        CRC_SW_MINOR_VERSION | #define/ uint8 | Minor version number of the vendor specific 
        implementation of the module. The numbering is vendor specific.
        CRC_SW_PATCH_VERSION | #define/ uint8 | Patch level version number of the vendor specific 
        implementation of the module. The numbering is vendor specific.
      </description>
      <comment>AUTOSAR R21-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Crc_Version.h.m4_1</srcid><srcstatus/><internalId>98</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>Crc.SWS_Crc_00072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CrcLibrary.pdf, R21-11</source>
      <version>1</version>
      <description>
        The CRC library functions shall not call any BSW modules functions (e.g. the DET)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>doc/public/changelog/Deviations.xml_79</srcid><srcstatus/><internalId>92</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>Crc.Crc16Mode.HardwareBased</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc16Mode {CRC_16_MODE}
          Range               CRC_16_HARDWARE hardware based CRC16 calculation
        </pre>
      </description>
      <comment>
        <pre>
          The module does not support hardware Crc.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>Crc.Crc16Mode_Conf</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc16Mode {CRC_16_MODE}
          Description         Switch to select one of the available CRC 16-bit (CCITT)
          calculation methods
          Multiplicity        0..1
          Type                EcucEnumerationParamDef
          Range               CRC_16_RUNTIME runtime based CRC16 calculation
          CRC_16_TABLE   table based CRC16 calculation (default selection)
          ConfigurationClass  Pre-compile time X All Variants
          Link time -
          Post-build time -
          Scope / Dependency
        </pre>
      </description>
      <comment>
        <pre>
          This is a configuration parameter requirement without functional specification.
        </pre>
      </comment>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    <specobject>
      <id>Crc.Crc16ARCMode.HardwareBased</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc16ARCMode {CRC_16_MODE}
          Range               CRC_16_HARDWARE hardware based CRC16 calculation
        </pre>
      </description>
      <comment>
        <pre>
          The module does not support hardware Crc.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>Crc.Crc16ARCMode_Conf</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc16ARCMode {CRC_16_MODE}
          Description         Switch to select one of the available CRC 16-bit (CCITT)
          calculation methods
          Multiplicity        0..1
          Type                EcucEnumerationParamDef
          Range               CRC_16_RUNTIME runtime based CRC16 calculation
                              CRC_16_TABLE   table based CRC16 calculation (default selection)
          ConfigurationClass  Pre-compile time X All Variants
          Link time -
          Post-build time -
          Scope / Dependency
        </pre>
      </description>
      <comment>
        <pre>
          This is a configuration parameter requirement without functional specification.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_141</srcid><srcstatus/><internalId>107</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>
      <id>Crc.Crc32Mode.HardwareBased</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc32Mode {CRC_32_MODE}
          Range               CRC_32_HARDWARE hardware based CRC32 calculation
        </pre>
      </description>
      <comment>
        <pre>
          The module does not support hardware Crc.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>Crc.Crc32Mode_Conf</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc32Mode {CRC_32_MODE}
          Description         Switch to select one of the available CRC 32-bit
          (IEEE-802.3 CRC32 Ethernet Standard) calculation methods
          Multiplicity        0..1
          Type                EcucEnumerationParamDef
          Range               CRC_32_RUNTIME runtime based CRC32 calculation
          CRC_32_TABLE   table based CRC32 calculation (default selection)
          ConfigurationClass  Pre-compile time X All Variants
          Link time -
          Post-build time -
          Scope / Dependency
        </pre>
      </description>
      <comment>
        <pre>
          This is a configuration parameter requirement without functional specification.
        </pre>
      </comment>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>Crc.Crc8H2FMode.HardwareBased</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc8H2FMode {CRC_8H2F_MODE}
          Range               CRC_8H2F_HARDWARE hardware based CRC8H2F calculation
        </pre>
      </description>
      <comment>
        <pre>
          The module does not support hardware Crc.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    <specobject>
      <id>Crc.Crc8H2FMode_Conf</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc8H2FMode {CRC_8H2F_MODE}
          Description         Switch to select one of the available CRC 8-bit (2Fh polynomial)
          calculation methods
          Multiplicity        0..1
          Type                EcucEnumerationParamDef
          Range               CRC_8H2F_RUNTIME runtime based CRC8H2F calculation
          CRC_8H2F_TABLE   table based CRC8H2F calculation (default selection)
          ConfigurationClass  Pre-compile time X All Variants
          Link time -
          Post-build time -
          Scope / Dependency
        </pre>
      </description>
      <comment>
        <pre>
          This is a configuration parameter requirement without functional specification.
        </pre>
      </comment>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    <specobject>
      <id>Crc.Crc8Mode.HardwareBased</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc8Mode {CRC_8_MODE}
          Range               CRC_8_HARDWARE hardware based CRC8 calculation
        </pre>
      </description>
      <comment>
        <pre>
          The module does not support hardware Crc.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
    <specobject>
      <id>Crc.Crc8Mode_Conf</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc8Mode {CRC_8_MODE}
          Description         Switch to select one of the available CRC 8-bit (SAE J1850) calculation methods
          Multiplicity        0..1
          Type                EcucEnumerationParamDef
          Range               CRC_8_RUNTIME  runtime based CRC8 calculation
          CRC_8_TABLE    table based CRC8 calculation (default  selection)
          ConfigurationClass  Pre-compile time X All Variants
          Link time -
          Post-build time -
          Scope / Dependency
        </pre>
      </description>
      <comment>
        <pre>
          This is a configuration parameter requirement without functional specification.
        </pre>
      </comment>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>Crc.Crc32P4Mode.HardwareBased</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc32P4Mode {CRC_32P4_MODE}
          Range               CRC_32P4_HARDWARE hardware based CRC32P4 calculation
        </pre>
      </description>
      <comment>
        <pre>
          The module does not support hardware Crc.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>Crc.Crc32P4Mode_Conf</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc32P4Mode {CRC_32P4_MODE}
          Description         Switch to select one of the available CRC32P4 calculation methods.
          Multiplicity        0..1
          Type                EcucEnumerationParamDef
          Range               
            CRC_32P4_RUNTIME runtime based CRC32P4 calculation
            CRC_32P4_TABLE table based CRC32P4 calculation (default selection)
          Multiplicity Configuration Class Pre-compile time All Variants
          Value Configuration Class Pre-compile time All Variants
          Scope / Dependency scope: local
        </pre>
      </description>
      <comment>
        <pre>
          This is a configuration parameter requirement without functional specification.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_308</srcid><srcstatus/><internalId>113</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>Crc.Crc64Mode.HardwareBased</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc64Mode {CRC_64_MODE}
          Range               CRC_64_HARDWARE hardware based CRC64 calculation
        </pre>
      </description>
      <comment>
        <pre>
          The module does not support hardware Crc.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.NoHardwareBasedCrc</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>Crc.Crc64Mode_Conf</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        <pre>
          Name                Crc64Mode {CRC_64_MODE}
          Description         Switch to select one of the available CRC 64-bit calculation methods.
          Multiplicity        0..1
          Type                EcucEnumerationParamDef
          Range               
            CRC_64_RUNTIME runtime based CRC64 calculation
            CRC_64_TABLE table based CRC64 calculation (de-fault selection)
          Multiplicity Configuration Class Pre-compile time All Variants
          Value Configuration Class Pre-compile time All Variants
          Scope / Dependency scope: local
        </pre>
      </description>
      <comment>
        <pre>
          This is a configuration parameter requirement without functional specification.
        </pre>
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_391</srcid><srcstatus/><internalId>114</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>Crc.EB.BSWMDGeneration</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <pre>
          The Crc module's BSWMD shall be generated using a generator
          mode named "generate_swcd".
        </pre>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstRuntime</srcid><srcstatus/><internalId>131</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>EB_CRC_TableSizes</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        <pre>
          For the table based CRC calculation methods two table sizes
          shall be supported.  One with 16 elements and one with 256
          elements.
        </pre>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_ComTstTable_16_Elements</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_ComTstTable_256_Elements</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_1</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_16Elements_1</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_1</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_16Elements_1</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_16Elements_1</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_16Elements_1</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_256Elements</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16ARCTable_256Elements</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_256Elements</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32P4Table_256Elements</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8Table_256Elements</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc64Table_256Elements</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_2</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_2</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2F_16_Crc8_256_2</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc16Table_16Elements_3</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc32Table_16Elements_3</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>TS_CRC_Crc8H2F_256_Crc8_16_3</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>EB_CRC_DetHeaderFile</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        <pre>
          Crc module shall include Det.h.
        </pre>
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Crc.c.m4_25</srcid><srcstatus/><internalId>101</internalId></linkedfrom></coveredby></needscov>
		<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.InclDETfunc</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>EB_CRC_CrcDevErrorDetect</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        <pre>
          The detection of development errors shall be pre compile time
          configurable by the configuration parameter: CrcDevErrorDetect.
        </pre>
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Crc.xdm.m4_662</srcid><srcstatus/><internalId>123</internalId></linkedfrom></coveredby></needscov>
		<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Crc.InclDETfunc</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>EB_CRC_NullPointerCheck_GetVersionInfo</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        <pre>
          If development error detection is enabled for Crc module, the function
          Crc_GetVersionInfo shall report the DET error CRC_E_PARAM_DATA when a
          NULL pointer is passed via the parameter Versioninfo.
        </pre>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRC_CrcDetCheck</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
  </specobjects>
    <specobjects doctype="man">
    <specobject>
      <id>TS_Crc_ResourceConsumption</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        01: Get RAM/ROM consumption of Crc_ComTest_ResourceConsumption
        02 VP(Crc.swdd.ROMConsumption_RefCfg1): Check the ROM consumption of
           the test run against the threshold specified in the requirement.
        03 VP(Crc.swdd.RAMConsumption_RefCfg1): Check the RAM consumption of
           the test run against the threshold specified in the requirement.
        Action if test any verification point is not fulfilled:
        If the consumption exceeds the threshold, an analysis shall be started to find the cause
        of the additional resource consumption.
        The result of the analysis shall trigger either:
        * an update of the resource view in the design and the existing threshold if there is a
          rationale for the additional resource consumption.
        OR
        * measurements to reduce the additional resource consumption below the existing threshold
          if there is no rationale for the additional resource consumption.
      </description>
      <providescoverage>
        <provcov>
          <linksto>Crc.swdd.ROMConsumption_RefCfg1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Crc.swdd.RAMConsumption_RefCfg1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>Crc.EB.DBGINST001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every public API of the module shall have debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Crc_DBGINST_001</srcid><srcstatus/><internalId>127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>Crc.EB.DBGINST002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the entry instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Crc_DBGINST_001</srcid><srcstatus/><internalId>127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>Crc.EB.DBGINST003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the exit instrumentation.
        If the API has a return value, the very first parameter of the macro shall contain the expected return value.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Crc_DBGINST_001</srcid><srcstatus/><internalId>127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>Crc.EB.DBGINST004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The default implementation of the debug instrumentation shall be an empty macro.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Crc_DBGINST_001</srcid><srcstatus/><internalId>127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>Crc.EB.DBGINST005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The module shall include the header files Base_Dbg.h in order to allow changing the default implementation of the debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Crc_DBGINST_001</srcid><srcstatus/><internalId>127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>Crc.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Crc_VerifyCodeStub</srcid><srcstatus/><internalId>128</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.Crc.NoHardwareBasedCrc</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Crc.Crc16Mode.HardwareBased</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Crc.Crc16ARCMode.HardwareBased</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>Crc.Crc32Mode.HardwareBased</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Crc.Crc32P4Mode.HardwareBased</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>Crc.Crc8H2FMode.HardwareBased</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>Crc.Crc8Mode.HardwareBased</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>Crc.Crc64Mode.HardwareBased</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>dev.Crc.NoGetVersionAsMacro</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>doc/public/changelog/Deviations.xml_79</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>dev.Crc.InclDETfunc</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_CRC_DetHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_CrcDevErrorDetect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/Crc_Cfg.h_5</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/generate/include/Crc_Cfg.h</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/Crc.h_5</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/include/Crc.h</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Crc.h_13</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/include/Crc.h</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Crc.h_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/include/Crc.h</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/Crc_Version.h.m4_1</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/include/Crc_Version.h.m4</sourcefile>
      <sourceline>1</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/Crc.c.m4_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/src/Crc.c.m4</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Crc.c.m4_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/src/Crc.c.m4</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Crc.c.m4_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/src/Crc.c.m4</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_CRC_DetHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Crc.c.m4_30</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/src/Crc.c.m4</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_17</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_60</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_141</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.Crc16ARCMode_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_206</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>206</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_248</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>248</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_308</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>308</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.Crc32P4Mode_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Crc.ECUC_Crc_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_391</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>391</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.Crc64Mode_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Crc.ECUC_Crc_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_420</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>420</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_481</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_501</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_546</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_562</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>562</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ECUC_Crc_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_627</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>627</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.ASR40.SWS_Crc_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Crc.xdm.m4_662</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/config/Crc.xdm.m4</sourcefile>
      <sourceline>662</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_CRC_CrcDevErrorDetect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/Crc_Bswmd.arxml.m4_726</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/src/Autosar/generate_swcd/swcd/Crc_Bswmd.arxml.m4</sourcefile>
      <sourceline>726</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>Crc.swdd.ROMConsumption_RefCfg1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/doc/project/design/basic_software/resource_view.xml</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <description>
                        The ROM consumption for reference configuration must not exceed 100 bytes.
                      </description>
      <rationale>
                        The defined ROM consumption is the result of all analysed configuration
                        parameters of reference configuration 1.
                      </rationale>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Crc_ResourceConsumption</srcid><srcstatus/><internalId>83</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Crc_ComTest_ResourceConsumption</srcid><srcstatus/><internalId>129</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>Crc.swdd.RAMConsumption_RefCfg1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/doc/project/design/basic_software/resource_view.xml</sourcefile>
      <sourceline>170</sourceline>
      <version>1</version>
      <description>
                        The RAM consumption for reference configuration must not exceed 0 bytes.
                      </description>
      <rationale>
                        The defined RAM consumption is the result of all analysed configuration
                        parameters of reference configuration 1.
                      </rationale>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Crc_ResourceConsumption</srcid><srcstatus/><internalId>83</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Crc_ComTest_ResourceConsumption</srcid><srcstatus/><internalId>129</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Crc_DBGINST_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/common_req/Crc_DbgInst_Trace_APIs.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   Test Dbg
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation test.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.EB.DBGINST001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>Crc.EB.DBGINST002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Crc.EB.DBGINST003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Crc.EB.DBGINST004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Crc.EB.DBGINST005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Crc_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/build/reqm/common_req/Crc_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(Crc.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>Crc_ComTest_ResourceConsumption</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Compile/IN/Crc_ComTest_ResourceConsumption/source/application/config_check.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test shall be used as a reference test to estimate the RAM and ROM consumption.
    
Test Object: 
      RAM/ROM consumption of reference configuration
    
Test Precondition: None.
Test Execution: 
        This test is intended as compile test only.
    
Test Input: 
    
Test Output: 
        A compiled module.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.swdd.ROMConsumption_RefCfg1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Crc.swdd.RAMConsumption_RefCfg1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_ComTstDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Compile/IN/Crc_ComTstDisabled/source/application/config_check.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify that source can be compiled if all Crc routines are disabled.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_ComTstRuntime</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Compile/IN/Crc_ComTstRuntime/source/application/config_check.h</sourcefile>
      <sourceline>12</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify that source can be compiled using runtime Crc
      calculation with CRC runtime calculation.
    &lt;/para&gt;    
    &lt;para&gt;
      Verify that the CRC module's generator generates a
      syntactically and semantically valid basic software module
      description (BSWMD) when the generator mode "generate_swcd" is
      invoked.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Crc.EB.BSWMDGeneration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_ComTstTable_16_Elements</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Compile/IN/Crc_ComTstTable_16/source/application/config_check.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify that source can be compiled using table based Crc
      calculation with table size of 16.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_ComTstTable_256_Elements</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Compile/IN/Crc_ComTstTable_256/source/application/config_check.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify that source can be compiled using table based Crc
      calculation with table size 256.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_Crc16Runtime</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstRuntime/source/application/Tests.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC16() returns the correct CRC value if
  the runtime based calculation mode is configured.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
&lt;para&gt;
  Check the CRC algorithm with the following test cases:
&lt;/para&gt;
&lt;para&gt;
  The 9 byte long string "123456789".
&lt;/para&gt;
&lt;para&gt;
  The 0 byte long empty string.
&lt;/para&gt;
&lt;para&gt;
  The 1 byte long string "A".
&lt;/para&gt;
&lt;para&gt;
  The 128 byte long string containing only "A".
&lt;/para&gt;
&lt;para&gt;
  The 256 byte long string containing only "A".
&lt;/para&gt;

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc16ARCRuntime</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstRuntime/source/application/Tests.c</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC16ARC() returns the correct CRC value if
  the runtime based calculation mode is configured.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
&lt;para&gt;
&lt;/para&gt;

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc32Runtime</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstRuntime/source/application/Tests.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC32() returns the correct CRC value if
  the runtime based calculation mode is configured.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
&lt;para&gt;
  See TS_CRC_Crc32Runtime.
&lt;/para&gt;

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc32P4Runtime</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstRuntime/source/application/Tests.c</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC32P4() returns the correct CRC value if
  the runtime based calculation mode is configured.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
&lt;para&gt;
  See TS_CRC_Crc32P4Runtime.
&lt;/para&gt;

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc8Runtime</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstRuntime/source/application/Tests.c</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC8 returns the correct CRC value if the
  runtime based calculation mode is configured.
&lt;/para&gt;
&lt;para&gt;
  The verification method described in the AUTOSAR R4.0 CRC SWS,
  section 7.2, is applied: "The CRC checking process calculates the
  CRC over the entire data block, including the CRC result. An
  error-free data block will always result in the unique constant
  polynomial -representing the 'Check' value XORed with XOR value-
  regardless of the data block content."
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
&lt;para&gt;
  See TS_CRC_Crc16Runtime.
&lt;/para&gt;

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc8H2FRuntime</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstRuntime/source/application/Tests.c</sourcefile>
      <sourceline>300</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC8H2F returns the correct CRC value if the
  runtime based calculation mode is configured.
&lt;/para&gt;
&lt;para&gt;
  The verification method described in the AUTOSAR R4.0 CRC SWS,
  section 7.2, is applied: "The CRC checking process calculates the
  CRC over the entire data block, including the CRC result. An
  error-free data block will always result in the unique constant
  polynomial -representing the 'Check' value XORed with XOR value-
  regardless of the data block content."
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
&lt;para&gt;
  See TS_CRC_Crc16Runtime.
&lt;/para&gt;

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc64Runtime</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstRuntime/source/application/Tests.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC64() returns the correct CRC value if
  the runtime based calculation mode is configured.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
&lt;para&gt;
  See TS_CRC_Crc16Runtime.
&lt;/para&gt;

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_VersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstRuntime/source/application/test_VersionInfo.c.m4</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that the API function Crc_GetVersionInfo() returns the correct vendor
  ID, module ID, AUTOSAR version information, module software version
  information.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_Crc16Table_16Elements_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_16/source/application/Tests.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC16() returns the correct CRC value if
  the table based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc16Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc16ARCTable_16Elements_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_16/source/application/Tests.c</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC16ARC() returns the correct CRC value if
  the table based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc16ARCRuntime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc32Table_16Elements_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_16/source/application/Tests.c</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC32() returns the correct CRC value if the table
  based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc32Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc32P4Table_16Elements_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_16/source/application/Tests.c</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC32P4() returns the correct CRC value if the table
  based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc32P4Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc8Table_16Elements_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_16/source/application/Tests.c</sourcefile>
      <sourceline>232</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC8() returns the correct CRC value if the
  table based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc8Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc64Table_16Elements_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_16/source/application/Tests.c</sourcefile>
      <sourceline>279</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC64() returns the correct CRC value if the table
  based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc64Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_Crc16Table_256Elements</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_256/source/application/Tests.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC16() returns the correct CRC value if
  the table based calculation mode with 256 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc16Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc16ARCTable_256Elements</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_256/source/application/Tests.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC16ARC() returns the correct CRC value if
  the table based calculation mode with 256 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc16ARCRuntime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc32Table_256Elements</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_256/source/application/Tests.c</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC32() returns the correct CRC value if the table
  based calculation mode with 256 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc32Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc32P4Table_256Elements</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_256/source/application/Tests.c</sourcefile>
      <sourceline>188</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC32P4() returns the correct CRC value if the table
  based calculation mode with 256 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc32P4Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc8Table_256Elements</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_256/source/application/Tests.c</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC8() returns the correct CRC value if the
  table based calculation mode with 256 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc8Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc64Table_256Elements</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_256/source/application/Tests.c</sourcefile>
      <sourceline>280</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC64() returns the correct CRC value if the table
  based calculation mode with 256 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc64Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_Crc16Table_16Elements_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_Crc8_16_256/source/application/Tests.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC16() returns the correct CRC value if
  the table based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc16Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc32Table_16Elements_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_Crc8_16_256/source/application/Tests.c</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC32() returns the correct CRC value if the table
  based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc32Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc8H2F_16_Crc8_256_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_Crc8_16_256/source/application/Tests.c</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC8() returns the correct CRC value if the
  table based calculation mode with 16 entries is configured.
  Verify that Crc_CalculateCRC8H2F() returns the correct CRC value if the
  table based calculation mode with 256 entries is configured.
  The test relies on the result of 2 test functions (Tsts_Crc_Crc8 and Tst_Crc_Crc8H2F):
  - if both test functions pass then also this test case passes
  - otherwise this test case will fail: 
    -&gt; once because they return different results 
    -&gt; second time when both test functions fail and return the result of both (failure) as result of this test case too
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc8Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_Crc16Table_16Elements_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_Crc8_256_16/source/application/Tests.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC16() returns the correct CRC value if
  the table based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc16Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc32Table_16Elements_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_Crc8_256_16/source/application/Tests.c</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC32() returns the correct CRC value if the table
  based calculation mode with 16 entries is configured.
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc32Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>TS_CRC_Crc8H2F_256_Crc8_16_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTstTable_Crc8_256_16/source/application/Tests.c</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that Crc_CalculateCRC8() returns the correct CRC value if the
  table based calculation mode with 256 entries is configured.
  Verify that Crc_CalculateCRC8H2F() returns the correct CRC value if the
  table based calculation mode with 16 entries is configured.
  The test relies on the result of 2 test functions (Tsts_Crc_Crc8 and Tst_Crc_Crc8H2F):
  - if both test functions pass then also this test case passes
  - otherwise this test case will fail: 
    -&gt; once because they return different results 
    -&gt; second time when both test functions fail and return the result of both (failure) as result of this test case too
&lt;/para&gt;
&lt;para&gt;
  Except for the module configuration the test case equals the tests
  case TS_CRC_Crc8Runtime.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>Crc.SWS_Crc_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Crc.SWS_Crc_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>EB_CRC_TableSizes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRC_CrcDetCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_Crc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Crc/test/ts5/Conformance/IN/Crc_ConTst_Det_Error/source/application/Tests.c</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that if development error detection is enabled for Crc module, the function
  Crc_GetVersionInfo report the DET error CRC_E_PARAM_DATA when a
  NULL pointer is passed via the parameter Versioninfo.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Development error detection has been enabled.

Test Execution: 

VP(EB_CRC_NullPointerCheck_GetVersionInfo):

DET check for Crc_GetVersionInfo:
  Call Crc_GetVersionInfo() with VersionInfoPtr as NULL_PTR.
  Check Det_ReportError() is called.


Test Input: 

Test Output: 

VP(EB_CRC_NullPointerCheck_GetVersionInfo):

DET check for Crc_GetVersionInfo:
  Crc_GetVersionInfo() calls Det_ReportError() with the error value CRC_E_PARAM_DATA.

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_CRC_NullPointerCheck_GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
