<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_FrTp_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_AUTOSAR_SWS_FlexRayTransportLayer.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_FrTp_ConfigurationChecks_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_FrTp_EBExtensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_FrTp_TpAPI-refinement.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_Specification_ISO10681_2.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_DbgInst_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_PbcfgM_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_PduLengthType_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 19:45:53 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_FrTp_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_AUTOSAR_SWS_FlexRayTransportLayer.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_FrTp_ConfigurationChecks_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_FrTp_EBExtensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_FrTp_TpAPI-refinement.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_Native/asc_FrTp_Autosar_requirements_Specification_ISO10681_2.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_DbgInst_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_PbcfgM_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_PduLengthType_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>lim.FrTp.EB_INTREQ_FrTp_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>The integrator must assure that the following functions do not interrupt each other:<pre>
- FrTp_TriggerTransmit
- FrTp_TxConfirmation
- FrTp_RxIndication
- FrTp_MainFunction
- FrTp_Init</pre></description>
      <rationale>This limitation reduces code size and execution time.</rationale>
      <providescoverage>
        <provcov>
          <linksto>swdd.FrTp.Preemption1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    <specobject>
      <id>lim.FrTp.EB_INTREQ_FrTp_0002</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>It must be assured that the following functions are not preempted by any other function:<pre>
- FrTp_TriggerTransmit
- FrTp_TxConfirmation
- FrTp_RxIndication</pre></description>
      <rationale>This limitation reduces code size and execution time.</rationale>
      <providescoverage>
        <provcov>
          <linksto>swdd.FrTp.Preemption2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    <specobject>
      <id>lim.FrTp.EB_INTREQ_FrTp_0003</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>FrTp_Init must not preempt any other function.</description>
      <rationale>This limitation reduces code size and execution time.</rationale>
      <providescoverage>
        <provcov>
          <linksto>swdd.FrTp.Preemption3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FRTP1000</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The code-file structure of the FrTp module shall include the file FrTp.c
      containing the source code.(BSW00380, BSW00381, BSW00419)
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>FRTP1001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The code-file structure of the FrTp module shall include the file FrTp_Lcfg.c
      containing the link time configurable parameters. (BSW00344, BSW00380,
      BSW00381, BSW00419)
      </description>
      <comment>Link time configuration is not supported (see FrTp.EB.PostBuild). </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.PostBuild</srcid><srcstatus/><internalId>656</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>FRTP1002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The code-file structure of the FrTp module shall include the file FrTp_PBcfg.c
      containing the post-build time configurable parameters.(BSW00380,
      BSW00381, BSW00404, BSW00419)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/xgen/FrTp.xgen_184</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>FRTP195</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The header file structure of the FrTp module shall include the file FrTp.h.
      </description>
      <comment>
      Regarding the inclusions of FrIf.c the EB implementation has a different approach because of
      the post build feature. This is why the requirement is refined.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP195.1</srcid><srcstatus/><internalId>417</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>FRTP1157</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      FrTp.h shall contain all data exported from the FrTp - API declarations
      (except callbacks), extern types and global data.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>FRTP1003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The header file structure of the FrTp module shall include the file FrTp_Cfg.h
      containing pre-compile time configuration parameters. (BSW00412)
      </description>
      <comment>
      - use source code tracing to verify inclusion of FrTp_Cfg.h
      - add implementation test to verify that all pre-compile symbols are defined in FrTp_Cfg.h
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrTp_Api.h_28</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_PRECOMPILE_CFG</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>FRTP1135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The header file structure of the FrTp module shall include the file FrTp_Cbk.h
      containing all callback function prototypes to be used by the lower
      layers.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1135_1</srcid><srcstatus/><internalId>10</internalId></linkedfrom><linkedfrom><srcid>FRTP1135_2</srcid><srcstatus/><internalId>11</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>FRTP1135_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The header file structure of the FrTp module shall include the file FrTp_Cbk.h
      </description>
      <comment>The FrTp_LL.c file which contains all callback function declarations shall include FrTp_Cbk.h</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrTp_Api.h_31</srcid><srcstatus/><internalId>666</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrTp_LL.c_15</srcid><srcstatus/><internalId>671</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrTp_Priv.h.m4_20</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>FRTP1135_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The file FrTp_Cbk.h shall
      contain all callback function prototypes to be used by the lower
      layers.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>FRTP1004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The header file structure of the FrTp module shall include the following  files:
       - FrIf.h – header file of FrIf,
       - MemMap.h – header file for Memory Mapping,
       - Det.h – header file of Det,
       - SchM_FrTp.h – header file of SchM declarations,
       - PduR_FrTp.h – header file of PduR,
       - Std_Types.h – header file for standard types
       - ComStack_Types.h – header file for ComStack types
       - FrTp_Types.h – header file for FrTp specific types
       - FrTp_Cfg.h – header file for configuration parameters
      (file: FRTP1004_diagram_1.png).
      </description>
      <comment>
      Regarding the inclusions of FrIf.c the EB implementation has an diffrent aproach because of
      the post build feature. This is why the requirement is refined.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1004.1</srcid><srcstatus/><internalId>13</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>FRTP1004.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
       The FrTp.c includes following headers
       - FrTp_Api.h API header file of FrTp
       - FrIf_.h  header file of FrIf,
       - MemMap.h  header file for Memory Mapping,
       - Det.h  header file of Det,
       - SchM_FrTp.h  header file of SchM declarations,
       - PduR_FrTp.h  header file of PduR,
       - Std_Types.h  header file for standard types
       - ComStack_Types.h  header file for ComStack types
       - FrTp_Types.h  header file for FrTp specific types
       - FrTp_Cfg.h  header file for configuration parameters
      </description>
      <comment>
      FrTp.c includes FrTp_Api.h instad of FrTp.h.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_INCLUDE3</srcid><srcstatus/><internalId>962</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>FRTP200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Each code (*.c) file of the FrTp module shall provide data of version
      identification as defined in chapter 10.3.(BSW004)
      </description>
      <comment>
      Conflicts with EB coding guideline [BSWM_CHK_401] (...inter-module version-checks SHALL NOT be done...).
      See:
      http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/Software_Construction/Coding_Guidelines
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.Contradicting</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>FRTP1158</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Each header (*.h) file of the FrTp module shall provide data of version
      identification as defined in chapter 10.3.
      </description>
      <comment>
      Conflicts with EB coding guideline [BSWM_CHK_401] (...inter-module version-checks SHALL NOT be done...).
      See:
      http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/Software_Construction/Coding_Guidelines
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.PublishedInformation</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>FRTP1189</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall perform inter module checks to avoid
      integration of incompatible files. The imported included files shall be
      checked by preprocessing directives.
      </description>
      <comment>
      Conflicts with EB coding guideline [BSWM_CHK_401] (...inter-module version-checks SHALL NOT be done...).
      See:
      http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/Software_Construction/Coding_Guidelines
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.PublishedInformation</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>FRTP1190</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The following version numbers shall be verified: -
      &amp;lt;MODULENAME&amp;gt;_AR_RELEASE_MAJOR_VERSION -
      &amp;lt;MODULENAME&amp;gt;_AR_RELEASE_MINOR_VERSION Where &amp;lt;MODULENAME&amp;gt; is the module
      short name of the other (external) modules which provide header files
      included by the FrTp module.
      </description>
      <comment>
      Conflicts with EB coding guideline [BSWM_CHK_401] (...inter-module version-checks SHALL NOT be done...).
      See:
      http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/Software_Construction/Coding_Guidelines
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.PublishedInformation</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>FRTP1191</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the values are not identical to the expected values, an error shall be
      reported.
      </description>
      <comment>
      Conflicts with EB coding guideline [BSWM_CHK_401] (...inter-module version-checks SHALL NOT be done...).
      See:
      http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/Software_Construction/Coding_Guidelines
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.PublishedInformation</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>FRTP208</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The code of the FrTp module (as long as it is written in C) shall conform to the
      HIS subset of the MISRA C Standard [16].(BSW007)
      </description>
      <comment>
      The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):
      http://svn.ebgroup.elektrobit.com/svn/autosar/asc_Project/trunk/doc/project/templates/Module_RFI_Checklist_template.xltx, Checks='MISRA'
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>FRTP209</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The source code of the FrTp module shall be neither compiler (tool) nor
      platform (processor) dependent.
      </description>
      <comment>
      The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):
      http://svn.ebgroup.elektrobit.com/svn/autosar/asc_Project/trunk/doc/project/templates/Module_RFI_Checklist_template.xltx,
      Checks='CMDB Test run result WINDOWS', 'CMDB Test run result lead platform'
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>FRTP210</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The code of the FrTp module (as long as it is written in C) shall indicate  all
      global data with read-only purposes by explicitly assigning the  const
      keyword.
      </description>
      <comment>
      - Add source code tracing to all global variables
      - Global variables which are not const should have a comment which indicates that they are supposed to be changed.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FrTp_Lcfg.c_23</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrTp.c.m4_33</srcid><srcstatus/><internalId>668</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrTp.c.m4_72</srcid><srcstatus/><internalId>669</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrTp.c.m4_87</srcid><srcstatus/><internalId>670</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrTp_Priv.h.m4_774</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/xgen/FrTp.xgen_225</srcid><srcstatus/><internalId>683</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>FRTP211</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The code of the FrTp module may provide macros instead of functions where
      source code is used and runtime is critical.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>FRTP212</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      All data/variables that shall be debugged and traced by AUTOSAR  Debugging have
      to be defined as global variables.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.DebugAndTrace</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>FRTP1159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Type definitions of global variables which shall be debugged and traced by
      AUTOSAR shall be accessible by the standard module header file FrTp.h.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.DebugAndTrace</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>FRTP1129</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FlexRay Transport Layer module architecture shall support configuration
      modification by a dedicated update process (e.g. flash reprogramming)(BSW05123)
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>FRTP1005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If no explicit recommendation or requirement is defined, the FrTp  module shall
      follow the specification ISO10681-2, Road vehicles –  Communication on
      FlexRay - Part 2: Communication Layer services [15].(BSW05073, BSW05083,
      BSW05084, BSW05093, BSW05095)
      </description>
      <furtherinfo>
        WRN.swurs.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ISO10681_0001</srcid><srcstatus/><internalId>508</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0002</srcid><srcstatus/><internalId>509</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0003</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0005</srcid><srcstatus/><internalId>511</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0006</srcid><srcstatus/><internalId>512</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0007</srcid><srcstatus/><internalId>513</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0008</srcid><srcstatus/><internalId>514</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_FunctionalAdressing</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_TIMEOUT_As</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Ar</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Bs</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Cr</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_ML_MISMATCH</srcid><srcstatus/><internalId>520</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_WRONG_SN</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_INVALID_FS</srcid><srcstatus/><internalId>522</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_UNEXP_PDU</srcid><srcstatus/><internalId>523</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_WFT_OVRN</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_ABORT</srcid><srcstatus/><internalId>525</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_CANCEL</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_BUFFER_OVFLW</srcid><srcstatus/><internalId>527</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_WRONG_BP</srcid><srcstatus/><internalId>528</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_ERROR</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.Priority</srcid><srcstatus/><internalId>530</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0061</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681.Segmentation</srcid><srcstatus/><internalId>532</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0062</srcid><srcstatus/><internalId>533</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0071</srcid><srcstatus/><internalId>534</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681.SeparationTime</srcid><srcstatus/><internalId>535</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0063</srcid><srcstatus/><internalId>536</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0064</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0065</srcid><srcstatus/><internalId>538</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0072</srcid><srcstatus/><internalId>539</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0066</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0067</srcid><srcstatus/><internalId>543</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0068</srcid><srcstatus/><internalId>547</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0009</srcid><srcstatus/><internalId>548</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0011</srcid><srcstatus/><internalId>549</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0012</srcid><srcstatus/><internalId>550</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0013</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0014</srcid><srcstatus/><internalId>552</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0015</srcid><srcstatus/><internalId>553</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0016</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0017</srcid><srcstatus/><internalId>555</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0018</srcid><srcstatus/><internalId>556</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0019</srcid><srcstatus/><internalId>557</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0020</srcid><srcstatus/><internalId>558</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0021</srcid><srcstatus/><internalId>559</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0022</srcid><srcstatus/><internalId>560</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0023</srcid><srcstatus/><internalId>561</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024</srcid><srcstatus/><internalId>562</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0069</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0026</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0027</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0029</srcid><srcstatus/><internalId>580</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0030</srcid><srcstatus/><internalId>581</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0031</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0032</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0033</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0034</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0035</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0036</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0037</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0038</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0041</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0043</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0042</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0044</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0045</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0046</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0047</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0048</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0049</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0050</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0051</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0052</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0053</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0055</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0057</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0059</srcid><srcstatus/><internalId>618</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0070</srcid><srcstatus/><internalId>626</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>FRTP1006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support the Fr N-PDU formats as defined in [15]
      ISO10681-2, Road vehicles – Communication on FlexRay – Part 2:
      Communication Layer services(BSW05073, BSW05083, BSW05084, BSW05093,
      BSW05095)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1005</srcid><srcstatus/><internalId>26</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>FRTP1007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      According to ISO 10681-2 [15] the FrTp module shall support an unsegmented
      unacknowledged data transfer with known message length as depict in
      Figure 5 (file: FRTP1007_figure_5.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_NACK_CONCURRENT</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_UNSEGM_NACK</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>FRTP1008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      According to ISO 10681-2 [15] the FrTp module supports an unsegmented
      acknowledged data transfer with known message length as depict in Figure 6
      (file: FRTP1008_figure_6.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEGM_ACK</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRX_BUSY_COPYRX_OK</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_BUFFOK_AFTERRETRY</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>FRTP1009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      According to ISO 10681-2 [15] the FrTp module shall support a segmented
      unacknowledged data transfer with known message length as depict in
      Figure 7 (file: FRTP1009_figure_7.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_NACK_CONCURRENT</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_SEGM_NACK</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>FRTP1010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      According to ISO 10681-2 [15] the FrTp module shall support a segmented
      acknowledged data transfer with known message length as depict in Figure
      8 (file: FRTP1010_figure_8.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_4</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_5</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>FRTP1011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      According to ISO 10681-2 [15] the FrTp module shall support a segmented
      unacknowledged data transfer with unknown message length as depict in
      Figure 9 (file: FRTP1011_figure_9.png).
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>FRTP1012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      According to ISO 10681-2 [15] the FrTp module shall support a segmented
      acknowledged data transfer with unknown message length as depict in
      Figure 10 (file: FRTP1012_figure_10.png).
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>FRTP1013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      An FrTpConnection container shall implement all parameters as  defined in
      chapter 10.2.
      </description>
      <comment>This requirement is redundant as it is fulfilled by the requirements of chapter 10.2 </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP050_Conf</srcid><srcstatus/><internalId>298</internalId></linkedfrom><linkedfrom><srcid>FRTP019_Conf</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>FRTP005_Conf</srcid><srcstatus/><internalId>302</internalId></linkedfrom><linkedfrom><srcid>FRTP025_Conf</srcid><srcstatus/><internalId>303</internalId></linkedfrom><linkedfrom><srcid>FRTP039_Conf</srcid><srcstatus/><internalId>304</internalId></linkedfrom><linkedfrom><srcid>Autosar_R20-11.ECUC_FrTp_00021</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>Autosar_R20-11.ECUC_FrTp_00010</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>FRTP1014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      For each connection link the FrTp module shall handle, a new instance of
      FrTpConnection container shall be created.
      </description>
      <comment>This requirement is redundant as it is fulfilled by the requirements of chapter 10.2 </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1013</srcid><srcstatus/><internalId>34</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>FRTP1015</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support a post build time configurable number of
      connections.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>FRTP1017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Each FrTpConnection shall have a module wide unique RemoteAddress /
      LocalAddress pair (see section 10.2).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrTp_Extension.xdm.m4_315</srcid><srcstatus/><internalId>676</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>FRTP1018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Each FrTpConnection shall have a module wide unique FRTP_SDUID (N-SDU ID) (see
      section 10.2). (BSW05077)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrTp_Extension.xdm.m4_445</srcid><srcstatus/><internalId>677</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>FRTP1019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      An FrTpTxPduPool container shall implement all parameters as defined in chapter
      10.2.9
      </description>
      <comment>This requirement is redundant as it is fulfilled by the requirements of chapter 10.2.9 </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP038_Conf</srcid><srcstatus/><internalId>330</internalId></linkedfrom><linkedfrom><srcid>FRTP024_Conf</srcid><srcstatus/><internalId>331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>FRTP1020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      A single FrTpTxPduPool can be referenced by different FrTpConnections.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>FRTP1021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      An FrTpConnectionControl Container shall implement all parameters as defined in
      chapter 10.2.
      </description>
      <furtherinfo>
        WRN.swurs.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <comment>This requirement is redundant as it is fulfilled by the requirements of chapter 10.2 </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP007_Conf</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>FRTP003_Conf</srcid><srcstatus/><internalId>312</internalId></linkedfrom><linkedfrom><srcid>FRTP012_Conf</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>FRTP013_Conf</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>FRTP015_Conf</srcid><srcstatus/><internalId>317</internalId></linkedfrom><linkedfrom><srcid>FRTP014_Conf</srcid><srcstatus/><internalId>318</internalId></linkedfrom><linkedfrom><srcid>FRTP016_Conf</srcid><srcstatus/><internalId>319</internalId></linkedfrom><linkedfrom><srcid>FRTP029_Conf</srcid><srcstatus/><internalId>320</internalId></linkedfrom><linkedfrom><srcid>FRTP017_Conf</srcid><srcstatus/><internalId>321</internalId></linkedfrom><linkedfrom><srcid>FRTP020_Conf</srcid><srcstatus/><internalId>322</internalId></linkedfrom><linkedfrom><srcid>FRTP047_Conf</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>FRTP030_Conf</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>FRTP031_Conf</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>FRTP032_Conf</srcid><srcstatus/><internalId>326</internalId></linkedfrom><linkedfrom><srcid>FRTP033_Conf</srcid><srcstatus/><internalId>327</internalId></linkedfrom><linkedfrom><srcid>FRTP034_Conf</srcid><srcstatus/><internalId>328</internalId></linkedfrom><linkedfrom><srcid>FRTP035_Conf</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>FRTP1022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      An FrTpConnectionControl container can be referenced by different
      FrTpConnections.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CON_SAMECONCTRL</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>FRTP.FrTpTxConTxPduPendingCounter</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      FrTp Tx Connection Tx Pdu Pending Counter:
      This counter counts the number of currently
      transmitted but not confirmed Fr N-PDUs of the
      active TxConnection (e.g. SF, CF, LF).
      This counter shall be incremented each time an
      FrTp Tx N-PDU is send by the FrTp.
      This counter shall be decremented each time
      an transmitted FrTp Tx N-PDU is confirmed by
      the FrIf.
      </description>
      <comment>
      A N_PDU shall be considered transmitted if FrIf_Transmit and FrTp_TriggerTransmit returned E_OK. Only
      in this case shall the Tx Pdu Pending Counter be incremented.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>FRTP.FrTpRxConTxPduPendingCounter</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      FrTp Rx Connection Tx Pdu Pending Counter:
      This counter counts the number of currently
      transmitted but not confirmed Fr N-PDUs of the
      active RxConnection (FlowControl).
      This counter shall be incremented each time an
      FrTp Tx N-PDU is send by the FrTp.
      This counter shall be decremented each time
      an transmitted FrTp Tx N-PDU is confirmed by
      the FrIf. Therefore that FrTp Rx Connection Tx Pdu
      Pending Counter toggles only between 0 and 1.
      </description>
      <comment>
      A N_PDU shall be considered transmitted if FrIf_Transmit and FrTp_TriggerTransmit returned E_OK. Only
      in this case shall the Tx Pdu Pending Counter be incremented.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>FRTP228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support concurrently work of multiple FrTpChannels.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_CONCURRENT</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_CONCURRENT_ERROR</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_NACK_CONCURRENT</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>FRTP088</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The exact number of provided channels shall be configurable by the  parameter
      FrTpChanNum (see section 10.2)
      </description>
      <comment>This requirement is redundant as it is fulfilled by the requirement FRTP004_Conf </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP004_Conf</srcid><srcstatus/><internalId>288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>FRTP1025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The runtime variable FrTpRxChannelState shall be switched from "idle" state to
      "busy" state if the channel is allocated for an Rx connection.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_UNEXPECTED_STF_SEGM</srcid><srcstatus/><internalId>802</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_UNEXPECTED_STF_UNSEGM</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_REUSE</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>FRTP1026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The runtime variable FrTpRxChannelState shall be switched from "busy" state to
      "idle" state if the channel is free after an Rx connection is closed.
      closed.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_REUSE</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>FRTP1117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The runtime variable FrTpTxChannelState shall be switched from "idle" state to
      "busy" state if the channel is allocated for an Tx connection.
      </description>
      <comment>Does not specify the module behavior. Behavior is specified by FRTP1041.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1041</srcid><srcstatus/><internalId>85</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>FRTP1118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The runtime variable FrTpTxChannelState shall be switched from "busy" state to
      "idle" state if the channel is free after an Tx connection is closed.
      </description>
      <comment>Does not specify the module behavior. Behavior is specified by FRTP1041.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1041</srcid><srcstatus/><internalId>85</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>FRTP.FullDuplex_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Normally a Full Duplex channel supports concurrent transmission and reception of Fr
      N-PDUs at the same time for the same connection.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_HALFDUPLEX</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FULLDUPLEX</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_CONCURRENT</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_ERROR</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_TIMEBR</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>FRTP.FullDuplex_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Theoretically it is possible that two ECUs transferring data to each other at the same time. That
      means that each ECU is sender and receiver concurrently. If both ECUs have only one Remote
      Address and one Local Address the FrTp shall evaluate the PCI to distinguish whether a PDU for Rx-
      Direction (CF or LF) or a PDU for Tx-direction (FC) was received
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_CONCURRENT</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>FRTP1028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall have two internal states, FRTP_OFF and FRTP_ON
      (file: FRTP1028_diagram_2.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_FrTpState</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>FRTP1029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall implement a static status variable FrTpState  to denote
      whether the FrTp module is initialized or not.
      </description>
      <comment>Duplicates FRTP1028</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1028</srcid><srcstatus/><internalId>53</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>FRTP1030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall be in the FRTP_OFF state after power up.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_FrTpState</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>FRTP1032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall change to the internal state FRTP_ON when the FrTp has
      been successfully initialized by the service primitive FrTp_Init().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_FrTpState</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>FRTP1033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall performed normal FrTp operation tasks (e.g. segmentation,
      reassembly etc.) only when the FrTp module is in the FRTP_ON state.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_Transmit</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_RxIndication</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_CONCURRENT</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>FRTP1034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive FrTp_Init shall initialize all global variables of the
      module and sets all transport protocol connections in a sub-state of
      FRTP_ON, in which neither transmissions nor receptions are in progress.
      (BSW05088)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_Rx_ReInit</srcid><srcstatus/><internalId>773</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_Tx_ReInit</srcid><srcstatus/><internalId>774</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>FRTP1035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the FrTp module is in the global state FRTP_ON, a call of the service
      primitive FrTp_Init shall return the module to an uncritical idle state
      (idle state = FRTP_ON, but neither transmission nor reception are in
      progress) and the module shall loose all current connections. (BSW05088)
      </description>
      <comment>It is assumed that FrTp_Init functions does not preempt any other FrTp API functions</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_Rx_ReInit</srcid><srcstatus/><internalId>773</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_Tx_ReInit</srcid><srcstatus/><internalId>774</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_REINIT_TC</srcid><srcstatus/><internalId>897</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>FRTP1036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall change to the internal state FRTP_OFF when the service
      primitive FrTp_Shutdown() has been executed successfully.
      </description>
      <comment>see ASCFRTP-383 Deviation: FrTp_Shutdown() is not implemented</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ShutDown</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>FRTP1120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Additionally to FRTP1035 and FRTP1036 if TransmitCancellation is enabled, all
      currently active Tx connections have to be canceled and the
      cancellations have to be reported to upper layers.
      </description>
      <comment>see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>FRTP1037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall raise an development error FRTP_E_UNINIT when a)
      development error detection for the FrTp module is enabled and b) any
      function (except FrTp_GetVersionInfo) is called before the function
      FrTp_Init has been called. (BSW05089)
      </description>
      <comment>
      This requirement relates to FrTp.EB.ASCCCB1403
      FrTp_MainFunction shall also not report FRTP_E_UNINIT
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_Transmit</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_ChangeParameter</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_CancelTransmit</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_CancelReceive</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_TriggerTransmit</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_RxIndication</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_TxConfirmation</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>FRTP.InitWithError</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If an error occurs when calling FrTp_Init the internal state (FRTP_ON or FRTP_OFF) shall stay unchanged.
      Possible errors are:
      - PbcfgM is not used and config pointer is a null pointer
      - the config pointer does not point to a valid configuration as defined in FrTp.EB.PBCFGM102
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_FrTpState</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>FRTP.BufferAccessModes_Prerequisites</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      It shall be ensured that the lower layer module calls FrTp_TriggerTransmit to fetch data ready for transmission.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrTp_Extension.xdm.m4_872</srcid><srcstatus/><internalId>680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP570</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>FRTP415</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TX_SDU_AVAILABLE flag shall exist for every channel.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>FRTP416</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TX_SDU_AVAILABLE flag shall indicate an Fr N-SDU transmit request for a
      configured connection on an allocated channel.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TX_SDU_AVAILABLE1</srcid><srcstatus/><internalId>894</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>FRTP1101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TX_SDU_UNKNOWN_MSG_LENGTH flag shall indicate an Fr N-SDU transmit request
      with unknown message length.
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>FRTP1102</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TX_SDU_UNKNOWN_MSG_LENGTH flag shall exist for every channel.
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>FRTP418</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The RX_PDU_AVAILABLE flag shall exist for every Fr N-PDU, which is  configured
      to be received by the FrTp module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP418_EB</srcid><srcstatus/><internalId>70</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>FRTP418_EB</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      The FrTp shall support consecutive calls to FrTp_RxIndication, attribute the received Pdus to the corresponding
      channel and handle the Pdu according to the channel state. Pdus shall be processed in the order in which FrTp_RxIndication
      is called, passed on to the corresponding channel and be processed one after the other.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_CONCURRENT</srcid><srcstatus/><internalId>798</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP418</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>FRTP422</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TC_REQUEST flag shall exist for every channel (twice for Full  Duplex
      channels).
      </description>
      <comment>see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>FRTP423</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TC_REQUEST flag shall be set by the service primitive call
      FrTp_CancelTransmit if the service returns E_OK.
      </description>
      <comment>see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>FRTP1104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TC_REQUEST flag shall be processed either a) before copying TxData
      (PduR_FrTpCopyTxData) or b) before sending (FrIf_Transmit or
      FrTp_TriggerTransmit) an FrTpN-PDU.
      </description>
      <comment>see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>FRTP424</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TC_REQUEST flag shall be cleared after processing the cancellation
      </description>
      <comment>see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>FRTP428</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The RX_ERROR flag shall exist for every FrTpChannel.
      </description>
      <comment>Does not specify the module behavior.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.ConcurrentErrorHandling</srcid><srcstatus/><internalId>397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>FRTP429</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The RX_ERROR flag shall indicate that an error occurred during a  segmented
      reception.
      </description>
      <comment>Does not specify the module behavior.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.ConcurrentErrorHandling</srcid><srcstatus/><internalId>397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>FRTP430</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The RX_ERROR flag shall be cleared after the reaction (Retry, Negative
      Acknowledgement, abortion).
      </description>
      <comment>Does not specify the module behavior.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.ConcurrentErrorHandling</srcid><srcstatus/><internalId>397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>FRTP136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Sending Fr N-SDU data shall always be initiated by the service primitive call
      of FrTp_Transmit (see chapter 8.3.3.1).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_1</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_1</srcid><srcstatus/><internalId>741</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>FRTP1043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall evaluate the value of PduInfoType.SduLength = 0: Transmission
      with unkown message length is requested. SduLength != 0: Transmission with known
      message length is requested.
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>FRTP1044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If support unknown message length is configured the FrTp module shall set the
      flag TX_SDU_UNKNOWN_MSG_LENGTH according to the result of FRTP1043 (see
      also chapter 7.5.1.2).
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>FRTP1134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FRTP module shall raise an development error FRTP_E_UMSG_LENGTH_ERROR when
      a) a transmission with unknown message length is detected and b) support
      of unknown message legth is not configured and c) development error
      detection is enabled for the FrTp module.
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>FRTP1038</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      An ongoing data transfer shall be signalled by the flag  TX_SDU_AVAILABLE (see
      also chapter 7.5.1.1).
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>FRTP1039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive shall set the flag TX_SDU_AVAILABLE only, if a) the
      requested FrTpTxSduId is valid  b) a free channel resource is available
      (FrTpTxChannelState =  Idle)
      </description>
      <comment>The incoming transmission request is only accept if a) the
      requested FrTpTxSduId is valid  b) a free channel resource is available
      (FrTpTxChannelState =  Idle) </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TX_REQUEST</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>FRTP1040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the current parameter FrTpTxSduId is not supported the service primitive
      FrTp_Transmit a) shall be terminated and the return value shall be set
      to E_NOT_OK (see also chapter 8.2.1) and b) the FrTp module shall raise
      an development error FRTP_E_INVALID_PDU_SDU_ID when development error
      detection for the FrTp module is enabled.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_INV_ID_FrTp_Transmit</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.Transmit.E_NOT_OK1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>FRTP1041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If no free channel is available (FrTpTxChannelState &amp;ne; Idle) the service
      primitive FrTp_Transmit shall be terminated and the return value shall
      be set to E_NOT_OK (see also chapter 8.2.1) 14 .
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_HALFDUPLEX_COMMUNICATION</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TX_REUSE</srcid><srcstatus/><internalId>902</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TRANSMIT_E_NOT_OK</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>FRTP1118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.Transmit.E_NOT_OK1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>FRTP1185</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall raise an development error FRTP_E_NO_CHANNEL when
      development error detection for the FrTp module is enabled.
      </description>
      <comment>... and no free channel is available. </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_HALFDUPLEX_COMMUNICATION</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TRANSMIT_E_NOT_OK</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.Transmit.E_NOT_OK1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>FRTP1042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Within FrTp_MainFunction:
      If the TX_SDU_AVAILABLE flag is set, the FrTp module shall call the service
      primitive PduR_FrTpCopyTxData() to get the currently available FrTp
      N-SDU Length information.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_2</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_4</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_7</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_8</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_2</srcid><srcstatus/><internalId>742</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COPYTXDATA1</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TX_SDU_AVAILABLE1</srcid><srcstatus/><internalId>894</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_STF_ZEROBUFFSIZE</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>FRTP1042_1</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_ECUConfiguration.pdf, V3.2.0</source>
      <version>1</version>
      <description>
      The TpTxSduId passed to PduR_FrTpCopyTxData shall be read from configuration
      parameter PduRDestPduHandleId if the related PduRDestPduRef and FrTpTxSduRef reference the
      same EcuC Pdu-container.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_2</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>FRTP1042_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Within FrTp_MainFunction:
      If PduR_FrTpCopyTxData returns E_NOT_OK when called with SduLength=0 the module shall
      abort the transmission and call PduR_FrTpTxConfirmation(NTFRSLT_E_NOT_OK).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_COPYTXDATAREQUEST_NOT_OK2</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_COPYTXDATAREQUEST_NOT_OK3</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>FRTP1042_3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Within FrTp_MainFunction:
      If PduR_FrTpCopyTxData returns E_BUSY when called with SduLength=0 the module shall retry to get a buffer in the
      next main function invocation until FrTpMaxBufReq is exceeded.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_STF_ZEROBUFFSIZE</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_CF_ZEROBUFFSIZE</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>FRTP1045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall always allocate the first free FrTpTxPdu while scanning
      the corresponding FrTpTxPduPool (see also chapter 7.3.2.2).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1045_1</srcid><srcstatus/><internalId>92</internalId></linkedfrom><linkedfrom><srcid>FRTP1045_2</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>FRTP1045_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      The FrTp module shall always allocate the first free FrTpTxPdu of sufficient size while scanning
      the corresponding FrTpTxPduPool (see also chapter 7.3.2.2). Sufficient size meaning greater than 8 bytes for STF/LF/FC
      and greater than 6 bytes for CF/CFEOB frames.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_2</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_4</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEGM_ACK</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RETRY_FREE_TXPDU</srcid><srcstatus/><internalId>917</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>FRTP1045_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      If no free FrTpTxPdu of sufficient size is available, the FrTp module shall retry to allocate a TxPdu in the next main function invocation.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RETRY_FREE_TXPDU</srcid><srcstatus/><internalId>917</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>FRTP1068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>FRTP1046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If a free FrTpTxPdu is identified, the FrTp module shall use this  FrTpTxPdu to
      continue current transmission process.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_2</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_4</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEGM_ACK</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>FRTP1047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If no free FrTpTxPdu is identified, the FrTp module shall stop processing for
      the corresponding connection within the current task.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_NOFREE_TXPDU</srcid><srcstatus/><internalId>738</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>FRTP1048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall decide whether segmentation for the requested N-SDU
      transfer is required or not depending on the length information of the
      first allocated FrTpTxPdu from an FrTpTxPduPool for the currently
      processed FrTpConnection (see also Diagram 3) (file: FRTP1042_diagram_3.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEGM_ACK</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>FRTP1123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall call the service primitive PduR_FrTpCopyTxData() to copy
      the currently available FrTp N SDU data with a length of FrTpTxPdu length
      to the corresponding transmit buffer.
      </description>
      <comment>
      according to ASCFRTP-517: Synchronous statemachine processing, data shall be copied within
      FrTp_TriggerTransmit instead of FrTp_MainFunction
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_5</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>FRTP1049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall prepare the Address Information and PCI according to the
      result of FRTP1048 as defined in specification ISO 10681-2 [15].
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_5</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_6</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_8</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_5</srcid><srcstatus/><internalId>745</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_6</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_8</srcid><srcstatus/><internalId>748</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_2</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_6</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR_ABT</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_BC_SETTINGS</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_RETRY</srcid><srcstatus/><internalId>887</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_DIFF_ML</srcid><srcstatus/><internalId>930</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_SEGM_NACK</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>FRTP1050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall initiate an N-PDU data transfer by calling the  service
      primitive FrIf_Transmit() with the FrTpTxPduId FrTpTxPduId of the
      recently allocated FrTpTxPdu.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_2</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_7</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_2</srcid><srcstatus/><internalId>742</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_7</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_8</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>FRTP1051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp shall set the corresponding data length referenced by the  service
      primitive FrIf_Transmit's parameter PduInfoType to the exact data
      length of the buffer.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_2</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_2</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>FRTP1052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive FrTp_TxConfirmation shall be called by the underlying
      layer module after a successful transmission of the corresponding N-PDU.
      </description>
      <comment>It shall be ensure that FrIf is configured to call FrTp_TxConfirmation.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrTp_Extension.xdm.m4_868</srcid><srcstatus/><internalId>679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP570</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>FRTP1053</id>
      <status>approved</status>
      <source>AUTOSAR Bugzilla RfC #55212</source>
      <version>2</version>
      <description>
      The service primitive FrTp_TxConfirmation shall be called by the underlying
      layer module with the corresponding FrTpTxConfirmationPduId of the successful
      transmitted PDU.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_UNSEGM_NACK</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>FRTP1054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive FrTp_TxConfirmation shall reset the state of  the
      corresponding FrTpTxPdu (N-PDU) to "idle".
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>FRTP1055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall implement a timing and timeout behaviour as  defined in
      chapter 7.5.8
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1099</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>FRTP1100</srcid><srcstatus/><internalId>195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>FRTP1056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall free the allocated channel (FrTpTxChannelState = Idle) if
       a) all Tx N-SDU data are transmitted and b) FrTp_TxConfirmation was
      given and c) the final acknowledge is received in case acknowledge is
      configured.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TX_REUSE</srcid><srcstatus/><internalId>902</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_REUSE_TX_NACK</srcid><srcstatus/><internalId>941</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>FRTP1057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall reset the flag TX_SDU_AVAILABLE, if: a) all N-SDU data
      are transmitted and b) FrTp_TxConfirmation was given and c) the final
      acknowledge is received in case acknowledge is configured.
      </description>
      <comment>
      TX_SDU_AVAILABLE flag shall be cleared and hence new transmission requests shall be
      accepted only after PduR_TxConfirmation has been called (see ASCFRTP1058)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TX_SDU_AVAILABLE1</srcid><srcstatus/><internalId>894</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_REUSE_TX_NACK</srcid><srcstatus/><internalId>941</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>FRTP1124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall reset the flag TX_SDU_UNKNOWN_MSG_LENGTH, if: a) all
      N-SDU data are transmitted and b) FrTp_TxConfirmation was given and c)
      the final acknowledge is received in case acknowledge is configured or
      d) if transmission was aborted and FrTp_TxConfirmation was given.
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>FRTP1058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall call the service primitive PduR_FrTpTxConfirmation for
      the corresponding FrTpTxSduId if a) all N-SDU data are transmitted and
      b) FrTp_TxConfirmation was given c) the final acknowledge is received in
      case acknowledge is configured.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_9</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_SEGM_ACK</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_9</srcid><srcstatus/><internalId>749</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>FRTP1058_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TpTxSduId passed to PduR_FrTpTxConfirmation shall be read from configuration
      parameter PduRDestPduHandleId if the related PduRDestPduRef and FrTpTxSduRef reference the
      same EcuC Pdu-container.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEGM_ACK</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_NO_RETRY</srcid><srcstatus/><internalId>940</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>FRTP1059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive FrTp_TriggerTransmit shall be called by the  FrIf module
      to propagate FrTp N-PDUs to the lower layers (e.g. FlexRay Driver).
      </description>
      <comment>It shall be ensured that FrIf calls FrTp_TriggerTransmit to copy data.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrTp_Extension.xdm.m4_872</srcid><srcstatus/><internalId>680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP570</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>FRTP1060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive FrTp_TriggerTransmit shall copy the Address Information,
      PCI and N-SDU data to the corresponding buffer, which is referenced by the
      service primitive parameter PduInfoType.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_7</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEGM_ACK</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_7</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_8</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>FRTP1060_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      The service primitive FrTp_TriggerTransmit shall return E_NOT_OK if the requested number of bytes have not been copied.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TRIGGER_TRANSMIT_NOTOK_STF</srcid><srcstatus/><internalId>918</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TRIGGER_TRANSMIT_NOTOK_CF</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>FRTP1061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive FrTp_TriggerTransmit shall set the corresponding data
      length referenced by the service primitive parameter PduInfoType to the
      exact data length of the buffer.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_3</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_2</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_6</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>FRTP1062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The functionality to support data transmission with unknown message length
      shall be configurable by compiler switch.
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>FRTP1063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If a 1:n connection is configured (parameter FRTP_MULTIPLE_RECEIVER_CON is
      set), a Data transfer with unknown message length shall not be processed
      19 and the service primitive call FrTp_Transmit shall be rejected with
      the return value E_NOT_OK.
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>FRTP1187</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall raise an development error FRTP_E_SEG_ERROR when  a)
      development error detection for the FrTp module is enabled and  b) a 1:n
      connection is requested as described in FRTP1061.
      </description>
      <comment>a 1:n connection is requested if FrTpMultipleReceiverCon is configured to true.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TX_MULTIPLE_RECEIVER_CON</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>FRTP1064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      An upper layer's data transmission with unknown message length shall  be
      initiated by an calling the service primitive FrTp_Transmit with the
      service primitive parameter PduLength = 0 ('zero')
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>FRTP1065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      During an ongoing data transfer with unknown message length the service
      primitive parameter Length of the service primitive
      PduR_FrTpCopyTxData() shall be set to the value of the currently  stored
      Tx-Buffer’s data bytes.
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>FRTP1066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      An ongoing upper layer's data transmission with unknown message length shall
      be finished, if the parameter length within the service primitive is set
      to 0 ('zero').
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>FRTP1067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall add all PduInfoType.PduLength values to calculate the
      total message length which is transmitted by the LastFrame (LF).
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>FRTP1068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the FrTpConnectionControl parameter FRTP_MULTIPLE_RECEIVER_CON (see section
      10.2) for the corresponding FrTpConnection is set, the communication
      handler shall not process a segmentation of an N-SDU and shall skip
      processing the corresponding FrTpConnection within the current task.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1045_2</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>FRTP137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Receiving shall be initiated by the service primitive call FrTp_RxIndication.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>FRTP1069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall process a received FrTp N-PDU only if a) a valid
      FrTpRxPduId is received and b) the FrTp N-PDU's address information
      matches to the configured FrTpConnection address information.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1069_a</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>FRTP1069_b</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>FRTP1069_a</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall process a received FrTp N-PDU only if  a) a valid
      FrTpRxPduId is received.
      </description>
      <comment> see ASCFRTP-390: Deviation: An invalid FrTpRxPduId in function FrTp_RxIndication is not detected</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxPduIdErrChk</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>FRTP1069_b</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall process a received FrTp N-PDU only if the FrTp N-PDU’s address information
      matches to the configured  FrTpConnection address information.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_INVALID_ADDR</srcid><srcstatus/><internalId>815</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>FRTP1070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If an invalid (undefined) FrTpRxPduId is received the FrTp module  shall  a)
      ignore the FrTp N-PDU and  b) shall raise an development error
      FRTP_E_INVALID_PDU_SDU_ID  when development error detection for the FrTp
      module is enabled.
      </description>
      <comment> see ASCFRTP-390: Deviation: An invalid FrTpRxPduId in function FrTp_RxIndication is not detected</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxPduIdErrChk</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>FRTP1071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      A matching FrTpConnection is only identified if c) the received FrTp N-PDU's
      "Target Address" (see ISO 10681-2) is equal to the configured
      FrTpConnection's Local Address (FrTpLa, see section 10.2) and d) the
      received FrTp N-PDU's "Source Address" (see ISO 10681-2) is equal
      to the configured FrTpConnection's Remote Address (FrTpRa, see section
      10.2).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_CONCURRENT</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_ADDRESS_CHECK</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>FRTP1072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the address check doesn't match to any configured FrTpConnection the
      received FrTp N-PDU shall be ignored.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_CONCURRENT</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM_IGNORED</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_ADDRESS_CHECK</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <specobject>
      <id>FRTP1074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive shall set the flag RX_PDU_AVAILABLE only, if a) the
      requested FrTpRxPduId is valid and b) the address check matches to a
      configured FrTpConnection and c) a free channel resource is available
      (FrTpRxChannelState = Idle)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1074_a</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>FRTP1074_b</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>FRTP1074_c</srcid><srcstatus/><internalId>132</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>FRTP1074_a</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive shall set the flag RX_PDU_AVAILABLE only, if the
      requested FrTpRxPduId is valid
      </description>
      <comment> see ASCFRTP-390: Deviation: An invalid FrTpRxPduId in function FrTp_RxIndication is not detected</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxPduIdErrChk</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>FRTP1074_b</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive shall set the flag RX_PDU_AVAILABLE only, if the address check matches to a
      configured FrTpConnection
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_CONCURRENT</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_ADDRESS_CHECK</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>FRTP1074_c</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The service primitive shall set the flag RX_PDU_AVAILABLE only, if a free channel resource is available
      (FrTpRxChannelState =  Idle)
      </description>
      <comment>According to ISO10681_2 Table 33 another STF cancels an active reception and establishes a new one. </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.Contradicting</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>FRTP1075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the current parameter FrTpRxPduId is not supported the service  primitive
      FrTp_RxIndication shall be terminated without any further action.
      </description>
      <comment> see ASCFRTP-390: Deviation: An invalid FrTpRxPduId in function FrTp_RxIndication is not detected</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxPduIdErrChk</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>FRTP1076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If no free channel is available (FrTpRxChannelState ≠ Idle) the service
      primitive FrTp_RxIndication shall be terminated without any further
      action.
      </description>
      <comment>According to ISO10681_2 Table 33 another STF cancels an active reception and establishes a new one. </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.Contradicting</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>FRTP1186</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall raise an development error FRTP_E_NO_CHANNEL when
      development error detection for the FrTp module is enabled
      </description>
      <comment>According to ISO10681_2 Table 33 another STF cancels an active reception and establishes a new one. </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.Contradicting</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>FRTP1077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      Within the service primitive FrTp_RxIndication the FrTp module shall copy the
      received StartFrame PDU into a local buffer.

      Only the received StartFrame PDU shall be stored temporary in a local buffer.
      This is necessray in case of a gateway has temporary no free resources to process that
      frame. The correct protocol and timing behavour is ensured if FrTp sends a FlowControl PDU after a free channel was allocated.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.FRTP1077_SOF_BUSY</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1077_SOF_LOW</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1077_1_Enhancement</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1077_1b_Enhancement</srcid><srcstatus/><internalId>383</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>FRTP1078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If a new connection is established, the FrTp module shall call the service
      primitive PduR_FrTpStartOfReception with the corresponding FrTpRxSduId
      and the expected data length to indicate start of data reception for an
      upper layer.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STARTOFRECEPTION</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_STFA_MAXRN</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_SOR_OK_COPYRX_OK_CLB</srcid><srcstatus/><internalId>859</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_NACK_CONCURRENT</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>FRTP1080</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If transmission of an N-PDU response is required by ISO10681-2  protocol
      handling, the FrTp module shall send the corresponding N PDU (e.g.
      FlowControl) to the initial sender node.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_2</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_CONCURRENT</srcid><srcstatus/><internalId>798</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>FRTP1080_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      In that case the FrTp module
      shall allocate the first free N-PDU from the referenced PDU pool, prepare the
      response and initiate the transmission process by a service primitive call
      FrIf_Transmit with the corresponding FrTpTxPduId
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_FC_TXPDU</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>FRTP1080_3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      After transmission the FrTp
      module shall wait for reception of consecutive N-PDUs.
      </description>
      <comment>'After transmission' meaning after FrTp_TxConfirmation was called for the transmitted FC N-PDU</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_RETRY_2</srcid><srcstatus/><internalId>817</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_FC_TXPDU</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>FRTP1080_4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If no N-PDU response is
      required by protocol the FrTp module shall continue reception handling.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_DIFF_ML</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>FRTP1079</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall extract the N-SDU data from the received N PDU data
      according to ISO 10681-2
      </description>
      <comment>
      This requirement shall just specify how data is extracted from STF/CF/CFEOB/LF frames. Interpretation and
      handling of PCI bytes is specified by ISo requirements.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_4</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_5</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_6</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>FRTP1138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall initiate the copy process of the received N-SDU
      (fragment) by calling the service primitive PduR_FrTpCopyRxData.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COPYRXDATA</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_SOR_OK_COPYRX_OK_CLB</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>FRTP421</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The RX_PDU_AVAILABLE flag shall be cleared when finished processing the Fr
      N-PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP421_EB</srcid><srcstatus/><internalId>145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>FRTP421_EB</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      Calls to FrTp_RxIndication shall be independent from each other for different RxPduIds.
      Especially, data indications from different source addresses within one main function cycle shall be processed correctly.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_CONCURRENT</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_FC_TXPDU</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>FRTP1081</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall free the allocated channel (FrTpRxChannelState = Idle) if
      a) all N-SDU data are received and b) all required response N-PDUs
      (FlowControl) are transmitted and TxConfirmation was given.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_HALFDUPLEX_COMMUNICATION</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>FRTP1083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall call the service primitive PduR_FrTpRxIndication if  a)
      all N-SDU data are received and b) all required response N-PDUs
      (FlowControl) are transmitted and TxConfirmation was given.
      </description>
      <comment>PduR_FrTpRxIndication shall be called with notification result NTFRSLT_OK</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_6</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_SOR_OK_COPYRX_OK_CLB</srcid><srcstatus/><internalId>859</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_NACK_CONCURRENT</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>FRTP1180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>2</version>
      <description>
      If development error detection is enabled: The function FrTp_CancelReceive shall
      check the parameter FrTpRxSduId for being valid. If the check for
      FrTpRxSduId fails, the function shall raise the development error
      FRTP_E_INVALID_PDU_SDU_ID and return E_NOT_OK.
      </description>
      <comment>see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.CancelReceive.E_NOT_OK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>FRTP1181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp shall abort the reception of the current N-SDU if the service
      FrTp_CancelReceive provides a valid FrTpRxSduId.
      </description>
      <comment>see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.CancelReceive.E_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>FRTP1182</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp shall reject the request for receive cancellation in case of an a)
      unsegmented reception or b) in case the FrTp is in the process of
      receiving the LastFrame of the N-SDU and shall return E_NOT_OK.
      </description>
      <comment>see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>FRTP1183</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the FrTp_CancelReceive service has been successfully executed the FrTp shall
      call the PduR_FrTpRxIndication with notification result
      NTFRSLT_E_CANCELATION_OK.
      </description>
      <comment>see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>FRTP1184</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If a data reception with unknown message length shall be established, the FrTp
      shall call the API PduR_StartOfReception () with an expected data length
      of zero ("0").
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported  </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>FRTP1084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      For Tx direction the FlexRay Transport Protocol Layer shall support  a)
      "Immediate Buffer Access" mode and b) "Decoupled Buffer Access"
      mode.
      </description>
      <comment>see ASCFRTP-385 Deviation: Transmission with immediate buffer access is not supported  </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.BufferAccessModes</srcid><srcstatus/><internalId>649</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>FRTP399</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If a reception is being started, the FrTp module shall state the N-SDU  length
      it expects within the request of service primitive
      PduR_FrTpStartOfReception.
      </description>
      <comment>'N-SDU length' being the message length as indicated in the start frame</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STARTOFRECEPTION</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_NACK_CONCURRENT</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>FRTP400</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If a reception is being started and a new buffer is requested, the FrTp  module
      shall call the service primitive PduR_FrTpCopyRxData.
      </description>
      <comment>
      Requirement correction:
      If data is received the FrTp module shall pass the data to the PduR calling
      service primitive PduR_FrTpCopyRxData.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COPYRXDATA</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_4</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_5</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>FRTP405</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If service primitive's PduR_FrTpStartOfReception or PduR_FrTpCopyRxData return
      BufRequest_ReturnType value as BUFREQ_E_NOT_OK, then FrTp module shall 1)
      abort reception and 2) send an N-PDU FlowControl.ABT.
      </description>
      <comment>
      PduR_FrTpRxIndication shall not be called.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP405_1</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>FRTP405_2</srcid><srcstatus/><internalId>158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>FRTP405_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If service primitive PduR_FrTpStartOfReception return
      BufRequest_ReturnType value as BUFREQ_E_NOT_OK, then FrTp module shall 1)
      abort reception and 2) send an N-PDU FlowControl.ABT.
      </description>
      <comment>
      PduR_FrTpRxIndication shall not be called.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STARTOFRECEPTION_NOT_OK</srcid><srcstatus/><internalId>786</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_BUFREQ_E_NOT_OK</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>FRTP405_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If service primitive PduR_FrTpCopyRxData return
      BufRequest_ReturnType value as BUFREQ_E_NOT_OK, then FrTp module shall 1)
      abort reception and 2) send an N-PDU FlowControl.ABT.
      </description>
      <comment>
      This requirement is applicable to every possible call to PduR_FrTpCopyRxData, i.e. when copying data of a STF, first CF of a block,
      consecutive CF of a block, CFEOB and LF, independent of the available buffer size previously returned by the PduR.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_CF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_CFEOB_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>838</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_STF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_INTCF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <specobject>
      <id>FRTP1160</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If service primitive's PduR_FrTpStartOfReception or PduR_FrTpCopyRxData return
      BufRequest_ReturnType value as BUFREQ_E_BUSY, then FrTp module shall 1)
      try up to FrTpMaxFcWait (see section 10.2) times to get a valid buffer
      and 2) shall send an N-PDU FlowControl.WAIT.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.FRTP1160_1</srcid><srcstatus/><internalId>394</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1160_1b</srcid><srcstatus/><internalId>395</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>FRTP1161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If service primitive’s PduR_FrTpStartOfReception or PduR_FrTpCopyRxData return
      BufRequest_ReturnType value as BUFREQ_E_OVFL, then FrTp module shall
      1) abort reception and 2) shall send an N-PDU FlowControl.OVFL.
      </description>
      <comment>
      PduR_FrTpRxIndication shall not be called.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1161_1</srcid><srcstatus/><internalId>161</internalId></linkedfrom><linkedfrom><srcid>FRTP1161_2</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>FRTP1161_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If service primitive PduR_FrTpStartOfReception return
      BufRequest_ReturnType value as BUFREQ_E_OVFL, then FrTp module shall
      1) abort reception and 2) shall send an N-PDU FlowControl.OVFL.
      </description>
      <comment>
      PduR_FrTpRxIndication shall not be called.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STARTOFRECEPTION_OVFL</srcid><srcstatus/><internalId>787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>FRTP1161_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If service primitive PduR_FrTpCopyRxData does not return BUFREQ_OK or BUFREQ_E_BUSY
      then FrTp module shall
      1) abort reception and 2) shall send an N-PDU FlowControl.ABT.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_CF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_CFEOB_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>838</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_STF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_INTCF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>FRTP1136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      In case of a BufRequest_ReturnType = BUFREQ_E_BUSY a retry shall  be performed
      at the next FrTp_MainFunction invocation.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.FRTP1136_SOF_BUSY</srcid><srcstatus/><internalId>385</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1136_SOF_LOW</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1136_1c</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1136_1d</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1136_1e</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1136_1_Enhancement</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1136_1b_Enhancement</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1136_2_Enhancement</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.FRTP1136_1f</srcid><srcstatus/><internalId>393</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>FRTP412</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall use an N-PDU FlowControl parameter &amp;lt;Buffer Size&amp;gt;
      depending on the size of the provided RxBuffer (returned by the service
      primitive call PduR_FrTpStartOfReception or PduR_CopxRxData), to ensure
      that the transferred data bytes within an upcoming block could be stored
      into the provided receive buffer.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP412_EB</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>FRTP402</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>2</version>
      <description>
      If the call for a TxBuffer (service primitive PduR_FrTpCopyTxData) does not
      provide a valid buffer and if service primitive notification result type
      value is BUFREQ_E_BUSY, then FrTp module shall try up to FrTpMaxFcWait
      times to get a valid buffer.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP402_EB</srcid><srcstatus/><internalId>166</internalId></linkedfrom><linkedfrom><srcid>FRTP402_EB.Broadcast</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>FRTP402_EB</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>2</version>
      <description>

      If the PduR returns an available buffer size of zero no TxPdu shall be allocated. Instead it shall be retried in the
      next main function invocation until a buffer is available or FrTpMaxBufReq is exceeded.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_STF_ZEROBUFFSIZE</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_CF_ZEROBUFFSIZE</srcid><srcstatus/><internalId>922</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_STF_UNSEG_ZEROBUFFSIZE</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP402</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>FRTP402_EB.Broadcast</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>2</version>
      <description>
      If the PduR returns an available buffer size greater than zero but lesser than the ML for
      a broadcast transmission the module shall retry in the next main function invocation until a
      buffer is available or FrTpMaxBufReq is exceeded.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_BROADCAST_BUFFERINSUFFICIENT</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP402</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>FRTP1162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the call for a TxBuffer (service primitive PduR_FrTpCopyTxData) does not
      provide a valid buffer and if service primitive notification result type
      value is BUFREQ_E_NOT_OK, then FrTp module shall abort the transfer.
      </description>
      <comment>
      Requirement correction:
        If the call to PduR_FrTpCopyTxData results in service primitive notification result
        value is BUFREQ_E_NOT_OK, then FrTp module shall abort the transfer.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_COPYTXDATAREQUEST_NOT_OK1</srcid><srcstatus/><internalId>910</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_COPYTXDATAREQUEST_NOT_OK2</srcid><srcstatus/><internalId>911</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>FRTP1088</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      All FrTp Tx N-PDUs within an FrTpTxPduPool shall be listed in ascending order
      depending on their position within the global N-PDU network plan.

      ECU specific N-PDU plan means that each N-PDU (uniquely identified by its N-PDU-ID) is mapped
      to an L-PDU. Each L-PDU is uniquely identified by its parameter set “slot-ID”, “cycle counter” and
      “cycle offset”. Hence all N-PDUs have an implicit order too.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_4</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_PDU_ORDER</srcid><srcstatus/><internalId>751</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>FRTP1089</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Each FrTp Tx N-PDU within an FrTpTxPduPool could have an individual length.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>FRTP1090</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Each FrTpChannel shall implement a runtime variable TxPduPendingCounter (see
      chapter 7.3.3.2).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>FRTP1091</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TxPduPendingCounter shall be incremented each time the service primitive
      FrIf_Transmit was terminated with the return value E_OK for the
      corresponding FrTp Tx N-PDU (FrTpTxPduId).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>FRTP1092</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TxPduPendingCounter shall be decremented each time the service primitive
      FrTp_TxConfirmation was called with the corresponding parameter
      FrTpTxConfirmationPduId.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <specobject>
      <id>FRTP1093</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      A TxConfirmation shall be given for each transmitted N-PDU by the  underlying
      layer module by calling the corresponding service primitive
      FrTp_TxConfirmation with the corresponding FrTpTxPduId.
      </description>
      <comment>It shall be snured that the FrIf is configured accordingly.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrTp_Extension.xdm.m4_868</srcid><srcstatus/><internalId>679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP570</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>FRTP1094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      An active FrTpConnection (referenced by FrTpCannel) shall only processed if the
      TxPduPendingCounter of the corresponding FrTpChannel is zero ("0") at
      begin of a communication handler task.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>FRTP1095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the TxPduPendingCounter is unequal to zero ("0") the processing for the
      corresponding FrTpConnection shall skipped for the current communication
      handler task.
      </description>
      <comment>
      Correction:
      If the TxPduPendingCounter is unequal to zero ("0") the processing for the
      corresponding FrTpChannel shall be skipped for the current communication
      handler task. Other FrTpChannels which have TxPduPendingCounter equal zero shall be processed.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>FRTP1096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      A communication handler task shall process all active FrTpConnections
      alternately as long as free FrTp Tx N-PDUs are available within the
      referenced FrTpTxPduPool.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1096_EB</srcid><srcstatus/><internalId>419</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>FRTP1097</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The "Transmit Cancellation" feature shall be (de)activated by static
      configuration of the FrTp parameter FrTpTransmitCancellation (see
      section 10.2).
      </description>
      <comment> see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>FRTP384</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      A Transmit Cancellation request shall initiated by the call of the service
      primitive FrTp_CancelTransmit (see FRTP150).
      </description>
      <comment> see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>FRTP1116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      A transmit cancellation shall be confirmed by the call of the service  primitive
      PduR_FrTpTxConfirmation and the notification result
      NTFRSLT_E_CANCELLATION_OK. (please refer to [6])
      </description>
      <comment> see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>FRTP385</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The call of service primitive FrTp_CancelTransmit (see FRTP150) shall
      set the TC_REQUEST flag (see Section 7.5.1.4) of the corresponding
      connection.
      </description>
      <comment> see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>FRTP386</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The TC_REQUEST flag (see Section 7.5.1.4) shall be checked at the sender side
      each time before starting the processing task for an active connection
      (i.e. FrTp_MainFunction() and FrTp_TriggerTransmit() ).
      </description>
      <comment> see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>FRTP242</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall change the ISO10681-2 FlowControl PDU parameter(s) of
      BandwidthControl (BC) a) FrTpSCexp (please refer to ISO 10681-2) b)
      FrTpMaxNbrOfNPduPerCycle (please refer to ISO 10681-2) during runtime if
      the corresponding API service primitive FrTp_ChangeParameter is called.
      </description>
      <comment>
      see ASCFRTP-457: FrTp_ChangeParameter API is not implemented.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ChangeParameter</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>FRTP1115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      A change parameter request during an ongoing reception shall be terminated by
      the service primitive call PduR_FrTpChangeParameterConfirmation with
      result value &amp;lt;NTFRSLT_E_RX_ON&amp;gt; (see chapter 8.2.1.2).
      </description>
      <comment>
      see ASCFRTP-457: FrTp_ChangeParameter API is not implemented.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ChangeParameter</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>FRTP1156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall use the new BandwidthControl parameters for the
      corresponding connection if the change was successfully executed.
      </description>
      <comment>
      see ASCFRTP-457: FrTp_ChangeParameter API is not implemented.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ChangeParameter</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>FRTP1099</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support the different timers and their start/stop
      conditions for communication handling as defined in Figure 22, Figure 23
      and Table 2 (file: FRTP1099_figure_22.png, FRTP1099_figure_23.png and
      FRTP1099_table_2.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1099_As</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>FRTP1099_Ar</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>FRTP1099_Bs</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>FRTP1099_Br</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>FRTP1099_Cr</srcid><srcstatus/><internalId>194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>FRTP1099_As</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
     FRTP_TIME_AS: Time for transmission of any FRTp N-PDU on the sender side.
     Timer Start Condition: first successful FrIf_Transmit()
     Timer Stop Condition: last FrTp_TxConfirmation
     Applicable to: STF, CF, CFEOB, LF
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_AS_TIMEOUT_CF</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_AS_TIMEOUT_LF</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_TIMEOUT_AS</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>FRTP1099_Ar</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
     FRTP_TIME_AR: Time for transmission of FlowControl FrTp N-PDU on the receiver side.
     Timer Start Condition: successful FrIf_Transmit()
     Timer Stop Condition: FrTp_TxConfirmation
     Applicable to: all FC frames
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_AR_TIMEOUT_FC_CFEOB</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_AR_TIMEOUT_FC_LF</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_TIMEOUT_AR</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>FRTP1099_Bs</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

     FRTP_TIME_BS: Time until reception of the next FlowControl N-PDU.
     Timer Start Condition: FrTp_TxConfirmation (STF),FrTp_RxIndication (FC),FrTp_TxConfirmation (CF),FrTp_TxConfirmation (LF)
     Timer Stop Condition: FrTp_RxIndication (FC)

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_BS_TIMEOUT_CTS</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BS_TIMEOUT_ACK</srcid><srcstatus/><internalId>716</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_TIMEOUT_BS</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_FC_WAIT</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>FRTP1099_Br</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
     FRTP_TIME_BR:
     - Minimum time until transmission of the next FlowControl WAIT N-PDU.
     - Maximum time until transmission of the next FlowControl CTS N-PDU.
     Timer Start Condition: FrTp_RxIndication (STF),FrTp_TxConfirmation (FC),FrTp_RxIndication (CF),FrTp_RxIndication (LF)
     Timer Stop Condition: FrIf_Transmit (FC)
      </description>
      <comment>
      see deviation ...
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_WFTMax_2</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_ERROR_PRIORITY_RX_2</srcid><srcstatus/><internalId>835</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TimeBr_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>2</version>
      <description>

     If PduR_FrTpCopyRxData returns BUFREQ_OK and AvailableBuffer=0:
     The module shall retry with the call of PduR_FrTpCopyRxData with each MainFunction cycle, till FRTP_TIME_BR. If the FRTP_TIME_BR is elapsed and AvailableBuffer is 0, FC WAIT frame shall be sent.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_TIMEBR</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TimeBr_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>2</version>
      <description>

      If PduR_FrTpCopyRxData returns BUFREQ_OK and AvailableBuffer=0:
      If sent FC WAIT count has reached FrTpMaxFCWait , the module shall retry with call of PduR_FrTpCopyRxData till FRTP_TIME_BR and if the AvailableBuffer is 0, FC ABORT is sent and the PduR is notified with result NTFRSLT_E_WFT_OVRN.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_TIMEBR</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TimeBr_3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>2</version>
      <description>

     If PduR_FrTpCopyRxData returns BUFREQ_OK and AvailableBuffer=0:
     If FrTpMaxFCWait is zero, the module shall retry with PduR_FrTpCopyRxData call for FRTP_TIME_BR and abort the reception by sending FC ABT if the AvailableBuffer was 0 and notify the PduR with result NTFRSLT_E_WFT_OVRN.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_WFTMax_2</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>FRTP1099_Cr</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
     FRTP_TIME_CR: Time until reception of the next ConsecutiveFrame N-PDU.
     Timer Start Condition: FrTp_TxConfirmation (FC),FrTp_RxIndication (CF)
     Timer Stop Condition: FrTp_RxIndication (CF),FrTp_RxIndication (LF)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_TIMEOUT_CR</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>FRTP1100</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support the communication timeout behavior as  defined in
      Table 3 (FRTP1100_table_3.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1100_As</srcid><srcstatus/><internalId>196</internalId></linkedfrom><linkedfrom><srcid>FRTP1100_Ar</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>FRTP1100_Bs</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>FRTP1100_Cr</srcid><srcstatus/><internalId>199</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>FRTP1100_As</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
        FRTP_TIMEOUT_AS
        Any FrTp N-PDU not transmitted in time on the sender side.
        Abort message transmission.
        issue PduR_FrTpTxConfirmation with the corresponding FrTpTxSduId and Std_ReturnType = E_NOT_OK.
      </description>
      <comment>
      see deviation ASCFRTP-540: FrIf_CancelTransmit is not called
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_AS_TIMEOUT_STF</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_AS_TIMEOUT_CF</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_AS_TIMEOUT_LF</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_TIMEOUT_AS</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>FRTP1100_Ar</id>
      <status>approved</status>
      <source>RfC #57682</source>
      <version>1</version>
      <description>
        FRTP_TIMEOUT_AR
        Any FrTp FC N-PDU not transmitted in time on the receiver side.
        Abort message transmission.
        a) free the FrTpTxPdu.
        b) issue PduR_FrTpTxConfirmation with the corresponding FrTpTxSduId and Std_ReturnType = E_NOT_OK.
      </description>
      <comment>
      As this applies for the receiver side, it is assumed that PduR_FrTpRxIndication shall be called.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_AR_TIMEOUT</srcid><srcstatus/><internalId>709</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_AR_TIMEOUT_FC_CFEOB</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_AR_TIMEOUT_FC_LF</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_TIMEOUT_AR</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>FRTP1100_Bs</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
        FRTP_TIMEOUT_BS
        FlowControl N-PDU not received (lost, overwritten) on the sender side.
        Abort message transmission and issue PduR_FrTpTxConfirmation with the corresponding FrTpTxSduId
        and Std_ReturnType = E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_BS_TIMEOUT_CTS</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BS_TIMEOUT_WAIT</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BS_TIMEOUT_ACK</srcid><srcstatus/><internalId>716</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_TIMEOUT_BS</srcid><srcstatus/><internalId>889</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>FRTP1100_Cr</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
        FRTP_TIMEOUT_CR
        ConsecutiveFrame or Last Frame N-PDU not received (lost, overwritten) on the receiver side.
        Abort message reception and issue PduR_FrTpRxIndication with the corresponding FrTpRxSduId and
        Std_ReturnType = E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_CR_TIMEOUT_LF</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_CR_TIMEOUT_CF</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_TIMEOUT_CR</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>FRTP1105</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support the counters and corresponding limits  as defined
      in Table 4: FrTp Counter (file: FRTP1105_table_4.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP_COUNTER_FCWT</srcid><srcstatus/><internalId>203</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_FRIF</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_AR</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_AS</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_RX_RN</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>FRTP1114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Each FrTp Counter shall be limited by a max value as defines in Table 4
      (file: FRTP1105_table_4.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP_COUNTER_FCWT</srcid><srcstatus/><internalId>203</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_FRIF</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_AR</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_AS</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_RX_RN</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>FRTP1113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If a counter of has been reached, the FrTp module shall react as  defined in
      Table 5 (file: FRTP1113_table_5.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP_COUNTER_FCWT</srcid><srcstatus/><internalId>203</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_FRIF</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_AR</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_AS</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_RX_RN</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>FRTP_COUNTER_FCWT</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      COUNTER_FCWT
      On receiver site: Counts the number of transmittes FlowControl.Wait frames
      Limit: FrTpMaxFCWait
      Handling if counter has been reached: Abort transmission
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_TIMEBR</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FRTP1113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>FRTP1114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>FRTP_COUNTER_FRIF</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      COUNTER_FRIF
      Counts the attempts to send an Fr N-PDU via the service primitive FrIf_Transmit() in case this call returns E_NOT_OK
      Limit: FrTpMaxFrIf
      Handling if counter has been reached: Abort transmission

      </description>
      <comment>
      Applicable to any type of Pdu
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP_COUNTER_FRIF_1</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_FRIF_2</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_FRIF_3</srcid><srcstatus/><internalId>207</internalId></linkedfrom><linkedfrom><srcid>FRTP_COUNTER_FRIF_4</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FRTP1113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>FRTP1114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>FRTP_COUNTER_FRIF_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      In case FrIf_Transmit() returns E_NOT_OK, retry shall be done in next main function invocation.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_FRIFTRAMSMIT_NOT_OK</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FRIFTRANSMIT_NOT_OK1</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FRIFTRANSMIT_NOT_OK2</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>FRTP_COUNTER_FRIF_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Transmission shall be aborted after module had retried for FrTpMaxFrIf times, in a row.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_FRIFTRAMSMIT_NOT_OK</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FRIFTRANSMIT_NOT_OK1</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FRIFTRANSMIT_NOT_OK2</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>FRTP_COUNTER_FRIF_3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If FrIf_Transmit() returns E_OK before FrTpMaxFrIf is exceeded, the counter shall be reset to zero.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_REUSE</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>FRTP_COUNTER_FRIF_4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Module shall recover from transmission errors and shall successfully finish the ongoing transfer.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_REUSE</srcid><srcstatus/><internalId>813</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>FRTP_COUNTER_AR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      COUNTER_AR
      Counts the attempts of the receiver to send an Fr N-PDU (FC, AF), in case a timeout AR occurs
      Limit: FrTpMaxAr
      Handling if counter has been reached: Abort transmission
      </description>
      <comment>Reception is already aborted at first occurence of timeout AR. </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.COUNTER_A</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FRTP1113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>FRTP1114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>FRTP_COUNTER_AS</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      COUNTER_AS
      Counts the attempts to send an Fr N-PDU (SF, FF, LF) in case a timeout AS occurs
      Limit: FrTpMaxAs
      Handling if counter has been reached: Abort transmission
      </description>
      <comment>Transmission is already aborted at first occurence of timeout AS. </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.COUNTER_A</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FRTP1113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>FRTP1114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>FRTP_COUNTER_RX_RN</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      COUNTER_RX_RN
      Counts the transmission retry requests on receiver site initiated due to
        a frame error, e.g. bad SN in a CF.
      Limit: FrTpMaxRn
      Case c) Segmented – Unacknowledged transmission
        1) Abort reception by calling service primitive
        PduR_FrTpRxIndication with Std_ReturnType = E_NOT_OK
        2) Send FlowControl.ABT (if aFlowControl is possible)

        Case d) Segmented – Acknowledged transmission
        1) Abort reception by calling service primitive
        PduR_FrTpRxIndication with Std_ReturnType = E_NOT_OK
        2) Send FlowControl.ABT (if aFlowControl is possible)
      </description>
      <comment>
      FrTpMaxRn=0 meaning no FC RETRY frame shall be sent
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR_ABT</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_STFA_MAXRN</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_ABORT_WRONG_SN</srcid><srcstatus/><internalId>864</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FRTP1113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>FRTP1114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>FRTP217</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The detection of development errors shall be pre-compile time configurable by
      the configuration parameter: FRTP_DEV_ERROR_DETECT.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_Transmit</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>FRTP1163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The detection of development errors shall be (de)activated (ON / OFF)  by the
      configuration parameter FRTP_DEV_ERROR_DETECT.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP217</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>FRTP205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the FRTP_DEV_ERROR_DETECT switch is enabled API parameter checking shall be
      enabled.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_Transmit</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>FRTP218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      It shall be not possible to switch off production code errors detection.
      </description>
      <comment>
      Production errors are not specified.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.Contradicting</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>FRTP1106</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTpState shall be checked to detect whether FrTp module is  initialized or
      not.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_Transmit</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_ChangeParameter</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_TriggerTransmit</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_RxIndication</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_TxConfirmation</srcid><srcstatus/><internalId>758</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_MainFunction</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>FRTP206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Detected development errors shall be reported to the Development  Error Tracer
      (DET) if the pre-processor switch FrTpDevErrorDetect is set.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_Transmit</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>FRTP1110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Production errors shall be reported to Diagnostic Event Manager (DEM) [12].
      </description>
      <comment>Currently, no production errors are defined. </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.Contradicting</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>FRTP1107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall use the Development Error Tracer [13] service
      Det_ReportError to report development errors.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_Transmit</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>FRTP1108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The header file of the FrTp module, FrTp.h, shall provide a module
      Identifier FRTP_MODULE_ID.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_MODULEID</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>FRTP1109</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The module Identifier FRTP_MODULE_ID shall set to the value 0x24.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_MODULEID</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>FRTP1111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support the error codes for development errors (Dev.) and
      production errors (Prod.) as defined in Table 6.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1111.FRTP_E_UNINIT</srcid><srcstatus/><internalId>223</internalId></linkedfrom><linkedfrom><srcid>FRTP1111.FRTP_E_NULL_PTR</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>FRTP1111.FRTP_E_INVALID_PDU_SDU_ID</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>FRTP1111.FRTP_E_INVALID_PARAMETER</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>FRTP1111.FRTP_E_SEG_ERROR</srcid><srcstatus/><internalId>227</internalId></linkedfrom><linkedfrom><srcid>FRTP1111.FRTP_E_UMSG_LENGTH_ERROR</srcid><srcstatus/><internalId>228</internalId></linkedfrom><linkedfrom><srcid>FRTP1111.FRTP_E_NO_CHANNEL</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>FRTP1111.FRTP_E_UNINIT</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      API service call without module initialization:
      Exception:
      a) FrTp_Init()
      b) FrTp_GetVersionInfo()
      c) FrTp_MainFunction

      FRTP_E_UNINIT 0x01
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_Transmit</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_ChangeParameter</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_CancelTransmit</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_CancelReceive</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_TriggerTransmit</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_RxIndication</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_TxConfirmation</srcid><srcstatus/><internalId>758</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_MainFunction</srcid><srcstatus/><internalId>759</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_GetVersionInfo</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NULL_PTR_FrTp_Transmit</srcid><srcstatus/><internalId>763</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>FRTP1111.FRTP_E_NULL_PTR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      NULL-Pointer on any API call
      FRTP_E_NULL_PTR 0x02
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NULL_PTR_FrTp_GetVersionInfo</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>FRTP1111.FRTP_E_INVALID_PDU_SDU_ID</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      API call with invalid SDU-ID (PduR) or PDU-ID (FrIf)
      FRTP_E_INVALID_PDU_SDU_ID 0x03
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_INV_ID_FrTp_Transmit</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>FRTP1111.FRTP_E_INVALID_PARAMETER</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      API call with invalid Parameter
      FRTP_E_INVALID_PARAMETER 0x04
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ChangeParameter</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>FRTP1111.FRTP_E_SEG_ERROR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Segmentation is required for a 1:n connection
      FRTP_E_SEG_ERROR 0x05
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TX_MULTIPLE_RECEIVER_CON</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>FRTP1111.FRTP_E_UMSG_LENGTH_ERROR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Transmission of unknown message length is detected but not configured.
      FRTP_E_UMSG_LENGTH_ERROR 0x06
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_UMSG_LENGTH_FrTp_Transmit</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>FRTP1111.FRTP_E_NO_CHANNEL</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      No free channel available37
      FRTP_E_NO_CHANNEL 0x07
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TRANSMIT_E_NOT_OK</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>FRTP1112</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Event Ids values for production code are assigned externally by the
      configuration of the DEM module. They are published in the file
      Dem_IntErrId.h and included via Dem.h.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>FRTP179</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Development error values are of type uint8.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>FRTP1132</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      All errors which are listed within Table 6 and marked as "Dev." in the
      column Relevance are classified as development errors (file: FRTP1132_table_6.png).
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>FRTP141</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Std_ReturnType shall be imported from Std_Types.h.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>FRTP1164</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Std_VersionInfoType shall be imported from Std_Types.h.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>FRTP1165</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      BufReq_ReturnType shall be imported from ComStack_Types.h.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>FRTP1167</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      PduIdType shall be imported from ComStack_Types.h.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>FRTP1168</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      PduInfoType shall be imported from ComStack_Types.h.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>FRTP1169</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      PduLengthType shall be imported from ComStack_Types.h.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>FRTP1170</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      RetryInfoType shall be imported from ComStack_Types.h.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>FRTP1178</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      TPParameterType shall be imported from ComStack_Types.h.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>FRTP1133</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The following FrTp specific types shall be defined in FrTp_Types.h. (BSW00305)
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>FRTP555</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support the AUTOSAR Notification Result Types  as defined
      in specification [7].
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>FRTP557</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The general AUTOSAR Notification Result Types as defined in specification [7]
      shall map to the ISO 10681-2 Notification Result Types as defined in
      Table 7 (file: FRTP557_table_7.png).
      </description>
      <furtherinfo>
        WRN.swurs.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <comment>NTFRSLT_E_CANCELATION_NOT_OK and NTFRSLT_E_CANCELATION_OK are not used (see Deviation ASCFRTP-382).</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_TIMEOUT_As</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Ar</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Bs</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Cr</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_WRONG_SN</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_INVALID_FS</srcid><srcstatus/><internalId>522</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_UNEXP_PDU</srcid><srcstatus/><internalId>523</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_WFT_OVRN</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_ABORT</srcid><srcstatus/><internalId>525</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_BUFFER_OVFLW</srcid><srcstatus/><internalId>527</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_NotificationResults.C_ERROR</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>FRTP142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support FlexRay specific Notification Result Types as
      defined in Table 8 (file: FRTP142_table_8.png):
      - NTFRSLT_E_FR_ML_MISMATCH (C_ML_MISMATCH, 0x5B)
      - NTFRSLT_E_FR_WRONG_BP (C_WRONG_BP, 0x5C)
      </description>
      <comment>NTFRSLT_E_FR_TX_ON and NTFRSLT_E_RX_ON are not used.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_ACK_SEG</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_NACK_SEG</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>FRTP1121</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall not support the notification result types of the  ISO
      document as listed below: - C_MOREDATA - C_WRONG_PARAMETER -
      C_WRONG_VALUE
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>FRTP1137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The type FrTp_ConfigType is an external data structure containing post
      build-time configuration data of the FrTp module which shall be
      implemented in FrTp_PBcfg.c (see chapter 5.6.1).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/xgen/FrTp.xgen_38</srcid><srcstatus/><internalId>681</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>FRTP215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Service name: FrTp_GetVersionInfo  Syntax: void FrTp_GetVersionInfo(
      Std_VersionInfoType* versioninfo  )  Service ID[hex]: 0x27  Sync/Async:
      Synchronous  Reentrancy: Non Reentrant  Parameters (in): None  Parameters
      None  (inout):  Parameters (out): versioninfo Pointer to where to store
      the version information of this module.  Return value: None  Description:
      Returns the version information.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>FRTP202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The function FrTp_GetVersionInfo shall return the version information of this
      module. The version information includes: - Two bytes for the vendor ID
      - One byte for the module ID - Three bytes version number. The
      numbering shall be vendor specific; it consists of: - The major, the
      minor and the patch version number of the module. The AUTOSAR
      specification version number shall not be included. The  AUTOSAR
      specification version number is checked during compile time  and
      therefore not required in this API.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_VALID_FrTp_GetVersionInfo</srcid><srcstatus/><internalId>775</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>FRTP498</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The function FrTp_GetVersionInfo shall be pre compile time configurable  On/Off
      by the configuration parameter: FrTpVersionInfoApi
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>FRTP1150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_GetVersionInfo is enabled:  the
      function FrTp_GetVersionInfo shall check the parameter versioninfo  for
      being valid. If the check for FrTpRxPduInfoPtr fails, the function
      FrTp_GetVersionInfo shall raise the development error  FRTP_E_NULL_PTR
      and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1150_a</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>FRTP1150_a</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_GetVersionInfo is enabled:  the
      function FrTp_GetVersionInfo shall check the parameter versioninfo  for
      being valid. If the check for FrTpRxPduInfoPtr fails, the function
      FrTp_GetVersionInfo shall raise the development error FRTP_E_NULL_PTR.
      </description>
      <comment> see FRTP215: Return value is None for FrTp_GetVersionInfo</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NULL_PTR_FrTp_GetVersionInfo</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>FRTP147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Service name: FrTp_Init
      Syntax: void FrTp_Init( const FrTp_ConfigType* configPtr  )
      Service ID[hex]: 0x00
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): configPtr Pointer to FlexRay Transport Protocol configuration.
      Parameters None  (inout):
      Parameters (out): None
      Return value: None
      Description: This service initializes all
      global variables of a FlexRay Transport Layer instance  and set it in the
      idle state. It has no return value because software errors in
      initialisation data shall be detected during configuration time (e.g. by
      configuration  tool).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <specobject>
      <id>FRTP1151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_Init is enabled: the function
      FrTp_Init shall check the parameter configPtr for being valid. If the
      check for configPtr fails, the function FrTp_Init shall raise the
      development error FRTP_E_NULL_PTR.
      </description>
      <comment>removed 'and return E_NOT_OK'</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NULL_PTR_FrTp_Init</srcid><srcstatus/><internalId>762</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>FRTP148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Service name: FrTp_Shutdown
      Syntax: void FrTp_Shutdown(  void  )
      Service ID[hex]: 0x01
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      (inout):  Parameters (out): None
      Return value: None
      Description: This service closes all pending transport protocol
      connections by simply stopping  operation, frees all resources and stops
      the FrTp Module
      </description>
      <comment> see ASCFRTP-383 Deviation: FrTp_Shutdown() is not implemented</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ShutDown</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>FRTP149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
        Service name: FrTp_Transmit Syntax: Std_ReturnType FrTp_Transmit(
        PduIdType FrTpTxSduId, const PduInfoType* FrTpTxSduInfoPtr )
        Service ID[hex]: 0x02
        Sync/Async: Asynchronous
        Reentrancy: Reentrant
        Parameters (in):
          FrTpTxSduId This parameter contains the FlexRay TP instance unique identifier
                      of the FrTp N-SDU to be transmitted.
          FrTpTxSduInfoPtr Tx N-SDU Information Structure which contains
                            a) pointer to the FrTp Tx N-SDU (SHALL NOT BE USED)
                            b) the length of the FrTp Tx N-SDU
        Parameters (inout): None Parameters (out): None
        Return value: Std_ReturnType
          E_OK: The request has been accepted
          E_NOT_OK: The request has not been accepted, e. g. parameter check has failed or no FrTpChannel resource
                    is free.
        Description: This service is utilized to request the transfer of
        data. It sets a flag for indicating that a transmit request is present. This
        function has to be called with FrTp's SDU-Id, i.e. the upper layer has to
        translate its own PDU-Id into the FrTp's SDU-ID for the corresponding message.
        Within the provided FrTpSduInfoPtr only SduLength is valid (no data)! If this
        function returns E_OK then there will arise an call of PduR_FrTpCopyTxData in
        order to get data for sending.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_1</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_1</srcid><srcstatus/><internalId>741</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_Transmit</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COPYTXDATA1</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TX_REQUEST</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.Transmit.E_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>FRTP1139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_Transmit is enabled: the function
      FrTp_Transmit shall check the parameter FrTpTxSduId for being valid. If
      the check for FrTpTxSduId fails, the function FrTp_Transmit shall raise
      the development error FRTP_E_INVALID_PDU_SDU_ID and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_INV_ID_FrTp_Transmit</srcid><srcstatus/><internalId>764</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_NOTX</srcid><srcstatus/><internalId>885</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.Transmit.E_NOT_OK1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>FRTP1140</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_Transmit is enabled: the  function
      FrTp_Transmit shall check the parameter FrTpTxSduInfoPtr for being
      valid. If the check for FrTpTxSduInfoPtr fails, the function
      FrTp_Transmit shall raise the development error FRTP_E_NULL_PTR and
      return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NULL_PTR_FrTp_Transmit</srcid><srcstatus/><internalId>763</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.Transmit.E_NOT_OK1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>FRTP150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Service name: FrTp_CancelTransmit  Syntax: Std_ReturnType
      FrTp_CancelTransmit(  PduIdType FrTpTxPduId  )  Service ID[hex]:
      0x03  Sync/Async: Synchronous  Reentrancy: Non Reentrant  FrTpTxPduId This
      parameter contains the FlexRay TP instance unique  Parameters (in):
      identifier of the Fr N-SDU which transfer has to be cancelled.
      Parameters None  (inout):  Parameters (out): None  Std_ReturnType E_OK:
      Transmit cancellation request of the specified Fr N-SDU  is accepted.
      Return value:  E_NOT_OK: Transmit cancellation request of the specified
      Fr  N-SDU is rejected  for an unsegmented data transmission  Description:
      This service primitive is used to cancel the transfer of pending Fr
      N-SDUs. The  connection is identified by FrTpTxSduId.When the function returns, no
      transmission is in progress anymore with the given N-SDU identifier.
      </description>
      <comment> see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.CancelTransmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.CancelTransmit.E_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>FRTP1141</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_CancelTransmit is enabled:
      the function FrTp_CancelTransmit shall check the parameter
      FrTpTxPduId for being valid. If the check for FrTpTxPduId fails, the
      function FrTp_CancelTransmit shall raise the development error
      FRTP_E_INVALID_PDU_SDU_ID and return E_NOT_OK.
      </description>
      <comment> see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.CancelTransmit.E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>FRTP151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Service name: FrTp_ChangeParameter  Syntax: Std_ReturnType
      FrTp_ChangeParameter(  PduIdType id,  TPParameterType parameter,
      uint16 value  )  Service ID[hex]: 0x04  Sync/Async: Synchronous
      Reentrancy: Non Reentrant  id Identification of the I-PDU to which the
      parameter the request  shall affect.  Parameters (in): parameter The
      selected parameter that the request shall change.  value The value that
      the request shall change to.  Range: $0000 - $00FF  Parameters None
      (inout):  Parameters (out): None  Std_ReturnType E_OK: request is
      accepted  Return value:  E_NOT_OK: request is not accepted  Description:
      Request to change transport protocol parameter BandwithControl.
      </description>
      <comment>
      see ASCFRTP-457: FrTp_ChangeParameter API is not implemented.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ChangeParameter</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.ChangeParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>FRTP1143</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_ChangeParameter is enabled:
      the function FrTp_ChangeParameter shall check the parameter Id
      for being valid. If the check for Id fails, the function
      FrTp_ChangeParameter shall raise the development error
      FRTP_E_INVALID_PDU_SDU_ID and return E_NOT_OK.
      </description>
      <comment>
      see ASCFRTP-457: FrTp_ChangeParameter API is not implemented.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ChangeParameter</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.ChangeParameter.E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>FRTP1144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_ChangeParameter is enabled:
      the function FrTp_ChangeParameter shall check the parameter for
      being valid. If the check for parameter fails, the function
      FrTp_ChangeParameter shall raise the development  error
      FRTP_E_INVALID_PARAMETER and return E_NOT_OK.
      </description>
      <comment>
      see ASCFRTP-457: FrTp_ChangeParameter API is not implemented.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ChangeParameter</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.ChangeParameter.E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>FRTP1172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Service name: FrTp_CancelReceive Syntax: Std_ReturnType
      FrTp_CancelReceive(  PduIdType FrTpRxSduId  )  Service ID[hex]:
      0x08  Sync/Async: Synchronous  Reentrancy: Non Reentrant  Parameters
      (in): FrTpRxSduId SDU-Id of currently ongoing reception  Parameters None
      (inout):  Std_ReturnType E_OK: Reception was terminated sucessfully
      Return value:  E_NOT_OK: Reception was not terminated.  Description: By
      calling this API with the corresponding RxSduId the currently ongoing
      data  reception is terminated immediately.When the function returns, no reception is in
      progress anymore with the given N-SDU identifier. If a cancellation was performed,
      the user will be informed by FrTpRxIndication.
      </description>
      <comment> see ASCFRTP-382 Deviation: Receive/Transmit Cancellation is not supported</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.CancelReceive.E_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.CancelReceive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>FRTP154</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      Service name: FrTp_TriggerTransmit
      Syntax: Std_ReturnType FrTp_TriggerTransmit(  PduIdType TxPduId,  PduInfoType* PduInfoPtr  )
      Service ID[hex]: 0x41
      Sync/Async: Synchronous
      Reentrancy: Reentrant for different PduIds. Non reentrant for the same PduId.
      Parameters (in): TxPduId ID of the SDU that is requested to be transmitted.
                       PduInfoPtr Contains a pointer to a buffer (SduDataPtr) to where the SDU  shall be
                                  copied to. On return, the service will indicate the length  of the copied
                                  SDU data in SduLength.
      Parameters None  (inout):  Parameters (out): None Std_ReturnType
      Return value:
        E_OK: SDU has been copied and SduLength indicates the number of copied bytes.
        E_NOT_OK: No SDU has been copied. PduInfoPtr must not be  used since it may contain a NULL pointer or point
                  to invalid data.
      Description: The lower layer communication module requests the buffer of the SDU for transmission from the upper layer
      module.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_TriggerTransmit</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_COPYTXDATAREQUEST_NOT_OK1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>FRTP1145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_TriggerTransmit is enabled: the
      function FrTp_TriggerTransmit shall check the parameter FrTpTxPduId for
      being valid. If the check for FrTpTxPduId fails, the function
      FrTp_TriggerTransmit shall raise the development error
      FRTP_E_INVALID_PDU_SDU_ID and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_INV_ID_FrTp_TriggerTransmit</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>FRTP1146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_TriggerTransmit is enabled: the
      function FrTp_TriggerTransmit shall check the parameter FrTpTxPduInfoPtr
      for being valid. If the check for FrTpTxPduInfoPtr fails, the function
      FrTp_TriggerTransmit shall raise the development error FRTP_E_NULL_PTR
      and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NULL_PTR_FrTp_TriggerTransmit</srcid><srcstatus/><internalId>766</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>FRTP152</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Service name: FrTp_RxIndication
      Syntax: void FrTp_RxIndication(  PduIdType RxPduId,  PduInfoType* PduInfoPtr  )
      Service ID[hex]: 0x42
      Sync/Async: Synchronous
      Reentrancy: Reentrant for different PduIds. Non reentrant for the same PduId.
      Parameters (in):
        RxPduId ID of the received I-PDU.
        PduInfoPtr Contains the length (SduLength) of the received I-PDU and a
                    pointer  to a buffer (SduDataPtr) containing the I-PDU.
      Parameters None (inout):  Parameters (out): None
      Return value: None
      Description: Indication of a received I-PDU from a lower layer communication module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_RxIndication</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>FRTP1147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_RxIndication is enabled: the
      function FrTp_RxIndication shall check the parameter FrTpRxPduId for
      being valid. If the check for FrTpRxPduId fails, the function
      FrTp_RxIndication shall raise the development error
      FRTP_E_INVALID_PDU_SDU_ID and return E_NOT_OK.
      </description>
      <comment> see ASCFRTP-390: Deviation: An invalid FrTpRxPduId in function FrTp_RxIndication is not detected</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxPduIdErrChk</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>FRTP1148</id>
      <status>approved</status>
      <source>AUTOSAR Bugzilla RfC #57683</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_RxIndication is enabled: the
      function FrTp_RxIndication shall check the parameter FrTpRxPduInfoPtr
      for being valid. If the check for FrTpRxPduInfoPtr fails, the function
      FrTpRxPduInfoPtr shall raise the development error FRTP_E_NULL_PTR.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NULL_PTR_FrTp_RxIndication</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>FRTP153</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Service name: FrTp_TxConfirmation
      Syntax: void FrTp_TxConfirmation(  PduIdType TxPduId  )
      Service ID[hex]: 0x40
      Sync/Async: Synchronous
      Reentrancy: Reentrant for different PduIds. Non reentrant for the same PduId.
      Parameters (in): TxPduId ID of the I-PDU that has been transmitted.
      Parameters None  (inout):  Parameters (out): None
      Return value: None
      Description: The lower layer communication module confirms the
      transmission of an I-PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>FRTP1149</id>
      <status>approved</status>
      <source>AUTOSAR Bugzilla RfC #57684</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_TxConfirmation is enabled:  the
      function FrTp_TxConfirmation shall check the parameter FrTxPduId
      FrTp_TxConfirmation shall raise the development error
      FRTP_E_INVALID_PDU_SDU_ID.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_INV_ID_FrTp_TxConfirmation</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>FRTP203</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp_MainFunction shall be used to schedule the FrTp module.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>FRTP580</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp_MainFunction shall be the entry point for FrTp processing tasks.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>FRTP1152</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp_MainFunction shall be called at least one time per FlexRay cycle.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>FRTP162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp_MainFunction shall follow the service primitive definition as
      described below:
      Service name: FrTp_MainFunction
      Syntax: void FrTp_MainFunction( void )
      Service ID[hex]: 0x10
      Timing: FIXED_CYCLIC
      Description: Schedules the FlexRay TP. (Entry point for scheduling)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>FRTP577</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module expects service primitives from the PDU Router as listed in
      Table 9 (file: FRTP577_table_9.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>FRTP578</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module expects service primitives from the FlexRay Interface  as listed
      in Table 10 (file: FRTP578_table_10.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP578.FrIf_Transmit</srcid><srcstatus/><internalId>278</internalId></linkedfrom><linkedfrom><srcid>FRTP578.FrIf_CancelTransmit</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>FRTP578.FrIf_Transmit</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module expects service primitives from the FlexRay Interface:
      FrIf_Transmit
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP578</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>FRTP578.FrIf_CancelTransmit</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module expects service primitives from the FlexRay Interface:
      FrIf_CancelTransmit
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.FrIf_CancelTransmit</srcid><srcstatus/><internalId>655</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP578</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>FRTP579</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Depending on the configuration parameter FrTpDevErrorDetect, the FrTp module
      expects service primitives from Debug Error Tracer module as listed in
      Table 11 (file: FRTP579_table_11.png).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>FRTP1188</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Depending on the configuration parameter FRTP_CHANGE_PARAMETER_API, the FrTp
      module expects service primitives from PDURouter module as listed in
      Table 12 (file: FRTP1188_table_12.png).
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>FRTP569</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The configuration tool should extract all information to configure the FlexRay
      Transport Protocol.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>FRTP570</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The configuration tool shall check the configuration consistency at
      configuration time. Configuration rules and constraints for plausibility
      checks shall performed where ever possible, during configuration time.
      </description>
      <furtherinfo>
        WRN.swurs.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP.BufferAccessModes_Prerequisites</srcid><srcstatus/><internalId>64</internalId></linkedfrom><linkedfrom><srcid>FRTP1052</srcid><srcstatus/><internalId>101</internalId></linkedfrom><linkedfrom><srcid>FRTP1059</srcid><srcstatus/><internalId>110</internalId></linkedfrom><linkedfrom><srcid>FRTP1093</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>FRTP180</srcid><srcstatus/><internalId>344</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_CONNECTION_CONTAINS_FrTpSdu</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.TIMEOUTS_MULTIPLE_OF_FrTpMainFuncCycle</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrTpTxSduRef_IS_VALID</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrTpRxSduRef_IS_VALID</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrTpRxPduPoolRef_IS_VALID</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrTpConCtrlRef_IS_VALID</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrTpTxPduPool_IS_USED</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrTpTxPduRef_IS_VALID</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrIfBaseCycleTime_SAME_FOR_FrTpTxPdus</srcid><srcstatus/><internalId>365</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrIfCycleRepetiton_SAME_FOR_FrTpTxPdus</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrIfChannel_DYNAMIC</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrIfChannel_SAME_FOR_FrTpTxPdus</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrTpTxPdus_REFER_SAME_FrIfClusters</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.CHECK.IF_FrTpTxPdus_ARE_LARGE_ENOUGH</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_FunctionalAdressing</srcid><srcstatus/><internalId>515</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>FRTP1131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp module shall support configuration variants as listed below:
      VARIANT-PRE-COMPILE: Only parameters with "Pre-compile time" configuration
      are allowed in this variant. VARIANT-POST-BUILD: Parameters with "Pre-compile
      time" and "Post-build time" are allowed in this variant.
      </description>
      <comment>replaced by FrTp.EB.PostBuild</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.PostBuild</srcid><srcstatus/><internalId>656</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>FRTP001_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Module Name FrTp  Configuration of the FlexRay Transport Protocol module
      according to Module Description ISO 10681-2. Included Containers Container
      Name MultiplicityScope / Dependency FrTpGeneral 1 This container contains
      the general configuration parameters of the FlexRay Transport Protocol module.
      FrTpMultipleConfig 1 This container holds one or several multiple
      configuration sets.
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>FRTP009_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpGeneral  This container contains the general configuration
      parameters of the Description  FlexRay Transport Protocol module.
      Configuration Parameters
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>FRTP002_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpAckRt {FRTP_HAVE_ACKRT} Description Preprocessor switch for enabling
      the Acknowledgement and retry  mechanisms. True: Acknowledge and Retry is
      enabled False:  Acknowledge and Retry is disabled Multiplicity 1 Type
      EcucBooleanParamDef Default value -ConfigurationClass Pre-compile time X
      All Variants  Link time - Post-build time -Scope / Dependency scope:
      Module
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.FrTpAckRt</srcid><srcstatus/><internalId>658</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>FRTP004_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpChanNum {FRTP_CHAN_NUM} Description Preprocessor switch for defining
      the number of concurrent channels  the module supports. Up to 32 channels
      shall be definable here. Multiplicity 1 Type EcucIntegerParamDef Range 1
      .. 32 Default value -ConfigurationClass Pre-compile time X All Variants
      Link time - Post-build time - Scope / Dependency scope: Module
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_CONNCURRENT_CHANNELS_RX</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_CONNCURRENT_CHANNELS_TX</srcid><srcstatus/><internalId>932</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>FRTP052_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpChangeParamApi {FRTP_CHANGE_PARAMETER_API} Description Preprocessor switch
      for enabling the API to change FrTp communication parameters. True: ChangeParameter
      API is enabled False: ChangeParameter API is disabled. Multiplicity 1
      Type EcucBooleanParamDef Default value - Pre-compile time X All Variants
      Link time - ConfigurationClass Post-build time - Scope / Dependency
      scope: Module
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ChangeParameter</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>FRTP008_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpDevErrorDetect {FRTP_DEV_ERROR_DETECT} Description Preprocessor switch
      for enabling development error detection. True:  Development Error
      Detection is enabled False: Development Error  Detection is disabled
      Multiplicity 1 Type EcucBooleanParamDef Default value -ConfigurationClass
      Pre-compile time X All Variants  Link time - Post-build time -Scope /
      Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>FRTP051_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpFullDuplexEnable {FRTP_FULL_DUPLEX_ENABLE} Description Preprocessor
      switch for enabling full duplex mechanisms for all  channels. True: Full
      duplex is enabled False: Fullduplex is disabled  (Half duplex is enabled)
      Multiplicity 1 Type EcucBooleanParamDef Default value false
      ConfigurationClass Pre-compile time X All Variants  Link time -
      Post-build time -Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>FRTP011_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpMainFuncCycle {FRTP_MAINFUNC_CYCLE} Description This parameter contains
      the calling period of the TPs Main Function.  The parameter is specified
      in seconds. Multiplicity 1 Type EcucFloatParamDef Range 0...INF Default value
      -ConfigurationClass Pre-compile time X All Variants  Link time -
      Post-build time -Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>FRTP036_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTransmitCancellation {FRTP_HAVE_TC} Description Preprocessor switch for
      enabling Transmit Cancellation. True:  Transmit Cancellation is enabled
      False: Transmit Cancellation is  disabled Multiplicity 1 Type
      EcucBooleanParamDef Default value -ConfigurationClass Pre-compile time X
      All Variants  Link time - Post-build time -Scope / Dependency scope:
      Module
      </description>
      <comment>always set to false according to deviation ASCFRTP-382</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>FRTP044_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpUnknownMsgLength Description Preprocessor switch to support data
      transfer with unknown message  False: Transmission with unknown message
      length is disabled Multiplicity 1 Type EcucBooleanParamDef Default value
      -ConfigurationClass Pre-compile time X All Variants  Link time -
      Post-build time -Scope / Dependency scope: Module
      </description>
      <comment>always set to false according to deviation ASCFRTP-384</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>FRTP045_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpVersionInfoApi {FRTP_VERSION_INFO_API} Description Preprocessor switch
      for enabling the Version info API. True: Version  Info API is enabled
      False: Version Info API is disabled Multiplicity 1 Type
      EcucBooleanParamDef Default value -ConfigurationClass Pre-compile time X
      All Variants  Link time - Post-build time -Scope / Dependency scope:
      Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>FRTP018_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpMultipleConfig [Multi Config Container] Description This
      container holds one or several multiple configuration sets. Configuration
      Parameters
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>FRTP006_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpConnection{FrTpConnectionConfiguration}  This container
      contains the connection specific parameters to transfer NDescription
      PDUs via FlexRay TP. Configuration Parameters
      Included Containers
        Container Name FrTpRxSdu Multiplicity 0..1
        This parameter defines the Rx Service Data Unit Identifier (Sdu Id)
        which uniquely identifies a data transfer (inter-module communication)
        between FrTp and PDUR.
        Container Name  FrTpTxSdu Multiplicity 0..1
        This parameter defines the Tx Service Data Unit Identifier (Sdu Id)
        which uniquely identifies a data transfer (inter-module communication)
        between FrTp and PDUR.
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>FRTP050_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpBandwidthLimitation {FRTP_BW_LIMIT} Description This parameter
      indicates whether the connection requires a bandwidth limitation or
      not. If FrTpBandwidthLimitation=True the  sender shall send a StartFrame
      always on the first PDU of a PDU Pool. Multiplicity 1 Type
      EcucBooleanParamDef Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>FRTP010_Conf</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
        Name: FrTpLa {FRTP_LA}
        Description: This parameter defines the Local Address for
          the respective  connection. When the local instance is the sender, this
          is the Source  Address within the TP frame. When the local instance is
          the receiver,  this is the Target Address within the TP frame.
        Multiplicity: 1
        Type: EcucIntegerParamDef
        Range: 0 .. 65535
        Default value -
        ConfigurationClass
          Pre-compile time: X VARIANT-PRE-COMPILE
          Link time: -
          Post-build time: X VARIANT-POST-BUILD
        Scope / Dependency scope: Module
      </description>
      <comment>
        This requirement is not applicable, it is superseded by Autosar_R20-11.ECUC_FrTp_00010
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>FRTP019_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpMultipleReceiverCon Description This parameter defines, whether this
      connection is an 1:1 ('false') or  an 1:n ('true') connection. If data
      segmentation is required this  parameter is used to check whether
      segmentation is possible or not. If  the connection is 1:n segmentation
      is not possible and an error will  occur. Multiplicity 1 Type
      EcucBooleanParamDef Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>FRTP021_Conf</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
        Name: FrTpRa {FRTP_RA}
        Description: This parameter defines the Remote Address for
          the respective connection. When the local instance is
          the receiver, this is the Source Address within the TP frame.
        Multiplicity: 1
        Type: EcucIntegerParamDef
        Range: 0 .. 65535
        Default value: -
        ConfigurationClass:
          Pre-compile time X VARIANT-PRE-COMPILE
          Link time -
          Post-build time X VARIANT-POST-BUILD
        Scope / Dependency scope: Module
      </description>
      <comment>
        This requirement is not applicable, it is superseded by Autosar_R20-11.ECUC_FrTp_00021
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>FRTP005_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpConCtrlRef {FRTP_CON_CTRL_REF} Description
      FrTpConnectionControlReference: This parameter defines a reference  to a
      connection control container. Multiplicity 1 Type Reference to [
      FrTpConnectionControl ] ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>FRTP025_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpRxPduPoolRef {FRTP_RX_PDU_POOL_REF} Description This parameter defines
      a reference to a RxPduPool. Multiplicity 1 Type Reference to [
      FrTpRxPduPool ] ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
       Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>FRTP039_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTxPduPoolRef {FRTP_TX_PDU_POOL_REF} Description This parameter defines
      a reference to a TxPduPool. Multiplicity 1 Type Reference to [
      FrTpTxPduPool ] ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>FRTP041_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpTxSdu  This parameter defines the Tx Service Data Unit
      Identifier (Sdu Id) which Description uniquely identifies a data transfer
      (inter-module communication)  between FrTp and PDUR. Configuration
      Parameters
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>FRTP042_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTxSduId {FRTP_SDUID} Description This is a unique identifier for a to
      be transmitted message from the  PduR to the FrTp. ImplementationType:
      PduIdType Multiplicity 1 Type EcucIntegerParamDef (Symbolic Name
      generated for this parameter) Range 0 .. 65535 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>FRTP043_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTxSduRef Description Reference to a PDU in the global PDU structure.
      Multiplicity 1 Type Reference to [ Pdu ] ConfigurationClass Pre-compile
      time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>FRTP027_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpRxSdu  This parameter defines the Rx Service Data Unit
      Identifier (Sdu Id) Description which uniquely identifies a data transfer
      (inter-module communication)  between FrTp and PDUR. Configuration
      Parameters
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>FRTP053_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpRxSduId {FRTP_SDUID} Description This unique identifier is used for
      change parameter request or receive cancellation from PduR to FrTp.ImplementationType:
      PduIdType Multiplicity 1 Type EcucIntegerParamDef (Symbolic Name generated for
      this parameter)Range 0 .. 65535 Default value -- ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE Link time -- Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>FRTP028_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpRxSduRef Description Reference to a PDU in the global PDU structure.
      Multiplicity 1 Type Reference to [ Pdu ] ConfigurationClass Pre-compile
      time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>FRTP007_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpConnectionControl{FrTpConnectionControl} Description This container
      contains the configuration parameters to control a FlexRay TP connection.
      Configuration Parameters
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>FRTP003_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpAckType {FRTP_ACKTYPE} Description This parameter defines the type of
      acknowledgement which is used for the  specific channel. Multiplicity 1
      Type EcucEnumerationParamDef Range FRTP_ACK_WITH_RT Acknowledgement with
      retry  FRTP_NO No acknowledgement ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

    <specobject>
      <id>FRTP.FrTpAckType.Send</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      Parameter FrTpAckType shall be applicable for sender side only (i.e. STF frames shall be sent accordingly, reception of FC RETRY shall be ignored).

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_UNSEGM_NACK</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>FRTP.FrTpAckType.Receiver</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>

      Parameter FrTpAckType shall be ignored. Only type of STF frame is evaluated and shall determine if connection is acknowledged or not.

      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_NOACK</srcid><srcstatus/><internalId>844</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK_1</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

    <specobject>
      <id>FRTP012_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpMaxAr {FRTP_MAX_AR} Description This parameter defines the maximum
      number of trying to send a  frame when a TIMEOUT AR occurs. Multiplicity
      1 Type EcucIntegerParamDef Range 0 .. 255 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>Reception is already aborted at first occurence of timeout AR. </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.COUNTER_A</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <specobject>
      <id>FRTP013_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpMaxAs {FRTP_MAX_AS} Description This parameter defines the maximum
      number of trying to send a  frame when a TIMEOUT AS occurs. Multiplicity
      1 Type EcucIntegerParamDef Range 0 .. 255 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>Transmission is already aborted at first occurence of timeout AS. </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.COUNTER_A</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

    <specobject>
      <id>FRTP015_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpMaxBufferSize {FRTP_MAXBFS} Description Limits the maximal buffer size
      the FrTp can choose in order to limit  the amount of Tx buffer that will
      be requested at the sender side in a  segmented transfer. Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 65535 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.FrTpMaxBufferSize</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>FRTP014_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpMaxFCWait {FRTP_MAX_FCWAIT} Description This parameter defines the
      maximum number of FlowControl N-PDUs  with FlowState "WAIT" Multiplicity
      1 Type EcucIntegerParamDef Range 0 .. 255 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>FRTP016_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpMaxFrIf {FRTP_MAX_FRIF}  frame when the FrIf returns an error.
      Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 255 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <specobject>
      <id>FRTP029_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpMaxNbrOfNPduPerCycle  {FRTP_MAX_NUMBER_OF_NPDU_PER_CYCLE} Description
      This parameter is part of the ISO 10681-2 protocol's FlowControl
      parameter "Bandwidth Control (BC)". It limits the number of N-Pdus the
      sender is allowed to transmit within a FlexRay cycle. Multiplicity 1 Type
      EcucIntegerParamDef Range 0 .. 31 Default value -ConfigurationClass
      Pre-compile time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>FRTP017_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpMaxRn {FRTP_MAX_RN} Description This parameter defines the maximum
      number of retries (if retry is  configured). Multiplicity 1 Type
      EcucIntegerParamDef Range 0 .. 255 Default value -ConfigurationClass
      Pre-compile time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>FRTP020_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpSCexp {FRTP_SEPARATION_CYCLE_EXPONENT} Description This parameter is
      part of the ISO 10681-2 protocol's FlowControl  parameter "Bandwidth
      Control (BC)". It represents the exponent to  calculate the minimum
      number of "Separation Cycles" the sender has to  wait for the next
      transmission of an FrTp N-Pdu. Multiplicity 1 Type EcucIntegerParamDef
      Range 0 .. 7 Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>FRTP047_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTimeBr {FRTP_TIME_BR}  transmit a corresponding FlowControl Frame.
      According to ISO  10681-2 this parameter is a performance requirement.
      Multiplicity 1 Type EcucFloatParamDef Range 0 .. 0.255 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>FRTP030_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTimeBuffer {FRTP_TIME_BUFFER} Description This parameter defines the
      time in seconds of waiting for the next try  to get a Tx or Rx buffer.
      Multiplicity 1 Type EcucFloatParamDef Range 0 .. 65.535 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>
      FrTpTimeBuffer is not supported. See Deviation ASCFRTP-
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.FrTpTimeBuffer</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>FRTP031_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTimeFrIf {FRTP_TIME_FRIF} Description This parameter defines the time
      in seconds of waiting for the next try  (if retry is activated) to send
      via FrIf_Transmit. Multiplicity 1 Type EcucFloatParamDef Range 0 .. 0.255
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
      </description>
      <comment>
      FrTpTimeFrIf is not supported. See Deviation ASCFRTP-540.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.FrTpTimeFrIf</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>FRTP032_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTimeoutAr {FRTP_TIMEOUT_AR} Description This parameter states the
      timeout in seconds between the PDU  transmit request of the Transport
      Layer to the FlexRay Interface and  the corresponding confirmation of the
      FlexRay Interface on the  receiver side (for FC or AF). Multiplicity 1
      Type EcucFloatParamDef Range 0 .. 65.535 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      dependency: It is obvious that FRTP_TIME_BR +  FRTP_TIMEOUT_AR &amp;lt;
      FRTP_TIMEOUT_BS must hold (because  the transmission duration on the bus
      has also to be considered).
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>FRTP033_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTimeoutAs {FRTP_TIMEOUT_AS} Description This parameter specifies the
      timeout in seconds the FrIf shall confirm a transmitted Pdu to the FrTp.
      Multiplicity 1 Type EcucFloatParamDef Range 0 .. 65.535 Default value --
      Pre-compile time X VARIANT-PRE-COMPILE Link time -- ConfigurationClass
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      dependency: It is obvious that FRTP_TIME_CS + FRTP_TIMEOUT_AS &amp;lt;
      FRTP_TIMEOUT_CR must hold (because the transmission duration on the bus has
      also to be considered).
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>FRTP034_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTimeoutBs {FRTP_TIMEOUT_BS} Description This parameter defines the
      timeout in seconds for waiting for an FC or  AF on the sender side in a
      1:1 connection. Multiplicity 1 Type EcucFloatParamDef Range 0 .. 65.535
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module  dependency: It is obvious that FRTP_TIME_BR +
      FRTP_TIMEOUT_AR &amp;lt; FRTP_TIMEOUT_BS must hold (because  the transmission
      duration on the bus has also to be considered).
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>FRTP035_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTimeoutCr {FRTP_TIMEOUT_CR} Description This parameter defines the
      timeout value in seconds a receiver is  waiting for a CF or a LF.
      Multiplicity 1 Type EcucFloatParamDef Range 0 .. 65.535 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      dependency: It is obvious that FRTP_TIME_CS +  FRTP_TIMEOUT_AS &amp;lt;
      FRTP_TIMEOUT_CR must hold (because  the transmission duration on the bus
      has also to be considered).
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>FRTP038_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpTxPduPool{PduPoolContainer} Description This container
      contains all Pdus that are assigned to that Pdu Pool. Configuration
      Parameters
      Included Containers
       Container Name FrTpTxPd Multiplicity 1..*
       Container to hold the PDU parameters.
       ImplementationType: PduInfoType
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

    <specobject>
      <id>FRTP024_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpRxPduPool{PduPoolContainer} Description This container
      contains all Pdus that are assigned to that Pdu Pool. Configuration
      Parameters Included Containers Container Name MultiplicityScope / Dependency
      FrTpRxPdu 0..* Container to hold the PDU parameters. ImplementationType:
      PduInfoType
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FRTP1019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>FRTP037_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpTxPdu  Container to hold the PDU parameters. Description
      ImplementationType: PduInfoType Configuration Parameters
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>FRTP049_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTxConfirmationPduId Description Handle Id to be used by the FrIf to
      confirm the transmission of the  FrTpTxPdu to the FrIf module.
      Multiplicity 1 Type EcucIntegerParamDef (Symbolic Name generated for this
      parameter) Range 0 .. 65535 Default value -ConfigurationClass Pre-compile
      time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_6</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_SEGM_NACK</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>FRTP040_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpTxPduRef Description Reference to a PDU in the global PDU structure.
      Multiplicity 1 Type Reference to [ Pdu ] ConfigurationClass Pre-compile
      time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>FRTP022_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Container Name FrTpRxPdu Container to hold the PDU parameters. Description
      ImplementationType: PduInfoType Configuration Parameters
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>FRTP023_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpRxPduId Description This is a unique identifier for a received message
      which is forwarded  from the FrIf to the FrTp. ImplementationType:
      PduIdType Multiplicity 1 Type EcucIntegerParamDef (Symbolic Name
      generated for this parameter) Range 0 .. 65535 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>FRTP026_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      Name FrTpRxPduRef Description Reference to a PDU in the global PDU structure.
      Multiplicity 1 Type Reference to [ Pdu ] ConfigurationClass Pre-compile
      time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency
      </description>
      <comment>This is a configuration parameter requirement without functional specification.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>FRTP1192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The standardized common published parameters as required by BSW00402 in the General
      Requirements on Basic Software Modules [3] shall be published within the header file of this
      module and need to be provided in the BSW Module Description. The according module
      abbreviation can be found in the List of Basic Software Modules [1].
      </description>
      <comment> replaced by FrTp.EB.PublishedInformation </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.PublishedInformation</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>FRTP598</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If configuration parameter FrTpMultipleReceiverCon is set for a connection, no
      Acknowledgement and retry shall be supported irrespective whether the
      configuration parameter FRTP_HAVE_ACKRT is set or not.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTP.FrTpAckRt</srcid><srcstatus/><internalId>658</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>FRTP1154</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      For timeout As configuration it shall be considered that  FRTP_TIMEOUT_AS &amp;gt;
      FRTP_TIME_AS
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>FRTP1155</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      For timeout Ar configuration it shall be considered that  FRTP_TIMEOUT_AR &amp;gt;
      FRTP_TIME_AR
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>FRTP599</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      For timeout Bs configuration it shall be considered that  FRTP_TIMEOUT_BS &amp;gt;
      FRTP_TIME_BR + FRTP_TIME_AR
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>FRTP1153</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      For timeout Cr configuration it shall be considered that  FRTP_TIMEOUT_CR &amp;gt;
      FRTP_TIME_CS + FRTP_TIME_AS
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>FRTP180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      The FrTp configuration shall ensure that  2 SeparationCycleExponent-1 x
      tCycleTime &amp;lt;= FRTP_TIMEOUT_CR .
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01015_Err_FrTpSCExp_NotCorrect</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrTp_Extension.xdm.m4_617</srcid><srcstatus/><internalId>678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP570</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>FRTP1173</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If bandwidth limitation in a connection to a certain ECU is realized by
      FlowControl parameter BC (without HW-FIFO mechanism), the attribute
      "FrTpBandwidthLimitation"within the corresponding connection shall be set
      to ,,TRUE".
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <specobject>
      <id>FRTP1174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If bandwidth limitation is realized by FlowControl parameter BC and if the
      attribute "FrTpBandwidthLimitation" is True, a Start Frame to
      initiate a communication link shall always be send in the first PDU of
      the  referenced PDU-Pool. This is valid for both 1:1 and 1:n connections.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_STF_BWLIMITATION_1To1</srcid><srcstatus/><internalId>924</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_STF_BWLIMITATION_1ToN</srcid><srcstatus/><internalId>925</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>FRTP1175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If an ECU responds with a FlowControl-Parameter BandwidthControl. MPPC ≠ 0
      ("zero") the sender shall use only the number of BC.MPPC PDUs of the
      PDU-Pool in ascending order to transmit data within that connection.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL_MULTIMAIN</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>FRTP1177</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      If the attribute "FrTpBandwidthLimitation" is set to "TRUE", a Rx-connection
      shall use the first Pdu of the referenced Tx-Pdu-Pool for sending the
      required FlowControl frame to continue a communication link.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_BC_ENABLED_PDUORDER</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

    <specobject>
      <id>FRTP1176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      It shall be possible to have overlapping PDU-Pools
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

    <specobject>
      <id>FRTP9999</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.0.0</source>
      <version>1</version>
      <description>
      These requirements are not applicable to this specification. (BSW00306,
      BSW00312, BSW00314, BSW00323, BSW00325, BSW00326, BSW00328, BSW00329,
      BSW00330, BSW00331, BSW00333, BSW00335, BSW00341, BSW00343, BSW00345,
      BSW00347, BSW00350, BSW00358, BSW00370, BSW00371, BSW00373, BSW00375,
      BSW00376, BSW00377, BSW00386, BSW00387, BSW00401, BSW00405, BSW00409,
      BSW00410, BSW00413, BSW00414, BSW00415, BSW00417, BSW00423, BSW00424,
      BSW00425, BSW00426, BSW00427, BSW00428, BSW00429, BSW00431, BSW00432,
      BSW00433, BSW00434, BSW005, BSW006, BSW009, BSW010, BSW159, BSW160,
      BSW161, BSW162, BSW164, BSW167, BSW168, BSW172, BSW05082)
      </description>
      <comment>
      This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

    <specobject>
      <id>Autosar_R20-11.SWS_FrTp_01204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.3.1</source>
      <version>1</version>
      <description>
        During transmission, the FrTp shall use addressing information provided
        by the upper layer via the meta data items SOURCE_ADDRESS_16 and
        TARGET_ADDRESS_16 as local address and remote address of the
        transmitted N-PDUs and to identify received flow control N-PDUs.
      </description>
      <comment>
        Source and/or target address should be retrieved using meta data handling
        via a call to EcuC_GetMetaDataSourceAddr() and/or EcuC_GetMetaDataTargetAddr(),
        respectively. This shall happen in the context of FrTp_Transmit().
      </comment>
      <releases>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_STFA_UNSEGM</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_STFA_SEGM</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_CF_LF</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_STFA_SEGM_ECUC_FAIL</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

    <specobject>
      <id>Autosar_R20-11.SWS_FrTp_01205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.3.1</source>
      <version>1</version>
      <description>
        If FrTpLa and/or FrTpRa are configured for a transmitted N-SDU, they
        are used even when the addressing information is the provided by the
        upper layer. If not, the address information in the N-PDUs shall be set
        according to the provided address information.
      </description>
      <releases>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_STFA_UNSEGM</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_STFA_SEGM</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_CF_LF</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>Autosar_R20-11.SWS_FrTp_01206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.3.1</source>
      <version>1</version>
      <description>
        During reception, the FrTp shall forward addressing information received
        as local address and remote address in the N-PDU to the upper layer via
        the meta data items SOURCE_ADDRESS_16 and TARGET_ADDRESS_16, and shall
        use the same address information when transmitting flow control N-PDUs.
      </description>
      <comment>
        Source and/or target address should be propagated using meta data handling
        via a call to EcuC_SetMetaDataSourceAddr() and/or EcuC_SetMetaDataTargetAddr(),
        respectively. This shall happen in the context of FrTp_RxIndication() when
        a new segmented/unsegmented reception is started.
      </comment>
      <releases>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_UNSEGM</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_LF</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM_ECUC_FAIL</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>Autosar_R20-11.SWS_FrTp_01207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.3.1</source>
      <version>1</version>
      <description>
        If FrTpLa and/or FrTpRa are not configured for a received N-SDU, any
        received addressing information can be assigned to this N-SDU. N-SDUs
        with configured FrTpLa and/or FrTpRa shall be preferred during
        reception over those without these configuration parameters.
      </description>
      <releases>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_UNSEGM</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM</srcid><srcstatus/><internalId>719</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

    <specobject>
      <id>Autosar_R20-11.ECUC_FrTp_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.3.1</source>
      <version>1</version>
      <description>
        Name: FrTpRa
        Description: This parameter defines the Remote Address for
          the respective connection. When the local instance is
          the receiver, this is the Source Address within the TP frame.
          If this parameter is not configured, all related Rx N-SDUs
          must be configured to use the meta data item SOURCE_ADDRESS_16,
          and all related Tx-N-SDUs must be configured to use the meta
          data item TARGET_ADDRESS_16.
        Multiplicity: 0 .. 1
        Type: EcucIntegerParamDef
        Range: 0 .. 65535
        Default value: -
        ConfigurationClass:
          Pre-compile time X VARIANT-PRE-COMPILE
          Link time -
          Post-build time X VARIANT-POST-BUILD
        Scope / Dependency scope: Module
      </description>
      <releases>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FC_TIMEOUT</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

    <specobject>
      <id>Autosar_R20-11.ECUC_FrTp_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayISOTransportLayer.pdf, V4.3.1</source>
      <version>1</version>
      <description>
      Name: FrTpLa
      Description: This parameter defines the Local Address for
        the respective  connection. When the local instance is the sender, this
        is the Source  Address within the TP frame. When the local instance is
        the receiver,  this is the Target Address within the TP frame. If this
        parameter is not configured, all related Rx N-SDUs must be configured
        to use the meta data item TARGET_ADDRESS_16, and all related Tx-N-SDUs
        must be configured to use the meta data item SOURCE_ADDRESS_16.
      Multiplicity: 0 .. 1
      Type: EcucIntegerParamDef
      Range: 0 .. 65535
      Default value -
      ConfigurationClass
        Pre-compile time: X VARIANT-PRE-COMPILE
        Link time: -
        Post-build time: X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <releases>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FC_TIMEOUT</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>FrTp.EB.CHECK.IF_CONNECTION_CONTAINS_FrTpSdu</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
           A configuration check shall be implemented that issues an error if no FrTpTxSdu and no FrTpRxSdu
           is configured for a Connection.
      </description>
      <comment> This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01001_Err_FrTpSdu_Missing</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.TIMEOUTS_MULTIPLE_OF_FrTpMainFuncCycle</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues a warning in the case the timeout
          parameters that are configured for a connection are not a multiple of the parameter
          FrTp_MainFuncCycle.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01002_Warn_TimeoutIsNotMultipleOfCycleTime</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrTpTxSduRef_IS_VALID</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if FrTpTxSduRef contains
          an invalid reference to the PDU in EcuC.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01003_Err_FrTpTxSduRefInvalid</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrTpRxSduRef_IS_VALID</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if FrTpRxSduRef contains
          an invalid reference to the PDU in EcuC.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01004_Err_FrTpRxSduRefInvalid</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrTpRxPduPoolRef_IS_VALID</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if FrTpRxPduPoolRef contains
          an invalid reference to FrTpRxPduPool.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01005_Err_FrTpRxPduPoolRefInvalid</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrTpConCtrlRef_IS_VALID</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if FrTpConCtrlRef contains
          an invalid reference to FrTpConnectionControl.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01006_Err_FrTpConCtrlRefInvalid</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrTpTxPduPool_IS_USED</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if the FrTpTxPduPool is
          not referenced by any of the connections.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01014_Warn_FrTpTxPduPool_NotUsed</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrTpTxPduRef_IS_VALID</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error in case FrTpTxPduRef
          in the container FrTpTxPdu contains an invalid reference.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01007_Err_FrTpTxPduRefInvalid</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrIfBaseCycleTime_SAME_FOR_FrTpTxPdus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if the values of 
          FrIfBaseCycleTime associated with the FrTpTxPdus of a FrTpTxPduPool are not same.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01009_Err_FrIfBaseCycleTime_Differ</srcid><srcstatus/><internalId>951</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrIfCycleRepetiton_SAME_FOR_FrTpTxPdus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if the values of
          FrIfCycleRepetiton associated with the FrTpTxPdus of a FrTpTxPduPool are not same.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01010_Err_FrIfCycleRepetiton_Differ</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrIfChannel_DYNAMIC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if the value of
          FrIfChannel associated with the FrTpTxPdu is FRIF_CHANNEL_AB.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01011_Err_FrIfChannel_Segment_Incorrect</srcid><srcstatus/><internalId>953</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrIfChannel_SAME_FOR_FrTpTxPdus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if the values of
          FrIfChannel associated with FrTpTxPdus of FrTpTxPduPool are not same.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01012_Err_FrIfChannel_Differ</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.IF_FrTpTxPdus_REFER_SAME_FrIfClusters</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that issues an error if the FrIfClusters
          associated with the FrTpTxPdus are not same.
      </description>
      <comment>This check shall be implemented within the generator</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01013_Err_FrTpTxPdus_Refer_Different_FrIfClusters</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>    
    
    <specobject>
      <id>FrTp.EB.CHECK.IF_FrTpTxPdus_ARE_LARGE_ENOUGH</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that ensures that
          it is not possible to configure a connection with enabled FrTpTxSdu container,
          if the referenced FrTpTxPduPool does not have TxPdus which are large enough to transmit a start frame.
      </description>
      <comment>This check shall be implemented within xdm file</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01017_no_pdu_for_stf</srcid><srcstatus/><internalId>959</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov><linksto>FRTP570</linksto><dstversion>1</dstversion><linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CHECK.SDU_EXCEEDS_MAXIMUM_MESSAGE_LENGTH</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          A configuration check shall be implemented that ensures that
          the PduLength referenced by FrTpTxSduRef and FrTpRxSduRef does not exceed the maximum FrTp
          message length.
      </description>
      <comment>This check shall be implemented within xdm file</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01018_invalid_PduLength</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrTp.EB.ASCCCB1403</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If a Main function of a un-initialized module is called from the
      BSW Scheduler, then it shall return immediately without
      performing any functionality and without raising any errors.
      </description>
      <comment>
      EB requirement is in line with the AUTOSAR 4.0 General SRS
      requirement BSW00450.

      https://issue.ebgroup.elektrobit.com/browse/ASCCCB-1403
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NOT_INIT_FrTp_MainFunction</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>FrTp.EB.RelocatablePBCfg</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      In order to support post-build-time configuration data handled by relative offsets to the configuration start address,
      the container FrTpGeneral must be extended by the configuration parameter FrTpRelocatablePbcfgEnable.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_PBcfgM_Off</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_PBcfgM_On</srcid><srcstatus/><internalId>691</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PublishedInformation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Requirement FRTP1192 applies, but the version numbers shall be published
        as stated in [BSW00318] according to the General Requirements on Basic Software Modules
        of ASR V3.1.0 R4.0 Rev 2.

        That is, the following version numbers shall be defined in the header file
        according to [BSW00318] (General Requirements on Basic Software Modules
        of ASR V3.1.0 R4.0 Rev 2):
        <ul>
          <li>FRTP_VENDOR_ID</li>
          <li>FRTP_MODULE_ID</li>
          <li>FRTP_AR_RELEASE_MAJOR_VERSION</li>
          <li>FRTP_AR_RELEASE_MINOR_VERSION</li>
          <li>FRTP_AR_RELEASE_REVISION_VERSION</li>
          <li>FRTP_SW_MAJOR_VERSION</li>
          <li>FRTP_SW_MINOR_VERSION</li>
          <li>FRTP_SW_PATCH_VERSION</li>
        </ul>
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrTp.c.m4_19</srcid><srcstatus/><internalId>667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

    <specobject>
      <id>FrTp.EB.BSWMDGeneration_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FrTp module's generator shall generate a basic software
      module description (BSWMD) based on the FrTp module's
      configuration containing information on the exclusive areas
      required by the FrTp module's implementation.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_SCHM</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>FrTp.EB.BSWMDGeneration_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FrTp module's generator shall generate a basic software
      module description (BSWMD) based on the FrTp module's
      configuration containing information on the scheduled
      MainFunctions together with the scheduling period.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_SCHM</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>FrTp.EB.BSWMDGeneration_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FrTp module's BSWMD shall be generated using a generator
      mode named "generate_swcd".
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_SCHM</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FrTpCopyToLocalBuffer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a precompile parameter FrTpCopyToLocalBuffer which enables or
      disables, the copy of the STF to the local buffer if the PduR_FrTpStartOfReception returned
      BUFREQ_E_BUSY or BUFREQ_OK with available buffer size smaller than requested.
      </description>
      <comment>
      TODO: Add two compile tests with this parameter enabled and disabled.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FrTpLocalBufferSize</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a precompile parameter FrTpLocalBufferSize which holds the size of the largest
      RxPdu that can be copied to the local buffer.
      This parameter is enabled if FrTpCopyToLocalBuffer is true or disabled otherwise.
      </description>
      <comment>
      There shall be a XDM check to ensure that the size of the RxPdus that can be copied is always
      within the value specified by this parameter.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01016_Err_ClbON_PduLength_GreaterThan_MaxAllowed</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1077_SOF_BUSY</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is true and in case PduR_FrTpStartOfReception returns BUFREQ_E_BUSY
      on reception of a STFA frame (segmented or unsegmented) module shall copy the frame
      data to the provided local buffer, retry for buffer with the call of PduR_FrTpCopyRxData with Sdulength=0,
      and send FC WAIT after TimeBr.
      </description>
      <comment>
      TODO: Add a conformance test with PduR_FrTpStartOfReception returning BUSY for STFA with
            FrTpCopyToLocalBuffer configured to true.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRX_BUSY_CLB</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRX_BUSY_CLB</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_STFA_MAXWAIT_CLB</srcid><srcstatus/><internalId>854</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_STFU_MAXWAIT_CLB</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1077_SOF_LOW</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is true and in case PduR_FrTpStartOfReception returns BUFREQ_OK with
      available buffer size smaller than the frame payload length on reception of a STFA frame
      (segmented or unsegmented) module shall copy the frame data to the provided local buffer,
      retry for buffer with the call of PduR_FrTpCopyRxData with Sdulength=0, and send FC WAIT after TimeBr.
      </description>
      <comment>
      TODO: Add a conformance test with conformance test with PduR_FrTpStartOfReception returning
            smaller buffer size for STFA with FrTpCopyToLocalBuffer configured to true.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_SEG_LOWBUFF_STARTOFRX_CLB</srcid><srcstatus/><internalId>852</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_LOWBUFF_STARTOFRX_CLB</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1077_1_Enhancement</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is false and in case PduR_FrTpStartOfReception returns BUFREQ_E_BUSY
      on reception of a STFA frame (segmented or unsegmented) a retry frame shall be sent requesting
      retransmission of previously sent data with byte position 0, after TimeBr.

      (Note: Retry will be sent in next MainFunction invocation, sender will transmit CF frame,
       see table 19 of ISO10681_2 Spec)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STFA_MAXRN</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRX_BUSY_COPYRX_OK</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRX_BUSY_COPYRX_OK</srcid><srcstatus/><internalId>828</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1077_1b_Enhancement</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is false and in case PduR_FrTpStartOfReception returns BUFREQ_OK with
      available buffer size smaller than the frame payload length on reception of a STFA frame
      (segmented or unsegmented) a retry frame shall be sent requesting retransmission of previously
      sent data with byte position 0, after TimeBr.

      (Note: Retry will be sent in next MainFunction invocation, sender will transmit CF frame,
       see table 19 of ISO10681_2 Spec)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_LOWBUFFER_FOR_STFA</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_SEG_LOWBUFF_STARTOFRX</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1077_2_Enhancement</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is false and in case PduR_FrTpCopyRxData returns BUFREQ_E_BUSY on
      reception of a STFA frame (i.e. no data has been copied so far and acknowledgement is enabled,
      no matter if message is segmented or unsegmented) a retry frame shall be sent requesting
      retransmission of previously sent data with byte position 0, after TimeBr.

      (Note: Retry will be sent in next MainFunction invocation, sender will transmit CF frame,
       see table 19 of ISO10681_2 Spec)
      </description>
      <comment>see ASCFRTP-456 Deviation: FrTp_RxIndication does not copy to local buffer
    Even if StartOfReception returned OK, PduR does not necessarily have enough buffer to copy the full payload.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STFA_MAXRN</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_BUFFOK_AFTERRETRY</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1136_SOF_BUSY</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the parameter FrTpCopyToLocalBuffer is true and in case PduR_FrTpStartOfReception returns
      BUFREQ_E_BUSY on reception of a STFU frame (segmented) the module shall copy
      the frame data to the provided local buffer and retry for the buffer with the call of
      PduR_FrTpCopyRxData with Sdulength=0 in the next FrTp_MainFunction invocation, and send FC WAIT after
      TimeBr.
      </description>
      <comment>
      TODO: Add a conformance test with PduR_FrTpStartOfReception returning BUSY for STFU
            with FrTpCopyToLocalBuffer configured to true.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRECEPTION_BUSY_CLB</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1136_SOF_LOW</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the parameter FrTpCopyToLocalBuffer is true and in case PduR_FrTpStartOfReception returns
      BUFREQ_OK with available buffer size smaller than the requested data size, on reception of a
      segmented STFU frame the module shall copy the frame data to the provided
      local buffer and retry for the buffer the buffer with the call of PduR_FrTpCopyRxData with Sdulength=0
      in the next FrTp_MainFunction invocation and send FC WAIT after TimeBr.
      </description>
      <comment>
      TODO: Add a conformance test with conformance test with PduR_FrTpStartOfReception returning
            smaller buffer size for STFU with FrTpCopyToLocalBuffer configured to true.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEG_LOWBUFFER_FOR_STFU_CLB</srcid><srcstatus/><internalId>878</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1136_1c</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is true and in case PduR_FrTpStartOfReception returns BUFREQ_E_BUSY
      or BUFREQ_OK with available buffer size less than the message length, on reception of an
      unsegmented STFU frame the module shall copy the frame data to the provided
      local buffer and retry for the buffer with the call of PduR_FrTpCopyRxData
      in the next FrTp_MainFunction invocation till TimeBr.
      </description>
      <comment>
      - Test with conformance test with PduR_FrTpStartOfReception returning BUFREQ_E_BUSY
                                        -TS_FRTP_UNSEG_STARTOFRECEPTION_BUSY_CLB
      - Test with PduR_FrTpStartOfReception returning smaller buffer size for STFU with
        FrTpCopyToLocalBuffer configured to true - TS_FRTP_UNSEG_STARTOFRECEPTION_ZEROBUF_CLB.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRECEPTION_BUSY_CLB</srcid><srcstatus/><internalId>875</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRECEPTION_ZEROBUF_CLB</srcid><srcstatus/><internalId>876</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_VALID_AFTERRETRY</srcid><srcstatus/><internalId>877</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_LOWBUFFER_THANML_CLB</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1136_1d</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is true and in case PduR_FrTpStartOfReception returns BUFREQ_E_BUSY
      or BUFREQ_OK with available buffersize less than the message length, on reception of more than
      one STF frame (concurrently on different connections), the frames shall be copied into the
      respective buffer.

      (Note: see table 19 of ISO10681_2 Spec)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_CONCURRENT_RX_SOR_BUSY_CLB</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1136_1e</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is true and in case data was copied to the local buffer:
      The module shall retry to call PduR_FrTpCopyRxData with Sdulength=0 with every main function invocation until
      - either a timeout occurred
      - or the PduR returned a sufficiently large buffer to copy the buffered start frame. In this case data shall
        be copied and a CTS frame shall be sent with BfS set to the available buffer size returned by PduR_FrTpCopyRxData.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRX_BUSY_CLB</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_STFA_MAXWAIT_CLB</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1136_1_Enhancement</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is false and in case PduR_FrTpStartOfReception returns BUFREQ_E_BUSY
      on reception of an unsegmented STFU frame the frame shall be ignored and PduR_FrTpRxIndication
      shall be called with notification result NTFRSLT_E_NOT_OK.

      (Note: see table 19 of ISO10681_2 Spec)
      </description>
      <comment>
      Without a local buffer data cannot be stored until next invocation of PduR_FrTpStartOfReception.
      Since retry is not allowed we cannot re-request the data so all we can do is abort the reception.
      As PduR returned BUSY it is still waiting for RxIndication to finish the reception process.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRECEPTION_BUSY</srcid><srcstatus/><internalId>865</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1136_1b_Enhancement</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is false and in case PduR_FrTpStartOfReception returns BUFREQ_OK with
      available buffer size smaller than the message length on reception of a STFU frame the frame
      shall be ignored and PduR_FrTpRxIndication shall be called with notification result
      NTFRSLT_E_NOT_OK.

      (Note: see table 19 of ISO10681_2 Spec)
      </description>
      <comment>
      Without a local buffer data cannot be stored until next invocation of PduR_FrTpStartOfReception.
      Since retry is not allowed we cannot re-request the data so all we can do is abort the reception.
      As PduR returned BUSY it is still waiting for RxIndication to finish the reception process.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRECEPTION_ZEROBUFF</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_LOWBUFFER_THANML</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1136_2_Enhancement</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is false and in case PduR_FrTpCopyRxData returns BUFREQ_E_BUSY on
      reception of a STFU frame (i.e. no data has been copied so far and retry is disabled) the
      frame shall be ignored and PduR_FrTpRxIndication shall be called with notification result
      NTFRSLT_E_NOT_OK.

      (Note: see table 19 of ISO10681_2 Spec)
      </description>
      <comment>
      Without a local buffer data cannot be stored until next invocation of PduR_FrTpStartOfReception.
      Since retry is not allowed we cannot re-request the data so all we can do is abort the reception.
      As PduR returned BUSY it is still waiting for RxIndication to finish the reception process.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEG_FRTPCOPYRXDATA_BUSY</srcid><srcstatus/><internalId>870</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_FRTPCOPYRXDATA_ZEROBUF</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1136_1f</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If FrTpCopyToLocalBuffer is true and in case PduR_FrTpCopyRxData returns BUFREQ_E_BUSY
      on reception of an
      unsegmented STFU frame the module shall copy the frame data to the provided
      local buffer and retry for the buffer with the call of PduR_FrTpCopyRxData
      in the next FrTp_MainFunction invocation till TimeBr.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEGNACK_FRTPCOPYRXDATA_ZEROBUF_CLB</srcid><srcstatus/><internalId>882</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1160_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the parameter FrTpCopyToLocalBuffer is true and in case PduR_FrTpStartOfReception or
      PduR_FrTpCopyRxData returns BUFREQ_E_BUSY on reception of a STFA frame (unsegmented or
      segmented) or a segmented STFU, the module retries for the buffer and send FC WAIT upto
      FrTpMaxFcWait, respecting TimeBr and if the buffer was still unavailable after FrTpMaxFcWait
      exceeded, the reception shall be aborted and PduR_FrTpRxIndication is called with result
      NTFRSLT_E_WFT_OVRN.
      </description>
      <comment>
      TODO: Add a conformance test with PduR_FrTpStartOfReception/PduR_FrTpCopyRxData returning BUSY
             with FrTpCopyToLocalBuffer configured to true.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STFA_MAXWAIT_CLB</srcid><srcstatus/><internalId>854</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_STFU_MAXWAIT_CLB</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1160_1b</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the parameter FrTpCopyToLocalBuffer is true and in case PduR_FrTpStartOfReception or
      PduR_FrTpCopyRxData returns BUFREQ_E_BUSY on reception of a STFA frame (unsegmented or
      segmented) or a segmented STFU, the module retries for the buffer and send FC WAIT upto
      FrTpMaxFcWait, respecting TimeBr and if the buffer was available before FrTpMaxFcWait
      exceeded, the module shall,
      - send CTS in case of segmented reception
      - wait for ACK in case of unsegmented acknowledged reception
      - close the channel and notify the PduR with result NTFRSLT_OK for unacknowledged reception.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <comment>
      TODO: Add conformance tests for segmented/unsegmented and acknowledged/unacknowledged
            reception and PduR_FrTpStartOfReception/PduR_FrTpCopyRxData returning BUSY
            with FrTpCopyToLocalBuffer configured to true.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRX_BUSY_CLB</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRX_BUSY_CLB</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_SEG_LOWBUFF_STARTOFRX_CLB</srcid><srcstatus/><internalId>852</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_LOWBUFF_STARTOFRX_CLB</srcid><srcstatus/><internalId>853</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGACK_FRTPCOPYRXDATA_BUSY_CLB</srcid><srcstatus/><internalId>855</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEGACK_FRTPCOPYRXDATA_BUSY_CLB</srcid><srcstatus/><internalId>856</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEGACK_FRTPCOPYRXDATA_BUSY_CLB_1</srcid><srcstatus/><internalId>857</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRECEPTION_BUSY_CLB</srcid><srcstatus/><internalId>874</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_LOWBUFFER_FOR_STFU_CLB</srcid><srcstatus/><internalId>878</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGNACK_FRTPCOPYRXDATA_BUSY_CLB</srcid><srcstatus/><internalId>880</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEGNACK_FRTPCOPYRXDATA_BUSY_CLB</srcid><srcstatus/><internalId>881</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1123</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The service primitive PduR_FrTpCopyTxData() shall be called from FrTp_TriggerTransmit() to
      copy the currently available FrTp N SDU data with a length of FrTpTxPdu length to the
      corresponding  transmit buffer.
      </description>
      <comment>
      see ASCFRTP-517 Deviation: Synchronous statemachine processing and ASCFRTP-385 Limitation: Transmission with immediate buffer access is not supported
    </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COPYTXDATA2</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConcurrentErrorHandling</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FrTp module shall support handling of concurrent error reporting from multiple channels.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_CONCURRENT_ERROR</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT_ERROR</srcid><srcstatus/><internalId>913</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>FRTP429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>FRTP430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FRTP1138_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      On reception of a message FrTp shall call PduR_FrTpCopyRxData from FrTp_RxIndication
      to initiate copying of the payload data.
      </description>
      <comment>
      see ASCFRTP-456 Deviation: FrTp_RxIndication does not copy to local buffer
      Since the data is not copied into the local buffer, data will be lost if
      PduR_FrTpCopyRxData is called only in next Main Function invocation after the reception.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STARTOFRECEPTION</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TxRetry</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      In every call to PduR_FrTpCopyTxData the retry parameter shall take one of the following values:
      - NULL_PTR if acknowledgement is not configured for this connection
      - TpDataState=TP_CONFPENDING for all CFs except for the first of each block
      - TpDataState=TP_DATACONF for each CF after a CTS
      - TpDataState=TP_DATARETRY for each CF that is sent due to reception of a RETRY frame. In this case TxTpDataCnt specifies the offset (in bytes) from the current position, where the retry should start, i.e. the number of bytes to retransmit.
      </description>
      <comment>
      see www.autosar.org/bugzilla/show_bug.cgi?id=52897

      According to the ISO Spec all data within a block may be re-requested by a RETRY frame. Thus only the first frame of a block (starting with the 2nd block) may indicate the PduR to discard it's buffer (this will still keep the data of this call to PduR_FrTpCopyTxData).
    </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.TxRetry_1</srcid><srcstatus/><internalId>400</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.TxRetry_2</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.TxRetry_3</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.TxRetry_4</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TxRetry_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      In every call to PduR_FrTpCopyTxData the retry parameter shall take one of the following values:
      - NULL_PTR if acknowledgement is not configured for this connection
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_NO_RETRY</srcid><srcstatus/><internalId>940</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.TxRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TxRetry_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      In every call to PduR_FrTpCopyTxData the retry parameter shall take one of the following values:
      - TpDataState=TP_CONFPENDING for all CFs except for the first of each block
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RETRY_DATACONF</srcid><srcstatus/><internalId>908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.TxRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TxRetry_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      In every call to PduR_FrTpCopyTxData the retry parameter shall take one of the following values:
      - TpDataState=TP_DATACONF for each CF after a CTS
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RETRY_DATACONF</srcid><srcstatus/><internalId>908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.TxRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TxRetry_4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      In every call to PduR_FrTpCopyTxData the retry parameter shall take one of the following values:
      - TpDataState=TP_DATARETRY for the first CF that is sent due to reception of a RETRY frame. In this case TxTpDataCnt specifies the offset (in bytes) from the current position, where the retry should start, i.e. the number of bytes to retransmit.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_RETRY</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.TxRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

    <specobject>
      <id>FrTp.EB.NO_CFEOB</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      A CFEOB shall not be sent, in case the payload doesn't fit into the LF and there are no more data to transmit, instead a CF shall be sent followed by a LF with zero payload.
      </description>
      <comment>
      This is to point out that no CFEOB shall be sent if there is no more data to be transmitted. Receiver might not send a CTS in this case.
    </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RETRY_DATACONF</srcid><srcstatus/><internalId>908</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_ALLDATASENT_CTS_NOTEXPECTED</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

    <specobject>
      <id>FrTp.EB.BfS0</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The BfS parameter value 0 shall be used to indicate to the sender that no more FC frames
      shall be sent during the transmission of the segmented message. But if the transmit entity is
      sending CFEOB frame, receiver shall respond with another FC for further transmission.
      </description>
      <comment>
      As per FrTp.ISO10681_0003, receiver shall respond to the CFEOB frame with an FC frame.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_BFS_0</srcid><srcstatus/><internalId>934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0031.BfS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TransmitInvalidSDULength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If development error detection for the FrTp_Transmit is enabled: the
      function FrTp_Transmit shall check the parameter PduInfoPtr.SduLength for
      being smaller than 65536U if PduLengthType is UINT32. If the check for SduLength fails,
      the function FrTp_Transmit shall raise the development error
      FRTP_E_INVALID_PARAMETER and return E_NOT_OK.
      </description>
      <comment>
      Since FrTp does not support a SDU length bigger than 65535U FrTp_Transmit
      returns NOT_OK and the transmit request is ignored.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_INV_SDULength_FrTp_Transmit</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TxPduPendingCounter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If triggertransmit returns E_NOT_OK, TxPduPending counter shall be decremented.
      </description>
      <comment>
      Since the counter is incremented with FrIf_Trnsmit it must be decremented when
      triggertransmit returns NOT_OK as there will be no TxConfirmation to decrement it.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TRIGGER_TRANSMIT_NOTOK_CF</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

    <specobject>
      <id>FrTp.EB.SymbolicNameValue</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Macros for symbolic name values shall be generated for all parameters having SymbolicNameValue set to true:
      FrTpTxSduId
      FrTpRxSduId
      FrTpTxConfirmationPduId
      FrTpRxPduId

      The naming scheme shall be:
      FrTpConf_&amp;lt;Container&amp;gt;_&amp;lt;Parameter&amp;gt;
      </description>
      <comment>
      see http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/Config#Symbolic_Names
      and https://issue.ebgroup.elektrobit.com/browse/ASCPROJECT-332
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_SymbolicNames</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

    <specobject>
      <id>FrTp.EB.SymbolicNameValue_Rev3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Macros for symbolic name values for the following parameters shall be generated as per
      ecuc_sws_2108 if the SHORT_NAME is specified for the parent container having multiplicity 1.
      FrTpTxSduId
      FrTpRxSduId

      For parameter with multiplicity greater than 1, the container name itself is a SHORT-NAME.
      FrTpTxConfirmationPduId
      FrTpRxPduId

      The naming scheme shall be:
      FrTpConf_&amp;lt;Container&amp;gt;_&amp;lt;SHORT_NAME&amp;gt;
      </description>
      <comment>
      see http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/Config#Symbolic_Names
      and https://issue.ebgroup.elektrobit.com/browse/ASCPROJECT-1011
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NonLegSymbolicNames</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_SymbolicNames</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <specobject>
      <id>FrTp.EB.LegacySymbolicNameValue</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If macro FRTP_PROVIDE_LEGACY_SYMBOLIC_NAMES is defined:
      1 Macro for symbolic name values shall be generated for all parameters having SymbolicNameValue set to true:
      FrTpTxSduId
      FrTpRxSduId
      FrTpTxConfirmationPduId
      FrTpRxPduId

      The naming scheme shall be:
      FrTp_&amp;lt;Parameter&amp;gt;
      </description>
      <comment>
      see http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/Config#Symbolic_Names
      and https://issue.ebgroup.elektrobit.com/browse/ASCPROJECT-332
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_NonLegSymbolicNames</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_SymbolicNames</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

    <specobject>
      <id>FrTp.EB.HandleIdGenerator</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The module shall support the correct automatic calculation of
      the handle IDs for the following parameters:
        - FrTpTxSduId
        - FrTpRxPduId
        - FrTpTxConfirmationPduId
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_HandleIdGenerator</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>

    <specobject>
      <id>FrTp.EB.FrTpMaxBufReq</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FrTp shall stop calling the Service primitive PduR_FrTpCopyTxData for a TxBuffer once the
      retry reaches the maximum value (FrTpMaxBufReq) and then it shall abort the transfer.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_STF_ZEROBUFFSIZE</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_CF_ZEROBUFFSIZE</srcid><srcstatus/><internalId>922</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_BROADCAST_BUFFERINSUFFICIENT</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>FrTp.EB.APIs_Return_NOT_OK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The functionality of following APIs are not supported so the call to these APIs shall always
      return E_NOT_OK.
       a) FrTp_CancelTransmit
       b) FrTp_CancelReceive
       c) FrTp_ChangeParameter
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_APIs_Return_NOT_OK</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

    <specobject>
      <id>FrTp.EB.MainFunctionsPerFlexRayCycle</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a mandatory configuration parameter to configure the FlexRay CommunicationCycle / FrTpMainFunctionPeriod ratio.
      This configuration parameter shall be used in order implement the nadwidth control cycle seperation.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL_MULTIMAIN</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

    <specobject>
      <id>FrTp.EB.CheckSduLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FrTp module shall check the PduInfo pointer passed by FrTp_RxIndication and ignore all frames
      which have an SduLength smaller than required by the frame (based on the frame type and the
      frame payload length).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_3</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_6</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_INCORRECT_SDULENGTH_STF</srcid><srcstatus/><internalId>848</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_TIMEOUT_BS</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TXPDUPENDINGCOUNTER</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

    <specobject>
      <id>FrTp.EB.TransmissionRequestFromTxConfirmation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FrTp module shall support a transmission request via FrTp_Transmit called within the context of
      PduR_FrTpTxConfirmation for the same TxPduId.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_SEGM_ACK</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

    <specobject>
      <id>FRTP195.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FrTp module implementation (FrTp.c) shall include the file FrTp_Api.h.
      </description>
      <comment>
      FrTp.c includes FrTp_Api.h instad of FrTp.h.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_INCLUDE1</srcid><srcstatus/><internalId>961</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>

    <specobject>
      <id>FRTP412_EB</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      A N-PDU FC CTS shall be sent upon reception of a STF or CFEOB frame if the available buffer size returned by
      PduR_FrTpCopyRxData is larger than 0. The buffer size parameter of the CTS shall be set to the available buffer size.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STARTOFRECEPTION</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>

    <specobject>
      <id>FRTP1096_EB</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If several FrTpConnections share a FrTpTxPduPool, they shall alternately allocate the
      TxPdus while respecting FrTpSCexp and FrTpMaxNbrOfNPduPerCycle.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL_CFLF</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConnectionBuffer.Parameter_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a precompile parameter FrTpLimitNumberOfConnections which enables or disables
      the functionality to buffer FrTp_Transmit requests if the maximum number of active connections
      for a specific remote address is reached, or no free channels are available.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_TX</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConnectionBuffer.Parameter_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a precompile parameter FrTpConnectionBufferSizeUnlimited which determines the
      maximum number of data transfer requests that can be buffered (i.e. the depth of the buffer)
      for connections whose remote address FrTpRa is not listed in FrTpConnectionLimitConfig.
      This parameter is enabled if FrTpLimitNumberOfConnections is true and disabled otherwise.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_TX</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConnectionBuffer.Parameter_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a precompile parameter list of containers FrTpConnectionLimitConfig consisting
      of a remote address FrTpRa, a connection limit FrTpConnectionLimit, determining the maximum
      number of active connections for a given remote address and a buffer size
      FrTpConnectionBufferSize, determining the maximum number of buffered connections for a given
      remote address.
      Connections whose remote addresses are not listed in FrTpConnectionLimitConfig, shall not be
      limited, but buffered if there is no channel available.
      This parameter is enabled if FrTpLimitNumberOfConnections is true and disabled otherwise.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_TX</srcid><srcstatus/><internalId>776</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_FD</srcid><srcstatus/><internalId>777</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConnectionBuffer.Transmit_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The service primitive FrTp_Transmit shall be terminated and the return value shall be set to
      E_NOT_OK if
      a) FrTpLimitNumberOfConnections is true and
      b) the number of active connections for the connection's remote address is equal to its
         maximum value set by FrTpConnectionLimit in FrTpConnectionLimitConfig (does not apply if
         the remote address is not listed as FrTpRa in FrTpConnectionLimitConfig), or all channels
         are currently busy and
      c) the number of currently buffered connections for the connection's remote address equals its
         maximum value (set either by FrTpConnectionBufferSize in FrTpConnectionLimitConfig or
         FrTpConnectionBufferSizeUnlimited if the remote address is not listed in
         FrTpConnectionLimitConfig), i.e. the corresponding buffer is full.
      Additionally, the FrTp module shall raise a development error FRTP_E_NO_CHANNEL when
      development error detection for the FrTp module is enabled.
      This requirement overwrites the behavior described in FRTP1041 for the case of
      FrTpLimitNumberOfConnections set to true.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_TX</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConnectionBuffer.Transmit_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The service primitive FrTp_Transmit shall be terminated and the return value shall be set to
      E_NOT_OK if
      a) FrTpLimitNumberOfConnections is true and
      b) the number of active connections for the connection's remote address is equal to its
         maximum value set by FrTpConnectionLimit in FrTpConnectionLimitConfig (does not apply if
         the remote address is not listed as FrTpRa in FrTpConnectionLimitConfig), or all channels
         are currently busy and
      c) the number of currently buffered connections for the connection's remote address is less
         than its maximum value (set either by FrTpConnectionBufferSize in FrTpConnectionLimitConfig
         or FrTpConnectionBufferSizeUnlimited if the remote address is not listed in
         FrTpConnectionLimitConfig), i.e. the corresponding buffer is not full and
      d) a connections with the same TxSduId is already active
        (occupying a channel which is not idle) or part of the corresponding connection buffer of
        the connection's remote address.
      Additionally, the FrTp module shall raise a development error FRTP_E_NO_CHANNEL when
      development error detection for the FrTp module is enabled.
      This requirement overwrites the behavior described in FRTP1041 for the case of
      FrTpLimitNumberOfConnections set to true.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_TX</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConnectionBuffer.Transmit_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The service primitive FrTp_Transmit should buffer the connection request by saving FrTpTxSduId
      and PduInfoPtr.SduLength as a new element at the tail of the connection buffer of the
      connection's remote address and return E_OK without setting the flag TX_SDU_AVAILABLE if
      a) FrTpLimitNumberOfConnections is true and
      b) the number of active connections for the connection's remote address is equal to its
         maximum value set by FrTpConnectionLimit in FrTpConnectionLimitConfig (does not apply if
         the remote address is not listed as FrTpRa in FrTpConnectionLimitConfig), or all channels
         are currently busy and
      c) the number of currently buffered connections for the connection's remote address is less
         than its maximum value (set either by FrTpConnectionBufferSize in FrTpConnectionLimitConfig
         or FrTpConnectionBufferSizeUnlimited if the remote address is not listed in
         FrTpConnectionLimitConfig), i.e. the corresponding buffer is not full and
      d) a connections with the same TxSduId is neither active (occupying a channel which is not
         idle) nor part of the corresponding connection buffer of the connection's remote address.
      This requirement overwrites the behavior described in FRTP1041 for the case of
      FrTpLimitNumberOfConnections set to true.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_TX</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConnectionBuffer.TxChannelReset</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If a transmission channel reset is initiated and the following conditions hold
      a) FrTpLimitNumberOfConnections is true and
      b) the channel is currently not used for reception in case full-duplex support is activated,
      the function to start a buffered connection shall be called (cf.
      FrTp.EB.ConnectionBuffer.StartBufferedConnection).
      This requirement expands the behavior described in FRTP1057 for the case of
      FrTpLimitNumberOfConnections set to true.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_TX</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConnectionBuffer.RxChannelReset</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If a reception channel reset is initiated and the following conditions hold
      a) FrTpLimitNumberOfConnections is true and
      b) the channel is currently not used for transmission in case full-duplex support is activated,
      the function to start a buffered connection shall be called (cf.
      FrTp.EB.ConnectionBuffer.StartBufferedConnection).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_FD</srcid><srcstatus/><internalId>777</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_SEGM_RX_TX</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_UNSEGM_RX_FAIL_TX</srcid><srcstatus/><internalId>779</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_SEGM_RX_TX_CONC_HD</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_SEGM_RX_TX_CONC_FD</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

    <specobject>
      <id>FrTp.EB.ConnectionBuffer.StartBufferedConnection</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the function to start a buffered connection is called, the FrTp module shall select a buffered connection.
      This is done by first checking if the buffer of the finished connection's remote address is not empty. If this is
      the case, the head element of this buffer is selected. Otherwise, all other buffers, whose connection limit is
      not reached, should be checked for being non-empty in no particular order. The head element of the first resulting
      buffer shall be selected. If a buffered connection has been selected it shall be started.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_TX</srcid><srcstatus/><internalId>776</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_FD</srcid><srcstatus/><internalId>777</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_SEGM_RX_TX</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_UNSEGM_RX_FAIL_TX</srcid><srcstatus/><internalId>779</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_SEGM_RX_TX_CONC_HD</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_SEGM_RX_TX_CONC_FD</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

    <specobject>
      <id>FrTp.EB.MetaDataHandling.Parameter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a precompile parameter FrTpMetaDataHandlingEnable which enables or disables
        the functionality to support metadata handling.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_UNSEGM</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_STFA_UNSEGM</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_STFA_SEGM</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM_ECUC_FAIL</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_TX_STFA_SEGM_ECUC_FAIL</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

    <specobject>
      <id>FrTp.EB.UlCallout.Config.Parameter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be an optional precompile parameter container FrTpUlCalloutConfig.
        This container shall include the parameters FrTpUlCalloutHeaderFileName and FrTpUlCalloutRxIndicationName.
        If the container is enabled the functionality to support callouts preceeding upper layer
        function calls is enabled, otherwise disabled.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.UlCallout.Config.Function</srcid><srcstatus/><internalId>431</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.UlCallout.HeaderFileName.Parameter</srcid><srcstatus/><internalId>432</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

    <specobject>
      <id>FrTp.EB.UlCallout.Config.Function</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the container FrTpUlCalloutConfig is enabled the functionality to support callouts preceeding upper layer
        function calls is enabled, otherwise disabled.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.UlCallout.HeaderFileName.Function</srcid><srcstatus/><internalId>433</internalId></linkedfrom><linkedfrom><srcid>FrTp.EB.UlCallout.RxIndicationName.Function</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.UlCallout.Config.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

    <specobject>
      <id>FrTp.EB.UlCallout.HeaderFileName.Parameter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a precompile parameter FrTpUlCalloutHeaderFileName for the name of the
        header file that contains the declarations of the callout functions.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.UlCallout.HeaderFileName.Function</srcid><srcstatus/><internalId>433</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrTp_Cfg.h.m4_15</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.UlCallout.Config.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

    <specobject>
      <id>FrTp.EB.UlCallout.HeaderFileName.Function</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If FrTpUlCalloutConfig is enabled the file indicated by FrTpUlCalloutHeaderFileName
        shall be included by FrTp.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_2</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.UlCallout.HeaderFileName.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.Config.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>

    <specobject>
      <id>FrTp.EB.UlCallout.RxIndicationName.Parameter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be an optional precompile parameter FrTpUlCalloutRxIndicationName for the name of
        a callout function with the following signature:
        void FrTpUlCalloutRxIndicationName(PduIdType RxPduId, uint16 FrTpLa, uint16 FrTpRa, uint8 FrameType, PduInfoType *PduInfoPtr)
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.UlCallout.RxIndicationName.Function</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrTp_Cfg.h.m4_91</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>

    <specobject>
      <id>FrTp.EB.UlCallout.RxIndicationName.Function</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If FrTpUlCalloutRxIndicationName is enabled, the function indicated by it
        shall be called before every PduR_FrTpCopyRxData() call that would pass
        payload data of a frame to the upper layer,
        i.e. its paramter PduInfoPtr-&gt;SduDataPtr not being a NULL_PTR.
        The parameters shall have the following values:
        RxPduId: FrTpRxSduId of the respective FrTpConnection
        RxPduId: FrTpRxSduId of the respective FrTpConnection
          Corresponding to the RxPduId of the subsequent PduR_FrTpCopyRxData() call
        FrTpLa: Local i.e. target address of the received frame
        FrTpRa: Remote i.e. source address of the received frame
        FrameType:
          0x40 for (un)acknowledged start frames
          0x50 for consecutive frames (1 or 2)
          0x90 for last frames
        PduInfoPtr: Containing length of and pointer to the payload of the frame
          Corresponding to the PduInfoPtr of the subsequent PduR_FrTpCopyRxData() call
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_UNSEGM</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_CF</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_METADATA_HANDLING_RX_LF</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRECEPTION_BUSY_CLB</srcid><srcstatus/><internalId>874</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRECEPTION_BUSY_CLB</srcid><srcstatus/><internalId>875</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_VALID_AFTERRETRY</srcid><srcstatus/><internalId>877</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_LOWBUFFER_FOR_STFU_CLB</srcid><srcstatus/><internalId>878</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGNACK_FRTPCOPYRXDATA_BUSY_CLB</srcid><srcstatus/><internalId>880</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEGNACK_FRTPCOPYRXDATA_BUSY_CLB</srcid><srcstatus/><internalId>881</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEGNACK_FRTPCOPYRXDATA_ZEROBUF_CLB</srcid><srcstatus/><internalId>882</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_STFU_MAXWAIT_CLB</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.Config.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>435</internalId></specobject>


  </specobjects>
    <specobjects doctype="swurs">

 <!-- Autosar 4.0 TP API Reception -->
    <specobject>
      <id>FrTp.ASR40.StartOfReception</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL shall provide an API function with the following signature:
        BufReq_ReturnType UL_[LL]StartOfReception(PduIdType RxPduId, PduLengthType TpSduLength, PduLengthType *BufferSizePtr)
        UL: Upper layer module prefix - see related SWS.
        LL: Lower layer module prefix (optional) - see related SWS.
        RxPduId [in]: identifies the Rx connection
        TpSduLength [in]: length of the total message to be transported via this connection
        *BufferSizePtr [out]: available length of the reserved buffer
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.StartOfReception.BUFREQ_OK</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]StartOfReception() shall reserve a buffer for the 'RxPduId', set output parameter
        'BufferSizePtr' to the size of the reserved buffer and return BUFREQ_E_OK.
        Note: If a buffer has already been reserved for this 'RxPduId'
        it shall be cleared and stay reserved for this 'RxPduId'.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.StartOfReception.BUFREQ_E_NOT_OK</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]StartOfReception() shall perform the module-API specific DET checks (module initialization,
        argument values) and return BUFREQ_E_NOT_OK if any check fails.
        UL_[LL]StartOfReception() shall discard the buffer if already reserved for this 'RxPduId'.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.StartOfReception.BUFREQ_E_OVFL</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]StartOfReception() shall set return BUFREQ_E_OVFL if the requested 'TpSduLength' exceeds
        the UL module's message length limitations (if available).
        UL_[LL]StartOfReception() shall discard the buffer if already reserved for this 'RxPduId'.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.StartOfReception.NoBuffer</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52007</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If buffer allocation temporary fails for this 'RxPduId', then UL_[LL]StartOfReception() shall
        set output parameter 'buffersize' to 0 and return BUFREQ_OK.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.StartOfReception.BUFREQ_E_BUSY</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52007</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]StartOfReception() shall never return BUFREQ_E_BUSY
        (see TpApi.UL.StartOfReception.NoBuffer instead).
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyRxData</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=56021</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL shall provide a API function with the following signature:
        BufReq_ReturnType UL_[LL]CopyRxData(PduIdType RxPduId, const PduInfoType* PduInfoPtr, PduLengthType* BufferSizePtr)
        UL: Upper layer module prefix - see related SWS.
        LL: Lower layer module prefix (optional) - see related SWS.
        RxPduId [in]: identifies the Rx connection
        PduInfoPtr [in]: payload and length the received pdu
        BufferSizePtr [out]: available length of the buffer (after copying the pdu to the buffer)
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyRxData.BUFREQ_E_NOT_OK</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]CopyRxData() shall return BUFREQ_E_NOT_OK if any of the module-API specific DET checks
       (module initialization, argument values) fails.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyRxData.BUFREQ_E_NOT_OK2</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If UL_[LL]CopyRxData() is called and there is no reception already ongoing
        for the requested NPdu (see  ASR40.StartOfReception.BUFREQ_OK), then UL_[LL]CopyRxData() doesn't
        perform any further operation (beside Det reporting if requried by the particular SWS) but returns BUFREQ_E_NOT_OK.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyRxData.BufferAllocation</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]CopyRxData() shall reserve a buffer if no buffer has been reserved for this 'RxPduId'.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyRxData.BufferSize</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]CopyRxData() shall return BUFREQ_OK and write the available size of the reserved
        buffer to output parameter 'BufferSizePtr' for this 'RxPduId'.
        If the 'PduInfoPtr-&gt;SduDataPtr' is NULL_PTR, no data shall be copied.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyRxData.BUFREQ_E_BUSY</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]CopyRxData() shall return BUFREQ_E_BUSY and write the the currently free buffersize
        to output parameter 'BufferSizePtr' if the buffer available is smaller than 'PduInfoPtr-&gt;SduLength'.
        Note: No data shall be copied.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyRxData.BUFREQ_OK</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]CopyRxData() shall copy the data passed at PduInfo into the reserved buffer and
        write the remaining size (after copying) of the reserved buffer to output parameter
        'BufferSizePtr' and return BUFREQ_OK.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxIndication</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL shall provide an API function with the following signature:
        void UL_[LL]RxIndication(PduIdType RxPduId, Std_ReturnType Result)
        UL: Upper layer module prefix - see related SWS.
        LL: Lower layer module prefix (optional) - see related SWS.
        RxPduId [in]: identifies the Rx connection
        Result [in]: connection transfer result
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxIndciation.InvalidId</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If UL_[LL]RxIndication() is called with an invalid RxPduId:
         - RxPduId unknown
         - no receive session ongoing for this RxPduId
        then the function shall be exited without any further operation.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxIndication.BufferDeallocation</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        Calling UL_[LL]RxIndication shall discard the buffer for 'RxPduId'.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxIndication.Precondition</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=53674</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL shall call UL_[LL]RxIndication() only, if a previous call to UL_[LL]StartOfReception() returned BUFREQ_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ASR40.RxIndication.Precondition1</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxIndication.Precondition1</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL shall call UL_[LL]RxIndication() only, if a previous call to UL_[LL]StartOfReception()
        returned BUFREQ_OK or BUFREQ_E_BUSY.
      </description>
      <comment>
        This requriement replaces FrTp.ASR40.RxIndication.Precondition for compatibility reasons for
        upper layer not implementing FrTp.ASR40.StartOfReception.BUFREQ_E_BUSY so far.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_SOF_RXINDICATION</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_STFA_MAXRN</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRECEPTION_BUSY</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRECEPTION_ZEROBUFF</srcid><srcstatus/><internalId>866</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxIndication.Precondition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>


    <specobject>
      <id>FrTp.ASR40.Rx.BufferHandling1</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If a buffer is reserved for an 'RxPduId' using UL_[LL]StartOfReception() or  UL_[LL]CopyRxData()
        it must be guaranteed and used exclusively for this 'RxPduId'.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.Rx.BufferHandling2</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        The size of the available buffer for an 'RxPduId' shall decrease only by calling UL_[LL]CopyRxData()
        for the same 'RxPduId'.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.Rx.BufferHandling3</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        The size of the available buffer for an 'RxPduId' may increase without any intervention of the Tp modules (due to the upper layer consuming the data).
        (E.g.
          - buffer gets filled during reception
          - PduR starts transmission of buffer on another connection (Tp-gateway)
          - available buffer increases as data has been transmitted
        )
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>

<!-- Autosar 4.0 TP API Transmission -->
    <specobject>
      <id>FrTp.ASR40.Transmit</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL shall provide an API function with the following signature:
        Std_ReturnType LL_Transmit(PduIdType TxPduId, const PduInfoType* PduInfoPtr)
        LL: Lower layer module prefix - see related SWS.
        TxPduId [in]: identifies the Tx connection
        PduInfoPtr [in]: Information about the NPdu to transmit.
                            PduInfoPtr-&gt;SduLength contains the total NSdu length.
                            PduInfoPtr-&gt;SduDataPtr shall not be used.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP149</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.Transmit.E_NOT_OK1</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL_Transmit() shall perform the module-API specific DET checks (module initialization,
        argument values) and return E_NOT_OK if any check fails.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1040</srcid><srcstatus/><internalId>84</internalId></linkedfrom><linkedfrom><srcid>FRTP1041</srcid><srcstatus/><internalId>85</internalId></linkedfrom><linkedfrom><srcid>FRTP1185</srcid><srcstatus/><internalId>86</internalId></linkedfrom><linkedfrom><srcid>FRTP1139</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>FRTP1140</srcid><srcstatus/><internalId>257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.Transmit.E_NOT_OK2</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If LL_Transmit() is called and there is a transmission already ongoing
        (see FrTp.ASR40.Transmit.Session)for the requested NPdu, then LL_Transmit doesn't
        perform any further operation but returns E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_HALFDUPLEX_COMMUNICATION</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TRANSMIT_E_NOT_OK</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.Transmit.E_OK</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL_Transmit() returns E_OK if it accepts the transmit request.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP149</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.Transmit.Session</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=53674</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        A transmit session for an specific NPdu starts with LL_Transmit() returning E_OK and ends
        with the related  UL_[LL]TxConfirmation() call.
        If LL_Transmit() returns E_OK, the LL must finish the transmission session calling
        UL_[LL]TxConfirmation(), no matter of the transmission result.
        If LL_Transmit() returns a value different from E_OK, UL_[LL]TxConfirmation() must not be
        called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TRANSMIT_E_NOT_OK</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL shall provide a API function with the following signature:
        BufReq_ReturnType UL_[LL]CopyTxData(PduIdType TxPduId, PduInfoType* PduInfoPtr, RetryInfoType* RetryInfoPtr, PduLengthType* AvailableDataPtr)
        UL: Upper layer module prefix - see related SWS.
        LL: Lower layer module prefix (optional) - see related SWS.
        TxPduId [in]: identifies the Tx connection.
        PduInfoPtr [in/out]: payload pointer to store transmit data to [out] and length of the required transmit paylod [in].
        RetryInfoPtr [in]: payload data retry handling information.
        AvailableDataPtr [out]: tx-payload currently available from UL after copy operation has been performed.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData.BUFREQ_NOT_OK1</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]CopyTxData() shall perform the module-API specific DET checks (module initialization,
        argument values) and return BUFREQ_E_NOT_OK if any check fails.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData.BUFREQ_NOT_OK2</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If UL_[LL]CopyTxData() is called and there is no transmission already ongoing
        for the requested NPdu (see ASR40.Transmit.Session), then UL_[LL]CopyTxData() doesn't
        perform any further operation (beside Det reporting if requried by the particular SWS) but returns BUFREQ_E_NOT_OK.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData.BufferHandling</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
         If UL_[LL]CopyTxData() shall maintain a buffer with transmit data (tx-buffer).
         It shall mark the position of payload data already transmitted within this tx-buffer.
         It shall be possible to rewind the mark back to already transmitted data.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData.Retry</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If RetryInfoPtr-&gt;TpDataState == TP_RETRY, the internal
        transmitted data mark shall be rewinded by RetryInfoPtr-&gt;TxTpDataCnt bytes.
        All data before the new rewinded mark may be discarded (since retry is an implicit confirmation for all data before the new rewinded mark).
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData.RetryError</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If  RetryInfoPtr-&gt;TpDataState == TP_RETRY, and
        RetryInfoPtr-&gt;TxTpDataCnt is larger than the available payload data prior to the current transmitted data mark
	UL_[LL]CopyTxData() shall return BUFREQ_E_NOT_OK.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData.NoData</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If available payload data within the tx-buffer measured from the mark of transmitted payload
        is smaller than PduInfoPtr-&gt;SduLength, write the available data length to AvailableDataPtr and
        return BUFREQ_E_BUSY.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData.ConfirmData1</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If RetryInfoPtr-&gt;TpDataState == TP_DATACONF, the
        internal tx-buffer from start until the mark of already transmitted data may be discarded.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData.ConfirmData2</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If RetryInfoPtr == NULL_PTR, the
        data within the tx-buffer from start until the mark of already transmitted data may be discarded.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData.CopyData</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]CopyTxData() shall copy PduInfoPtr-&gt;SduLength bytes of payload from
        the internal tx-buffer (current mark) to PduInfoPtr-&gt;SduDataPtr and forward the internal
        mark of transmitted payload by PduInfoPtr-&gt;SduLength bytes.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>

     <specobject>
      <id>FrTp.ASR40.CopyTxData.AvailableData</id>
      <status>rejected</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-21</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL_[LL]CopyTxData() shall write the amount of payload within the tx-buffer which has
        not been copied yet to AvailableDatatPtr and return BUFREQ_OK.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxConfirmation</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL shall provide an API function with the following signature:
        void UL_[LL]TxConfirmation(PduIdType TxPduId, Std_ReturnType Result)
        UL: Upper layer module prefix - see related SWS.
        LL: Lower layer module prefix (optional) - see related SWS.
        TxPduId [in]: identifies the Tx connection
        Result [in]: connection transfer result
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxConfirmation.InvalidId</id>
      <status>rejected</status>
      <source>EB</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If UL_[LL]TxConfirmation() is called with an invalid TxPduId:
         - TxPduId unknown
         - no transmission session ongoing for this TxPduId
        then the function shall be exited without any further operation (beside Det reporting if requried by the particular SWS).
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxConfirmation.BufferDeallocation</id>
      <status>rejected</status>
      <source>Specification of PDU Router V3.2.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        The LL shall call UL_[LL]TxConfirmation() when finishing an ongoing transmission.
        The result of the transmission is passed as Result.
        All tx-buffers shall be discarded before exiting UL_[LL]TxConfirmation.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <!-- Autosar 4.0 TP API Cancel/Change -->

    <specobject>
      <id>FrTp.ASR40.CancelReceive</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL shall provide an API function with the following signature:
        Std_ReturnType LL_CancelReceive(PduIdType RxPduId)
        LL: Lower layer module prefix - see related SWS.
        RxPduId [in]: identifies the Rx connection
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1172</srcid><srcstatus/><internalId>263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CancelReceive.E_NOT_OK</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>2</version>
      <priority>high</priority>
      <description>
        LL_CancelReceive() shall perform the module-API specific DET checks (module initialization,
        argument values) and return E_NOT_OK if any check fails.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1180</srcid><srcstatus/><internalId>148</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CancelReceive.E_OK</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52106</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL_CancelReceive() shall cancel the reception (and send an FC.ABT if supported by the protocol).
        If the cancellation has been performed E_OK shall be returned. In any other case return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1181</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>FRTP1172</srcid><srcstatus/><internalId>263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CancelReceive.RxIndication</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52106</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If the receive connection has been aborted by prevoiously calling LL_CancelReceive() and
        the Tp-statemachine has reached it's idle state, report UL_[LL]RxIndication(Id,NTFRSLT_E_NOT_OK).
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>

   <specobject>
      <id>FrTp.ASR40.CancelTransmit</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL shall provide an API function with the following signature:
        Std_ReturnType LL_CancelTransmit(PduIdType TxPduId)
        LL: Lower layer module prefix - see related SWS.
        TxPduId [in]: identifies the Tx connection
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP150</srcid><srcstatus/><internalId>258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CancelTransmit.E_NOT_OK</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL_CancelTransmit() shall perform the module-API specific DET checks (module initialization,
        argument values) and return E_NOT_OK if any check fails.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1141</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CancelTransmit.E_OK</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52106</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL_CancelTransmit() shall cancel the transmission.
        If the request has been accepted E_OK shall be returned. In any other case return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP150</srcid><srcstatus/><internalId>258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CancelTransmit.TxConfirmation</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52106</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If the transmit connection has been aborted by prevoiously calling LL_CancelTransmit() and
        the Tp-statemachine has reached it's idle state, report UL_[LL]TxConfirmation(Id,NTFRSLT_E_NOT_OK).
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.ChangeParameter</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        UL shall provide an API function with the following signature:
        Std_ReturnType LL_ChangeParameter(PduIdType Id, TPParameterType parameter, uint16 value)
        LL: Lower layer module prefix - see related SWS.
        id [in]: identifies the Tx connection
        parameter [in]: parameter to be changed
        value [in]: value the parameter shall be set to
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP151</srcid><srcstatus/><internalId>260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.ChangeParameter.E_NOT_OK</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL_ChangeParameter() shall perform the module-API specific DET checks (module initialization,
        argument values) and return E_NOT_OK if any check fails.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FRTP1143</srcid><srcstatus/><internalId>261</internalId></linkedfrom><linkedfrom><srcid>FRTP1144</srcid><srcstatus/><internalId>262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.ChangeParameter.E_OK</id>
      <status>approved</status>
      <source>Specification of FlexRay ISO Transport Layer V4.0.0</source>
      <creationdate>2012-08-07</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        LL_ChangeParameter() shall change the 'parameter' to the 'value' synchronously.
        If the change has been performed E_OK shall be returned. In any other case return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.ChangeParameter</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>

<!-- FrTp specific requriements for Tx-API usage -->
    <specobject>
      <id>FrTp.ASR40.TxSTF_1</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If FrTp_Transmit is called, FrTp shall call PduR_FrTpCopyTxData() to fill the STF with data.
        PduInfoPtr-&gt;SduLength is set to the length of the STF which is MIN(MsgLength,PduLength).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_MIN_ML_PDUL</srcid><srcstatus/><internalId>909</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxCF</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        After CTS fill CF Tx-Pdus with PduR_FrTpCopyTxData()
        -) as long as data copied is less than BfS
        -) as long PduR_FrTpCopyTxData() returns BUFREQ_OK and AvailableBuffer is larger than 0.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_COPYTXDATA_FRAME_BFS</srcid><srcstatus/><internalId>907</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_PDUR_DIFF_SIZES</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxPduRBufferUnderrun</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2019-07-11</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If temporarily no more data is available from the PduR, the module shall (re)try to get a
        buffer in the next main function invocation until FrTpMaxBufReq is exceeded.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_PDUR_DIFF_SIZES</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxCFEOB</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>2</version>
      <priority>high</priority>
      <description>
        A CFEOB shall be send if data copied is equal to BfS.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_COPYTXDATA_FRAME_BFS</srcid><srcstatus/><internalId>907</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_PDUR_DIFF_SIZES</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxLF</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        A LF shall be send if the remaining data fits into the LF-Pdu and BfS is respected.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_COPYTXDATA_FRAME_BFS</srcid><srcstatus/><internalId>907</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxNoRetry</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        For unacknowledged transmission FrTp shall pass NULL_PTR to PduR_FrTpCopyTxData() argument
        RetryInfoPtr.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_SEGM_NACK</srcid><srcstatus/><internalId>937</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_UNSEGM_NACK</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_NO_RETRY</srcid><srcstatus/><internalId>940</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxDATACONF</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        For acknowledged transmission FrTp shall pass TP_DATACONF to PduR_FrTpCopyTxData() argument
        RetryInfoPtr for the first CF/CFEOB/LF after a received FC-CTS.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RETRY_DATACONF</srcid><srcstatus/><internalId>908</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_SEG_MSG_NO_CF</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.TxRETRY</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=52897</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If FC-RETRY is received for acknowledged transmission FrTp shall pass TP_RETRY and the negative
        offset to the current copy location calculated from the BP received within the FC to
        PduR_FrTpCopyTxData() argument RetryInfoPtr for the next CF/CFEOB/LF to transmit.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_RETRY</srcid><srcstatus/><internalId>887</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_SEGM_NACK</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.CopyTxData_Error</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If PduR_FrTpCopyTxData returns a value different from BUFREQ_OK or BUFREQ_E_BUSY, FrTp shall
        return E_NOT_OK for FrTp_TriggerTransmit called for remaining PDUs, wait for pending
        transmission confirmations and finally call PduR_FrTpTxconfirmation(NTFRSLT_E_NOT_OK) and
        reset the statemachine.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_COPYTXDATA_ERROR</srcid><srcstatus/><internalId>916</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>

<!-- FrTp specific requriements for Rx-API usage -->

    <specobject>
      <id>FrTp.ASR40.RxSTF_1</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If FrTpCopyToLocalBuffer must be set to false,
        Acknowledged transmission:
        If PduR_FrTpStartOfReception() for STF returns
        - BUFREQ_E_BUSY or
        - BUFREQ_OK and the AvailableBuffer is smaller than the STF
        then FrTp shall not copy the data but send a FC-RETRY.
      </description>
      <comment>
        Please note that this requirement deviates from the specification which requires a STF buffer.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STFA_MAXRN</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_LOWBUFFER_FOR_STFA</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxSTF_1b</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If FrTpCopyToLocalBuffer must be set to false,
        Acknowledged transmission:
        If PduR_FrTpCopyRxData() for STF returns
        - BUFREQ_E_BUSY
        then FrTp shall not copy the data but send a FC-RETRY.
      </description>
      <comment>
        Please note that this requirement deviates from the specification which requires a STF buffer.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STFA_MAXRN</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxSTF_2</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If FrTpCopyToLocalBuffer must be set to false,
        Unacknowledged segmented transmission:
        If PduR_FrTpStartOfReception() returns
        - BUFREQ_E_BUSY or
        - BUFREQ_OK and the AvailableBuffer is smaller than the STF
        then FrTp shall not copy the data but send a FC-ABT and call
        PduR_FrTpRxIndication(NTFRSLT_E_NOT_OK).
      </description>
      <comment>
        Please note that this requirement deviates from the specification which requires a STF buffer.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRECEPTION_BUSY</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_LOWBUFFER_FOR_STFU</srcid><srcstatus/><internalId>868</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxSTF_2b</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If FrTpCopyToLocalBuffer must be set to false,
        Unacknowledged segmented transmission:
        If PduR_FrTpCopyRxData() for STF returns
        - BUFREQ_E_BUSY
        then FrTp shall not copy the data but send a FC-ABT and call
        PduR_FrTpRxIndication(NTFRSLT_E_NOT_OK).
      </description>
      <comment>
        Please note that this requirement deviates from the specification which requires a STF buffer.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEG_FRTPCOPYRXDATA_BUSY</srcid><srcstatus/><internalId>869</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxSTF_3</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If PduR_FrTpStartOfReception() returns BUFREQ_OK and the AvailableBuffer is
        equal or larger than the STF, then FrTp shall call PduR_FrTpCopyRxData() and pass
        the received payload.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STARTOFRECEPTION</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxSTF_4</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If PduR_FrTpStartOfReception() returns BUFREQ_E_NOT_OK, then FrTp shall
        - send an ABORT frame
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STARTOFRECEPTION_NOT_OK</srcid><srcstatus/><internalId>786</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxCTS_1</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If PduR_FrTpCopyRxData() returns BUFREQ_OK for the STF copy and the still
        AvailableBuffer is larger than 0, then the FrTp shall send a FC-CTS with BfS equal to the
        AvailableBuffer.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RXFCS_1</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxWAIT_1</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If PduR_FrTpCopyRxData() returns BUFREQ_OK for the STF copy and the still
        AvailableBuffer is 0:
        - PduR_FrTpCopyRxData() shall be called again with the next FrTp_Mainfunction() invocation
        without received data (SduDataPtr = NULL_PTR, SduLength = 0) to re-evaluate the
        AvailableBuffer.
        - Depending on the size of AvailableBuffer either a CTS (if AvailableBuffer&gt;0) or a WAIT frame (if
        AvailableBuffer==0) shall be sent.
      </description>
      <comment>
        TimeBr is respected when sending WAIT frame.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RXFCS_1</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxNoBuffer</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=50308</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If PduR_FrTpCopyRxData() returns BUFREQ_E_BUSY for copy of CF/CFEOB/LF, then FrTp shall
        - send FC-ABT
        - abort the connection
        - and call PduR_FrTpRxIndication(NTFRSLT_E_NOT_OK).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RXFCS_1</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RXNOBUFFER_EOB</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RXNOBUFFER_LF</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxBufferError</id>
      <status>approved</status>
      <source>http://www.autosar.org/bugzilla/show_bug.cgi?id=50308</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If PduR_FrTpCopyRxData()returns BUFREQ_E_NOT_OK for copy of CF/CFEOB/LF, then FrTp shall
        - send FC-ABT
        - abort the connection
        - and call PduR_FrTpRxIndication(NTFRSLT_E_NOT_OK).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_CF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_CFEOB_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxCTS_2</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If PduR_FrTpCopyRxData() returns BUFREQ_OK for the CFEOB copy and the still
        AvailableBuffer is larger than 0, then the FrTp shall send a FC-CTS with BfS equal to the
        AvailableBuffer.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RXFCS_2</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>

    <specobject>
      <id>FrTp.ASR40.RxWAIT_2</id>
      <status>approved</status>
      <source>EB</source>
      <creationdate>2012-08-31</creationdate>
      <version>1</version>
      <priority>high</priority>
      <description>
        If PduR_FrTpCopyRxData() returns BUFREQ_OK for the CFEOB copy and the still
        AvailableBuffer is 0:
        - PduR_FrTpCopyRxData() shall be called again with the next FrTp_Mainfunction() invocation
        without received data (SduDataPtr = NULL_PTR, SduLength = 0) to re-evaluate the
        AvailableBuffer.
        - if AvailableBuffer&gt;0 a CTS frame shall be sent, if AvailableBuffer==0 a WAIT frame shall be sent
      </description>
      <comment>
        TimeBr is respected when sending WAIT frame.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RXFCS_2</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

    </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrTp.ISO10681_0001</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Segmented messages are always concluded with a LastFrame. This frame might
      include the last bytes of the message if they did not fit completely
      into the previous ConsecutiveFrame. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_8</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0002</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      An acknowledged message transmission that is started with a StartFrame_ACK is
      always concluded by the receiver with a FlowControl_ACK after the
      reception of the last frame of the message, which can  either be a single
      StartFrame or a LastFrame (in the case of a multiframe transmission). 
      </description>
      <comment>
      Reception of STFA shall be concluded with FC ACK even if FrTpAckType=FRTP_NO
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_6</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_DIFF_ML</srcid><srcstatus/><internalId>846</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK_1</srcid><srcstatus/><internalId>873</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_DIFF_ML</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0003</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The request to acknowledge the reception of a block of ConsecutiveFrames via
      the ConsecutiveFrame_EOB shall always be confirmed by the receiver with
      a FlowControl frame which indicates the status of the reception (CTS,
      WAIT, etc.). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_3</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0005</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      In the case of a known message length transmission where the amount of data
      fits into a single STF and is completely available for transmission, a
      LastFrame will not be transmitted. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEGM_ACK</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0006</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Functional requests are transmitted as unsegmented and unacknowledged messages.
      Any other format will be ignored by the communication layer (no error
      will be communicated). 
      </description>
      <comment>
      Functional requests (i.e. requests for connections having MultipleReceiverCon=true) shall be (silently) ignored
      - if STF is segmented OR
      - if STF is unacknowledged
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FUNC_INVALID_RX</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0007</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If an STFU payload length is greater than the possible payload in an STFU, then
      the frame shall be ignored by the receiver. 
      </description>
      <comment>According to Table 11 valid values of frame payload length are 1 to 246</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_STFU_FPL_LENGTHCHECK</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0008</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      These parameters refer to addressing information. As a whole, the C_AI
      parameters are used to identify the source address (C_SA) and target
      address (C_TA) of message senders and recipients. See Table 2 (file: ISO10681_0008.png). 
      </description>
      <comment>
      Of each transmitted Pdu:
      - Byte 1 and 2 contain target address
      - Byte 3 and 4 contain source address
      - see ISO10681_0008.png for endianess
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_FunctionalAdressing</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Functional   addressing 	(1-to-n   communication - multicast/broadcast)   shall   only   be   supported   for 
      unsegmented, unacknowledged, known message length communication messages. 
      </description>
      <comment>
      If FrTpMultipleReceiverCon=true
      - a xdm check shall ensure that FrTpAckType=FRTP_NO
      - FrTp_Transmit shall return E_NOT_OK if the frame payload length is larger than the largest TxPdu of the associated TxPduPool
      - the message shall be transmitted unsegmented as soon as a sufficiently large TxPdu is free
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_TX_MULTIPLE_RECEIVER_CON1</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TX_MULTIPLE_RECEIVER_CON</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrTp_Extension.xdm.m4_283</srcid><srcstatus/><internalId>675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP570</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_TIMEOUT_As</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_TIMEOUT_A (NTFRSLT_E_TIMEOUT_A), on sender side:
      This value is issued to the protocol user when the timer C_As has passed its
      time-out value C_Asmax.
      </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_ERROR</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_TIMEOUT_AS</srcid><srcstatus/><internalId>892</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT_ERROR</srcid><srcstatus/><internalId>913</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CON_SAMECONCTRL</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Ar</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_TIMEOUT_A (NTFRSLT_E_TIMEOUT_A), on receiver side:
      This value is issued to the protocol user when the timer C_Ar has passed its
      time-out value C_Armax.
      </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX_ERROR</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_TIMEOUT_AR</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Bs</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_TIMEOUT_Bs (NTFRSLT_E_TIMEOUT_BS), on sender side:
      This value is issued to the service user when the timer C_Bs has passed its
      time-out value C_Bsmax. 
      </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_TIMEOUT_BS</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT_ERROR</srcid><srcstatus/><internalId>913</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Cr</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_TIMEOUT_Cr (NTFRSLT_E_TIMEOUT_CR), on receiver side:
      This value is issued to the service user when the timer C_Cr has passed its
      time-out value C_Crmax. 
      </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_TIMEOUT_CR</srcid><srcstatus/><internalId>801</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_CONCURRENT_ERROR</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_FC_TIMEOUT</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_ML_MISMATCH</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_ML_MISMATCH (NTFRSLT_E_FR_ML_MISMATCH), on receiver side:
      This value indicates a mismatch of the message length information (ML) within
      the STF PDU, the sum of the FPL information and the LF C_PDU (check of the ML = 0 in the case an unknown message length is supported). 
    </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP142</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_ACK_SEG</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_NACK_SEG</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_WRONG_SN</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_WRONG_SN (NTFRSLT_E_WRONG_SN), on receiver side:
      This value is issued to the service user upon reception of an unexpected
      sequence number  (PCI.SN) value. For more details, see  7.5.7.2 SN Error handling. 
      </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR_ABT</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_ABORT_WRONG_SN</srcid><srcstatus/><internalId>864</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_INVALID_FS</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_INVALID_FS (NTFRSLT_E_INVALID_FS), on sender side:
      This  value  is  issued  to  the  service  user  when  an  invalid  or  unknown
      FlowStatus value has been received in a flow control (FC) C_PDU. 
      </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_ERROR_INVALID_FS</srcid><srcstatus/><internalId>928</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_UNEXP_PDU</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_UNEXP_PDU (NTFRSLT_E_UNEXP_PDU), on receiver side:
      This value is issued to the service user upon reception of an unexpected
      protocol data unit. 
      </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_UNEXPECTED_STF_SEGM</srcid><srcstatus/><internalId>802</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_UNEXPECTED_STF_UNSEGM</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_WFT_OVRN</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_WFT_OVRN (NTFRSLT_E_WFT_OVRN), on receiver side:
      The receiver shall wait until the transmission of the (WFTmax + 1) FC__WT
      C_PDU  would  occur,  but  does  not  transmit  this  FC  C_PDU  and  instead indicates the error C_WFT_OVRN to the upper layer. The sender detects a C_Bs timeout and terminates the transmission. 
    </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_WFTMax_2</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_ABORT</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_ABORT (NTFRSLT_E_ABORT), on sender side:
      This value is issued to the service user upon reception of a flow control (FC)
      C_PDU with FlowStatus = ABT. It indicates that the receiver is currently busy and cannot take the request at that point in time; therefore, the transmission of the segmented message was aborted. 
    </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_FC_ABORT</srcid><srcstatus/><internalId>888</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_CANCEL</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_CANCEL (NTFRSLT_E_CANCELATION_OK), on sender side:
      This value is issued to the service user upon the cancellation of an ongoing
      transmission as requested by the upper application via the cancel service primitive. 
      </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.RxTxCancel</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_BUFFER_OVFLW</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_BUFFER_OVFLW (NTFRSLT_E_NO_BUFFER), on sender side:
      This value is issued to the service user upon reception of a flow control (FC)
      C_PDU with FlowStatus = OVFLW. It indicates that the buffer on the receiver 
      side of a segmented message transmission cannot store the number of bytes 
      specified  by  the  StartFrame  MessageLength (STF_ML)  parameter  in  the 
      StartFrame;  therefore,  the  transmission  of  the  segmented  message  was aborted. 
      </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_E_NO_BUFFER</srcid><srcstatus/><internalId>926</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_WRONG_BP</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_WRONG_BP (NTFRSLT_E_FR_WRONG_BP), on sender side:
      This value is issued to the service user upon reception of a flow control (FC)
      C_PDU with FlowStatus = ACK_RET, where BP points to a position outside the buffer of the sender. Therefore, the sender cannot provide the requested data anymore. The segmented message was aborted. 
    </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_RETRY_1</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_ERROR_INVALID_FS</srcid><srcstatus/><internalId>928</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.C_ERROR</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      C_ERROR (NTFRSLT_E_NOT_OK), on sender or receiver side:
      This is the general error value. It shall be issued to the service user when an
      error has been detected by the communication layer and no other parameter value can be used to better describe the error. 
    </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_FRIFTRAMSMIT_NOT_OK</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RXFCS_1</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRECEPTION_BUSY</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_LOWBUFFER_FOR_STFU</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_FRTPCOPYRXDATA_BUSY</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_FRTPCOPYRXDATA_BUSY</srcid><srcstatus/><internalId>870</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_FRTPCOPYRXDATA_ZEROBUF</srcid><srcstatus/><internalId>871</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_LOWBUFFER_THANML</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>FRTP557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_NotificationResults.Priority</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If two or more errors are discovered at the same time, then the communication layer entity shall use the first parameter value found in this list in the error indication to the upper layers. 
      Table 3 implicitly defines the priority of the result value evaluation by the order of the result values (the first
      entry has the highest priority).
        C_TIMEOUT_A
        C_TIMEOUT_Bs
        C_TIMEOUT_Cr
        C_ML_MISMATCH
        C_WRONG_SN
        C_INVALID_FS
        C_UNEXP_PDU
        C_WFT_OVRN
        C_ABORT
        C_CANCEL
        C_BUFFER_OVFLW
        C_WRONG_BP
        C_ERROR
        C_MOREDATA
        C_TX_ON
        C_OK
    </description>
      <comment> mapping of ISO Result values to AUTOSAR notification results is done according to FRTP557</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_ERROR_PRIORITY_RX_1</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_ERROR_PRIORITY_RX_2</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_ERROR_PRIORITY_TX_1</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0061</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Transmission of messages up to the available length of an L_PDU is performed via
      transmission of a single start frame (STF) C_PDU.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEGM_ACK</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681.Segmentation</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Segmented messages are segmented into: 
      - a StartFrame protocol data unit (STF C_PDU), containing the first byte(s); 
      - zero or more ConsecutiveFrame protocol data units  (CF C_PDU), containing each up to the maximum 
        length of the L_PDU size (might make use of varying FPL values in the case of a dynamic data transfer); 
      - one LastFrame C_PDU that concludes the transmission and might include the final data of the message
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_FRTP_RX_EMPTY_LF</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_SEG_MSG_NO_CF</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0062</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      In the case of a known message length transmission, the message length is
      transmitted in the STF C_PDU. All CF C_PDUs are numbered by the sender to
      help the receiver reassemble them in the same order. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0071</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      In the case of an unknown message length transmission, the message length transmitted in
      the ST FC_PDU indicates 0. A last frame (LF) C_PDU indicates the transmitted amount of 
      data. All CF C_PDUs in between the STF C_PDU and the LF C_PDU are numbered by the sender 
      to help the receiver reassemble them in the same order. 
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported</comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681.SeparationTime</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The associated separation time is calculated based on both subparameters of BC. Therefore, the value of the 
      separation time is either 
      - the time between two CF CPUs  
      - or between a final CF C_PDU and LF C_PDU)
      and/or the Separation Cycles Exponent (SCexp). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL_CFLF</srcid><srcstatus/><internalId>931</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL_MULTIMAIN</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0063</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      All blocks, except the last one, will consist of the amount of C_PDUs required
      to transmit the number of data bytes as indicated via NumBytesOfBlock.
      This is achieved via the transmission of multiple CF C_PDUs where the
      individual CF C_PDU may or may not be filled to its maximum number of
      bytes. 
      </description>
      <comment>NumBytesOfBlock = min (reported BfS of receiver, sender buffer size) </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_DIFF_CTS</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CF_LF_1</srcid><srcstatus/><internalId>935</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0064</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      By means of FC C_PDUs, the receiver has the possibility to control transmission
      of subsequent CF C_PDUs. 
      - FC.CTS: The authorization to continue; 
      - FC.WAIT: The request to keep waiting; 
      - FC.ABT: Abort the current message transmission/reception; 
      - FC.ACK/RET: Acknowledge the reception of a complete message or request a transmission retry of data 
        out of the current block transmitted; 
      - FC.OVFLW: Buffer overflow, the indication that the
        message length (ML) specified in the StartFrame of the segmented message exceeds the number
        of bytes that can be accepted by the receiver entity;
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_FC_ABORT</srcid><srcstatus/><internalId>888</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_FC_WAIT</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0065</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If the STF ML (message length) indicates the same length as the amount of data
      transferred in this C_PDU, then an unsegmented transmission is performed
      and this STF concludes the transmission already. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEGM_ACK</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0072</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If the STF ML (message length) indicates a length greater than the amount of data 
      transferred in this C_PDU, then  a  segmented  transmission  is  performed  and  the
      receiving  communication  layer  entity  shall  start assembling the segmented message
      on receipt of this STF C_PDU.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0066</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      It (FC C_CPDU) shall be sent by the receiving communication layer entity to the
      sending communication layer entity considering the following conditions
      for unacknowledged transmission: a) after the reception of an STFU C_PDU that indicates
      a segmented message transmission; b) after the last CF C_PDU of a block of consecutive 
      frames, if further consecutive frames need to be sent.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ISO10681_0066a</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0066b</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0066a</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      It (FC C_CPDU) shall be sent by the receiving communication layer entity to the
      sending communication layer entity considering the following conditions
      for unacknowledged transmission: a) after the reception of an STFU C_PDU that indicates
      a segmented message transmission
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_NACK_CONCURRENT</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0066b</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      It (FC C_CPDU) shall be sent by the receiving communication layer entity to the
      sending communication layer entity considering the following conditions
      for unacknowledged transmission:  b) after the last CF C_PDU of a block of consecutive 
      frames, if further consecutive frames need to be sent.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_NACK_CONCURRENT</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0067</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      It (FC C_CPDU) shall be sent by the receiving communication layer entity to
      the sending communication layer entity considering the following
      conditions for acknowledged transmission: c) after reception of an STFA C_PDU that indicates
      segmented or unsegmented message transmission; d) after the last CF C_PDU of a block of 
      consecutive frames, if further consecutive frames need to be sent; e) after an LF C_PDU
      that concludes a message transmission/reception.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ISO10681_0067c</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0067d</srcid><srcstatus/><internalId>545</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0067e</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0067c</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      It (FC C_CPDU) shall be sent by the receiving communication layer entity to
      the sending communication layer entity considering the following
      conditions for acknowledged transmission: c) after reception of an STFA C_PDU that indicates
      segmented or unsegmented message transmission
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_2</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0067d</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      It (FC C_CPDU) shall be sent by the receiving communication layer entity to
      the sending communication layer entity considering the following
      conditions for acknowledged transmission: d) after the last CF C_PDU of a block of 
      consecutive frames, if further consecutive frames need to be sent
      </description>
      <comment>
      The CTS shall be sent even if no further consecutive frames need to be sent. This is more robust and also complies to
      ISO10681_0003 which says that EVERY CFEOB shall be acknowledged.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_3</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0067e</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      It (FC C_CPDU) shall be sent by the receiving communication layer entity to
      the sending communication layer entity considering the following
      conditions for acknowledged transmission: e) after an LF C_PDU
      that concludes a message transmission/reception.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_6</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0068</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The LF C_PDU is identified by the last-frame protocol control information (LF
      C_PCI). The LF C_PDU shall be sent out by the sending network entity to
      conclude any segmented message transmission and will be received by the
      receiving network entity. The receiving entity shall pass the assembled
      message to the service user of the network receiving as follows. 1.) Unacknowledged 
      transmission:	The LF C_PDU has been received. 2.)Acknowledged transmission: The FC_ACK 
      C_PDU has been transmitted by the receiver following the reception of the LF C_PDU. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0009</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The protocol data unit (C_PDU) enables the transfer of data between the
      communication layer in one node and the communication layer in one or
      more other nodes (peer protocol entities). It has to be distinguished
      between the following three C_PDU formats. All C_PDUs consist of three
      fields, as given in Table 7 (file: ISO10681_0009.png). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0011</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Table 10 provides an overview of the STFU/STFA C_PCI byte (file: 
      ISO10681_0011_table_10.png). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_WRONG_PCI_UNSEGM_ACK</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_SEGM_NACK</srcid><srcstatus/><internalId>937</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_UNSEGM_NACK</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0012</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The parameter FPL (Frame Payload Length) is used in the STF C_PDU to specify the
      number of payload data bytes included in this STF C_PDU. The length of
      the ML (Message Length) parameter is not considered in the FPL value (see
      Table 11) (file: ISO10681_0012_table_11.png). 
      valid range: 0x1 to 0xF6
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TST_FRTP_RX_EMPTY_STF</srcid><srcstatus/><internalId>808</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0013</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The parameter ML (Message Length) is used in the STF C_PDU to specify the number
      of service user data bytes (see Table 12) (file: ISO10681_0013_table_12.png). 
      valid range: 0x1 to 0xFFFF
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0014</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Table 13 provides an overview of the CF C_PCI bytes (file: ISO10681_0014_table_13.png).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_5</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_6</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_6</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_RETRY</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0015</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The parameter FPL (Frame Payload Length, see table 14) is used in the CF C_PDU to
      specify the number of payload data bytes included in this CF C_PDU (file:
      ISO10681_0015_table_14.png). 
      valid range: 0x1 to 0xF8
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_1</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_ACK_UNSEG</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0016</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The parameter SN is used in the CF/CF_EOB C_PDU to specify the order of the
      consecutive frames. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_5</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0017</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The SN shall start with zero for all segmented messages. The STFU/STFA shall be
      assigned the value of zero. It does not include an explicit SequenceNumber in 
      the C_PCI field but shall be treated as the segments number zero. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_3</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX_5</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0018</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The SN of the first CF that immediately follows the STF shall be set to one. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_5</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0019</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The SN shall be incremented by one for each new CF that is transmitted during a
      segmented message transmission. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_5</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0020</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The SN value shall not be affected by any FC frame except when a retry is
      indicated (FS = ACK_RET). Then SN is set to zero. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_RETRY</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0021</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      When the SN reaches the value of fifteen, it shall wraparound and be set to zero
      for the next CF. This shall lead to the sequence given in Table 15. See Table 16 
      for SN values (file: ISO10681_0021_table_15.png and ISO10681_0021_table_16.png).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0022</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Table 17 provides an overview of the FC C_PCI bytes (file: ISO10681_0022_table_17.png). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_4</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR_ABT</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0023</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      A sending network entity shall support all specified (not reserved) values of
      the FS parameter (see table 18) (file: ISO10681_0023_table_18.png). 
      valid range: 3 to 7
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_4</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR_ABT</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_FC_WAIT</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Table 19 describes the usage of the FlowStatus values of either an acknowledged
      segmented or unsegmented transmission (file: ISO10681_0024_table_19.png). 
      </description>
      <furtherinfo>
        WRN.swurs.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ISO10681_0024.Seg.CTS</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.Seg.ACK_RET</srcid><srcstatus/><internalId>564</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.Seg.WT</srcid><srcstatus/><internalId>565</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.Seg.ABT</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.Seg.OVFLW</srcid><srcstatus/><internalId>567</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.Unseg.CTS</srcid><srcstatus/><internalId>568</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.STFA.ACK_RET.1</srcid><srcstatus/><internalId>569</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.STFA.ACK_RET.2</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.STFA.ACK_RET.3</srcid><srcstatus/><internalId>571</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.STFA.ACK_RET.4</srcid><srcstatus/><internalId>572</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.STFA.ACK_RET.5</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.Unseg.ABT</srcid><srcstatus/><internalId>574</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.Unseg.OVFLW</srcid><srcstatus/><internalId>575</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0024.Unseg.Unack</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.Seg.CTS</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      As defined for CTS during a multiframetransmission/reception (see Table 18):
      It shall cause the sender to resume the sending of consecutive frames. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_4</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEGM_TX2_4</srcid><srcstatus/><internalId>744</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.Seg.ACK_RET</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Used for retry handling of a segmented message transmission (see Table 18):
      In the case of a request for a retry, the BP parameter includes the byte position where the sender shall start the 
      retry. This has to be the first wrong byte position. Furthermore, this position shall be within the current block 
      of the transmission. 
    </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR_ABT</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.Seg.WT</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      As defined for WT during a segmented message transmission/reception (see Table 18):
      It shall cause the sender to continue to wait for a new FlowControl C_PDU and to restart its C_BS timer 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_FC_WAIT</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.Seg.ABT</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      As defined for ABT during a segmented message transmission/reception :
      It shall cause the sender to abort the transmission of the currently ongoing transmission
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_FC_ABORT</srcid><srcstatus/><internalId>888</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TRANSMIT_E_NOT_OK</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.Seg.OVFLW</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      As defined for OVFLW during a segmented message transmission reception (see Table 18):
      This value is used to indicate that the buffer on the receiver side of a segmented message transmission 
      cannot store the number of bytes specified by the StartFrame MessageLength (STF_ML) parameter in the StartFrame, 
      thereby aborting the transmission of the segmented message. It causes the sender to abort the currently ongoing 
      transmission. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STARTOFRECEPTION_OVFL</srcid><srcstatus/><internalId>787</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_E_NO_BUFFER</srcid><srcstatus/><internalId>926</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.Unseg.CTS</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      In an unsegmented acknowledge transmission process no CTS frame shall be transmitted.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.STFA.ACK_RET.1</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Used to indicate that the unsegmented transmission can currently not be accepted and the STFA transmission 
      has to be repeated by the sender communication layer.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_STF_RETRY</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.STFA.ACK_RET.2</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The retry of the STFA is handled within the communication layer and not indicated to the upper layer. 
      If an STFA frame is received which is retransmitting data of an earlier STFA frame PduR_FrTpStartOfReception 
      shall not be called again. Instead PduR_FrTpCopyRxData shall be called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STFA_MAXRN</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.STFA.ACK_RET.3</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If the number of retries exceeds the configured number FrTpMaxRn, the transmission is terminated and the 
      error is indicated to the upper layer.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_STFA_MAXRN</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.STFA.ACK_RET.4</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If a FC C_PDU timeout occurs (timeour N_Cr), the transmission is terminated and the error is indicated to the upper 
      layer (PduR_FrTpRxIndication is called with NTFRSLT_E_TIMEOUT_CR).
    </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FC_TIMEOUT</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.STFA.ACK_RET.5</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The FC parameter BP has to point to the first data byte of the received STFA (value 0) and the parameter 
      ACK has to be set to RET (Retry Request).
      </description>
      <comment>
      Table 19 is contradicting table 23 with respect to the definition of BP. Table 23 says, the BP value starts 
      with 0 for each block. Thus, the RETRY frame shall set BP=0 to re-request a STFA.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_STF_RETRY</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.Unseg.ABT</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      In an unsegmented acknowledged transmission process no ABORT frame shall be transmitted.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_UNSEG_BUFREQ_NOT_OK</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.Unseg.OVFLW</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Used to indicate that the STFA has been received correctly but cannot be processed at all at the current point 
      in time due to memory constraints. Therefore, it has been rejected.
      The communication layer in the sender terminates the transmission and indicates the error to the upper layer. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEG_STFA_OVFL</srcid><srcstatus/><internalId>789</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0024.Unseg.Unack</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      In an unsegmented unacknowledged transmission process no flow control frame shall be transmitted.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNSEG_STFU_OVFL</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0069</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The purpose of this counter is to avoid communication sender nodes being
      potentially hooked-up in the case of a fault condition whereby the latter
      could be waiting continuously. This parameter is local to communication
      peers and is not transmitted, and is hence not part of the FC protocol
      data unit. 1.) The C_WFTmax counter shall indicate how many FC C_PDU WTs can be transmitted
      by the receiver in a row. 2.) The C_WFTmax counter upper limit shall be user defined at
      system generation time. 3.) The C_WFTmax counter shall only be used on the receiving network
      entity during message reception. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0026</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If the C_WFTmax counter value is set to zero, then flow control shall rely upon
      flow control continuing to send FC C_PDU CTS only. Flow control wait (FC C_PDU WT) 
      shall not be used by that network entity. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_WFTMax_2</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0027</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The C_WFTmax counter shall be set to its initial value any time a FlowControl
      frame with FS=CTS is transmitted by the receiver of the segmented
      message, which means that for any block of ConsecutiveFrames the full
      range of allowed wait frames is possible. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0029</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The resolution of BfS is 1 byte per count, representing the number of bytes that
      can be transferred via CF C_PDUs per block (see Table 20) (file: ISO10681_0029_table_20.png). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_2</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0030</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The BfS parameter can vary during the transmission of a segmented message, but
      shall be kept constant by the sending network entity for the duration of
      a block of ConsecutiveFrames (including the LastFrame). Furthermore, the
      value of BfS reported by the receiver can be greater than the total
      message length (ML) stated in the start frame (STF). 
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ISO10681_0030a</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0030b</srcid><srcstatus/><internalId>583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0030a</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The BfS parameter can vary during the transmission of a segmented message, but
      shall be kept constant by the sending network entity for the duration of
      a block of ConsecutiveFrames (including the LastFrame).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_DIFF_CTS</srcid><srcstatus/><internalId>904</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0030b</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Furthermore, the value of BfS reported by the receiver can be greater than the total
      message length (ML) stated in the start frame (STF). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_LARGE_BFS</srcid><srcstatus/><internalId>905</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0031</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Table 20 provides an overview of the BfS parameter (file: ISO10681_0031_table_20.png). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_BFS</srcid><srcstatus/><internalId>903</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0031.BfS0</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The BfS parameter value 0 shall be used to indicate to the sender that no more FC frames 
      shall be sent during the transmission of the segmented message. The sending communication 
      layer entity shall send all  remaining  consecutive  frames  without  any  stop  for  further  
      FC  frames  from  the  receiving communication layer entity. 
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.EB.BfS0</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0031.BfS0_1</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0031.BfS0_2</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0031.BfS0_1</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The BfS parameter value 0 shall be used to indicate to the sender that no more FC frames 
      shall be sent during the transmission of the segmented message. The sending communication 
      layer entity shall send all  remaining  consecutive  frames  without  any  stop  for  further
      FC  frames  from  the  receiving communication layer entity, if whole data is available initially. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_LARGE_BFS</srcid><srcstatus/><internalId>905</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0031.BfS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0031.BfS0_2</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The receiver shall send a BfS parameter value 0 if the receiver's buffer is larger than or equal to the remaining 
      data to receive.
    </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_5</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RXFCS_1</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0031.BfS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0032</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      By means of the BC parameter, the receiver reports its receiving performance
      level to the sender, i.e. the maximum bandwidth it can receive. The BC
      parameter contains the following parameters: separation cycle exponent (SCexp) and 
      maximum number of PDUs per cycle (MNPC) (see Table 21) (file: ISO10681_0032_table_21.png).
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ISO10681_0032.NoBandWidthControl</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0032.MNPC</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0032.SCexp</srcid><srcstatus/><internalId>591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0032.NoBandWidthControl</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If MNPC=0:
      - SCexp shall be ignored
      - no bandwidth control mechanism is required, i.e. Pdus may be transmitted in every cycle and the number of Pdus per cycles is not limited
    </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL_MULTIMAIN</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0032.MNPC</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If MNPC!=0:
      The sub-parameter 'Maximum Number of PDUs per Cycle' limits the number of 
      C_PDUs the sender is allowed to transmit within a FlexRay cycle either immediately 
      following FC C_PDU or following SC cycles after the sender has sent the previous 
      C_PDU of the message. The adherence of NMPC prevents an overflow on the receiver 
      side (e.g. due to Rx-buffer restraints in the receiver). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_WFTMax_2</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_BC_ENABLED_PDUORDER</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_BC_SETTINGS</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL_MULTIMAIN</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0032.SCexp</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The sub-parameter 'Separation Cycle Exponent' represents the exponent to calculate the minimum number of “Separation Cycles” (SC) the sender has to wait for the next transmission of a C_PDU. 
      Formula: SC = (2^n) - 1 (with n = SCexp) which results in the following separation cycles: 0, 1, 3, 7, 15, 31, 63, 127 
    </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_WFTMax_2</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_BC_ENABLED_PDUORDER</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_BC_SETTINGS</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_BANDWITH_CONTROL_MULTIMAIN</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0033</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The parameter ACK (Acknowledge) is used in the FC C_PDU to conclude a successful
      transmission or to request a retry in the case of an SN sequence error
      (see Table 22) (file: ISO10681_0033_table_22.png). 
      valid range: 0, 1
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_UNSEGM_ACK</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR</srcid><srcstatus/><internalId>799</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_UNSEG_STARTOFRX_BUSY_COPYRX_OK</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_SEG_STARTOFRX_BUSY_COPYRX_OK</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_RETRY</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0034</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The parameter BP (Byte Position) is used in the FC C_PDU to specify the first
      wrong byte position where the sender shall start the retry in the case of
      an SN sequence error (see Table 23) (file: ISO10681_0034_table_23.png). 
      valid range: 0 to 0xFFFE
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR</srcid><srcstatus/><internalId>799</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_RETRY</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0035</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Table 24 provides an overview of the LF C_PCI byte (file: ISO10681_0035_table_24.png). 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_8</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_6</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0036</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The parameter ML (Message Length) is used in the LF C_PDU to specify the number
      of service user data bytes at the end of an unknown message length
      transmission (see Table 26) (file: ISO10681_0036_table_26.png). 
      valid range: 1 to 0xFFFF
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_8</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0037</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The parameter FPL (Frame Payload Length) is used in the LF C_PDU to specify the
      number of payload data bytes included in this LF C_PDU (see Table 25) (file: 
      ISO10681_0037_table_25.png). 
      valid range: 0 to 0xF6
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_8</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0038</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      In the case of known message length transmission, the following error handling
      applies See Table 27 (file: ISO10681_0038_table_27.png). 
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ISO10681_0038.Unack.Seg.Recv</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0038.Unseg.Recv</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0038.Ack.Send</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0038.Ack.Seg.Rcv</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0038.Unack.Seg.Recv</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      For unacknowledge segmented reception:
      If 
      - message length of STF does not match message length of LF
      - or message length of STF does not match the sum of receive frame payload length of CF
      - or message length of LF does not match the sum of receive frame payload length of CF
      Call PduR_FrTpRxIndication with notification result NTFRSLT_E_FR_ML_MISMATCH
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_NACK_SEG</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0038.Unseg.Recv</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      For unsegmented reception (unacknowledged or acknowledged):
      If FPL&gt;ML or FPL&gt;FPL max (FPL max=248 for CF, 246 for STF/LF), ignore the frame
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_ACK_UNSEG</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_INCORRECT_SDULENGTH_STF</srcid><srcstatus/><internalId>848</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_NACK_UNSEG</srcid><srcstatus/><internalId>884</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0038.Ack.Send</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      For acknowledge transmission (unsegmented or segmented):
      Transmission is aborted once FC_ABORT is received and PduR_FrTpTxConfirmation is called with notification result NTFRSLT_E_ABORT
    </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_FC_ABORT</srcid><srcstatus/><internalId>888</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_FC_ABORT_UNSEGM</srcid><srcstatus/><internalId>933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0038.Ack.Seg.Rcv</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      For acknowledged segmented reception:
      If 
      - message length of STF does not match message length of LF
      - or message length of STF does not match the sum of receive frame payload length of CF
      - or message length of LF does not match the sum of receive frame payload length of CF
      Transmit a FC_ABORT frame and call PduR_FrTpRxIndication with notification result NTFRSLT_E_FR_ML_MISMATCH
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_ACK_SEG</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0039</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      In the case of an unknown message length transmission, the following error
      handling applies. See Table 28 (ISO10681_0039_table_28.png). 
      </description>
      <comment>see ASCFRTP-384 Deviation: Transmission with unknown message length is not supported</comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTp.UnknownMsgLeng</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0041</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If a CF C_PDU message is received with an incorrect sequence number for an 
      unacknowledged message transmission: The message reception shall be aborted, 
      and the communication layer shall make a C_Data.indication service call with 
      the parameter &amp;lt;C_Result&amp;gt; = C_WRONG_SN to the upper layer.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_ABORT_WRONG_SN</srcid><srcstatus/><internalId>864</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0043</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      A retry may be requested in any situation during the communication. It may be
      initiated after an STFA had been received, during a segmented message
      transmission. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0042</id>
      <status>rejected</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      A retry after an unsegmented/segmented message transfer (so far only STFA has
      been sent) may occur due to the situation that the upper layer has
      temporarily no buffer available to even store the length of an STF. 
      </description>
      <comment>This requirement is informational only.</comment>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0044</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If a retry is initiated while a segmented message transmission is ongoing, the
      first retry requests the sender to switch from ConsecutiveFrame_1 type to
      ConsecutiveFrame_2 type. If more than one retry is requested within a
      segmented transmission, the Consecutive_Frame type toggles. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_TX_RETRY</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0045</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The maximum number of retries within a segmented transmission is restricted to a
      configurable value which resides in the communication layer on the
      receiver side. 
      </description>
      <comment>
      The sender shall thus respond to every FC RETRY frame and ignore the configuration 
      parameter FrTpMaxRn for this connection.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR_ABT</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0046</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If the maximum number of retries within a segmented transmission has been
      reached, the receiver shall abort the transfer by sending FlowControl_ABORT. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_SEQ_ERR_ABT</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0047</id>
      <status>rejected</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The sender shall not reset all internal information (e.g. BytePosition start
      value of the current block) within an acknowledged transfer until a
      FlowControl_ACK or a FlowControl ABORT has been received. 
      </description>
      <comment>This requirement is informational only.</comment>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0048</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      If there is a sequence number (SN) error, the retry mechanism can be used for an
      acknowledged transmission with known and unknown message length. Figure
      13 shows the retry handling in the case of a sequence error in the
      received sequence number. For the example given, the CF with SN = 2 is
      missing in the receiver, which causes a sequence error when the CF with
      SN = 3 is received  (file: ISO10681_0048_figure_13.png)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_CONCURRENT_ERROR</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_RETRY</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0049</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The retry mechanism in the case of a message length (ML) error is generally not
      allowed. For all cases, the receiver shall abort the transfer by sending 
      FlowControl_ABORT. Figure 14 shows that scenario (file: ISO10681_0049_figure_14.png).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_MLFPL_ERR_ACK_SEG</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0050</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The C_RetriesMax counter shall be set to its initial value any time a new
      communication starts or a block of data has been successfully
      transmitted. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_RETRY_2</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0051</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      FS error handling. If an FC C_PDU message is received with an invalid (reserved)
      FS parameter value, the message transmission shall be aborted, and the 
      communication layer shall make a C_Data.confirm service call with the parameter
      &amp;lt;C_Result&amp;gt; = C_INVALID_FS to the upper layer. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TB_FRTP_INVALID_FS</srcid><srcstatus/><internalId>896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0052</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      BC error handling. If the receiving entity has correctly received a 
      ConsecutiveFrame/LastFrame that has been transmitted with a smaller separation 
      time as calculated on BC, then the receiver shall accept this frame and continue 
      reception. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_BC_SETTINGS</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0053</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The BP error handling only applies for a message transmitted with acknowledged
      and retry logic enabled. See Table 30 (file: ISO10681_0053_table_30.png). 
      
      BP points to a succeeding buffer segment (not yet transmitted):
      Sender behaviour: Call PduR_FrTpTxConfirmation with notification result NTFRSLT_E_FR_WRONG_BP
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_RETRY_1</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_NOACK_BP</srcid><srcstatus/><internalId>862</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0055</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Wait frame error handling. If the receiver has 
      - transmitted MAX_WFT (see 6.3.8) 'flow control wait communication layer protocol data units' (FC C_PDUWT) in 
        a row, and 
      - following this, the receiver cannot meet the performance requirement
        for the transmission of a 'flow control continue to send communication layer 
        protocol data unit' (FC C_PDU CTS), 
      then the receiver side shall abort the
      message reception and call PduR_FrTpRxIndication with notification result NTFRSLT_E_WFT_OVRN
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_WFTMax_1</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0057</id>
      <status>rejected</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Timeout values are defined to be higher than the values for the performance
      requirements in order to ensure a working system and to overcome
      communication conditions where the performance requirement can absolutely
      not be met (e.g. high bus load in FlexRay dynamic segment). Specified
      timeout values shall be treated as the lower limit for any given
      implementation. The real timeout shall occur no later than at the
      specified timeout value + 50 %. 
      </description>
      <comment>
      This requirement is informational only. It mentions the constraints between performance
      requirement of the receiver and corresponding timeout in the sender.
      </comment>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0059</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Table 33 determines the behaviour of the communication layer when an unexpected
      arrival of a C_PDU occurs in either a half- or full-duplex environment
      (file: ISO10681_0059_table_33.png). 
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp.ISO10681_0059_RX_STF_unsegmented</srcid><srcstatus/><internalId>619</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0059_RX_STF_segmented</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0059_RX_CF</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0059_RX_FC</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0059_RX_LF</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0059_RX_unknown</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>FrTp.ISO10681_0059_RX_idle</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0059_RX_STF_unsegmented</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Unexpected unsegmented STF frame in reception process
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNEXPECTED_RX_PDU</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_UNEXPECTED_STF_UNSEGM</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0059_RX_STF_segmented</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Unexpected segmented STF frame in reception process
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNEXPECTED_RX_PDU</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_UNEXPECTED_STF_SEGM</srcid><srcstatus/><internalId>802</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_UNEXPECTED_STF_SEGM_ERR</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0059_RX_CF</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Unexpected CF frame in reception process
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNEXPECTED_RX_PDU</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0059_RX_FC</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Unexpected FC frame in reception process
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNEXPECTED_RX_PDU</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_RX_SEGM_ACK_2</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_RX_UNEXPECTED_FC_IN_SEGM_RX</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0059_RX_LF</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Unexpected LF frame in reception process
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_UNEXPECTED_RX_PDU</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_LF_COPYRXDATA_NOT_OK</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0059_RX_unknown</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Unexpected unknown frame in reception process
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTP_RX_UNKNOWN_PDU</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0059_RX_idle</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      Unexpected CF, FC, LF and unknown Pdus shall be ignored when in Idle state
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_RX_IDLE</srcid><srcstatus/><internalId>843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>

    <specobject>
      <id>FrTp.ISO10681_0070</id>
      <status>approved</status>
      <source>Specification_ISO10681_2.pdf, V2010-06-15</source>
      <version>1</version>
      <description>
      The DLL scheduler is used to fill the L_PDUs which are reserved for CL 
      transmissions with C_PDUs out of the active queues and is executed
      several times during a FlexRay  cycle. It uses a round-robin mechanism to
      ensure that the L_PDUs are filled in a coordinated manner that 
      guarantees that all active transmissions are served concurrently. A
      transmission started on a particular  FlexRay channel has to continue on
      that channel until its end. The communication layer defines on  which
      channel the transmission shall take place: 1.) FlexRay channel A; 2.) FlexRay channel B;
      3.) FlexRay channel A and B redundantly. The determination of the FlexRay channel and
      segment to be used is done by the communication layer via evaluation of the address
      information (C_TA ).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_SEGM_TX_8</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>EB_FRTP_TX_CONCURRENT</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FRTP1005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrTp.EB.DBGINST001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every public API of the module shall have debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrTp_DBGINST_001</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>

    <specobject>
      <id>FrTp.EB.DBGINST002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the entry instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrTp_DBGINST_001</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>

    <specobject>
      <id>FrTp.EB.DBGINST003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the exit instrumentation.
        If the API has a return value, the very first parameter of the macro shall contain the expected return value.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrTp_DBGINST_001</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>

    <specobject>
      <id>FrTp.EB.DBGINST004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The default implementation of the debug instrumentation shall be an empty macro.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrTp_DBGINST_001</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>

    <specobject>
      <id>FrTp.EB.DBGINST005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The module shall include the header files Base_Dbg.h in order to allow changing the default implementation of the debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrTp_DBGINST_001</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrTp.EB.PBCFGM101</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service name: FrTp_IsValidConfig
        Syntax: Std_ReturnType FrTp_IsValidConfig( void* ConfigPtr )
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): ConfigPtr, post build configuration manager
        configuration.
        Parameters (inout): None
        Parameters (out): None
        Return value: Returns E_OK if the FrTp configuration is valid otherwise E_NOT_OK. A
        null pointer is interpreted as invalid configuration.
        Description: This function determines if the FrTp configuration is valid. This
        function can be called also before the FrTp is initialized. No error reporting
        is necessary within this function.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_IsValidConfig</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PBCFGM102</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A configuration is valid
        - if the platform signature in the post build configuration equals the value
          determined by the macro TS_PlatformSigIsValid.
        - if the link time signature in the post build configuration equals the link time
          signature in the link time configuration file.
        - if the compile time signature in the post build configuration equals the value of
          the macro FRTP_CFG_SIGNATURE.
        - if the compile time signature of Published information in the post build configuration
          equals the value of the macro FRTP_PUBLIC_INFO_SIGNATURE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_IsValidConfig</srcid><srcstatus/><internalId>688</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PBCFGM104</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          CfgSignature.
        - the FrTp_Cfg.h file shall contain the macro
          FRTP_CFG_SIGNATURE.
        - the MCG shall generate this signature value of compile time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of compile time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_IsValidConfig</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_COMTEST_1</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PBCFGM104_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          PublicInfoSignature.
        - the FrTp_Cfg.h file shall contain the macro
          FRTP_PUBLIC_INFO_SIGNATURE.
        - The MCG shall generate this signature value from the list of parameters of
          configuration class 'PublishedInformation' except 'Release'. The XPath function
          asc:getConfigSignature(nodeset) shall be used to determine the signature out of the
          list of parameters. The list of parameters shall be determined with the function
          asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_IsValidConfig</srcid><srcstatus/><internalId>688</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PBCFGM105</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the link time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          LcfgSignature.
        - the link time configuration shall contain the uint32 value
          FrTp_LcfgSignature.
        - the MCG shall generate this signature value of link time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of link time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_IsValidConfig</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_LCFGSIGNATURE</srcid><srcstatus/><internalId>964</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PBCFGM106</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For Platform verification:
        - the FrTp post build configuration structure shall contain the value
          uint32 PlatformSignature. This uint32 must be the first value of the post build
          configuration structure to guarantee the correct access not disturbed by any padding
          bytes.
        - the MCG shall generate this signature for the selected target. The generator shall
          use the x-path function asc:getPlatformSignature() to determine this value.
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
        https://issue.ebgroup.elektrobit.com/browse/ASCBASE-1485
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_IsValidConfig</srcid><srcstatus/><internalId>688</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PBCFGM107</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The PbcfgM support shall be enabled or disabled via the macro
        FRTP_PBCFGM_SUPPORT_ENABLED defined in the file
        FrTp_Cfg.h.
        If the PbcfgM configuration references the FrTp configuration
        the macro is set to STD_ON otherwise, or if no PbcfgM configuration is
        available it is set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_IsValidConfig</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_PBcfgM_Off</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_PRECOMPILE_CFG</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PBCFGM108</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the FrTp is referenced by the PbcfgM, the parameter regarding the
        relocatable feature, shall not be editable and the MCG shall use the configuration of
        the PbcfgM.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_PBcfgM_Off</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_PBcfgM_On</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrTp_EBParameters.xdm.m4_97</srcid><srcstatus/><internalId>674</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PBCFGM110</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrTp_Init() function must be extended to enable the PbcgfM
        features.
        The initialization function shall obtain the FrTp configuration
        from the PbcfgM if the PbcfgM support is enabled within this FrTp
        and the initialization function is called with a null pointer.
        The validity of the configuration shall be checked by the function
        FrTp_IsValidConfig(). The validity shall be check regardless the PbcfgM
        support is enabled or not.
        If no valid configuration can be obtained the initialization function shall
        return, leaving the FrTp uninitialized.
        In the case error reporting is enabled and no valid configuration can be obtained
        an erroneous parameter shall be indicated.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_VerifyInitWithPcfgM</srcid><srcstatus/><internalId>689</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PostBuild_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrTp module shall compile and build an executable even in the absence
        of a post build configuration, i.e. without any post build generated .c and .h files
        available.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_COMTEST_NoPbCfg</srcid><srcstatus/><internalId>696</internalId></linkedfrom><linkedfrom><srcid>TS_FRTP_Gen_PBcfgM_00000_OnlyPbCfg</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PbcfgM_General_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrTp shall provide the following macros in the header file
        FrTp_Cfg.h:
        - FRTP_RELOCATABLE_CFG_ENABLE which is set to STD_ON
          if relocatable config shall be enabled, otherwise it's set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_PBcfgM_On</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>

    <specobject>
      <id>FrTp.EB.PbcfgM_General_6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PbcfgM support is enabled FrTp shall define the following macros in
        FrTp_PBCfg.c:
        - TS_PB_CFG_LAYOUT_TYPE: Shall expand to the type definition of the Postbuild
          configuration layout type (e.g. FrTp_ConstConfigLayoutType)
        - TS_PB_CFG_NAME: Shall expand to the name of the structure defining the Postbuild
          configuration layout (e.g. FrTp_ConfigLayout)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTp_Test_PBcfgM_Off</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>FrTp_Test_PBcfgM_On</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrTp.EB.PDULENGTHTYPE001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrTp module shall support the following values of PduLengthType:
        [UINT32, UINT16]
      </description>
      <verifycrit>
        Use case 1 - Modules not capable of handling more than 64 kbytes of data:
          - use PduLengthType value 'UINT32' with conformance test
          - verify successful test run, verify absence of metric violations
            (MISRA-C:2012, static code analysis, compiler warnings)
        Use case 2 - Modules capable of handling more than 64 kbytes of data:
          - use conformance test which handles more than 64 kbytes of data
          - apply "boundary" tests using data length of:
            [&lt;&lt;65535,65535, 65536, &gt;131072][bytes]
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTP_FULLDUPLEX</srcid><srcstatus/><internalId>701</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrTp.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrTp_VerifyCodeStub</srcid><srcstatus/><internalId>692</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.FrTp.RxPduIdErrChk</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>FRTP1069_a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FRTP1070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>FRTP1074_a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>FRTP1075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>dev.FrTp.ShutDown</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>FRTP148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>dev.FrTp.COUNTER_A</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP012_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>FRTP013_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_AR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_AS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>dev.FrTp.BufferAccessModes</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>dev.FrTp.RxTxCancel</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>FRTP422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>FRTP423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>FRTP1104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>FRTP424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>FRTP1180</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>FRTP1181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>FRTP1182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>FRTP1183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>FRTP1097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>FRTP384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>FRTP1116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>FRTP385</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FRTP386</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>FRTP150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>FRTP1141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>FRTP1172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>FRTP036_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.CancelTransmit.TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.CancelReceive.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_CANCEL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>dev.FrTp.ChangeParameter</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.ChangeParameter.E_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
        <provcov>
          <linksto>FRTP1143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>FRTP151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>FRTP1115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>FRTP1144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FRTP1156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>FRTP052_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_INVALID_PARAMETER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>dev.FrTp.UnknownMsgLeng</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>159</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>FRTP1012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>FRTP1101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>FRTP1102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>FRTP1043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>FRTP1044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>FRTP1134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>FRTP1124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FRTP1062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>FRTP1063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>FRTP1064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>FRTP1065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>FRTP1066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>FRTP1067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>FRTP1184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
        <provcov>
          <linksto>FRTP044_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>dev.FrTP.FrTpTimeFrIf</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP031_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>dev.FrTP.FrTpTimeBuffer</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP030_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>dev.FrTP.FrIf_CancelTransmit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP578.FrIf_CancelTransmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>dev.FrTP.PostBuild</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>FRTP1131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
    <specobject>
      <id>dev.FrTP.FrTpMaxBufferSize</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP015_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
    <specobject>
      <id>dev.FrTP.FrTpAckRt</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP002_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>FRTP598</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>dev.FrTP.DebugAndTrace</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>FRTP1159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>dev.FrTP.Contradicting</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>FRTP1074_c</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>FRTP1076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>FRTP1186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>FRTP218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>FRTP1110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>dev.FrTP.PublishedInformation</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>304</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>FRTP1158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>FRTP1189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>FRTP1190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>FRTP1191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/FrTp_Cfg.h.m4_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/generate/include/FrTp_Cfg.h.m4</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.UlCallout.HeaderFileName.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FrTp_Cfg.h.m4_91</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/generate/include/FrTp_Cfg.h.m4</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/FrTp_Lcfg.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/generate/src/FrTp_Lcfg.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/FrTp_Api.h_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/include/FrTp_Api.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrTp_Api.h_31</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/include/FrTp_Api.h</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1135_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrTp.c.m4_19</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/src/FrTp.c.m4</sourcefile>
      <sourceline>19</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.PublishedInformation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrTp.c.m4_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/src/FrTp.c.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrTp.c.m4_72</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/src/FrTp.c.m4</sourcefile>
      <sourceline>72</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrTp.c.m4_87</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/src/FrTp.c.m4</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrTp_LL.c_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/src/FrTp_LL.c</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1135_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrTp_Priv.h.m4_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/src/FrTp_Priv.h.m4</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1135_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrTp_Priv.h.m4_774</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/src/FrTp_Priv.h.m4</sourcefile>
      <sourceline>774</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/FrTp_EBParameters.xdm.m4_97</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/config/FrTp_EBParameters.xdm.m4</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/FrTp_Extension.xdm.m4_283</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/config/FrTp_Extension.xdm.m4</sourcefile>
      <sourceline>283</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_FunctionalAdressing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrTp_Extension.xdm.m4_315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/config/FrTp_Extension.xdm.m4</sourcefile>
      <sourceline>315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrTp_Extension.xdm.m4_445</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/config/FrTp_Extension.xdm.m4</sourcefile>
      <sourceline>445</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrTp_Extension.xdm.m4_617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/config/FrTp_Extension.xdm.m4</sourcefile>
      <sourceline>617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrTp_Extension.xdm.m4_868</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/config/FrTp_Extension.xdm.m4</sourcefile>
      <sourceline>868</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>FRTP1093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrTp_Extension.xdm.m4_872</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/config/FrTp_Extension.xdm.m4</sourcefile>
      <sourceline>872</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP.BufferAccessModes_Prerequisites</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>FRTP1059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/xgen/FrTp.xgen_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/generate/xgen/FrTp.xgen</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/xgen/FrTp.xgen_184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/generate/xgen/FrTp.xgen</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP1002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/xgen/FrTp.xgen_225</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/src/Autosar/generate/xgen/FrTp.xgen</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FRTP210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Preemption possibilities">
    <specobject>
      <id>swdd.FrTp.Preemption1</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/project/design/pdf/FrTp_Design-profiled.xml</sourcefile>
      <sourceline>1487</sourceline>
      <version>1</version>
      <needscoverage>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.FrTp.EB_INTREQ_FrTp_0001</srcid><srcstatus/><internalId>0</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>swdd.FrTp.Preemption2</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/project/design/pdf/FrTp_Design-profiled.xml</sourcefile>
      <sourceline>1494</sourceline>
      <version>1</version>
      <needscoverage>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.FrTp.EB_INTREQ_FrTp_0002</srcid><srcstatus/><internalId>1</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>swdd.FrTp.Preemption3</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/doc/Autosar/project/design/pdf/FrTp_Design-profiled.xml</sourcefile>
      <sourceline>1501</sourceline>
      <version>1</version>
      <needscoverage>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.FrTp.EB_INTREQ_FrTp_0003</srcid><srcstatus/><internalId>2</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrTp_DBGINST_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_DbgInst_Trace_APIs.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   Test Dbg
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation test.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.DBGINST001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.DBGINST002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.DBGINST003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.DBGINST004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.DBGINST005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrTp_Test_IsValidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the function FrTp_IsValidConfig() is implemented as specified.
  
Test Object: 
    FrTp_IsValidConfig()
  
Test Precondition: 
    The FrTp module is not initialized.
  
Test Execution: 
    01: Call the function FrTp_IsValidConfig() with an NULL_PTR.
    02: VP:
        The function must have returned with E_NOT_OK.
    03: Create an invalid configuration regarding the endianness and alignment.
    04: Call the function FrTp_IsValidConfig() with this invalid configuration.
    05: VP(FrTp.EB.PBCFGM106):
        The function must have returned with E_NOT_OK.
    The following 3 steps are only executed if the module has a link-time configuration:
        06: Create an invalid configuration regarding the link time configuration.
        07: Call the function FrTp_IsValidConfig() with this invalid configuration.
        08: VP(FrTp.EB.PBCFGM105):
                The function must have returned with E_NOT_OK.
    09: Create an invalid configuration regarding the compile time configuration.
    10: Call the function FrTp_IsValidConfig() with this invalid configuration.
    11: VP(FrTp.EB.PBCFGM104):
        The function must have returned with E_NOT_OK.
    12: Create an invalid configuration regarding the published information configuration.
    13: Call the function FrTp_IsValidConfig() with this invalid configuration.
    14: VP(FrTp.EB.PBCFGM104_1):
        The function must have returned with E_NOT_OK.
    15: Call the function FrTp_IsValidConfig() with a valid configuration.
    16: VP:
        The function must have returned with E_OK.
    17: VP(FrTp.EB.PBCFGM107):
        Check if FRTP_PBCFGM_SUPPORT_ENABLED is set to STD_ON.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM104_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>FrTp_Test_VerifyInitWithPcfgM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the FrTp can be initialized via the PbcfgM.
  
Test Object: 
    FrTp_IsValidConfig()
  
Test Precondition: 
    The FrTp module must not have been initialized.
  
Test Execution: 
    01: Create an invalid configuration regarding the endianness and alignment.
    02: Call the function FrTp_Init() with this invalid configuration.
    03: VP:
        A Det call must have been performed correctly.
    04: Create an invalid configuration regarding the compile time configuration.
    05: Call the function FrTp_Init() with this invalid configuration.
    06: VP:
        A Det call must have been performed correctly.
    The following 3 steps are only executed if the module has a link-time configuration:
        07: Create an invalid configuration regarding the link time configuration.
        08: Call the function FrTp_Init() with this invalid configuration.
        09: VP:
            A Det call must have been performed correctly.
    10: Create an invalid configuration regarding the published information configuration.
    11: Call the function FrTp_Init() with this invalid configuration.
    12: VP:
        A Det call must have been performed correctly.
    13: Initialize the PbcfgM_GetConfig() stub that way that it can return a valid function.
    14: Call the function FrTp_Init() with a null pointer.
    15: VP:
        The function PbcfgM_GetConfig() must have been called once.
    16: VP:
        No Det call must have been performed.
    17: VP:
        The module internal configuration pointer FrTp_RootPtr must equal
        the pointer supplied to the initialization function
    18: PbcfgM_GetConfig shall return E_NOT_OK.
        set the configuration pointer which is returned to NULL_PTR
    19: Call FrTp_Init with NULL_PTR.
    20: VP(FrTp.EB.PBCFGM110):
        Check if Det error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrTp_Test_PBcfgM_Off</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_PbcfgM_Off_Compile_Test.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that if PbcfgM support is disabled then FrTp_PBCfg.c shall define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
      FRTP_PBCFGM_SUPPORT_ENABLED shall be set to STD_OFF.
      FRTP_RELOCATABLE_CFG_ENABLE shall be set to STD_OFF.
    
Test Object: None.
Test Precondition: 
      - PbcfgM configuration does not refer to module FrTp (or no config exists)
      - Include FrTp_PBcfg.c only for step 01 and 02.
      - Include FrTp_Cfg.h for step 03.
    
Test Execution: 
        01: VP(FrTp.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exists.
        02: VP(FrTp.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME has the value
            FrTp_ConfigLayoutType and FRTP_CONFIG_NAME respectively.
        03: VP (FrTp.EB.PBCFGM107):
            Verify that FRTP_PBCFGM_SUPPORT_ENABLED is set to STD_OFF.
        04: VP(FrTp.EB.PBCFGM108, FrTp.EB.RelocatablePBCfg):
            FRTP_RELOCATABLE_CFG_ENABLE shall be STD_OFF
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrTp_Test_PBcfgM_On</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_PbcfgM_On_Compile_Test.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      1.)
      Verify that FRTP_RELOCATABLE_CFG_ENABLE is defined
      in the header file FrTp_Cfg.h.
      2.)
      Verify that if PbcfgM support is enabled then FrTp_PBCfg.c shall NOT define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
    
Test Object: None.
Test Precondition: 
        - FRTP_PBCFGM_SUPPORT_ENABLED = STD_ON
    
Test Execution: 
        ------------------------ 1.) ---------------------
        01: VP (FrTp.EB.PbcfgM_General_3,
                FrTp.EB.PBCFGM108,
                FrTp.EB.RelocatablePBCfg):
            Verify that FRTP_RELOCATABLE_CFG_ENABLE is set to STD_ON.
        ------------------------ 2.) ---------------------
        02: Include FrTp_PBcfg.c.
        03: VP(FrTp.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exist.
    
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.PbcfgM_General_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrTp_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/build/reqm/common_req/FrTp_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(FrTp.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_COMTEST_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Compile/IN/FrTp_ComTest_1/source/application/FrTp_ComTest_1.c</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if the module compiles with a configuration
    containing all features and multiple channels.
  
Test Object: 
    Module compilation
  
Test Precondition: 
    - Local configuration is used
    - Development error detection (DET) is enabled.
    - Relocatable Postbuild configuration enabled.
    - FrTpCopyToLocalBuffer enabled.
  
Test Execution: 
    01: Call all API functions
    02: VP (implicit):
        There are no compiler errors
    03: VP (FRTP1135_2):
        Invoke FrTp_TriggerTransmit, FrTp_RxIndication and FrTp_TxConfirmation.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>FRTP215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>FRTP147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>FRTP149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>FRTP154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>FRTP152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>FRTP153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>FRTP162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>FRTP498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
        <provcov>
          <linksto>FRTP1157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>FRTP1135_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FrTpCopyToLocalBuffer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_COMTEST_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Compile/IN/FrTp_ComTest_2/source/application/FrTp_ComTest_2.c</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks if the module compiles with a configuration
    containing all features and multiple channels.
  
Test Object: 
    Module compilation
  
Test Precondition: 
    - Local configuration is used
    - Development error detection (DET) is disabled.
    - Relocatable Postbuild configuration disabled.
    - Stubs are configured to export the minimum number of required API functions, i.e.:
      PduR: PduR_FrTpRxIndication, PduR_FrTpStartOfReception, PduR_FrTpCopyRxData,  PduR_FrTpCopyTxData, PduR_FrTpTxConfirmation
      FrIf: FrIf_Transmit
      Det: no DET Stub provided at all
    - FrTpCopyToLocalBuffer disabled.
  
Test Execution: 
    01: Call all API functions
    02: VP (implicit):
        There are no compiler errors
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>FRTP217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>FRTP147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>FRTP149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>FRTP154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>FRTP152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>FRTP153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>FRTP162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>FRTP498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
        <provcov>
          <linksto>FRTP577</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>FRTP578.FrIf_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>FRTP579</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FrTpCopyToLocalBuffer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.HeaderFileName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_COMTEST_HALFDUPLEX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Compile/IN/FrTp_ComTest_HalfDuplex/source/application/FrTp_ComTest_HalfDuplex.c</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if the module compiles with a configuration
    containing all features and multiple channels but full duplex disabled.
  
Test Object: 
    Module compilation
  
Test Precondition: 
    - Local configuration is used
  
Test Execution: 
    01: Call all API functions
    02: VP (implicit):
        There are no compiler errors
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP.FullDuplex_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_COMTEST_NoPbCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Compile/IN/FrTp_ComTest_NoPbCfg/source/application/Test.c</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall prove that that the FrTp also compiles without any post build information
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * The merged make file holds a rule which removes all post build files after generation

Test Execution: 
    The test run is successful when the FrTp compiles under sticking to the precondition.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.PostBuild_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_COMTEST_SCHM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Compile/IN/FrTp_ComTest_SchM/source/application/FrTp_ComTest_SchM.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test checks that the FrTp module's generator generates a
   syntactically and semantically valid basic software module
   description (BSWMD) when the generator mode "generate_swcd" is
   invoked. It further tests that the SchM exclusive area API is
   correctly generated by the RTE generator based on the FrTp module's
   generated BSWMD.

Test Object: 

Test Precondition: 

Test Execution: 
  Ts5 build environment steps:
    The module configuration generator produces the BSWMD containing
    the information on the required exclusive areas.  This information
    is then used by the RTE generator to create the required SchM API
    for these exclusive areas. This implicitly verifies that the BSWMD
    is syntactically and semantically correct.  FrTp's static code
    makes use of this API (and the respective #defines) thus causing
    compile/link errors if the BSWMD does not contain the correct
    information.

Test Input: 
  Usage of a common ASR configuration having all adjacent ASR modules
  configured.

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrTp_Test_HandleIdGenerator</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Compile/IN/FrTp_HandleIdGeneratorTest/source/application/FrTpHandleIdGeneratorTest.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that invoking the handle ID autocalc wizard
  creates a valid configuration (i.e., a configuration adhering to
  the constraints of the module's generator (e.g., zero-based,
  dense, and unique)) out of an invalid configuration (i.e., a
  configuration violating the constraints of the module's
  generator (e.g., not zero-based, not dense, and not unique)).

  The handle IDs for the following parameters are checked by this
  test:
    - FrTpTxSduId
    - FrTpRxPduId
    - FrTpTxConfirmationPduId
    

Test Object: None.
Test Precondition: 
  None.

Test Execution: None.
Test Input: 
  Configuration with deliberately wrong handle IDs (non
  zero-based, not dense, and not unique).

Test Output: 
  Binary file.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.HandleIdGenerator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrTp_Test_NonLegSymbolicNames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Compile/IN/FrTp_NonLegSymbolicNamesTest/source/application/FrTp_NonLegSymbolicNamesTest.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Checking the symbolic name macros generated when FRTP_PROVIDE_LEGACY_SYMBOLIC_NAMES is not defined.
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: 
      01: Check that macros are generated with the names and the values listed in output.
    
Test Input: 
        None.
    
Test Output: 
     All symbolic name Macros generated should be defined as per Autosar 4.0 rev3
     and the values should be :
        FrTpConf_FrTpTxSdu_FrTpTxSdu_0        0U
        FrTpConf_FrTpTxSdu_FrTpTxSdu_1        1U
        FrTpConf_FrTpTxSdu_FrTpTxSdu_2        2U
        
        FrTpConf_FrTpRxPdu_FrTpRxPdu_0  0U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_1  1U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_2  2U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_3  1000U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_4  1001U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_5  1002U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_6  200U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_7  201U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_8  202U
        
        FrTpConf_FrTpTxPdu_FrTpTxPdu_0  0U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_1  1U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_2  2U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_3  3U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_4  4U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_5  5U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_6  6U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_7  7U

        FrTpConf_FrTpRxSdu_FrTpRxSdu_0        0U
        FrTpConf_FrTpRxSdu_FrTpRxSdu_1        1U
        FrTpConf_FrTpRxSdu_FrTpRxSdu_2        2U
                       
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.SymbolicNameValue_Rev3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.LegacySymbolicNameValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrTp_Test_SymbolicNames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Compile/IN/FrTp_SymbolicNamesTest_1/source/application/FrTp_SymbolicNamesTest_1.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Check that macros are generated for configuration parameters which are specified as 
      SYMBOLICNAMEVALUES.
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: 
      01: Check that macros are generated with the names and the values listed in output.
    
Test Input: 
        None.
    
Test Output: 
        FrTpConf_FrTpConnection_0_FrTpTxSdu   0U
        FrTpConf_FrTpConnection_1_FrTpTxSdu   1U
        FrTpConf_FrTpConnection_2_FrTpTxSdu   2U
        
        FrTpConf_FrTpRxPdu_FrTpRxPdu_0  0U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_1  1U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_2  2U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_3  1000U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_4  1001U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_5  1002U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_6  200U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_7  201U
        FrTpConf_FrTpRxPdu_FrTpRxPdu_8  202U
        
        FrTpConf_FrTpTxPdu_FrTpTxPdu_0  0U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_1  1U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_2  2U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_3  3U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_4  4U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_5  5U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_6  6U
        FrTpConf_FrTpTxPdu_FrTpTxPdu_7  7U
        
        FrTpConf_FrTpRxSdu_FrTpRxSdu_0       0U
        FrTpConf_FrTpConnection_1_FrTpRxSdu  1U
        FrTpConf_FrTpRxSdu_FrTpRxSdu_2       2U
        
        FrTp_FrTpConnection_0_FrTpTxSdu   0U
        FrTp_FrTpConnection_1_FrTpTxSdu   1U
        FrTp_FrTpConnection_2_FrTpTxSdu   2U

        FrTp_FrTpRxPduPool_0_FrTpRxPdu_0  0U
        FrTp_FrTpRxPduPool_0_FrTpRxPdu_1  1U
        FrTp_FrTpRxPduPool_0_FrTpRxPdu_2  2U
        FrTp_FrTpRxPduPool_1_FrTpRxPdu_3  1000U
        FrTp_FrTpRxPduPool_1_FrTpRxPdu_4  1001U
        FrTp_FrTpRxPduPool_1_FrTpRxPdu_5  1002U
        FrTp_FrTpRxPduPool_2_FrTpRxPdu_6  200U
        FrTp_FrTpRxPduPool_2_FrTpRxPdu_7  201U
        FrTp_FrTpRxPduPool_2_FrTpRxPdu_8  202U
        
        FrTp_FrTpTxPduPool_0_FrTpTxPdu_0  0U
        FrTp_FrTpTxPduPool_0_FrTpTxPdu_1  1U
        FrTp_FrTpTxPduPool_0_FrTpTxPdu_2  2U
        FrTp_FrTpTxPduPool_0_FrTpTxPdu_3  3U
        FrTp_FrTpTxPduPool_1_FrTpTxPdu_4  4U
        FrTp_FrTpTxPduPool_1_FrTpTxPdu_5  5U
        FrTp_FrTpTxPduPool_1_FrTpTxPdu_6  6U
        FrTp_FrTpTxPduPool_1_FrTpTxPdu_7  7U
        
        FrTp_FrTpConnection_0_FrTpRxSdu   0U
        FrTp_FrTpConnection_1_FrTpRxSdu   1U
        FrTp_FrTpConnection_2_FrTpRxSdu   2U

    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.LegacySymbolicNameValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.SymbolicNameValue_Rev3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.SymbolicNameValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_FULLDUPLEX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_FullDuplex/source/application/testcase.c.m4</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the fullduplex communication, simultaneous reception and transmission on the same channel.
  
Test Object: 
    Fullduplex communication
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    00: VP(FrTp.EB.PDULENGTHTYPE001): Check that PduLengthType has the expected size (2 or 4 depending on permutation).
        Whole test sequence is then executed with expected PduLengthType and requirement thus covered.
    01: Start a transmission of 60 bytes on Connection 0.
    02: Elapse MF tick and check if STF is transmitted with Pdu of FrTpTxPduPool_0.
    03: Confirm the STF sent.
    04: Start a reception of 50 bytes on Connection 0, with ascending data starting with 10.
    05: Check if PduR calls are made.
    06: Elapse a MF tick and check that FC is sent with Pdu of FrTpTxPduPool_0.
    07: Confirm the FC frame sent.
    08: Simulate reception of FC on Pdu of FrTpRxPduPool_0.
    09: Simulate reception of CF on Pdu of FrTpRxPduPool_0.
    10: VP(FRTP.FullDuplex_2):
        Elapse a MF tick and PduR is called to copy the received CF and check that CFs of the 1st
        transmission are sent.
    11: Confirm the sent frames.
    12: VP(FRTP1039):
        Start another transmission of 20 bytes on the Connection 0.
        Check that the transmit request is ignored and E_NOT_OK is returned.
    13: Continue until LF is sent and confirmed for transmission.
    14: Indicate reception of ACK frame for transmission.
    15: VP(FRTP.FullDuplex_1):
        Check if 1st transmission completed successfully.
    16: Start another transmission of 20 bytes on the same channel.
    17: VP(FRTP1039):
        Elapse a MF tick and check that STF is sent.
    18: Continue until ACK frame is sent and confirmed for reception.
    19: VP(FRTP.FullDuplex_1):
        Check if reception is completed successfully and correct data are passed to PduR.
    20: Indicate FC for the ongoing transmission and continue until ACK frame is received.
    21: VP(FRTP.FullDuplex_1):
         Check if 1st transmission completed successfully.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP.FullDuplex_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>FRTP.FullDuplex_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FRTP1039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PDULENGTHTYPE001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>TS_FRTP_FULLDUPLEX_CONCURRENT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_FullDuplex/source/application/testcase.c.m4</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the concurrent fullduplex communications on two channels.
  
Test Object: 
    Fullduplex communication
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start a transmission of 60 bytes on Connection 0.
    02: Elapse MF tick and check if STF is transmitted with Pdu of FrTpTxPduPool_0.
    03: Confirm the STF sent.
    04: Start a reception of 50 bytes on Connection 0, with ascending data starting with 110.
    05: Check if PduR calls are made.
    06: Simulate reception of FC of 1st transmission on Pdu of FrTpRxPduPool_0.
    07: VP(FRTP.FullDuplex_2):
        Elapse a MF tick and check that FC frame of 1st reception and CFs of first transmission
        are correctly sent.
    08: Confirm the FC frame sent.
    09: Confirm CFs sent.
    10: Simulate reception of CF of 1st reception on Pdu of FrTpRxPduPool_0.
    11: Check if PduR is called to copy the received CF.
    12: Start another transmission of 50 bytes on Connection 1 which also uses the FrTpTxPduPool_0.
    13: Elapse a MF tick and check if STF is sent with the Pdu of FrTpTxPduPool_0. Confirm it.
    14: Start another recpetion of 50 bytes on Connection 1 with also uses FrTpRxPduPool_0, with
        ascending data starting with 160.
    15: Check if PduR calls are made.
    16: Elapse a MF tick and check that CTS is sent with Pdu of FrTpTxPduPool_0 and confirm it.
    17: Continue until LF frame is sent and confirmed for 2nd transmission.
    18: Continue until ACK frame for 2nd reception is sent and confirmed.
    19: VP(FRTP.FullDuplex_1):
        Check if the 2nd reception is completed successfully and correct data are passed to PduR.
    20: Start another reception with invalid source address.
    21: VP(FRTP1071, FRTP1072):
        Check if the frame is ignored.
    22: Indicate ACK frame for 2nd transmission.
    23: Check if 2nd transmission is completed successfully.
    24: Continue until ACK frame for 1st reception is sent and confirmed.
    25: VP(FRTP.FullDuplex_1):
        Check if the 1st reception is completed successfully and correct data are passed to PduR.
    26: Continue until LF is sent and confirmed for 1st transmission.
    27: Indicate reception of ACK frame for 1st transmission.
    28: VP(FRTP.FullDuplex_1):
        Check if 1st transmission completed successfully.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP.FullDuplex_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>FRTP.FullDuplex_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FRTP1071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>FRTP1072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>TS_FRTP_FULLDUPLEX_ERROR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_FullDuplex/source/application/testcase.c.m4</sourcefile>
      <sourceline>695</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the error handling for fullduplex communication.
  
Test Object: 
    Fullduplex communication
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start a transmission of 60 bytes on Connection 0.
    02: Elapse MF tick and check if STF is transmitted with Pdu of FrTpTxPduPool_0.
    03: Start a reception of 50 bytes on Connection 0, with ascending data starting with 10.
    04: Check if PduR calls are made.
    05: Elapse a MF tick and check that FC is sent with Pdu of FrTpTxPduPool_0.
    06: Simulate a As timeout of 8 MF ticks.
    07: VP(FRTP.FullDuplex_1, FrTp.ISO10681_NotificationResults.C_TIMEOUT_As):
        Check if PduR is notified of the error in transmission with result E_NOT_OK.
    08: Simulate Ar timeout of 9 MF ticks, 8 ticks already elapsed.
    09: VP(FRTP.FullDuplex_1,	FrTp.ISO10681_NotificationResults.C_TIMEOUT_Ar):
        Check if PduR is notified of the error in reception with result E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP.FullDuplex_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Ar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>TS_FRTP_FULLDUPLEX_TIMEBR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_FullDuplex/source/application/testcase.c.m4</sourcefile>
      <sourceline>812</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the behavior of timer BR in fullduplex communication mode.
  
Test Object: 
    Fullduplex communication
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start a transmission of 60 bytes on Connection 0.
    02: Elapse MF tick and check if STF is transmitted with Pdu of FrTpTxPduPool_0.
    03: Confirm the STF sent.
    04: Start a reception of 50 bytes on Connection 0, with ascending data starting with 10.
    05: Check if PduR calls are made.
    06: Elapse a MF tick and check that FC is sent with Pdu of FrTpTxPduPool_0.
    07: Confirm the FC frame sent.
    08: Simulate reception of FC on Pdu of FrTpRxPduPool_0.
    09: Elapse a MF tick and check that CFs of the transmission are sent. Confirm the sent frames.
    10: Complete the transmission.
    11: Indicate ACK frame for transmission.
    12: VP(FRTP.FullDuplex_1):
         Check if transmission completed successfully.
    13: PduR shall return a buffer size of 0 for CF to be received.
    14: Simulate reception of CF on Pdu of FrTpRxPduPool_0.
    15: Loop steps 16 to 17 FrTpMaxFCWait times.
    16: Elapse FrTpTimeBr MF ticks and check that data copy is requested.
    17: VP(FrTp.EB.TimeBr_1):
        Elapse a MF tick and check that FC WAIT is sent. Confirm it.
    18: Call main function till Br elapses, FrTpMaxFCWait exceeded.
    19: Elapse a MF tick.
    20: VP(FrTp.EB.TimeBr_2, FRTP_COUNTER_FCWT):
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP.FullDuplex_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TimeBr_1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TimeBr_2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_FCWT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_UNEXPECTED_RX_PDU</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if the PDUs received are properly handled. If awaited it is process otherwise
    ignored.
  
Test Object: 
    Reception of unexpected frames
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start transmission of 32 bytes to target address 0x0001
    02: VP(FrTp.ISO10681_0059_RX_STF_segmented):
        Indicate reception of STFA frame (segmented) from source address 0x0001.
        Verify frame is ignored.
    03: VP(FrTp.ISO10681_0059_RX_STF_unsegmented):
        Indicate reception of STFA frame (unsegmented) from source address 0x0001.
        Verify frame is ignored.
    04: VP(FrTp.ISO10681_0059_RX_CF):
        Indicate reception of CF1 frame from source address 0x0001.
        Verify frame is ignored.
    05: VP(FrTp.ISO10681_0059_RX_LF):
        Indicate reception of LF frame from source address 0x0001.
        Verify frame is ignored.
    06: VP(FrTp.ISO10681_0059_RX_FC):
        Indicate reception of the awaited CTS frame with source address 0x0001 and check that it
        is processed. Elapse a Mainfunction tick.
    07: VP(FrTp.ISO10681_0059_RX_FC):
        Indicate reception of unexpected FC OVFL and check that it is ignored.
    08: VP(FrTp.ISO10681_0059_RX_FC):
        Indicate reception of unexpected FC RETRY frame with source address 0x0001 and check that it
        is ignored.
    09: VP(FrTp.ISO10681_0059_RX_FC):
        Indicate reception of unexpected FC WT frame with source address 0x0001 and check that it
        is ignored.
    10: Continue until LF is sent and confirmed.
    11: Check that PduR_FrTpTxConfirmation() is not called.
    12: VP(FrTp.ISO10681_0059_RX_FC):
        Indicate reception of ACK_RET, awaited and check that it is processed.
    13: Verify transmission was finished correctly.
    14: Indicate reception of unexpected FC CTS neither transmission nor reception in progress.
    15: VP(FrTp.ISO10681_0059_RX_FC):
        Check if the unexpected FC frame is ignored.
    16: Indicate reception of unexpected FC ABORT neither transmission nor reception in progress.
    17: VP(FrTp.ISO10681_0059_RX_FC):
        Check if the unexpected FC frame is ignored.
    18: Indicate reception of unexpected FC OVFL neither transmission nor reception in progress.
    19: VP(FrTp.ISO10681_0059_RX_FC):
        Check if the unexpected FC frame is ignored.
    20: Indicate reception of unexpected FC RETRY neither transmission nor reception in progress.
    21: VP(FrTp.ISO10681_0059_RX_FC):
        Check if the unexpected FC frame is ignored.
    22: Indicate reception of unexpected FC WAIT neither transmission nor reception in progress.
    23: VP(FrTp.ISO10681_0059_RX_FC):
        Check if the unexpected FC frame is ignored.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_STF_segmented</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_STF_unsegmented</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_CF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_LF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_FC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>TS_FRTP_AS_TIMEOUT_STF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>321</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of As timeout in case STF is not confirmed.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission of 50 bytes on Connection 0.
    02: Elapse a MF tick and check that STF is sent but not confirmed.
    03: Elapse MF ticks just before AS timeout occurs.
    04: Check if no calls were made.
    05: Elapse a MF tick and simulate AS timeout.
    06: VP(FRTP1100_As):
        Check if transmission is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <specobject>
      <id>TS_FRTP_AS_TIMEOUT_CF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of As timeout in case CF is not confirmed.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission of 100 bytes on Connection 0.
    02: Elapse a MF tick and check that STF is sent. Confirm it.
    03: Indicate FC CTS.
    04: Elapse a MF tick and check that CF frames were sent. Confirm CF, CFEOB not confirmed.
    05: Elapse MF ticks just before AS timeout occurs.
    06: Check if no calls were made.
    07: Elapse a MF tick and simulate AS timeout.
    08: VP(FRTP1100_As, FRTP1099_As):
        Check if transmission is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FRTP1099_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>TS_FRTP_AS_TIMEOUT_LF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>521</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of As timeout in case LF is not confirmed.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission of 80 bytes on Connection 0.
    02: Elapse a MF tick and check that STF is sent. Confirm it.
    03: Indicate FC CTS.
    04: Elapse a MF tick and check that CF frames were sent. Confirm CFs.
    05: Indicate FC CTS.
    06: Elapse a MF tick and check if CFs and LF were sent. Confirm CFs, don't confirm LF.
    07: Elapse MF ticks just before AS timeout occurs.
    08: Check if no calls were made.
    09: Elapse a MF tick and simulate AS timeout.
    10: VP(FRTP1100_As, FRTP1099_As):
        Check if transmission is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FRTP1099_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>TS_FRTP_AR_TIMEOUT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>673</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of Ar timeout.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a reception of 50 bytes on Connection 0.
    02: Elapse a MF tick and check that CTS is sent.
    03: Elapse MF ticks just before AR timeout occurs.
    04: Check if no calls were made.
    05: Elapse a MF tick and simulate AR timeout.
    06: VP(FRTP1100_Ar):
        Check if reception is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_Ar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>TS_FRTP_AR_TIMEOUT_FC_CFEOB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>748</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of Ar timeout if CTS after CFEOB is not sent in time.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a reception of 50 bytes on Connection 0.
    02: Elapse a MF tick and check that CTS is sent. Confirm it.
    03: Indicate a CF of 10 bytes and CFEOB of 15 bytes.
    04: Elapse a MF tick and check that CTS is sent.
    05: Elapse MF ticks just before AR timeout occurs.
    06: Check if no calls were made.
    07: Elapse a MF tick and simulate AR timeout.
    08: VP(FRTP1100_Ar, FRTP1099_Ar):
        Check if reception is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_Ar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FRTP1099_Ar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
    <specobject>
      <id>TS_FRTP_AR_TIMEOUT_FC_LF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of Ar timeout if ACK after LF is not sent in time.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a reception of 50 bytes on Connection 0.
    02: Elapse a MF tick and check that CTS is sent. Confirm it.
    03: Indicate a CF of 10 bytes and LF of 20 bytes.
    04: Elapse a MF tick and check that ACK is sent.
    05: Elapse MF ticks just before AR timeout occurs.
    06: Check if no calls were made.
    07: Elapse a MF tick and simulate AR timeout.
    08: VP(FRTP1100_Ar, FRTP1099_Ar):
        Check if reception is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_Ar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FRTP1099_Ar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>TS_FRTP_CR_TIMEOUT_LF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>932</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of Cr timeout waiting for LF.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a reception of 50 bytes on Connection 0.
    02: Elapse a MF tick and check that CTS is sent. Confirm FC CTS.
    03: Continue until the LF is expected.
    04: Elapse MF ticks just before CR timeout occurs.
    05: Check if no calls were made.
    06: Elapse a MF tick and simulate CR timeout.
    07: VP(FRTP1100_Cr):
        Check if reception is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_Cr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>TS_FRTP_CR_TIMEOUT_CF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>1015</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of Cr timeout waiting for CF.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a reception of 50 bytes on Connection 0.
    02: Elapse a MF tick and check that CTS is sent. Confirm FC CTS.
    03: Elapse MF ticks just before CR timeout occurs.
    04: Check if no calls were made.
    05: Elapse a MF tick and simulate CR timeout.
    06: VP(FRTP1100_Cr):
        Check if reception is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_Cr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>TS_FRTP_BS_TIMEOUT_CTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>1091</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of Bs timeout waiting for FC CTS.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission of 50 bytes on Connection 0.
    02: Elapse a MF tick and check that STF is sent. Confirm STF.
    03: Elapse MF ticks just before BS timeout occurs.
    04: Check if no calls were made.
    05: Elapse a MF tick and simulate BS timeout.
    06: VP(FRTP1100_Bs, FRTP1099_Bs):
        Check if transmission is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>FRTP1099_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>TS_FRTP_BS_TIMEOUT_WAIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>1175</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of Bs timeout when a FC WAIT is received.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission of 50 bytes on Connection 0.
    02: Elapse a MF tick and check that STF is sent. Confirm STF.
    03: Elapse MF ticks just before BS timeout occurs.
    04: Indicate FC WAIT.
    05: Elapse MF ticks just before BS timeout occurs.
    06: Check if no calls were made.
    07: Elapse a MF tick and simulate BS timeout.
    08: VP(FRTP1100_Bs):
        Check if transmission is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>TS_FRTP_BS_TIMEOUT_ACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>1269</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the behavior of Bs timeout waiting for FC ACK.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission of 50 bytes on Connection 0.
    02: Elapse a MF tick and check that STF is sent. Confirm STF.
    03: Indicate FC CTS and continue until FC ACK is expected.
    04: Elapse MF ticks just before BS timeout occurs.
    05: Check if no calls were made.
    06: Elapse a MF tick and simulate BS timeout.
    07: VP(FRTP1100_Bs, FRTP1099_Bs):
        Check if transmission is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1100_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>FRTP1099_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
    <specobject>
      <id>TS_FRTP_HALFDUPLEX_COMMUNICATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_HalfDuplex/source/application/testcase.c</sourcefile>
      <sourceline>1379</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks that the channel is released only if the entire message is received and FC is
      sent and confirmed, in a normal reception without errors.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a reception of 50 bytes of data on Connection 0.
    02: Elapse a MF tick and check that CTS is sent. Confirm CTS.
    03: Start a transmission of 5 bytes on the same channel.
    04: VP(FRTP1081, FRTP1041, FrTp.ASR40.Transmit.E_NOT_OK2):
        Check that the transmit request returned E_NOT_OK.
    05: VP(FRTP1185):
        Check if Det error FRTP_E_NO_CHANNEL is reported.
    06: Indicate CFs and LF.
    07: Elapse a MF tick and check that ACK is sent.
    08: VP(FRTP1081, FRTP1041, FrTp.ASR40.Transmit.E_NOT_OK2):
        Start another transmission on this channel and check that channel is still busy.
    09: Confirm the ACK frame.
    10: Check for PduR notification.
    11: Start a transmission of 5 bytes on the same channel.
    12: VP(FRTP1081, FRTP1041):
        Check if transmission is accepted and STF of 5 bytes is sent.
    13: Indicate ACK and check that PduR is notified.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>FRTP1041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FRTP1185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.Transmit.E_NOT_OK2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_RX_STFA_UNSEGM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the reception of start frames that contain the whole message on connections that have meta-data remote and local addresses enabled and disabled.
Test Object: Software
Test Precondition: 
  
Test Execution: 
    01: Only execute the sequence for connections with unique address pairs
    02: Receive an acknowledged start frame containing the whole message
    03: VP(FrTp.EB.MetaDataHandling.Parameter,1) EcuC has been called only if metadata-handling is globally enabled.
    04: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data remote address, EcuC has been called to set the source address.
    05: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data local address, EcuC has been called to set the target address.
    06: VP(FrTp.EB.UlCallout.RxIndicationName.Function,1) Reception has ben forwarded to configured callout module and to PduR.
    07: VP(Autosar_R20-11.SWS_FrTp_01207,1) Connections with configured FrTpLa and/or FrTpRa are preferred during reception over those using meta-data as addresses.
    08: Call the main function.
    09: Sanity check - Transmission request of flow control frame has indicated.
    10: Trigger the transmission of the flow control frame.
    11: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data local address, the flow control frame has been transmitted with the correct meta-data addresses.
    12: Confirm the transmission of the flow control frame.
    13: Sanity check - Concluded reception has been indicated to PduR.
    14: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.MetaDataHandling.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the reception of start frames that initiate a segmented reception on connections that have meta-data remote and local addresses enabled and disabled.
Test Object: Software
Test Precondition: 
  
Test Execution: 
    01: Execute the sequence for all connection
    02: Receive an acknowledged start frame starting a new segmented reception.
    03: VP(FrTp.EB.MetaDataHandling.Parameter,1) EcuC has been called only if metadata-handling is globally enabled.
    04: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data remote address, EcuC has been called to set the source address.
    05: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data local address, EcuC has been called to set the target address.
    06: VP(FrTp.EB.UlCallout.RxIndicationName.Function,1) Reception has ben forwarded to configured callout module and to PduR.
    07: VP(Autosar_R20-11.SWS_FrTp_01207,1) Connections with configured FrTpLa and/or FrTpRa are preferred during reception over those using meta-data as addresses.
    08: Call the main function.
    09: Sanity check - Transmission request of flow control frame has indicated.
    10: Trigger the transmission of the flow control frame.
    11: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data local address, the flow control frame has been transmitted with the correct meta-data addresses.
    12: Confirm the transmission of the flow control frame.
    13: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.MetaDataHandling.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM_IGNORED</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the reception of start frames that initiate a segmented reception, for which no connection is configure and the frame therefore ignored.
Test Object: Software
Test Precondition: 
  
Test Execution: 
    01: Receive an acknowledged start frame starting a new segmented reception.
    02: VP(FRTP1072,1) Reception is ignored.
    03: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_RX_CF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the reception of consecutive frames on connections that have meta-data remote and local addresses enabled and disabled.
Test Object: Software
Test Precondition: 
  
Test Execution: 
    01: Execute the sequence for all connection
    02: Receive a consecutive frame.
    03: VP(FrTp.EB.UlCallout.RxIndicationName.Function,1) Reception has ben forwarded to configured callout module and to PduR.
    04: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_RX_LF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the reception of last frames on connections that have meta-data remote and local addresses enabled and disabled.
Test Object: Software
Test Precondition: 
  
Test Execution: 
    01: Execute the sequence for all connection
    02: Receive a last frame
    03: VP(FrTp.EB.UlCallout.RxIndicationName.Function,1) Reception has ben forwarded to configured callout module and to PduR.
    04: Call the main function.
    05: Sanity check - Transmission request of flow control frame has indicated.
    06: Trigger the transmission of the flow control frame.
    07: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data local address, the flow control frame has been transmitted with the correct meta-data addresses.
    08: Confirm the transmission of the flow control frame.
    09: Sanity check - Concluded reception has been indicated to PduR.
    10: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_TX_STFA_UNSEGM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the transmission of start frames that contain the whole message on connections that have meta-data remote and local addresses enabled and disabled.
Test Object: Software
Test Precondition: 
    -   Configure addresses and reset data
  
Test Execution: 
    01: Execute the sequence for all connection
    02: Start a segmented transmission.
    03: Sanity check - Starting transmission succeeded.
    04: VP(FrTp.EB.MetaDataHandling.Parameter,1) EcuC has been called only if metadata-handling is globally enabled.
    05: VP(Autosar_R20-11.SWS_FrTp_01204,1) If the connection has a meta-data local address, EcuC has been called to get the target address.
    06: VP(Autosar_R20-11.SWS_FrTp_01204,1) If the connection has a meta-data remote address, EcuC has been called to get the source address.
    07: Call main function
    08: Sanity check - Upper layer data copy and lower layer transmission requested.
    09: Trigger transmission of start frame.
    10: VP(Autosar_R20-11.SWS_FrTp_01205,1) Target and source addresses in the frame correspond to configured or meta-data addresses, depending on the configuration.
    11: Sanity check - Upper layer data has been copied.
    12: Confirm the STF was sent.
    13: Sanity check - No external calls occurred.
    14: Indicate reception of ACK frame for transmission.
    15: Sanity check - Transmission completion has been signaled to upper layer.
    16: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.MetaDataHandling.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_TX_STFA_SEGM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the transmission of start frames starting a segmented transmission on connections that have meta-data remote and local addresses enabled and disabled.
Test Object: Software
Test Precondition: 
    -   Configure addresses and reset data
  
Test Execution: 
    01: Execute the sequence for all connection
    02: Start a segmented transmission.
    03: Sanity check - Starting transmission succeeded.
    04: VP(FrTp.EB.MetaDataHandling.Parameter,1) EcuC has been called only if metadata-handling is globally enabled.
    05: VP(Autosar_R20-11.SWS_FrTp_01204,1) If the connection has a meta-data local address, EcuC has been called to get the target address.
    06: VP(Autosar_R20-11.SWS_FrTp_01204,1) If the connection has a meta-data remote address, EcuC has been called to get the source address.
    07: Call main function
    08: Sanity check - Upper layer data copy and lower layer transmission requested.
    09: Trigger transmission of start frame.
    10: VP(Autosar_R20-11.SWS_FrTp_01205,1) Target and source addresses in the frame correspond to configured or meta-data addresses, depending on the configuration.
    11: Sanity check - Upper layer data has been copied.
    12: Confirm the STF was sent.
    13: Sanity check - No external calls occurred.
    14: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.MetaDataHandling.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_TX_CF_LF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>241</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the transmission of consecutive and last frames concluding a segmented transmission on connections that have meta-data remote and local addresses enabled and disabled.
Test Object: Software
Test Precondition: 
    -   Configure addresses and reset data
  
Test Execution: 
    01: Execute the sequence for all connection
    02: Indicate reception of ACK frame for transmission.
    03: Call the main function.
    04: Sanity check - Transmission requests to lower and upper layer for remaining message.
    05: Trigger transmission of consecutive/last frame.
    06: VP(Autosar_R20-11.SWS_FrTp_01204,1) If the connection has a meta-data addresses that have been previously retrieved from the EcuC, they are being used for consecutive and last frame transmission addressing.
    07: VP(Autosar_R20-11.SWS_FrTp_01205,1) Target and source addresses in the frame correspond to configured or meta-data addresses, depending on the configuration.
    08: Sanity check - Upper layer data has been copied.
    09: Confirm the STF was sent.
    10: Sanity check - No external calls occurred.
    11: Indicate reception of ACK frame for transmission.
    12: Sanity check - Transmission completion has been signaled to upper layer.
    13: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_RX_STFA_SEGM_ECUC_FAIL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the reception of start frames that would initiate a segmented reception, where the EcuC calls to set the meta-data-fail, on connections that have meta-data remote and local addresses enabled and disabled.
Test Object: Software
Test Precondition: 
    -   Set the EcuC APIs to return failure.
  
Test Execution: 
    01: Only execute the sequence for connections with at least one meta-data address and unique pairs
    02: Receive an acknowledged start frame starting a new segmented reception.
    03: VP(FrTp.EB.MetaDataHandling.Parameter,1) EcuC has been called only if metadata-handling is globally enabled.
    04: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data remote address, EcuC has been called to set the source address.
    05: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data local address, EcuC has been called to set the target address.
    06: Sanity check - PduR has not been notified because EcuC calls failed.
    07: Call the main function.
    08: Sanity check - Transmission request of flow control frame has indicated.
    09: Trigger the transmission of the flow control frame.
    10: VP(Autosar_R20-11.SWS_FrTp_01206,1) If the connection has a meta-data local address, the flow control frame has been transmitted with the correct meta-data addresses.
    11: Confirm the transmission of the flow control frame.
    12: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.MetaDataHandling.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    <specobject>
      <id>TS_FRTP_METADATA_HANDLING_TX_STFA_SEGM_ECUC_FAIL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_MetadataHandling/TestSpec_Generated.h</sourcefile>
      <sourceline>308</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test the transmission of start frames starting a segmented transmission, where the EcuC calls to set the meta-data-fail, on connections that have meta-data remote and local addresses enabled and disabled.
Test Object: Software
Test Precondition: 
    -   Configure addresses and reset data
    -   Set the EcuC APIs to return failure.
  
Test Execution: 
    01: Only execute the sequence for connections with at least one meta-data address and unique pairs
    02: Start a segmented transmission.
    03: Sanity check - Starting transmission failed because of EcuC calls failing.
    04: VP(FrTp.EB.MetaDataHandling.Parameter,1) EcuC has been called only if metadata-handling is globally enabled.
    05: VP(Autosar_R20-11.SWS_FrTp_01204,1) If the connection has a meta-data local address, EcuC has been called to get the target address.
    06: VP(Autosar_R20-11.SWS_FrTp_01204,1) If the connection has a meta-data remote address, EcuC has been called to get the source address.
    07: Sanity check - Additional main function call does not trigger any external calls.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.MetaDataHandling.Parameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.SWS_FrTp_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_SEGM_TX_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>126</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrTp_Transmit accepts a transmission request if resources are available.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: call FrTp_Transmit with following arguments:
        Pdu Id: TxSduId of Connection_0
        Length: 150
    02: VP (FRTP136, FRTP149)
        FrTp_Transmit returns E_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>FRTP149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that module starts transmission in main function context after SDU transmission was requested.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX_1 was executed previously
  
Test Execution: 
    01: elapse 1 main function tick
    02: VP(FRTP1042, FRTP1042_1)
        PduR_FrTpCopyTxData is called with the following arguments:
        TxPduId:    DestPdu_0 of RoutingPath_2
        SduLength:      0
        Buffer size of 80 bytes will be returned.
    03: VP(FRTP1045_1, FRTP1046, FRTP1050)
        FrIf_Transmit is called with the following arguments:
        FrIf_TxPduId:   1, first free PDU of sufficient size, out of the configured PDUs.
    04: VP(FRTP1051)
        FrIf_Transmit is called with the following arguments:
        SduLength:      16
  
Test Input: 
  
Test Output: 
    03: TxPduId: 0, PduLength: 8
        TxPduId: 1, PduLength: 16
        TxPduId: 2, PduLength: 16
        TxPduId: 3, PduLength: 32
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1045_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>FRTP1046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>FRTP1050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>FRTP1051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>FRTP1042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>FRTP1042_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>260</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrTp_TriggerTransmit provides correct data
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX_2 was executed previously
  
Test Execution: 
    01: call FrTp_TriggerTransmit with argument
        TxPduId: TxPdu_0 of TxPduPool_0
    02: VP(FRTP154, FRTP049_Conf):
        FrTp_TriggerTransmit returns E_OK
    03: VP(FRTP1061, FRTP049_Conf):
        FrTp_TriggerTransmit sets SduLength to 16
    04: VP(FRTP1123): PduR_FrTpCopyTxData is called to copy the 8 bytes of NSDU to the transmit buffer
    05: VP(FRTP1048, FRTP1049, FRTP1060, FrTp.ISO10681_0008, FrTp.ISO10681_0011,
        FrTp.ISO10681_0012, FrTp.ISO10681_0013, FrTp.ISO10681_0017, FrTp.ISO10681_0009)
        FrTp_TriggerTransmit sets the data pointer of PduInfo to [see output section]
  
Test Input: 
  
Test Output: 
    05: TA      SA      PCI: STFA     DATA
        00 01 | 55 55 | 41 08 00 96 | 00 01 02 03 04 05 06 07
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FRTP1048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>FRTP1060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>FRTP1061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>FRTP1123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
        <provcov>
          <linksto>FRTP049_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that transmission of consecutive frames is requested correctly in
    response to FC CTS frame.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX_3 was executed previously
  
Test Execution: 
    01: Confirm TxPduId 1
    02: Indicate reception of FC CTS frame (see input 02)
    03: Elapse 1 main function tick
    04: VP(FRTP1042):
        PduR_FrTpCopyTxData is called to get the length information.
        Buffer size of 72 bytes will be returned.
    05: VP(FRTP1010, FRTP1045_1, FRTP1046, FrTp.ISO10681_0022,
           FrTp.ISO10681_0023, FrTp.ISO10681_0024.Seg.CTS, FRTP1088):
        The module makes 4 calls to FrIf_Transmit in the order denoted in the output section
  
Test Input: 
    02: TA      SA      CTS, BfS=72
        55 55 | 00 01 | 83 00 00 48
  
Test Output: 
    05: TxPduId: 0, PduLength: 8
        TxPduId: 1, PduLength: 16
        TxPduId: 2, PduLength: 16
        TxPduId: 3, PduLength: 32
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>FRTP1045_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>FRTP1042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>FRTP1046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>FRTP1088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Seg.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>456</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that requested consecutive frames are transmitted correctly
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX_4 was executed previously
  
Test Execution: 
    01: VP(FRTP154, FRTP1010, FRTP1049, FRTP1123, FrTp.ISO10681_0014,
           FrTp.ISO10681_0016, FrTp.ISO10681_0017, FrTp.ISO10681_0018, FrTp.ISO10681_0019
          ):
        Make 4 calls to FrTp_TriggerTransmit with arguments from input section.
        Verify that arguments from output section are returned.
        Verify PduR_CopyTxData is called to copy data to the transmit buffer.
  
Test Input: 
    01: TxPduId: 0
        TxPduId: 1
        TxPduId: 2
        TxPduId: 3
  
Test Output: 
    01: PduInfoPtr returned by FrTp_TriggerTransmit
        TA      SA      CF1        DATA
        00 01 | 55 55 | 51 02    | 08 09
        00 01 | 55 55 | 52 0A    | 0A 0B 0C 0D 0E 0F 10 11 12 13
        00 01 | 55 55 | 53 0A    | 14 15 16 17 18 19 1A 1B 1C 1D
        00 01 | 55 55 | 54 1A    | 1E 1F 20 21 22 23 24 25 26 27
                                   28 29 2A 2B 2C 2D 2E 2F 30 31
                                   32 33 34 35 36 37
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FRTP1123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that CFEOB frame is sent correctly.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX_5 was executed previously
  
Test Execution: 
    01: VP(FRTP049_Conf)
        Confirm TxPduIds TxPdu_3, TxPdu_2 ,TxPdu_1 and TxPdu_0 of TxPduPool_0.
    02: Elapse 1 main function tick
    03: VP()
        Transmission of 4 Pdus is requested
    04: VP(FRTP1049, FrTp.ISO10681_0014)
        Call FrTp_TriggerTransmit with arguments from input/output section.
  
Test Input: 
    04: TxPduId: TxPdu_0 of TxPduPool_0
        TxPduId: TxPdu_1 of TxPduPool_0
        TxPduId: TxPdu_2 of TxPduPool_0
        TxPduId: TxPdu_3 of TxPduPool_0
  
Test Output: 
    03: TxPduId: TxPdu_0 of TxPduPool_0, PduLength: 8
        TxPduId: TxPdu_1 of TxPduPool_0, PduLength: 16
        TxPduId: TxPdu_2 of TxPduPool_0, PduLength: 16
        TxPduId: TxPdu_3 of TxPduPool_0, PduLength: 8
    04: TA      SA      CF1     DATA
        00 01 | 55 55 | 55 02 | 38 39
        00 01 | 55 55 | 56 0A | 3A 3B 3C 3D 3E 3F 40 41 42 43
        00 01 | 55 55 | 57 0A | 44 45 46 47 48 49 4A 4B 4C 4D
        TA      SA      CFEOB   DATA
        00 01 | 55 55 | 78 02 | 4E 4F
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FRTP049_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>716</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify consecutive frames and CF end-of-block frames are sent correctly
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX_6 was executed previously
  
Test Execution: 
    01: Confirm TxPduId TxPdu_3, TxPdu_2, TxPdu_0 and TxPdu_1 of TxPduPool_0.
    02: Indicate reception of FC CTS frame
    03: VP(FRTP1042)
        Elapse 1 main function tick.
        Module requests length information from PduR.
    04: VP(FRTP1050)
        Module makes 4 calls to FrIf_Transmit.
    05: VP(FRTP1060)
        Make 4 calls to FrTp_TriggerTransmit with parameter from input/output section
    06: Confirm TxPduIds TxPdu_3, TxPdu_2 and TxPdu_0 of TxPduPool_0.
    07: Elapse 1 main function tick
    08: VP(FRTP1050)
        Transmission of 1 Pdu is requested
    09: VP(FRTP1060)
        Call FrTp_TriggerTransmit with parameters from input/output section
  
Test Input: 
    02: TA      SA      FC CTS
        55 55 | 00 01 | 83 00 00 32
    05: TxPduId: TxPdu_3, TxPdu_2 and TxPdu_0 of TxPduPool_0.
    09: TxPduId: TxPdu_3 of TxPduPool_0.
  
Test Output: 
    03: FrTpTxpduId: DestPdu_0 of RoutingPath_2, BufferSize: 50
    04: TxPduId: TxPdu_0 of TxPduPool_0, PduLength: 8
        TxPduId: TxPdu_1 of TxPduPool_0, PduLength: 16
        TxPduId: TxPdu_2 of TxPduPool_0, PduLength: 16
        TxPduId: TxPdu_3 of TxPduPool_0, PduLength: 32
    05: TxPduIds TxPdu_3, TxPdu_2 and TxPdu_0 of TxPduPool_0.
        TA      SA      CF1     DATA
        00 01 | 55 55 | 59 02 | 50 51
        00 01 | 55 55 | 5A 0A | 52 53 54 55 56 57 58 59 5A 5B
        00 01 | 55 55 | 5B 0A | 5C 5D 5E 5F 60 61 62 63 64 65
        00 01 | 55 55 | 5C 1A | 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72
                                73 74 75 76 77 78 79 7A 7B 7C 7D 7E 7F
    08: TxPduId: 0 ,PduLength: 8
    09: TxPduId: TxPdu_3 of TxPduPool_0.
        TA      SA      CFEOB   DATA
        00 01 | 55 55 | 7D 02 | 80 81
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>FRTP1060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>FRTP1042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>918</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify consecutive frames and last frame are transmitted correctly
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX_7 was executed previously
  
Test Execution: 
    01: Confirm TxPduId TxPdu_3 of TxPduPool_0.
    02: Indicate reception of CTS frame
    03: Elapse 1 main function tick
    04: VP(FRTP1042)
        Length information is requested from PduR.
    05: VP()
        FrIf_Transmit is called 3 times.
    06: VP(FRTP1049, FrTp.ISO10681_0001, FrTp.ISO10681_0035, FrTp.ISO10681_0036,
           FrTp.ISO10681_0037, FrTp.ISO10681_0070):
        Make 3 calls to FrTp_TriggerTransmit with arguments from input/output section.
  
Test Input: 
    06: TxPduId: TxPdu_3, TxPdu_2 and TxPdu_0 of TxPduPool_0.
  
Test Output: 
    04: TxPduId: TxPdu_0 of TxPduPool_0 ,PduLength: 8
        TxPduId: TxPdu_1 of TxPduPool_0 ,PduLength: 16
        TxPduId: TxPdu_2 of TxPduPool_0 ,PduLength: 16
    06: TA      SA      CF1/LF        DATA
        00 01 | 55 55 | 5E 02       | 82 83
        00 01 | 55 55 | 5F 0A       | 84 85 86 87 88 89 8A 8B 8C 8D
        00 01 | 55 55 | 90 08 00 96 | 8E 8F 90 91 92 93 94 95
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FRTP1042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1062</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify PduR is notified of end of transmission
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX_8 was executed previously
  
Test Execution: 
    01: Confirm TxPduIds TxPdu_3, TxPdu_2 and TxPdu_0 of TxPduPool_0.
    02: Indicate reception of FC ACK_RET frame
    03: VP(FRTP1058)
        Module calls PduR_FrTpTxConfirmation with arguments
        FrTpTxPduId: 0 ,Result: E_OK
  
Test Input: 
    02: TA      SA      FC ACK_RET
        55 55 | 00 01 | 84 00 00 00
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEGM_ACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1130</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify unsegmented data transmission with acknowledge
  
Test Object: 
    Unsegmented acknowledged data transmission
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call FrTp_Transmit with arguments:
        FrTpTxPduId: TxSdu of Connection_1 ,SduLength: 70
    02: Elapse one main function tick (module calls FrIf_Transmit).
    03: VP(FRTP1045_1, FRTP1046, FRTP1048, FRTP1060, FrTp.ISO10681_0005)
        Call FrTp_TriggerTransmit with TxPduId 1. Expect output arguments from output section.
    04: Confirm PduId 1
    05: VP(FRTP1008):
        Verify that PduR_FrTpTxConfirmation was not yet called.
    06: Indicate reception of FC ACK_RET frame
    07: VP(FRTP1008, FRTP1058_1):
        Check if PduR_FrTpTxConfirmation is called with E_OK and TxPduId
        PduRConf_PduRRoutingPath_5_PduRDestPdu_0, the handleId configured in PduR for the PDU
        associated with TxSduRef of this connections.
  
Test Input: 
    06: TA      SA      FC ACK_RET
        55 55 | 00 02 | 84 00 00 00
  
Test Output: 
    03: TA      SA      STFA          DATA
        00 02 | 55 55 | 41 46 00 46 | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F 40 41 42 43 44 45
  </description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>FRTP1045_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>FRTP1046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>FRTP1048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>FRTP1060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>FRTP1058_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    <specobject>
      <id>TS_FRTP_NOFREE_TXPDU</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1242</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrTp stops processing the connection if no free FrTpTxPdu is identified
  
Test Object: 
    Segmented transmission
  
Test Precondition: 
  
Test Execution: 
    01: Call FrTp_Transmit with following arguments:
        Pdu Id: TsSdu of Connection_0
        Length: 70
    02: FrTp_Transmit returns E_OK
    03: Elapse 1 main function tick
    04: Call FrTp_TriggerTransmit with argument
        TxPduId: TxPdu_2 of TxPduPool_0
    05: Confirm TxPdu_2 of TxPduPool_0
    06: Indicate reception of FC CTS frame with sdulength 8
    07: Elapse 1 main function tick
    08: The module makes 4 calls to FrIf_Transmit in the order denoted in the output section
    09: Call FrTp_TriggerTransmit for all Pdus and verify output parameters
    10: Call 1 main function
    11. VP(FRTP1047):
        Verify that further transmits were not requested to frIf.
    12: Confirm sent CF frames.
    13: Elapse one Main Function
    14: Check whether rest of frames are transmitted as in output section, as free Pdus are available.
    15: Finish the transmission.
  
Test Input: 
  
Test Output: 
    08: TxPduId: 0 ,PduLength: 8
        TxPduId: 1 ,PduLength: 16
        TxPduId: 2 ,PduLength: 16
        TxPduId: 3 ,PduLength: 32
    14: TxPduId: 0 ,PduLength: 8
        TxPduId: 1 ,PduLength: 16
        TxPduId: 2 ,PduLength: 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_SEGM_ACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1452</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the support of a transmission request via FrTp_Transmit called within the context of
    PduR_FrTpTxConfirmation for the same TxPduId in an segmented data transmission with acknowledge.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Initialize transmission by calling TS_FRTP_SEGM_TX_1().
    02: Set function calling FrTp_Transmit as callout of PduR_FrTpTxConfirmation.
    03: Process remaining part of transmission by calling TS_FRTP_SEGM_TX_2, 3, 4, 5, 6, 7 and 8.
    04: Confirm TxPduIds TxPdu_3, TxPdu_2 and TxPdu_0 of TxPduPool_0.
    05: Indicate reception of FC ACK_RET frame
    06: VP(FRTP1058)
        Module calls PduR_FrTpTxConfirmation with arguments
        FrTpTxPduId: 0, Result: E_OK
    07: VP(FrTp.EB.TransmissionRequestFromTxConfirmation): FrTp_Transmit returns E_OK.
    08: Reset callout of PduR_FrTpTxConfirmation.
  
Test Input: 
    02: TA      SA      FC ACK_RET
        55 55 | 00 01 | 84 00 00 00
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TransmissionRequestFromTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>TS_FRTP_TRANSMISSION_REQUEST_FROM_TX_CONFIRMATION_UNSEGM_ACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1565</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify the support of a transmission request via FrTp_Transmit called within the context of
    PduR_FrTpTxConfirmation for the same TxPduId in an unsegmented data transmission with
    acknowledge.
  
Test Object: 
    Unsegmented acknowledged data transmission
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Set function calling FrTp_Transmit as callout of PduR_FrTpTxConfirmation.
    02: Call FrTp_Transmit with arguments: FrTpTxPduId: TxSdu of Connection_1, SduLength: 70
    03: VP(FrTp.EB.TransmissionRequestFromTxConfirmation): FrTp_Transmit returns E_OK
    04: Elapse one main function tick (module calls FrIf_Transmit).
    05: VP(FRTP1045_1, FRTP1046, FRTP1048, FRTP1060, FrTp.ISO10681_0005):
        Call FrTp_TriggerTransmit with TxPduId 1. Expect output arguments from output section.
    06: Confirm PduId 1
    07: VP(FRTP1008): Verify that PduR_FrTpTxConfirmation was not yet called.
    08: Indicate reception of FC ACK_RET frame
    09: VP(FRTP1008, FRTP1058_1):
        Check if PduR_FrTpTxConfirmation is called with E_OK and TxPduId
        PduRConf_PduRRoutingPath_5_PduRDestPdu_0, the handleId configured in PduR for the PDU
        associated with TxSduRef of this connections.
    10: Reset callout of PduR_FrTpTxConfirmation.
  
Test Input: 
    06: TA      SA      FC ACK_RET
        55 55 | 00 02 | 84 00 00 00
  
Test Output: 
    03: TA      SA      STFA          DATA
        00 02 | 55 55 | 41 46 00 46 | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F 40 41 42 43 44 45
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.TransmissionRequestFromTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>FRTP1008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>FRTP1045_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>FRTP1046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>FRTP1048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>FRTP1060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>FRTP1058_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_SEGM_TX2_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrTp_Transmit accepts a transmission request if resources are available.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: call FrTp_Transmit with following arguments:
        Pdu Id: TxSdu of Connection_0
        Length: 179
    02: VP(FRTP136, FRTP149):
        FrTp_Transmit returns E_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>FRTP149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX2_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that module starts transmission in main function context after SDU transmission was requested.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX2_1 was executed previously
  
Test Execution: 
    01: elapse 1 main function tick
    02: VP(FRTP1042)
        PduR_FrTpCopyTxData is called with the following arguments:
        TxPduId:    DestPdu_0 of RoutingPath_2.
        SduLength:      0
    03: VP(FRTP1050)
        FrIf_Transmit is called with the following arguments:
        FrIf_TxPduId:   1
    04: VP(FRTP1051)
        FrIf_Transmit is called with the following arguments:
        SduLength:      16
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>FRTP1051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>FRTP1042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX2_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrTp_TriggerTransmit provides correct data
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX2_2 was executed previously
  
Test Execution: 
    01: call FrTp_TriggerTransmit with argument
        TxPduId: TxPdu_2 of TxPduPool_0
    02: FrTp_TriggerTransmit returns E_OK
    03: VP(FRTP1061):
        FrTp_TriggerTransmit sets SduLength to 16
    04: Data is requested from PduR.
    05: FrTp_TriggerTransmit sets the data pointer of PduInfo to [see output section]
  
Test Input: 
  
Test Output: 
    05: TA      SA      PCI: STFA     DATA
        00 01 | 55 55 | 41 08 00 B3 | 00 01 02 03 04 05 06 07
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX2_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>295</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that transmission of consecutive frames is requested correctly in
    response to FC CTS frame.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX2_3 was executed previously
  
Test Execution: 
    01: Confirm TxPdu_2 of TxPduPool_0
    02: Indicate reception of FC CTS frame (see input 02)
    03: Elapse 1 main function tick
    04: Check if PduR_FrTpCopyTxData is called to get the length information.
    05: VP(FrTp.ISO10681_0024.Seg.CTS):
        The module makes 4 calls to FrIf_Transmit in the order denoted in the output section
  
Test Input: 
    02: TA      SA      CTS, BfS=72
        55 55 | 00 01 | 83 00 00 48
  
Test Output: 
    05: TxPduId: 0, PduLength: 8
        TxPduId: 1, PduLength: 16
        TxPduId: 2, PduLength: 16
        TxPduId: 3, PduLength: 32
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Seg.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX2_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>388</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that requested consecutive frames are transmitted correctly
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX2_4 was executed previously
  
Test Execution: 
    01: VP(FRTP1049):
        Make 4 calls to FrTp_TriggerTransmit with arguments from input section.
        Verify that arguments from output section are returned.
  
Test Input: 
    01: TxPduId: TxPdu_3 of TxPduPool_0
        TxPduId: TxPdu_2 of TxPduPool_0
        TxPduId: TxPdu_0 of TxPduPool_0
        TxPduId: TxPdu_1 of TxPduPool_0
  
Test Output: 
    01: PduInfoPtr returned by FrTp_TriggerTransmit
        TA      SA      CF1        DATA
        00 01 | 55 55 | 51 02    | 08 09
        00 01 | 55 55 | 52 0A    | 0A 0B 0C 0D 0E 0F 10 11 12 13
        00 01 | 55 55 | 53 0A    | 14 15 16 17 18 19 1A 1B 1C 1D
        00 01 | 55 55 | 54 1A    | 1E 1F 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX2_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>491</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that CFEOB frame is sent correctly.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX2_5 was executed previously
  
Test Execution: 
    01: Confirm TxPduIds TxPdu_3, TxPdu_2, TxPdu_1 and TxPdu_0 of TxPduPool_0.
    02: Elapse 1 main function tick
    03: Transmission of 4 Pdus is requested
    04: VP(FRTP1049, FrTp.ISO10681_0014)
        Call FrTp_TriggerTransmit with arguments from input/output section
  
Test Input: 
    04: TxPduId: TxPdu_3 of TxPduPool_0
        TxPduId: TxPdu_2 of TxPduPool_0
        TxPduId: TxPdu_1 of TxPduPool_0
        TxPduId: TxPdu_1 of TxPduPool_0
  
Test Output: 
    03: TxPduId: 0, PduLength: 8
        TxPduId: 1, PduLength: 16
        TxPduId: 2, PduLength: 16
        TxPduId: 3, PduLength: 8
    04: TA      SA      CF1     DATA
        00 01 | 55 55 | 55 02 | 38 39
        00 01 | 55 55 | 56 0A | 3A 3B 3C 3D 3E 3F 40 41 42 43
        00 01 | 55 55 | 57 0A | 44 45 46 47 48 49 4A 4B 4C 4D
        TA      SA      CFEOB   DATA
        00 01 | 55 55 | 78 02 | 4E 4F
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX2_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>629</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify consecutive frames and CF end-of-block frames are sent correctly
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX2_6 was executed previously
  
Test Execution: 
    01: Confirm TxPduId TxPdu_3, TxPdu_2, TxPdu_1 and TxPdu_0 of TxPduPool_0.
    02: Indicate reception of FC CTS frame
    03: Elapse 1 main function tick.
        Module requests length information from PduR.
    04: VP(FRTP1050)
        Module makes 4 calls to FrIf_Transmit.
    05: VP(FRTP1060)
        Make 4 calls to FrTp_TriggerTransmit with parameter from input/output section
    06: Confirm TxPduIds TxPdu_3, TxPdu_2, TxPdu_1 and TxPdu_0 of TxPduPool_0.
    07: Elapse 1 main function tick
    08: VP(FRTP1050)
        Transmission of 1 Pdu is requested
    09: VP(FRTP1060)
        Call FrTp_TriggerTransmit with parameters from input/output section
  
Test Input: 
    02: TA      SA      FC CTS
        55 55 | 00 01 | 83 00 00 32
    05: TxPduId: TxPdu_3, TxPdu_2, TxPdu_1 and TxPdu_0 of TxPduPool_0.
    09: TxPduId: TxPdu_3 of TxPduPool_0
  
Test Output: 
    03: FrTpTxpduId: DestPdu_0 of RoutingPath_2, BufferSize: 50
    04: TxPduId: 0, PduLength: 8
        TxPduId: 1, PduLength: 16
        TxPduId: 2, PduLength: 16
        TxPduId: 3, PduLength: 32
    05: TxPduIds TxPdu_3, TxPdu_2, TxPdu_1 and TxPdu_0 of TxPduPool_0.
        TA      SA      CF1     DATA
        00 01 | 55 55 | 59 02 | 50 51
        00 01 | 55 55 | 5A 0A | 52 53 54 55 56 57 58 59 5A 5B
        00 01 | 55 55 | 5B 0A | 5C 5D 5E 5F 60 61 62 63 64 65
        00 01 | 55 55 | 5C 1A | 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A 7B 7C 7D 7E 7F
    08: TxPduId: 0 ,PduLength: 8
    09: TxPduId: TxPdu_3 of TxPduPool_0
        TA      SA      CFEOB   DATA
        00 01 | 55 55 | 7D 02 | 80 81
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>FRTP1060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX2_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify consecutive frames and last frame are transmitted correctly
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX2_7 was executed previously
  
Test Execution: 
    01: Confirm TxPdu_3 of TxPduPool_0.
    02: Indicate reception of CTS frame
    03: Elapse 1 main function tick
    04: Length information is requested from PduR.
    05: FrIf_Transmit is called 4 times.
    06: VP(FRTP1049):
        Make 4 calls to FrTp_TriggerTransmit with arguments from input/output section.
    07: Confirm PduIds
    08: Another main function tick
    09  VP(FRTP1050):
        2 more transmission requested
    10  VP(FRTP1060):
        Call FrTp_TriggerTransmit and verify arguments
  
Test Input: 
    06: TxPduId 0-2
  
Test Output: 
    04: TxPduId: 0 ,PduLength: 8
        TxPduId: 1 ,PduLength: 16
        TxPduId: 2 ,PduLength: 16
        TxPduId: 3 ,PduLength: 32
    06: TA      SA      CF1/LF        DATA
        00 01 | 55 55 | 5E 02       | 82 83
        00 01 | 55 55 | 5F 0A       | 84 85 86 87 88 89 8A 8B 8C 8D
        00 01 | 55 55 | 50 0A       | 8E 8F 90 91 92 93 94 95 96 97
        00 01 | 55 55 | 51 1A       | 98 99 9A 9B 9C 9D 9E 9F A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 AA AB AC AD AE AF B0 B1
    08: TxPduId: 0 ,PduLength: 7
        TxPduId: 1 ,PduLength: 8
    10: TA      SA      CF1/LF        DATA
        00 01 | 55 55 | 52 01       | B2
        00 01 | 55 55 | 90 00 00 B3 |
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FRTP1050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>FRTP1060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGM_TX2_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>1030</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify PduR is notified of end of transmission
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    TS_FRTP_SEGM_TX2_8 was executed previously
  
Test Execution: 
    01: Confirm TxPdu_3 and TxPdu_2 of TxPduPool_0
    02: Indicate reception of FC ACK_RET frame
    03: VP(FRTP1058)
        Module calls PduR_FrTpTxConfirmation with arguments
        FrTpTxPduId: 0 ,Result: E_OK
  
Test Input: 
    02: TA      SA      FC ACK_RET
        55 55 | 00 01 | 84 00 00 00
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>TS_FRTP_FUNC_INVALID_RX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>1094</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a segmented or acknowledeged STF frame is ignored
    for a connection with MultipleReceiverCon=true
  
Test Object: 
    Invalid broadcast reception
  
Test Precondition: 
  
Test Execution: 
    Loop over steps 01-03 for various STF frames
    01: Indicate STF frame
    02: VP() Verify frame is ignored (i.e. no stub function is called)
    03: VP() Elapse a few main functions (1 would suffice since PduR calls or
        CTS should come immediately) and check that still no stub function was called
  
Test Input: 
    - segmented STFU frame
    - unsegmented STFA
    - segmented STFA
    - segmented STFU (but lower byte of ml = fpl)
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_SEGM_TX_PDU_ORDER</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_Conf_TxAckKML_3/source/application/testcase.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrTp_Transmit accepts a transmission request if resources are available.
  
Test Object: 
    segmented transmission
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start a transmission of 50 bytes and continue until STF is sent and confirmed.
    02: Indicate FC CTS.
    03: VP(FRTP1088):
        Elapse a MF tick and check that CFs are sent in the order in the output.
    04: Call FrTp_Trigger transmit and confirm the PDUs sent.
    05: Indicate ACK frame.
    06: Check if PduR is notified with E_OK.
  
Test Input: 
  
Test Output: 
            FrIf_PduId                                   FrTp_TxPduId                      Length
    03:  FrIfConf_FT_100_A_0_1                FrTpConf_FrTpTxPdu_FrTpTxPdu_2           16
         FrIfConf_FT_90_A_0_1                 FrTpConf_FrTpTxPdu_FrTpTxPdu_1           32
         FrIfConf_FrTpConnectionNode1Unicast  FrTpConf_FrTpTxPdu_FrTpTxPdu_3            8
         FrIfConf_FT_80_A_0_1                 FrTpConf_FrTpTxPdu_FrTpTxPdu_0           16

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrTp_Test_NOT_INIT_FrTp_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_Transmit()
      in case the FrTp is not initialized.
  
Test Object: FrTp_Transmit
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01:  Call FrTp_Transmit() with valid parameters
     02:  VP (FRTP149, FRTP1033):
          FrTp_Transmit() returns E_NOT_OK
     03:  VP (FRTP1037, FRTP1106, FRTP1107, FRTP1111.FRTP_E_UNINIT, FRTP206, FRTP205, FRTP217):
          Det reports FRTP_E_UNINIT
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>FRTP205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>FRTP217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>FRTP1037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FRTP149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>FRTP1033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>FRTP1106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FRTP1107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NOT_INIT_FrTp_ChangeParameter</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_ChangeParameter()
      in case the FrTp is not initialized.
  
Test Object: FrTp_ChangeParameter
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01:  Call FrTp_ChangeParameter() with valid parameters
     02:  FrTp_ChangeParameter() returns E_NOT_OK
     03:  VP (FRTP1037, FRTP1106, FRTP1111.FRTP_E_UNINIT):
          Det reports FRTP_E_UNINIT
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FRTP1106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NOT_INIT_FrTp_CancelTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>179</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_CancelTransmit()
      in case the FrTp is not initialized.
  
Test Object: FrTp_CancelTransmit
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
      Transmit cancellation enabled.
  
Test Execution: 
     01:  Call FrTp_CancelTransmit() for a configured TxPduId.
     02:  FrTp_CancelTransmit() returns E_NOT_OK
     03:  VP (FRTP1037, FRTP1111.FRTP_E_UNINIT):
          Det reports FRTP_E_UNINIT.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NOT_INIT_FrTp_CancelReceive</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_CancelReceive()
      in case the FrTp is not initialized.
  
Test Object: FrTp_CancelReceive
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01:  Call FrTp_CancelReceive() for a configured RxSduId.
     02:  FrTp_CancelReceive() returns E_NOT_OK
     03:  VP (FRTP1037, FRTP1111.FRTP_E_UNINIT):
          Det reports FRTP_E_UNINIT
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NOT_INIT_FrTp_TriggerTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>288</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_TriggerTransmit()
      in case the FrTp is not initialized.
  
Test Object: FrTp_TriggerTransmit
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01:  Call FrTp_TriggerTransmit() with valid parameters
     02:  VP (FRTP154):
          FrTp_TriggerTransmit() returns E_NOT_OK
     03:  VP (FRTP1037, FRTP1106, FRTP1111.FRTP_E_UNINIT):
          Det reports FRTP_E_UNINIT
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FRTP154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>FRTP1106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NOT_INIT_FrTp_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_RxIndication()
      in case the FrTp is not initialized.
  
Test Object: FrTp_RxIndication
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_RxIndication() with valid parameters
     02: VP (FRTP1033, FRTP1037, FRTP1106, FRTP1111.FRTP_E_UNINIT):
         Det reports FRTP_E_UNINIT
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FRTP152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>FRTP1033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>FRTP1106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NOT_INIT_FrTp_TxConfirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_TxConfirmation()
      in case the FrTp is not initialized.
  
Test Object: FrTp_TxConfirmation
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_TxConfirmation() with valid parameters
     02: VP (FRTP1037, FRTP1106, FRTP1111.FRTP_E_UNINIT):
         Det reports FRTP_E_UNINIT
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FRTP1106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NOT_INIT_FrTp_MainFunction</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>455</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_MainFunction()
      in case the FrTp is not initialized.
      Note: MainFunction shall not report FRTP_E_UNINIT.
            See https://issue.ebgroup.elektrobit.com/browse/ASCCCB-1403
  
Test Object: FrTp_MainFunction
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_MainFunction()
     02: VP (FrTp.EB.ASCCCB1403, FRTP1106, FRTP1111.FRTP_E_UNINIT):
         Det reports nothing
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.ASCCCB1403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>FRTP1106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NOT_INIT_FrTp_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_GetVersionInfo()
      in case the FrTp is not initialized.
  
Test Object: FrTp_MainFunction
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_GetVersionInfo()
     02: VP (FRTP1106, FRTP1111.FRTP_E_UNINIT):
         Det reports nothing
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NULL_PTR_FrTp_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>545</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_GetVersionInfo()
      in case it is called with a NULL pointer.
  
Test Object: FrTp_GetVersionInfo
Test Precondition: 
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_GetVersionInfo() with null pointer
     02: VP (FRTP1111.FRTP_E_NULL_PTR, FRTP1150_a):
         Det reports FRTP_E_NULL_PTR
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111.FRTP_E_NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>FRTP1150_a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NULL_PTR_FrTp_Init</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_Init()
      in case it is called with a NULL pointer.
  
Test Object: FrTp_Init
Test Precondition: 
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_Init() with null pointer
     02: VP (FRTP1151):
         Det reports FRTP_E_NULL_PTR
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NULL_PTR_FrTp_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>642</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_Transmit()
      in case it is called with a NULL pointer.
  
Test Object: FrTp_Transmit
Test Precondition: 
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_Init when the module is in uninitialized state.
     02: VP(FRTP1111.FRTP_E_UNINIT):
         Check if no DET is reported.
     03: Call FrTp_Transmit() with null pointer
     04: VP (FRTP1140):
         FrTp_Transmit() returns E_NOT_OK
     05: VP (FRTP1140):
         Det reports FRTP_E_NULL_PTR
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
    <specobject>
      <id>FrTp_Test_INV_ID_FrTp_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>709</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_Transmit()
      in case it is called with an invalid PDU-ID.
  
Test Object: FrTp_Transmit
Test Precondition: 
      FrTp is initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_Transmit() with invalid PDU-ID
     02: VP (FRTP1139, FRTP1040):
         Check if FrTp_Transmit() is terminated and returns E_NOT_OK
     03: VP (FRTP1111.FRTP_E_INVALID_PDU_SDU_ID, FRTP1139, FRTP1040):
         Det reports FRTP_E_INVALID_PDU_SDU_ID
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_INVALID_PDU_SDU_ID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FRTP1139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>FrTp_Test_INV_SDULength_FrTp_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>774</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_Transmit()
      in case it is called with an invalid SDU length.
  
Test Object: FrTp_Transmit
Test Precondition: 
      FrTp is initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_Transmit() with invalid SDU length
     02: VP (FrTp.EB.TransmitInvalidSDULength):
         Check if FrTp_Transmit() is terminated and returns E_NOT_OK
     03: VP (FrTp.EB.TransmitInvalidSDULength):
         Det reports FRTP_E_INVALID_PDU_SDU_ID
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.TransmitInvalidSDULength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NULL_PTR_FrTp_TriggerTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_TriggerTransmit()
      in case it is called with a NULL pointer.
  
Test Object: FrTp_TriggerTransmit
Test Precondition: 
      FrTp is initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Repeat the steps 02-04 for each pointer in input array 02
     02: Call FrTp_TriggerTransmit() with pointer from input array 02
     03: VP (FRTP1146):
         FrTp_TriggerTransmit() returns E_NOT_OK
     04: VP (FRTP1146):
         Det reports FRTP_E_NULL_PTR
  
Test Input: 
     02: PduInfoPtr-&gt;SduDataPtr = NULL_PTR
         PduInfoPtr = NULL_PTR
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>FrTp_Test_INV_ID_FrTp_TriggerTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>914</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_TriggerTransmit()
      in case it is called with an invalid PDU-ID.
  
Test Object: FrTp_TriggerTransmit
Test Precondition: 
      FrTp is initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_TriggerTransmit() with invalid PDU-ID
     02: VP (FRTP1145):
         FrTp_TriggerTransmit() returns E_NOT_OK
     03: VP (FRTP1145):
         Det reports FRTP_E_INVALID_PDU_SDU_ID
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
    <specobject>
      <id>FrTp_Test_NULL_PTR_FrTp_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>977</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_RxIndication()
      in case it is called with a NULL pointer.
  
Test Object: FrTp_RxIndication
Test Precondition: 
      FrTp is initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Repeat the steps 02-03 for each pointer in input array (02)
     02: Call FrTp_RxIndication() with pointer from input array (02)
     03: VP (FRTP1148):
         Det reports FRTP_E_NULL_PTR
  
Test Input: 
     02: PduInfoPtr-&gt;SduDataPtr = NULL_PTR
         PduInfoPtr = NULL_PTR
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>FrTp_Test_INV_ID_FrTp_TxConfirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>1044</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_TxConfirmation()
      in case it is called with an invalid PDU-ID.
  
Test Object: FrTp_TxConfirmation
Test Precondition: 
      FrTp is initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_TxConfirmation() with invalid PDU-ID
     02: VP (FRTP1149):
         Det reports FRTP_E_INVALID_PDU_SDU_ID
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>FrTp_Test_FrTpState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>1096</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test internal module state handling. To verify the module state FrTp_Transmit is called
    with valid parameters. It will return E_OK if the module state is ON and will raise DET error
    FRTP_E_UNINIT if module state is OFF.
  
Test Object: FrTp_Transmit
Test Precondition: 
      FrTp is not initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: VP (FRTP1030):
         Verify module state is OFF (Call FrTp_Transmit() with valid parameters and verify
         DET reports FRTP_E_UNINIT).
     02: VP(FRTP1032, FRTP.InitWithError)
         Call FrTp_Init unsuccessfully (by passing a null pointer). Verify module state is still
         OFF.
     03: VP(FRTP1032)
         Call FrTp_Init successfully. Verify module state changes to ON (Call FrTp_Transmit()
         with valid parameters and verify E_OK is returned).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>FRTP1030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>FRTP1032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>FRTP.InitWithError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>FrTp_Test_UMSG_LENGTH_FrTp_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>1177</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrTp_Transmit()
      in case it is called with an unknown message length.
  
Test Object: FrTp_Transmit
Test Precondition: 
      FrTp is initialized.
      Development error detection (DET) is enabled.
  
Test Execution: 
     01: Call FrTp_Transmit() with an unknown message length
     02: FrTp_Transmit() returns E_NOT_OK
     03: VP(FRTP1111.FRTP_E_UMSG_LENGTH_ERROR):
         Det reports FRTP_E_UMSG_LENGTH_ERROR
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1111.FRTP_E_UMSG_LENGTH_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
    <specobject>
      <id>FrTp_Test_APIs_Return_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/DetTests.c</sourcefile>
      <sourceline>1239</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests that the APIs, FrTp_CancelTransmit(), FrTp_CancelReceive() and FrTp_ChangeParameter()
      will always return E_NOT_OK.
  
Test Object: None.
Test Precondition: 
      FrTp is initialized.
  
Test Execution: 
     01: Call FrTp_CancelTransmit().
     02: VP(FrTp.EB.APIs_Return_NOT_OK):
         Check that it returned E_NOT_OK.
     03: Call FrTp_CancelReceive().
     04: VP(FrTp.EB.APIs_Return_NOT_OK):
         Check that it returned E_NOT_OK.
     05: Call FrTp_ChangeParameter().
     06: VP(FrTp.EB.APIs_Return_NOT_OK):
         Check that it returned E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.APIs_Return_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrTp_Test_Rx_ReInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/StateTests.c</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if FrTp_Init() cancels current RX-connections and returns
    to the idle state FRTP_ON, when called during normal operation.
  
Test Object: None.
Test Precondition: 
    FrTp is initialized.
  
Test Execution: 
    01:  Indicate reception of STFA frame for Connection_0
    02:  Call FrTp_Init()
    03:  Elapse one main function tick.
    04:  VP (FRTP1035, FRTP1034):
         FrIf_Transmit is not called to transmit the CTS frame.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FRTP1034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>FrTp_Test_Tx_ReInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/StateTests.c</sourcefile>
      <sourceline>198</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if FrTp_Init() cancels current TX-connections and returns
    to the idle state FRTP_ON, when called during normal operation.
    The FrTp notifies the upper layer.
  
Test Object: None.
Test Precondition: 
    FrTp is initialized.
    TransmitCancellation is activated.
  
Test Execution: 
    01:  Start transmission of 400 bytes for Connection_2.
    02:  Elapse one main function tick.
    03:  Call FrTp_Init()
    04:  Execute 20 flexray cycles.
    05:  VP(FRTP1035, FRTP1034)
         The module has lost all current connections. No further transmissions occurred.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FRTP1034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>FrTp_Test_VALID_FrTp_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_General/source/application/StateTests.c</sourcefile>
      <sourceline>277</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that version information is correctly returned by API function FrTp_GetVersionInfo().
  
Test Object: 
    FrTp_GetVersionInfo()
  
Test Precondition: 
    The parameter FrTpVersionInfoApi shall be enabled.
  
Test Execution: 
    01: Set the Version information values to invalid values.
    02: Execute API function FrTp_GetVersionInfo() with a valid pointer as argument
    03: VP (FRTP202):
        Check that the version and module information returned by the API has the
        information from the configuration.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_TX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_LimitNumberOfConnections/source/application/testcase.c</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the functionality of LimitNumberOfConnections for an unsegmented unacknowledged data
    transfer with known message length and using channels only for transmission (i.e. full duplex
    not being employed).
  
Test Object: 
    Unsegmented unacknowledged transfer.
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Try to start transmission on connections {0,...,15} =&gt; Connections {0,1,2,3,5,6,7} active
    02: VP(FrTp.EB.ConnectionBuffer.Transmit_3): Connections {4,10,11,13,14} buffered
    03: VP(FrTp.EB.ConnectionBuffer.Transmit_1): Connections {8,12,15} rejected
    04: Try to start transmission on connection 10
    05: VP(FrTp.EB.ConnectionBuffer.Transmit_1): Buffer already full (and already buffered) =&gt;
        rejected
    06: Try to start transmission on connection 13
    07: VP(FrTp.EB.ConnectionBuffer.Transmit_2): Already buffered =&gt; rejected
    08: Try to start transmission on connection 1
    09: VP(FrTp.EB.ConnectionBuffer.Transmit_2): Already active =&gt; rejected
    10: Close transmissions on connections {0,1,4,2,3}
    11: VP(FrTp.EB.ConnectionBuffer.TxChannelReset,
           FrTp.EB.ConnectionBuffer.StartBufferedConnection):
        Buffered transmissions on connections {4,13,10,11,14} will be started
    12: Try to start a transmission on connections 0
    13: VP(FrTp.EB.ConnectionBuffer.Transmit_3): Connection limit reached =&gt; buffered
    14: Close transmission on connection 5
    15: VP(FrTp.EB.ConnectionBuffer.TxChannelReset,
           FrTp.EB.ConnectionBuffer.StartBufferedConnection):
        Buffered transmission on connection 0 will be activated
    16: Try to start transmission on connections 4
    17: VP(FrTp.EB.ConnectionBuffer.Transmit_3): Connection limit reached =&gt; buffered
    18: Close transmissions on connections {6,7,10,11,13,14}
    19: Close transmissions on connection 0
    20: VP(FrTp.EB.ConnectionBuffer.TxChannelReset,
           FrTp.EB.ConnectionBuffer.StartBufferedConnection):
        Buffered transmission on connection 4 will be activated
    21: Close transmission on connections 4 =&gt; No transmissions active or buffered
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.Parameter_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.Parameter_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.Parameter_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.Transmit_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.Transmit_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.Transmit_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.TxChannelReset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.StartBufferedConnection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
    <specobject>
      <id>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_FD</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_LimitNumberOfConnections/source/application/testcase.c</sourcefile>
      <sourceline>416</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the functionality of LimitNumberOfConnections for an unsegmented unacknowledged data
    transfer with known message length and using channels for transmission and reception (i.e. full
    duplex being employed).
  
Test Object: 
    Unsegmented unacknowledged transfer.
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Try to start transmission on connections {0,1,2,3,5,6,7} =&gt; all active
    02: Try to start reception on connection 9 =&gt; active
    03: Try to start transmission on connection 10
    04: VP(FrTp.EB.ConnectionBuffer.Transmit_3): All channels used =&gt; buffered
    05: Close reception on connection 9
    06: VP(FrTp.EB.ConnectionBuffer.RxChannelReset,
           FrTp.EB.ConnectionBuffer.StartBufferedConnection):
        Buffered transmissions on connection 10 will be started
    07: Close transmissions on connection 10
    08: Close transmissions on connections {0,1,2,3,5,8} =&gt; No transmissions active or buffered
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.Parameter_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.RxChannelReset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.StartBufferedConnection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
    <specobject>
      <id>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_SEGM_RX_TX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_LimitNumberOfConnections/source/application/testcase.c</sourcefile>
      <sourceline>535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the functionality of LimitNumberOfConnections for a segmented unacknowledged reception
    followed by unsegmented unacknowledged transmissions.
    This is a regression test for ASCFRTP-932.
  
Test Object: 
    LimitNumberOfConnections
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate the reception of a first frame, check its processing and the transmission of a
        flow control - continue to send frame.
    02: Indicate the reception of a last frame and check its processing. This concludes the
        segmented reception.
    03: VP(FrTp.EB.ConnectionBuffer.RxChannelReset,
           FrTp.EB.ConnectionBuffer.StartBufferedConnection):
        Initiate and check the transmission and buffering of multiple transmissions. This implicitly
        verifies that the reset of the Rx channel in execution step 02 was correctly handled.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.RxChannelReset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.StartBufferedConnection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_UNSEGM_RX_FAIL_TX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_LimitNumberOfConnections/source/application/testcase.c</sourcefile>
      <sourceline>599</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the functionality of LimitNumberOfConnections for a segmented unacknowledged reception
    that fails followed by unsegmented unacknowledged transmissions.
    This is a regression test for ASCFRTP-932.
  
Test Object: 
    LimitNumberOfConnections
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Set the return value of PduR_FrTpCopyRxData_Stub to failure.
    02: Indicate the reception of a first frame and check its processing.
    03: Elapse one main function cycle and check that no external API is called.
    04: VP(FrTp.EB.ConnectionBuffer.RxChannelReset,
           FrTp.EB.ConnectionBuffer.StartBufferedConnection):
        Initiate and check the transmission and buffering of multiple transmissions. This implicitly
        verifies that the reset of the Rx channel in execution step 02 was correctly handled.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.RxChannelReset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.StartBufferedConnection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_SEGM_RX_TX_CONC_HD</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_LimitNumberOfConnections/source/application/testcase.c</sourcefile>
      <sourceline>672</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the functionality of LimitNumberOfConnections for a segmented unacknowledged reception
    and an unsegmented unacknowledged transmission occuring simultaneously for different connections
    using two half duplex channel.
    This is a regression test for ASCFRTP-932.
  
Test Object: 
    LimitNumberOfConnections
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Initiate a transfer for connection 0 and remote address 0, that is not buffered.
    02: Indicate the reception of a first frame for connection 0, check its processing and the
        transmission of a flow control - continue to send frame.
    03: Indicate the reception of a last frame and check its processing. This concludes the
        segmented reception.
    04: Initiate a transfer for connection 4 and remote address 0, that is buffered.
    05: Conclude the transmission for connection 0. This starts transmission for the buffered
        connection 4.
    06: Conclude the transmission for connection 4.
    07: VP(FrTp.EB.ConnectionBuffer.RxChannelReset,
           FrTp.EB.ConnectionBuffer.StartBufferedConnection):
        Initiate and check the transmission and buffering of multiple transmissions. This implicitly
        verifies that the reset of the Rx channel in execution step 03 was correctly handled.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.RxChannelReset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.StartBufferedConnection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>EB_FRTP_LIMIT_NUMBER_OF_CONNECTIONS_NACK_SEGM_RX_TX_CONC_FD</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_LimitNumberOfConnections/source/application/testcase.c</sourcefile>
      <sourceline>754</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the functionality of LimitNumberOfConnections for a segmented unacknowledged reception
    and an unsegmented unacknowledged transmission occuring simultaneously for the same connection
    using a full duplex channel.
    This is a regression test for ASCFRTP-932.
  
Test Object: 
    LimitNumberOfConnections
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Initiate a transfer for connection 0 and remote address 4, that is not buffered.
    02: Indicate the reception of a first frame for connection 0, check its processing and the
        transmission of a flow control - continue to send frame.
    03: Indicate the reception of a last frame and check its processing. This concludes the
        segmented reception.
    04: Initiate a transfer for connection 0 and remote address 0, that is buffered.
    05: Conclude the transmission for connection 4. This starts transmission for the buffered
        connection 0.
    06: Conclude the transmission for connection 0.
    07: VP(FrTp.EB.ConnectionBuffer.RxChannelReset,
           FrTp.EB.ConnectionBuffer.StartBufferedConnection):
        Initiate and check the transmission and buffering of multiple transmissions. This implicitly
        verifies that the reset of the Rx channel in execution step 03 was correctly handled.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.RxChannelReset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConnectionBuffer.StartBufferedConnection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_COPYTXDATA1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_PduR_API_40/source/application/testcase.c</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify module calls PduR_FrTpCopyTxData() to query the available SDU length.
  
Test Object: 
    FrTp_Transmit
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start transmission of 20 bytes on TxSdu of Connection_0.
    02: Call main function
    03: VP(FRTP149, FRTP1042)
        Verify module calls PduR_FrTpCopyTxData with parameter info having SduLength=0.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>FRTP1042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>TS_FRTP_COPYTXDATA2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_PduR_API_40/source/application/testcase.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify module calls PduR_FrTpCopyTxData() to copy the available N-SDU data.
  
Test Object: 
  
Test Precondition: 
    TS_FRTP_COPYTXDATA1 was previously executed.
  
Test Execution: 
    01: Call FrTp_TriggerTransmit on FrTpTxPdu_2 (i.e. first free Pdu of size 16 bytes
        sufficient for STF).
    02: VP(FrTp.EB.FRTP1123)
        Verify module calls PduR_FrTpCopyTxData().
        Check that correct data is copied into the TriggerTransmit buffer.
    03: Finish transmission
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>TS_FRTP_STARTOFRECEPTION</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_PduR_API_40/source/application/testcase.c</sourcefile>
      <sourceline>232</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify PduR_FrTpStartOfReception is called with correct parameters if start frame
    is received.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Indicate reception of start frame with different message and payload lengths
        on Connection 0.
    02: VP(FRTP399, FRTP1078):
        Verify PduR_FrTpStartOfReception is called with SrcPdu of FT_80_A_0_1 and corresponding
        SduLength.
    03: VP(FrTp.EB.FRTP1138_1, FrTp.ASR40.RxSTF_3):
        Check that payload is copied, thus the available buffer size is large enough for the whole
        Pdu.
    04: Call main function
    05: VP(FRTP412_EB)
        Verify FC CTS frame is sent with remaining buffer size, returned by PduR.
    06: Release the channel.
  
Test Input: 
    01: Message length  Payload in SF  PduR_Buffer Remaining_Buffer
        a) 30           8              80          72
        b) 254          10             50          40
        c) 258          12             100         88
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP399</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FRTP412_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>FRTP1078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1138_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxSTF_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>TS_FRTP_COPYRXDATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_PduR_API_40/source/application/testcase.c</sourcefile>
      <sourceline>352</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify PduR_FrTpCopyRxData is called with correct parameters if start frame
    is received.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start reception of start frame for unsegmented transmission, target address 0x0001,
        message length 40, frame payload length 10
    02: Proceed until consecutive frame is expected
    03: Indicate reception of consecutive frame, frame payload length 10
    04: VP(FRTP400, FRTP1138)
        Verify PduR_FrTpCopyRxData is called with the following parameters:
        RxSduId: RxPdu_0 of RxPduPool_0
        SduLength: 10
        SduDataPtr: Contains data from 0 to 10.
    05: Finish reception
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>FRTP1138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>TS_FRTP_STARTOFRECEPTION_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_PduR_API_40/source/application/testcase.c</sourcefile>
      <sourceline>477</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify reception is aborted correctly if PduR_FrTpStartOfReception returns BUFREQ_E_NOT_OK
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_E_NOT_OK.
    02: Indicate reception of start frame for segmented transmission with target address 0x0003.
    03: Call main function and trigger transmit on TxPdu_3 of TxPduPool_0.
    04: VP(FRTP405_1, FrTp.ASR40.RxSTF_4):
        Verify FC ABORT frame is sent.
    05: Confirm TxPdu_3 of TxPduPool_0.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP405_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxSTF_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>TS_FRTP_STARTOFRECEPTION_OVFL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_PduR_API_40/source/application/testcase.c</sourcefile>
      <sourceline>548</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify reception is aborted if PduR_FrTpStartOfReception returns BUFREQ_E_OVFL.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: PduR_FrTpStartOfReception() shall return BUFREQ_E_OVFL.
    02: Indicate reception of start frame with target address 0x0003.
    03: Call main function and trigger transmit on PduId 0.
    04: VP(FRTP1161_1, FrTp.ISO10681_0024.Seg.OVFLW)
        Verify FC OVFL frame is transmitted.
    05: Confirm PduId 0.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1161_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Seg.OVFLW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_STFU_OVFL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_PduR_API_40/source/application/testcase.c</sourcefile>
      <sourceline>613</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify reception is aborted if PduR_FrTpStartOfReception returns BUFREQ_E_OVFL for
  unsegmented unacknowledged reception.
  
Test Object: 
     Unsegmented reception
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: PduR_FrTpStartOfReception() shall return BUFREQ_E_OVFL.
    02: Indicate reception of STFU frame with target address 0x0003 and verify whether
        PduR_FrTpStartOfReception get called.
    03: Call main function.
    04: VP(FrTp.ISO10681_0024.Unseg.Unack):
        Verify that no FC is sent and the reception is terminated.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Unseg.Unack</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_STFA_OVFL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_PduR_API_40/source/application/testcase.c</sourcefile>
      <sourceline>672</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify that an cverflow frame is sent if PduR_FrTpStartOfReception returns BUFREQ_E_OVFL for
  unsegmented acknowledged reception.
  
Test Object: 
     Unsegmented reception
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: PduR_FrTpStartOfReception() shall return BUFREQ_E_OVFL.
    02: Indicate reception of STFA frame with target address 0x0003 and verify whether
        PduR_FrTpStartOfReception get called.
    03: Call main function.
    04: VP(FrTp.ISO10681_0024.Unseg.OVFLW):
        Verify FC OVFL frame is transmitted.
    05: Confirm the OVFLW frame.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Unseg.OVFLW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EB_FRTP_RX_SEGM_ACK_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>195</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test indication of STFA frame.
  
Test Object: 
    Segmented reception with acknowledgement.
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of STFA frame on RxPdu_0 of RxPduPool_0 (total message length 150 bytes)
    02: VP(FRTP137, FRTP1010, FRTP1069_b, FRTP1071)
        Verify PduR_FrTpStartOfReception was called with RxPduId 0.
    03: VP(FrTp.ISO10681_0015, FrTp.ISO10681_0072, FrTp.ISO10681_0009, FRTP1078)
        Verify PduR_FrTpStartOfReception was called with SduLength 150 (message length
        indicates a length greater than the amount of data transferred in this PDU).
    04: VP(FRTP1138, FRTP400):
        Verify that PduR_FrTpCopyRxData is called.
        PduR provides 80 bytes of data.
  
Test Input: 
    01: TA      SA      STFA          DATA
        55 55 | 00 01 | 41 14 00 96 | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FRTP1010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>FRTP1069_b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>FRTP1071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>FRTP1078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>FRTP1138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>FRTP400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_SEGM_ACK_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test correct transmission of FC CTS frame in response to STFA frame.
  
Test Object: 
    Segmented reception with acknowledgement.
  
Test Precondition: 
    EB_FRTP_RX_SEGM_ACK_1 was previously executed.
  
Test Execution: 
    01: Elapse one main function tick.
    02: VP(FRTP1080):
        Module requests transmission of 8 bytes
    03: VP(FRTP1049, FrTp.ISO10681_0029, FrTp.ISO10681_0067c, FRTP1061):
        Call FrTp_TriggerTransmit on PduId 0. Verify that module transmits CTS frame,
        no bandwith control, buffersize 60 bytes (PduR provided 80 bytes minus 20 bytes
        from STFA frame).
    04: Indicate reception of unexpected FC CTS frame.
    05: VP(FrTp.ISO10681_0059_RX_FC):
        Check that it is ignored.
    06: Indicate reception of unexpected FC OVFLW frame.
    07: VP(FrTp.ISO10681_0059_RX_FC):
        Check that it is ignored.
    08: Indicate reception of unexpected FC ACK_RET frame.
    09: VP(FrTp.ISO10681_0059_RX_FC):
        Check that it is ignored.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FRTP1080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>FRTP1061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0067c</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_FC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_SEGM_ACK_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>363</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test correct transmission of FC CTS frame in response to FC CFEOB frame.
  
Test Object: 
    Segmented reception with acknowledgement.
  
Test Precondition: 
    EB_FRTP_RX_SEGM_ACK_1 was previously executed.
  
Test Execution: 
    00: Indicate various CF and CFEOB frames with too short Sdulength and verify they are ignored
    01: Indicate reception of next 30 bytes. Last indicated frame is a
        end-of-block frame (FC CFEOB).
    02: VP(FrTp.ISO10681_0003): Verify transmission of C_PDU is requested
    03: VP(FrTp.ISO10681_0003, FrTp.ISO10681_0067d):
        Call FrTp_triggerTransmit on PduId 0.
        Verify FC_CTS frame is transmitted with buffer size 30 bytes.
  
Test Input: 
    01: TA      SA      CF      DATA
        55 55 | 00 01 | 51 02 | 14 15
        55 55 | 00 01 | 52 0F | 16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24
        55 55 | 00 01 | 53 0A | 25 26 27 28 29 2A 2B 2C 2D 2E
        55 55 | 00 01 | 74 03 | 2F 30 31
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0067d</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.CheckSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_SEGM_ACK_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>472</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test buffer request from PduR in response to FC CFEOB frame.
  
Test Object: 
    Segmented reception with acknowledgement.
  
Test Precondition: 
    EB_FRTP_RX_SEGM_ACK_3 was previously executed.
  
Test Execution: 
    01: Indicate reception of next 30 bytes of data. Last indicated frame is
        end-of-block frame (FC CFEOB).
    02: VP(FRTP1079):
        Verify that received data was passed to PduR.
    03: Call main function
    04: VP(FRTP400)
        Module requests buffer for the next 70 bytes (150 in total, 80 already received).
        PduR provides 50 bytes.
    05: Call main function.
    06: VP(FrTp.ISO10681_0003)
        Verify transmission of C_PDU frame was requested.
    07: VP(FrTp.ISO10681_0003)
        Call FrTp_TriggerTransmit. Verify correct transmission of CTS frame with buffer size
        50 bytes.
  
Test Input: 
    01: TA      SA      CF      DATA
        55 55 | 00 01 | 55 0A | 32 33 34 35 36 37 38 39 3A 3B
        55 55 | 00 01 | 76 14 | 3C 3D 3E 3F 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F
  
Test Output: 
    07: TA      TA      CTS
        00 01 | 55 55 | 83 00 00 32
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>FRTP400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_SEGM_ACK_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>569</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test transmission of FC CTS frame for last chunk of data
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Indicate reception of 50 bytes of data
    02: VP(FRTP1079):
        Verify that received data was passed to PduR.
    03: Call main function
    04: VP(FRTP400):
        Module requests buffer for the next 20 bytes of data (150 in total, 130 already received).
        PduR provides 100 bytes (which is sufficient for the remaining message).
    05: VP(FrTp.ISO10681_0003)
        Verify transmission of C_PDU frame was requested.
    06: VP(FrTp.ISO10681_0003, FrTp.ISO10681_0031.BfS0_2)
        Call FrTp_triggerTransmit. Verify transmission of FC CTS frame with buffer size 0 bytes (all data can be received).
  
Test Input: 
    01: TA      SA      CF      DATA
        55 55 | 00 01 | 57 14 | 50 51 52 53 54 55 56 57 58 59 5A 5B 5C 5D 5E 5F 60 61 62 63
        55 55 | 00 01 | 58 14 | 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77
        55 55 | 00 01 | 79 0A | 78 79 7A 7B 7C 7D 7E 7F 80 81
  
Test Output: 
    06: TA      TA      CTS
        00 01 | 55 55 | 83 00 00 00
  </description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>FRTP400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0031.BfS0_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_SEGM_ACK_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>664</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test indication of a wrong frame and a last frame of segmented reception.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Indicate reception of the next chunk of data (10 bytes).
    02: Indicate reception of a frame with wrong PCI type (0x95).
    03: Call main function
    04: VP(FrTp.ISO10681_0035):
        Check FrTp doesn't react to the frame
    04b: VP: Indicate different LF with too short SduLength and verify they are all ignored
    05: Indicate reception of correct last frame
    06: VP(FRTP1079):
        Verify that received data was passed to PduR.
    07: Call main function
    08: VP(FrTp.ISO10681_0002)
        Verify transmission of C_PDU frame was requested.
    09: VP(FRTP1049, FrTp.ISO10681_0002, FrTp.ISO10681_0067e, FRTP1061)
        Call FrTp_TriggerTransmit. Verify FC_ACK_RET frame was transmitted.
    10: VP(FRTP1083):
        Check if PduR_FrTpRxIndication was not called.
    11: Confirm the FC ACK sent.
    12: VP(FRTP1083):
        Verify PduR_FrTpRxIndication was called with PduId 0 and E_OK.
  
Test Input: 
    01: TA      SA      PCI    DATA
        55 55 | 00 01 | 5A 0A | 82 83 84 85 86 87 88 89 8A 8B
        55 55 | 00 01 | 90 0A | 8C 8D 8E 8F 90 91 92 93 94 95
  
Test Output: 
    05: TA      SA      FC ACK_RET
        00 01 | 55 55 | 84 00 00 00
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FRTP1061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>FRTP1079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>FRTP1083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0067e</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.CheckSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_UNSEGM_ACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>807</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests reception of unsegmented message with acknowledgement
  
Test Object: 
    Handling of unsegmented message with acknowledgement
  
Test Precondition: 
  
Test Execution: 
    01: Indicate reception of STFA frame with message length equal to payload length
    02: VP(FRTP1078, FRTP400,FRTP1071):
        Verify that buffer of correct length is requested from PduR
    03: VP(FrTp.ISO10681_0033, FrTp.ISO10681_0065):
        Verify transmission of C_PDU frame is requested
    04: VP(FrTp.ISO10681_0033, FrTp.ISO10681_0065, FrTp.ISO10681_0024.Unseg.CTS):
        Verify FC_ACK_RET frame is transmitted with ACK value set to 'acknowledge'. This verifies
        that the CTS will not be sent for unsegmented unacknowledged message.
    05: VP(FRTP.FrTpRxConTxPduPendingCounter):
        PduR_FrTpRxIndication should not get called as the Ack frame is not confirmed
    06: Confirm the Ack frame
    07: Verify PduR_FrTpRxIndication was called
    08: Verify that received data was passed to PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>FRTP1078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>FRTP1071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>FRTP400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Unseg.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
        <provcov>
          <linksto>FRTP.FrTpRxConTxPduPendingCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_WRONG_PCI_UNSEGM_ACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>909</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests reception is only started for STFA with correct PCI field
  
Test Object: 
    Handling of unsegmented message with acknowledgement
  
Test Precondition: 
  
Test Execution: 
    01: Indicate reception of STFA frame with wrong PCI field (0x43, 0x06, 0x00, 0x06)
    02: Call main function.
    03: VP(FrTp.ISO10681_0011):
        Verify no reception is started.
    04: Indicate reception of STFA frame with wrong PCI field (0x4F, 0x06, 0x00, 0x06)
    05: Call main function.
    06: VP(FrTp.ISO10681_0011):
        Verify no reception is started.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_SEGM_ACK_CONCURRENT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>974</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test multiple concurrent receptions with acknowledgement. Indicate 3 parallel receptions
    (2 segmented, 1 unsegmented) and verify that first FC CTS frame and final FC ACK_RET frame
    are correctly transmitted. Verify that PduR is correctly notified and passed all data.
  
Test Object: 
    Handling of multiple concurrent receptions with acknowledgement
  
Test Precondition: 
  
Test Execution: 
    01: VP(FRTP228, FRTP1074_b):
        Indicate reception of 3 STFA frames for source addresses 0x0001, 0x0002, 0x0003
        (where 0x0002 receives an unsegmented message). Verify PduR is notified of start of
        reception.
    02: VP(FRTP1080):
        Call main function. Verify FC_CTS, FC_ACK_RET frames are transmitted for the three channels.
    03: VP(FRTP1033):
        Confirm transmissions. Verify unsegmented transmission is finished and PduR_FrTpRxIndication
        is called with RxPduId 1 and E_OK.
    04: Continue transmission until indication of last chunk of data from current block for
        source address 0x0003.
    05: Verify FC_CTS frame is correctly transmitted to target address 0x0003.
    06: Continue transmission until indication of last chunk of data from current block for
        source address 0x0001.
    07: Verify FC_CTS frame is correctly transmitted to target address 0x0001.
    08: Continue reception until last frame was received from source address 0x0001.
    09: Verify FC ACK_RET frame is correctly transmitted to target address 0x0001.
    10: VP(FRTP418_EB, FRTP421_EB):
        Verify PduR is notified of successful end of reception.
    11: Continue reception until last frame was received from source address 0x0003.
    12: VP(FRTP418_EB, FRTP421_EB):
        Verify PduR is notified of successful end of reception.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FRTP418_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>FRTP421_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FRTP1033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>FRTP1080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>FRTP1074_b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_SEQ_ERR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1218</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test reception of CF frames with incorrect sequence number. Verify FC ACK_RET frame is
    transmitted and only data with correct sequence number is passed to PduR.
  
Test Object: 
    Reception of CF frames with incorrect sequence number
  
Test Precondition: 
  
Test Execution: 
    01: Indicate reception of STFA frame with message length 400 bytes. Continue reception for some
        time until end of block is indicated.
    02: Indicate reception of CF frames. Introduce a SN error after the 1st frame.
    03: VP(FrTp.ISO10681_0043)
        Verify only data from correct frame was passed to PduR.
    04: VP(FrTp.ISO10681_0033, FrTp.ISO10681_0034)
        Verify FC ACK_RET frame is transmitted with ACK value set to 1 and BP set to first byte
        of incorrect frame.
    05: Indicate CF2 frames transferring the requested data.
    06: VP(FrTp.ISO10681_0043): Verify data from correct CF2 frames was passed on to PduR.
    07: Indicate reception of CF2 frame with incorrect SN.
    08: VP(FrTp.ISO10681_0043):
        Verify data of frames with incorrect sequence number was not passed to PduR.
    09: VP(FrTp.ISO10681_0033, FrTp.ISO10681_0034):
        Verify FC ACK_RET frame was transmitted requesting data from the correct byte position.
    10: Continue until end of transmission.
    11: VP(FrTp.ISO10681_0043):
        Verify correct data was passed to PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_SEQ_ERR_ABT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1396</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test reception of CF frames with incorrect sequence number. Exceed maximum number of
    retry requests and verify reception is aborted.
  
Test Object: 
    Reception of CF frames with incorrect sequence number
  
Test Precondition: 
  
Test Execution: 
    01: Indicate reception of STFA frame with message length 400 bytes. Continue reception for some
        time and introduce 3 SN errors (which exceeds the configured MaxRetry value).
    02: VP(FRTP1049, FrTp.ISO10681_0022, FrTp.ISO10681_0023, FrTp.ISO10681_0024.Seg.ACK_RET):
        Verify FC ABT frame is transmitted.
    03: VP(FrTp.ISO10681_0045, FrTp.ISO10681_0046, FrTp.ISO10681_NotificationResults.C_WRONG_SN):
        Verify reception is aborted an PduR_FrTpRxIndication is called
        with SrcPdu of FT_100_A_0_1 and E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_RX_RN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Seg.ACK_RET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_WRONG_SN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_TIMEOUT_CR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1529</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test compliance with timeout CR. Start segmented reception and stop indicating further
    frames in the reception process. Verify reception is aborted after timeout CR.
  
Test Object: 
    Timeout CR
  
Test Precondition: 
  
Test Execution: 
    01: Indicate reception of STFA frame with message length 400 bytes.
        Unexpectedly stop indication of further frames.
    02: VP(FRTP1099_Cr, FRTP1100_Cr):
        Elapse CR-1 main function ticks and verify that reception was not yet aborted.
    03: VP(FRTP1099_Cr, FRTP1100_Cr, FrTp.ISO10681_NotificationResults.C_TIMEOUT_Cr):
        Elapse one more main function tick and verify that reception was aborted.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099_Cr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FRTP1100_Cr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Cr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_UNEXPECTED_STF_SEGM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1609</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test indication of segmented STF frame in an ongoing reception process.
  
Test Object: 
    Handling of unexpected Pdu
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of STFA frame on RxPdu_0 of RxPduPool_0. Payload is starting with 0.
    02: Indicate reception of another unexpected segmented STFU frame. Payload
        is starting with 23.
    03: VP(FRTP1025, FrTp.ISO10681_NotificationResults.C_UNEXP_PDU):
        Verify current reception is aborted with E_NOT_OK
    04: VP(FrTp.ISO10681_0059_RX_STF_segmented):
        Verify that the segmented unexpected STFU frame starts a new reception process
        (i.e. PduR buffer is requested and CTS frame transmitted).
    05: Indicate reception of last frame with remaining data
    06: Verify PduR is notified of end of reception.
    07: Verify data was correctly copied to PduR (16 bytes, ascending, starting with 23).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_STF_segmented</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
        <provcov>
          <linksto>FRTP1025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_UNEXP_PDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_UNEXPECTED_STF_SEGM_ERR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1712</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test that a segmented reception is preemted by a new segmented reception while the FC transmission
    is in progress (between FrIf_Transmit() and FrTp_TriggerTransmit()).
    Check this several times in a loop and verify that FrTp is able to start the FC transmission. Thus TxPdus are not locked.
  
Test Object: None.
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call FrTp_RxIndication() in order to simulate reception of a segmented STF
    02: VP(): FrTp shall call PduR_FrTpStartOfReception() and PduR_FrTpCopyRxData()
    03: Call FrTp_Mainfunction()
    04: VP(): FrTp shall call FrIf_Transmit()
    05: Call FrTp_RxIndication() in order to simulate reception of a segmented STF
    06: VP(FrTp.ISO10681_0059_RX_STF_segmented): FrTp shall call PduR_FrTpRxIndication(), PduR_FrTpStartOfReception() and PduR_FrTpCopyRxData()
    07: Call FrTp_TriggerTransmit()
    08: VP(): Verify that FrTp_TriggerTransmit() returns E_NOT_OK
    09: Call FrTp_Mainfunction()
    10: VP(): FrTp shall call FrIf_Transmit()
    Repeat 05 - 10 more times than Tx Pdus are configured to ensure that all of them are consumed in case of a problem.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_STF_segmented</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_UNEXPECTED_STF_UNSEGM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1808</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test indication of unsegmented STF frame in an ongoing reception process.
  
Test Object: 
    Handling of unexpected Pdu
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of STFA frame on RxPdu_0 of RxPduPool_0. Payload is starting with 0.
    02: Indicate reception of another unexpected unsegmented STFA frame. Payload
        is starting with 33.
    03: VP(FRTP1025, FrTp.ISO10681_NotificationResults.C_UNEXP_PDU):
        Verify current reception is aborted with E_NOT_OK
    04: VP(FrTp.ISO10681_0059_RX_STF_unsegmented):
        Verify that the unsegmented unexpected STFA frame starts a new reception process
        (i.e. PduR buffer was requested and CTS frame transmitted).
    05: Verify FC ACK_RET frame is transmitted
    06: Verify PduR_FrTpRxIndication is called with SrcPdu of FT_80_A_0_1 and E_OK
    07: Verify data was correctly copied to PduR (16 bytes, ascending, starting with 33).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_STF_unsegmented</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
        <provcov>
          <linksto>FRTP1025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_UNEXP_PDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_ADDRESS_CHECK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1913</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test indication of frames with not configured address bytes.
  
Test Object: 
    Handling of frames with not configured address
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: VP(FRTP1071, FRTP1072, FRTP1074_b):
        Indicate reception of STFA frames with address bytes which are not configured.
        Frames are ignored.
    02: Indicate reception of STFA frame with correct address byte.
        Module transmits CTS frame.
    03: VP(FRTP1071,FRTP1072, FRTP1074_b):
        Indicate reception of LF frame with address bytes which are not configured.
        Frame are ignored.
    04: Indicate reception of correct LF and finish transfer
  
Test Input: 
    01: SA      TA      STFA          DATA
        54 55 | 00 01 | 41 02 00 10 | 00 01
        55 55 | 01 01 | 41 02 00 10 | 00 01
    02: SA      TA      STFA          DATA
        55 55 | 00 01 | 41 02 00 10 | 00 01
    03: SA      TA      STFA          DATA
        55 56 | 00 01 | 90 0E 00 10 | 09 10 0A 0B 0C 0D 0E 0F
        55 55 | 00 FF | 90 0E 00 10 | 09 10 0A 0B 0C 0D 0E 0F
    04: SA      TA      STFA          DATA
        55 55 | 00 01 | 90 0E 00 10 | 09 10 0A 0B 0C 0D 0E 0F
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>FRTP1072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>FRTP1074_b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_MLFPL_ERR_ACK_SEG</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2054</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test handling of inconsistencies between message length and frame payload length in
    a last frame.
  
Test Object: 
    ML and FPL error handling
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Execute steps 02-04 until all errors denoted in input section 03 have been treated.
    02: Start reception process. Continue until last frame is expected.
    03: VP(FrTp.ISO10681_0038.Ack.Seg.Rcv, FrTp.ISO10681_0049):
        Indicate reception of last frame. Introduce one of the errors denoted in the
        input section. Verify FC ABORT frame is sent.
    04: VP(FRTP142, FrTp.ISO10681_0038.Ack.Seg.Rcv, FrTp.ISO10681_NotificationResults.C_ML_MISMATCH):
        Verify FrTp_RxIndication is called with E_NOT_OK.
  
Test Input: 
    03: - message length differs from STFA frame's message length
        - payload length does not sum up to STFA frame's message length
        - payload length does not sum up to LF frame's message length
        - message length differs from STFA frame's message length in MSB byte only
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0038.Ack.Seg.Rcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ML_MISMATCH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_MLFPL_ERR_ACK_UNSEG</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2149</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test handling of inconsistencies between message length and frame payload length in
    a start frame.
  
Test Object: 
    ML and FPL error handling
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Execute steps 02-03 until all errors denoted in input section 02 have been treated.
    02: Indicate reception of unsegmented STFA frame. Indicate frame has one of the errors denoted
        in the input section.
    03: VP(FrTp.ISO10681_0038.Unseg.Recv): Verify that frames are ignored
  
Test Input: 
    02: - payload length &gt; message length
        - payload length &gt; maximum allowed payload length (246)
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0038.Unseg.Recv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>TST_FRTP_RX_EMPTY_STF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that start frames with zero payload are silently discarded.
  
Test Object: 
    STFA and STFU reception
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Execute steps 02-03 for all frames denoted in the input section.
    02: Call FrTp_RxIndication() to indicate reception of a STF according to input section.
    03: VP(FrTp.ISO10681_0012): Verify that the frame is ignored by checking that
        no calls occurred in FrTp_RxIndication()
  
Test Input: 
    - STFU with message length 0, FPL 0
    - STFU with message length 0x14, FPL 0
    - STFA with message length 0, FPL 0
    - STFA with message length 0x14, FPL 0
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>TST_FRTP_RX_EMPTY_LF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2329</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: None.
Test Object: 
    LF reception
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Execute steps 02--09 for all start frame kinds in the input section.
    02: Reset the test bench.
    03: Indicate reception of a valid start frame with message length larger
        than frame payload.
    04: Check that CTS is sent.
    05: Indicate reception of a CF with the remaining data.
    06: Indicate reception of valid last frame with FPL equal to 0.
    07: VP (FrTp.ISO10681.Segmentation): Verify that data was received correctly
        by checking that PduR_FrTpCopyRxData is called.
    08: VP (FrTp.ISO10681.Segmentation): If the start frame is of kind STFA,
        verify that the ACK is sent.
    09: VP (FrTp.ISO10681.Segmentation): Verify that data is passed to
       upper layer by a call to PduR_FrTpRxIndication.
  
Test Input: 
    - All start frame kinds: {STFU, STFA}
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_BUFREQ_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2387</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test handling of PduR buffer request returning NOT OK
  
Test Object: 
    Handling of PduR NOT OK
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of STFA frame. PduR stub shall return BUFREQ_E_NOT_OK.
    02: VP(FRTP405_1)
        Verify FC ABORT frame is transmitted
    03: Confirm Pdu
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP405_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_TIMEOUT_AR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2455</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test compliance with timeout AR (timeout when waiting for tx confirmation of flow control
    frame).
  
Test Object: 
    Timeout AR
  
Test Precondition: 
  
Test Execution: 
    01: Indicate reception of STFA frame from source address 0x0002
    02: Elapse main function, call FrTp_TriggerTransmit
    03: VP(FRTP1099_Ar)
        Elapse AR-1 main function ticks and verify nothing happened.
    04: VP(FRTP1099_Ar, FRTP1100_Ar, FrTp.ISO10681_NotificationResults.C_TIMEOUT_Ar)
        Elapse one more main function tick.
        Verify FrIf_CancelTransmit was called on PduId 4.
        Verify PduR_FrTpRxIndication was called on SrcPdu of FT_90_A_0_1 with E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099_Ar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FRTP1100_Ar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Ar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_UNKNOWN_PDU</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2534</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test reception of unexpected unknown frame in a reception process
  
Test Object: 
    Handling of unexpected unknown frame in reception process
  
Test Precondition: 
  
Test Execution: 
    01: Indicate reception of STFA frame from source address 0x0002
    02: Repeat step 03 for all data listed in the input section
    03: VP(FrTp.ISO10681_0059_RX_unknown):
        Indicate reception of unknown frame from input section.
        Verify nothing happens (no call to stub functions).
    04: VP(FrTp.ISO10681_0059_RX_unknown):
        Call main function and trigger transmit. Verify all unknown frames
        were ignored and CTS frame is transmitted as expected.
    05: Finish transfer
  
Test Input: 
    03: TA      SA      PCI
        55 55 | 00 02 | 01 00 00 00
        55 55 | 00 02 | 12 00 00 00
        55 55 | 00 02 | 27 00 00 00
        55 55 | 00 02 | 3F 00 00 00
        55 55 | 00 02 | A0 00 00 00
        55 55 | 00 02 | B1 00 00 00
        55 55 | 00 02 | CC 00 00 00
        55 55 | 00 02 | D3 00 00 00
        55 55 | 00 02 | EE 00 00 00
        55 55 | 00 02 | FF 00 00 00
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_unknown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_REUSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2638</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a channel can be reused as soon as the previous connection was correctly finished.
  
Test Object: 
    Reuse and clean up of channel
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Indicate reception of start frame with target address 0x0001.
    02: FrIf_Transmit() shall return E_NOT_OK.
    03: Elapse two mainfunction ticks and check that FrIf_Transmit() is called.
    04: Before FrTpMaxFrIf count is exceeded, FrIf_Transmit() shall return E_OK.
    05: Check if FC CTS is sent. Confirm it.
    06: PduR shall return buffer size of 0 for LF.
    07: Indicate LF.
    08: Check if FC ACK is sent. Confirm it.
    09: VP(FRTP1026, FRTP_COUNTER_FRIF_4):
        Verify PduR is notified of successful end of reception
    10: Indicate reception of another start frame with target address 0x0001.
    11: VP(FRTP1025):
        Verify the new reception is accepted (channel idle) and PduR calls are made.
    12: FrIf_Transmit() shall return E_NOT_OK.
    13: Elapse two mainfunction ticks and check that FrIf_Transmit() is called.
    14: Before FrTpMaxFrIf count is exceeded, FrIf_Transmit() shall return E_OK.
    15: Continue until LF is received.
    16: FrIf_Transmit() shall return E_NOT_OK for ACK frame.
    17: Elapse two Mainfunction ticks and check that module has retried with the call
        to FrIf_Transmit() on each invocation.
    18: VP(FRTP_COUNTER_FRIF_3):
        Check reception is not aborted since FrTpMaxFrIf counter is reset to 0 after step 10.
    19: FrIf_Transmit() shall return E_OK to finish the reception.
        Transferred data does not equal data from previous reception.
    20: VP(FRTP_COUNTER_FRIF_4):
        Verify PduR is notified of successful reception and correct data was reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>FRTP1026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_CONCURRENT_ERROR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2823</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that concurrent occurrences of reception errors are correctly handled.
  
Test Object: 
    Handling of multiple concurrent reception errors
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
      01: Indicate reception of 2 STFA frames.
      02: Call main function. Verify FC_CTS are transmitted.
      03: Continue transmission until indication of last chunk of data from current block for
          source address 0x0003.
      04: Verify FC_CTS frame is correctly transmitted to target address 0x0003.
      05: Continue transmission until indication of last chunk of data from current block for
          source address 0x0001.
      06: Verify FC_CTS frame is correctly transmitted to target address 0x0001.
      07: Continue reception until last frame was received from source address 0x0001.
      08: Indicate reception of consecutive frames with wrong sequence number
          for target address 0x0001, until FrTpMaxRn is exceeded and check that
          retry frame is sent.
      09: Indicate another CF with wrong SN, FrTpMaxRn is exceeded and reception is aborted.
      10: Check for transmission of Abort frame.
      11: Confirm transmission of Abort frame.
      12: VP(FrTp.EB.ConcurrentErrorHandling):
          Check for PduR notification with E_NOT_OK.
      13: Indicate reception of CF frame for target address 0x0003.
      14: Simulate CR timeout (i.e. 16 cycles) waiting for next CF.
      15: VP(FrTp.EB.ConcurrentErrorHandling, FrTp.ISO10681_NotificationResults.C_TIMEOUT_Cr):
          Check if PduR_FrTpRxIndication is called with E_NOT_OK for Connection 2.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.ConcurrentErrorHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Cr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_INVALID_ADDR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3021</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Checking the behavior when N-PDU is received with invalid address information
  
Test Object: 
    STFA Reception.
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Loop over steps 02 - 03
    02: Indicate reception of STFA frame on PduId 0 with different address informations
    03: VP(FRTP1069_b)
        Verify that PduR is not get called
  
Test Input: 
    01: TA      SA      STFA
        58 55 | 00 01 | FRTP_PCI_STFA
      : TA      SA      STFA
        55 58 | 00 01 | FRTP_PCI_STFA
      : TA      SA      STFA
        55 55 | 03 01 | FRTP_PCI_STFA
      : TA      SA      STFA
        55 55 | 00 04 | FRTP_PCI_STFA
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1069_b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_RETRY_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3094</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check the behavior of BP error handling mechanism when retry frame with
    wrong BP received.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Initialize.
    02: Transmit STFA with TxSduId of Connection_0.
    03: Confirm transmission of STFA.
    04: Simulate the reception of CTS frame requesting 50 bytes of data.
    05: Check whether 48 bytes ( Max Block size) of data are transmitted.
    06: Confirm the sent CF1 frame.
    07: Simulate the reception of retry frame with BP set to 60.
    08: VP(FrTp.ISO10681_0053, FrTp.ISO10681_NotificationResults.C_WRONG_BP):
        Check whether PduR_FrTpTxConfirmation is called with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_WRONG_BP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_RETRY_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3195</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check whether C_RetriesMax counter is reset to its initial value when a
    block of data has been successfully transmitted.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Simulate the reception of STFA with RxPdu_0 of RxPduPool_0.
    02: Elapse Mainfunction tick.
    03: Confirm the CTS frame sent.
    04: Simulate the reception of CF frames with wrong SN and
        confirm transmission of Retry frame.
    05: Complete the block transmission with correct CF frames
    06: Simulate the reception with wrong SN
    07: VP(FrTp.ISO10681_0050):
        Verify that no Abort frame is transmitted.
    08: VP(FRTP1080_3):
        Simulate the reception of another 5 CF frames with wrong SN and confirm transmission of
        Retry frame. This checks that after transmission of a FC PDU a C_PDU was awaited.
    09: VP:
        Check for transmission of Abort frame.
    10: Confirm transmission of Abort frame.
    11: VP:
        Check for PduR notification with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
        <provcov>
          <linksto>FRTP1080_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_WFTMax_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3376</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To check that the wait frame is not transmitted if WFTMax for the connection
     is set to zero.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
    FrTpMaxFcWait = 0
    FrTpBandwidthLimitation = true
  
Test Execution: 
    01: Prepare PduR to return available buffer of 0 byte.
    02: Indicate reception of start frame.
    03: Elapse FrTpTimeBr MF ticks and check that data copy was requested.
    04: PduR now shall have the buffer.
    05: Elapse a MF tick.
    06: VP(FrTp.ISO10681_0032.MNPC, FrTp.ISO10681_0032.SCexp, FRTP1099_Br):
        Check that FC CTS is sent after Br ticks with appropriate BC value.
    07: Confirm the CTS sent.
    08: Indicate reception of 2 CF with a MF call in between and check if the
        receive data is accepted even if the BC is violated in means of Separation time.
        Actually frame separation of 6 MF calls are expected.
    09: Prepare PduR to return BUFREQ_OK and to return 0 buffer before receiving CFEOB
        and receive CFEOB.
    10: Elapse FrTpTimeBr MF ticks and check that data copy was requested.
    11: Elapse a MF tick.
    12: VP(FrTp.ISO10681_0026, FrTp.EB.TimeBr_3, FrTp.ISO10681_NotificationResults.C_WFT_OVRN):
        Check that, since Wait frame cannot be sent, the connection is aborted and PduR is notified.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TimeBr_3</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0032.MNPC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0032.SCexp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>FRTP1099_Br</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_WFT_OVRN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_FRIFTRAMSMIT_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3526</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify module retries to call FrIf_Transmit in case transmission request is rejected for FC CTS
    and finally aborts transmission if counter FrTpMaxFrIf has been reached.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: FrIf_Transmit shall return E_NOT_OK.
    02: Indicate reception of start frame with target address 0x0001.
    03: VP(FRTP_COUNTER_FRIF_1):
        Elapse FrTpMaxFrIf (i.e 3) MainFunction calls and check that
        module has retried with call to FrIf_Transmit() on each invocation.
    04: VP(FRTP_COUNTER_FRIF_2, FrTp.ISO10681_NotificationResults.C_ERROR)
        Check if module aborts the connection after FrTpMaxFrIf count is reached.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>EB_FRTP_SOF_RXINDICATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3602</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To check that PduR_FrTpRxIndication is not called since PduR_FrTpStartOfReception returned
     value other than BUFREQ_OK or BUFREQ_E_BUSY.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Prepare PduR_FrTpStartOfReception to return the values in the input.
    02: Indicate reception of start frame.
    03: Check the call of PduR_FrTpStartOfReception.
    04: VP(FrTp.ASR40.RxIndication.Precondition1):
        Check if PduR_FrTpRxIndication is not called.
  
Test Input: 
    01: a) PduR_FrTpStartOfReception_Stub.RetVal shall return BUFREQ_E_NOT_OK.
        b) PduR_FrTpStartOfReception_Stub.RetVal shall return BUFREQ_E_OVFL.
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxIndication.Precondition1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RXFCS_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3689</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
     To check the correct transmission of FC frames.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Prepare PduR_FrTpCopyRxData to return buffer size of 0.
    02: Indicate reception of start frame (total message length: 80 Bytes).
    03: Check the call of PduR_FrTpStartOfReception.
    04: Check if PduR_FrTpCopyRxData was called, returned the available buffer size of 0 bytes.
    05: VP(FrTp.ASR40.RxWAIT_1):
        Check if FC WAIT frame was sent after the module has retried for Br times.
    06: PduR_FrTpCopyRxData shall return the available buffer of 80 bytes (equal to the total message length) and elapse a tick.
    07: VP(FrTp.ASR40.RxCTS_1, FrTp.ISO10681_0031.BfS0_2):
        Check if the CTS is sent with the available buffer size of 0 bytes (all data can be received).
    08: Prepare PduR_FrTpCopyRxData to return BUFREQ_E_BUSY.
    09: Indicate first CF.
    10: VP(FrTp.ASR40.RxNoBuffer):
        Check if FC ABT is sent.
    11: VP(FrTp.ASR40.RxNoBuffer, FrTp.ISO10681_NotificationResults.C_ERROR):
        Check if PduR_FrTpRxIndication is called with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxWAIT_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxCTS_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxNoBuffer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0031.BfS0_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RXNOBUFFER_EOB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3828</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To check the correct transmission of FC frames.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Indicate reception of start frame. Continue until CFEOB was expected.
    02: Prepare PduR_FrTpCopyRxData to return BUFREQ_E_BUSY.
    03: Indicate CFEOB.
    04: VP(FrTp.ASR40.RxNoBuffer):
        Check if FC ABT is sent.
    05: Confirm the FC ABT sent.
    06: VP(FrTp.ASR40.RxNoBuffer):
        Check if PduR_FrTpRxIndication is called with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxNoBuffer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RXNOBUFFER_LF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3944</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To check the correct transmission of FC frames.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Indicate reception of start frame. Continue until LF was expected.
    02: Prepare PduR_FrTpCopyRxData to return BUFREQ_E_BUSY.
    03: Indicate LF.
    04: VP(FrTp.ASR40.RxNoBuffer):
        Check if FC ABT is sent.
    05: Confirm the FC ABT sent.
    06: VP(FrTp.ASR40.RxNoBuffer):
        Check if PduR_FrTpRxIndication is called with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxNoBuffer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RXFCS_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4065</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To check the correct transmission of FC frames.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Indicate reception of start frame.
    02: Check the call of PduR_FrTpStartOfReception.
    03: Check if PduR_FrTpCopyRxData was called.
    04: Elapse a tick and check for CTS sent.
    05: Indicate CFs.
    06: Elapse a tick.
    07: VP(FrTp.ASR40.RxCTS_2):
        Check if CTS is transmitted with the available buffer size.
    08: Indicate next 2 CFs.
    09: Prepare PduR_FrTpCopyRxData to return BUFREQ_OK with buffer size of 0.
    10: Indicate CFEOB.
    11: Call MF till Br elapses.
    12: VP(FrTp.ASR40.RxWAIT_2):
        Check if FC WAIT frame is transmitted.
    13: Provide the buffer and finish the reception.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxCTS_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxWAIT_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>TS_FRTP_STFA_MAXRN</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4237</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the STFA frame is aborted after FrTpMaxRn of retries in case of
    segmented and unsegmented reception.
  
Test Object: 
    Expiring Maximum retries of STFA frame for segmented and unsegmented reception
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Loop over steps 02 to 19 for 2 times with STFA Payload value as in input section
    02: Prepare PduR to return BUFREQ_E_BUSY
    03: Indicate reception of STFA with message length 32 and payload length 2
    04: VP(FRTP1078):
        PduR_FrTpStartOfReception should get called with RxPduId corresponding to
        FrTpRxPduPool_0_FrTpRxPdu_0 and data length as 0x20U
    05: Call FrTp_MainFunction and verify whether FrIf_Transmit is called
    06: VP(FrTp.EB.FRTP1077_1_Enhancement, FrTp.ASR40.RxSTF_1):
        Verify FC Retry frame is sent
    07: Confirm the FC frame
    08: Loop over steps 08 to 12 for FrTpMaxRn-1 = 4 times
    09: Receive the same STFA frame
    10: VP(FrTp.ISO10681_0024.STFA.ACK_RET.2):
        Verify whether PduR_FrTpCopyRxData was called instead of PduR_FrTpStartOfReception.
    11: Call FrTp_MainFunction
    12: VP(FrTp.EB.FRTP1077_2_Enhancement, FrTp.ASR40.RxSTF_1b):
        Verify whether FC Retry frame is transmitted
    13: Confirm the FC frame
    14: Receive the same STFA frame for fifth time
    15: Verify whether PduR_FrTpCopyRxData get called
    16: Call FrTp_MainFunction
    17: VP(FrTp.ISO10681_0024.STFA.ACK_RET.3):
        Verify whether FC Abort frame is transmitted
    18: Confirm the FC frame
    19: VP(FRTP_COUNTER_RX_RN, FrTp.ASR40.RxIndication.Precondition1, FrTp.ISO10681_0024.STFA.ACK_RET.3)
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_1_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_2_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxIndication.Precondition1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_RX_RN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxSTF_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxSTF_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.STFA.ACK_RET.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.STFA.ACK_RET.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_WFTMax_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4426</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To check the behavior of WFTMax counter.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
    FrTpMaxFcWait = 10
  
Test Execution: 
    01: Prepare PduR_FrTpStartOfReception to return BUFREQ_E_BUSY.
    02: Indicate reception of start frame.
    03: Check if FC RETRY is sent.
    04: PduR_FrTpCopyRxData shall return a buffer size only for the STF.
    05: Indicate STF that is resent on the retry requested.
    06: Loop over step 07-10 for FrTpMaxFCWait times.
    07: Elapse FrTpTimeBr MF ticks and check that data copy is requested.
    08: Elapse a MF tick.
    09: VP(FrTp.ASR40.RxWAIT_1, FRTP1099_Br, FrTp.EB.TimeBr_1):
        Check that FC WAIT frame is sent after Br timeout.
    10: Confirm transmission of wait frame.
    11: Prepare PduR to return BUFREQ_OK.
    12: VP(FrTp.ISO10681_0069): Check whether CTS frame is sent.
    13: Confirm the sent CTS frame.
    14: VP(FRTP1080_3):
        Indicate reception of CF1 frames SN 1 and 2 with 200 bytes. This shall check that after
        transmission of FC PDU, C_PDUs are expected.
    15: Prepare PduR to return BUFREQ_OK with buffersize of 0.
    16: Indicate reception of CFEOB frames 10 bytes.
    17: Loop over step 18-21 for FrTpMaxFCWait times.
    18: Elapse FrTpTimeBr MF ticks and check that data copy is requested.
    19: Elapse a MF tick.
    20: VP(FrTp.ISO10681_0027, FrTp.EB.TimeBr_1):Check that FC WAIT frame is sent.
    21: Confirm Pdu.
    22: Call main function till Br elapses, FrTpMaxFCWait exceeded.
    23: VP(FrTp.ISO10681_0055,FrTp.ASR40.RxIndication.Precondition1, FrTp.EB.TimeBr_2,
           FrTp.ISO10681_NotificationResults.C_WFT_OVRN, FRTP_COUNTER_FCWT):
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxWAIT_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TimeBr_1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TimeBr_2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxIndication.Precondition1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>FRTP1099_Br</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_WFT_OVRN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_FCWT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>FRTP1080_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_STARTOFRX_BUSY_COPYRX_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4661</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify unsegmented reception when PDUR is returning BUSY for first STFA and BUFREQ_OK for
     the retry
  
Test Object: 
    Unsegmented reception
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Prepare Pdur stubs such that PduR_FrTpStartOfReception returns BUFREQ_E_BUSY and
        PduR_FrTpCopyRxData provides buffer size large enough to hold the data and
        returns BUFREQ_OK
    02: Indicate reception of start frame with message length 32
    03: PduR_FrTpStartOfReception should get called
    04: Call FrTp_MainFunction and verify whether FrIf_Transmit is called
    05: VP(FrTp.EB.FRTP1077_1_Enhancement):
        Verify FC Retry frame is sent
    06: Confirm the FC frame
    07: Receive same STFA frame
    08: Verify whether PduR_FrTpCopyRxData get called
    09: Call FrTp_MainFunction
    10: VP(FrTp.ISO10681_0033):
        Verify FC_ACK frame was sent
    11: Confirm the Ack frame
    12: Verify PduR_FrTpRxIndication was called with result as E_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_1_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEG_STARTOFRX_BUSY_COPYRX_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4777</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify segmented reception when PDUR is returning BUSY for first STFA and BUFREQ_OK for
     the retry
  
Test Object: 
    Segmented reception
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Prepare PduR_FrTpStartOfReception to return BUFREQ_E_BUSY and PduR_FrTpCopyRxData to provide
        enough buffer for the received data and return BUFREQ_OK
    02: Indicate reception of STFA frame of msg length 34 on RxPdu_0 of RxPduPool_0
    03: Verify that PduR_FrTpStartOfReception was called
    04: Call FrTp_MainFunction and verify whether FrIf_Transmit is called
    05: VP(FrTp.EB.FRTP1077_1_Enhancement):
        Verify FC Retry frame is sent
    06: Confirm the FC frame
    07: Indicate reception of same STFA frame on RxPdu_0 of RxPduPool_0
    08: Verify that PduR_FrTpCopyRxData is called
    09: Call FrTp_MainFunction and verify whether FrIf_Transmit is called
    10: Verify transmission of CTS frame
    11: Confirm the CTS frame
    12: Indicate reception of next 14 bytes.
    13: VP(FrTp.ISO10681_0033):
        Verify transmission of ACK frame
    14: Confirm the Ack frame
    15: Verify PduR_FrTpRxIndication was called with E_OK
    16: VP(FRTP1008):
        Verify that received data was passed to PduR correctly.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_1_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>FRTP1008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEG_BUFFOK_AFTERRETRY</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4917</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the segmented reception is successful if enough buffer is provided after second retry of
    STFA reception.
  
Test Object: 
    Segmented reception
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    Loop steps 01 to 21 for different PduR return values.
    01: Prepare PduR as in input.
    02: Indicate reception of STFA frame on RxPdu_0 of RxPduPool_0
    03: Verify that PduR_FrTpStartOfReception was called
    04: Call FrTp_MainFunction and verify whether FrIf_Transmit is called
    05: Verify FC Retry frame is sent
    06: Confirm the FC frame
    07: Indicate reception of same STFA frame on RxPdu_0 of RxPduPool_0
    08: Verify that PduR_FrTpCopyRxData is called
    09: Call FrTp_MainFunction and verify whether FrIf_Transmit is called
    10: VP(FrTp.EB.FRTP1077_2_Enhancement):
        Verify FC Retry frame is sent
    11: Confirm the FC RETRY frame
    12: Update the return of PduR_FrTpCopyRxData to BUFREQ_OK
    13: Indicate reception of STFA frame on RxPdu_0 of RxPduPool_0
    14: Verify that PduR_FrTpCopyRxData is called
    15: Elapse main function tick
    16: Verify transmission of CTS frame
    17: Indicate reception of next 14 bytes.
    18: Verify transmission of ACK frame
    19: Confirm the Ack frame
    20: verify PduR_FrTpRxIndication was called with E_OK
    21: VP(FRTP1008):
        Verify that received data was passed to PduR correctly.
  
Test Input: 
                   Api                      Return
    01: a) PduR_FrTpStartOfReception     BUFREQ_E_BUSY
           PduR_FrTpCopyRxData           BUFREQ_E_BUSY
        b) PduR_FrTpStartOfReception     BUFREQ_OK
           PduR_FrTpCopyRxData           BUFREQ_E_BUSY
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_2_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
        <provcov>
          <linksto>FRTP1008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>TS_FRTP_LOWBUFFER_FOR_STFA</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5143</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a retry frame is send when PduR returns with a buffer size less
    than that of STFA.
  
Test Object: 
    Acknowledged Unsegmented reception
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Prepare PduR such that PduR_FrTpStartOfReception returns BUFREQ_OK and provides
        buffer size less than that of STFA payload length
    02: Indicate reception of STFA frame with msg lenth 34 and payload length 34
    03: Verify that PduR_FrTpStartOfReception was called
    04: Call FrTp_MainFunction and verify whether FrIf_Transmit is called
    05: VP(FrTp.EB.FRTP1077_1b_Enhancement, FrTp.ASR40.RxSTF_1):
        Verify FC retry frame is sent
    06: Confirm the retry frame
    07: Verify that PduR_FrTpRxIndication is not called
    08: Indicate reception of same STFA frame with msg lenth 34 and payload length 34.
    09: Verify whether PduR_FrTpCopyRxData get called
        (PduR_FrTpCopyRxData should provide enough buffer for the frame)
    10: Call FrTp_MainFunction
    11: Verify FC_ACK frame was sent
    12: Confirm the Ack frame
    13: Verify PduR_FrTpRxIndication was called with result as E_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_1b_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxSTF_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>TS_FRTP_FC_TIMEOUT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5274</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify whether reception is terminated when FC C_PDU timeout occurs during retry.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
    N_Cr = 14
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_E_BUSY
    02: Indicate reception of STFA with message length and payload length 32
    03: PduR_FrTpStartOfReception should get called with RxPduId corresponding to
        FrTpRxPduPool_0_FrTpRxPdu_0 and data length as 0x20U
    04: Call FrTp_MainFunction and verify whether FrIf_Transmit is called
    05: VP(Autosar_R20-11.ECUC_FrTp_00010, Autosar_R20-11.ECUC_FrTp_00021):
        Verify that FC Retry frame is sent correctly with correct source and target addresses
        (Local and remote addresses as configured and confirm the frame.
    06: Elapse Cr ticks while waiting for CF
    07: VP(FrTp.ISO10681_0024.STFA.ACK_RET.4,
           FrTp.ISO10681_NotificationResults.C_TIMEOUT_Cr):
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024.STFA.ACK_RET.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Cr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.ECUC_FrTp_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.ECUC_FrTp_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>EB_FRTP_SEG_LOWBUFF_STARTOFRX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5390</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a retry frame is send when PduR returns with a buffer size less
    than that of STFA(segmented).
  
Test Object: 
    Acknowledged Segmented transmission
  
Test Precondition: 
  
Test Execution: 
    01: Prepare PduR such that PduR_FrTpStartOfReception returns BUFREQ_OK and provides
        buffer size less than that of STFA payload length
    02: Indicate reception of STFA frame from source address 0x0002 with ML 32 and FPL 2.
        And verify the call to PduR_FrTpStartOfReception
    03: Call FrTp_MainFunction
    04: VP(FrTp.EB.FRTP1077_1b_Enhancement):
        Verify FC Retry frame is sent
    05: Confirm the retry frame
    06: Verify that PduR_FrTpRxIndication is not called
    07: Prepare PduR to return BUFREQ_OK and to provide enough buffer for further buffer request
    08: Indicate reception of same STFA frame
    09: Verify whether PduR_FrTpCopyRxData get called
    10: Expire a Main cycle and Verify the CTS frame transmitted
    11: Finish transfer
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_1b_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_BC_ENABLED_PDUORDER</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5510</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test if the FC for the connection with FrTpBandwidthLimitation enabled, will be sent on the
    first TxPdu of the pool referenced.
  
Test Object: 
  
Test Precondition: 
    FrTpBandwidthLimitation is enabled for FrTpConnection_2.
  
Test Execution: 
    01: Indicate reception of STF with address 0x03.
    02: Indicate reception of another STF with address 0x01.
    03: VP(FRTP1177):
        Elapse MF tick and check that CTS for 0x01 is transmitted.
        CTS of 0x03 is not transmitted since the first TxPdu is not free.(BCLimitation enabled)
    04: Confirm transmission of CTS of connection with address 0x01.
    05: VP(FRTP1177):
        Elapse a MF tick and check that CTS of connection with address 0x03 is sent, on the
        first TxPdu of the pool.(BCLimitation enabled)
    06: Reset the connection and end the receptions.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0032.MNPC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0032.SCexp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>EB_FRTP_ERROR_PRIORITY_RX_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5605</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check if the notification with result E_NOT_OK is reported prior to
    E_NOT_OK, in the case two simultaneous errors occurred, one because of wrong ML and
    another because PduR failed to provide the buffer for copy of LF.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Indicate reception of start frame. Continue until LF was expected.
    02: PduR shall return BUFREQ_E_NOT_OK for copy of LF.
    03: Indicate LF, with wrong ML.
    04: Elapse a MF tick and check if ABT is sent, confirm it.
    05: VP(FrTp.ISO10681_NotificationResults.Priority):
        Check if PduR_FrTpRxIndication is called with E_NOT_OK, prior to
        E_NOT_OK, for PduR returned no buffer.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.Priority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>EB_FRTP_ERROR_PRIORITY_RX_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5701</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check if E_NOT_OK is reported prior to E_NOT_OK, if the buffer abort and
    FrTpMaxFCWait overrun conditions occur at same time.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
    FrTpMaxFcWait = 10
  
Test Execution: 
    01: Start a reception of 100 bytes and continue until CFEOB of first block is expected.
    02: Prepare PduR to return BUFREQ_OK with buffersize of 0.
    03: VP(FRTP1099_Br):
        Indicate reception of CFEOB and verify that FCWT frame is sent after N_Br timeout.
    04: Call main function till Br elapses, FrTpMaxFCWait exceeded.
    05: PduR shall return BUFREQ_E_NOT_OK.
    06: VP(FrTp.ISO10681_NotificationResults.Priority):
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK prior to
        E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.Priority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>FRTP1099_Br</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>EB_FRTP_CF_COPYRXDATA_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verifying whether the connection is aborted when PduR_FrTpCopyRxData returns BUFREQ_E_NOT_OK
    for first CF
  
Test Object: 
    Segmented reception with acknowledgement.
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of STFA frame on RxPdu_0 of RxPduPool_0 with ML 150.
    02: Verify that PduR_FrTpStartOfReception was called
    03: Verify that PduR_FrTpCopyRxData is called
    04: Elapse main function tick and verify transmitted CTS frame
    05: Update PduR to return BUFREQ_E_NOT_OK
    06: Indicate reception of first CF and verify that PduR_FrTpCopyRxData is called.
    07: Expire one MainFunction cycle
    08: VP(FrTp.ASR40.RxBufferError, FRTP405_2, FRTP1161_2):
        Verify whether FC Abort frame is transmitted
    09: Confirm the FC ABORT frame
    10: VP(FrTp.ASR40.RxBufferError)
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxBufferError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>FRTP405_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>FRTP1161_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>EB_FRTP_CFEOB_COPYRXDATA_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5929</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verifying whether the connection is aborted when PduR_FrTpCopyRxData returns BUFREQ_E_NOT_OK
    for CFEOB
  
Test Object: 
    Segmented reception with acknowledgement.
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of STFA frame with 400 bytes. Continue reception process till the frame
        before CFEOB.
    02: Prepare PduR to return BUFREQ_E_NOT_OK
    03: Receive CFEOB frame and verify the call to PduR_FrTpCopyRxData
    04: Expire one Main cycle
    05: VP(FrTp.ASR40.RxBufferError, FRTP405_2, FRTP1161_2):
        Verify whether FC Abort frame is transmitted
    06: Confirm the FC Abort frame
    07: VP(FrTp.ASR40.RxBufferError):
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxBufferError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>FRTP405_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>FRTP1161_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>EB_FRTP_LF_COPYRXDATA_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6021</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verifying whether the connection is aborted when PduR_FrTpCopyRxData returns BUFREQ_E_NOT_OK
    for LF
  
Test Object: 
    Segmented reception with acknowledgement.
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of STFA frame on RxPdu_0 of RxPduPool_0
    02: Elapse main function tick.
    03: Check if CTS is sent.
    04: VP(FrTp.ISO10681_0059_RX_LF):
        Indicate unexpected LF and check that it is ignored.
    05: Confirm the CTS sent.
    06: VP(FrTp.ISO10681_0059_RX_CF):
        Indicate reception of CF2 frame and check that it is ignored.
    07: Continue reception till the transmission of CTS for last frame
    08: Prepare PduR to return BUFREQ_E_NOT_OK before receiving LF
    09: Indicate reception of correct last frame and verify the call PduR_FrTpCopyRxData
    10: Expire one main cycle
    11: VP(FrTp.ASR40.RxBufferError, FRTP405_2, FRTP1161_2):
        Verify whether FC Abort frame is transmitted
    12: Confirm the FC ABORT frame
    13: VP(FrTp.ASR40.RxBufferError)
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxBufferError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>FRTP405_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>FRTP1161_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_CF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_LF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>EB_FRTP_STF_COPYRXDATA_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6153</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verifying whether the connection is aborted when PduR_FrTpCopyRxData returns BUFREQ_E_NOT_OK
    for STFA
  
Test Object: 
    Segmented reception with acknowledgement.
  
Test Precondition: 
    Module is initialized.
    Prepare PduR stub PduR_FrTpCopyRxData to return BUFREQ_E_NOT_OK.
  
Test Execution: 
    01: Indicate reception of STFA frame on RxPdu_0 of RxPduPool_0
    02: Verify the call to PduR_FrTpStartOfReception and PduR_FrTpCopyRxData
    03: Expire one main cycle
    04: VP(FRTP405_2, FRTP1161_2):
        Verify whether FC Abort frame is transmitted
    05: Confirm the FC frame
    06: VP(FRTP405_2)
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP405_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>FRTP1161_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>EB_FRTP_INTCF_COPYRXDATA_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6238</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verifying whether the connection is aborted when PduR_FrTpCopyRxData returns BUFREQ_E_NOT_OK
    for intermediate CF
  
Test Object: 
    Segmented reception with acknowledgement.
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of STFA frame on RxPdu_0 of RxPduPool_0
    02: Elapse main function tick and verify the CTS transmitted
    03: Indicate reception of first CF.
    04: Prepare PduR_FrTpCopyRxData to return BUFREQ_E_NOT_OK for the next CF
    05: Receive the second CF
    06: VP(FRTP405_2, FRTP1161_2):
        Verify whether FC Abort frame is transmitted
    07: Confirm the FC frame
    08: VP(FRTP405_2)
        Verify PduR_FrTpRxIndication is called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP405_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>FRTP1161_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>EB_FRTP_FC_TXPDU</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6342</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check that the response to the received C_PDU is always sent in the first free N_PDU of the
    referenced PDU pool.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a reception of 50 bytes on Connection 2.
        Since BC is enabled for this Connection, it uses only the first PDU of the pool to transmit
        FC, so Connection 2 is started ahead of others.
    02: VP(FRTP1080_2):
        Elapse MF tick and check that FC CTS is sent on TxPdu_3, first free PDU.
    03: Start another reception of 50 bytes on Connection 0.
    04: VP(FRTP1080_2):
        Elapse a MF tick and check that FC_CTS is sent on TxPdu_2, currently the first free PDU.
    05: Indicate CFs for reception on Connection 0.
    06: VP(FRTP1080_3):
        Check if the frames are ignored.
    07: Start another reception of 50 bytes on Connection 3.
    08: VP(FRTP1080_2):
        Elapse a MF tick and check that FC_CTS is sent on TxPdu_0, currently the first free PDU.
    09: Start another reception of 50 bytes on Connection 4.
    10: VP(FRTP1080_2):
        Elapse a MF tick and check that FC_CTS is sent on TxPdu_1, currently the first free PDU.
    11: Confirm the FC frames.
    12: Continue until CFEOB of Connection 2 is sent.
    13: VP(FRTP421_EB):
        Continue until CFEOB of all the receptions are received.
        Verify the SduIds of PduR_FrTpCopyRxData calls.
    14: Elapse a MF tick and check that FC_CTS for all receptions are sent.
    15: Complete receptions successfully.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1080_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>FRTP1080_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>FRTP421_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_UNSEG_BUFREQ_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6575</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check that no abort frame is transmitted when PduR returns BUFREQ_E_NOT_OK during
    unsegmented reception
  
Test Object: 
    Handling of PduR NOT OK in case of unsegmented reception
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Prepare PduR_FrTpStartOfReception to return BUFREQ_E_NOT_OK.
    02: Indicate reception of STFU frame and verify whether PduR_FrTpStartOfReception get called
    03: Elapse a Main cycle
    04: VP(FrTp.ISO10681_0024.Unseg.ABT):
        No frame should get transmitted
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Unseg.ABT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_IDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6642</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check that CF/LF/unknown frames will be ignored in RX idle state.
  
Test Object: 
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of a LF frame
    02: Indicate reception of a CF frame
    03: Indicate the reception of CTS frame
    04: Indicate reception from an unknown Pdu
    05: VP(FrTp.ISO10681_0059_RX_idle):
        Verify that no calls occurred indicating that the frames are ignored
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_UNSEGM_NOACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6707</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the Parameter FrTpAckType is ignored and type of STF frame determines whether the
    reception is acknowledged or not.
  
Test Object: 
  
Test Precondition: 
      Configuration parameter FrTpAckType is set to FRTP_ACK_WITH_RT.
  
Test Execution: 
    01: Indicate reception of an unsegmented STFU frame.
    02: VP(FRTP.FrTpAckType.Receiver):
        Verify that the reception is not acknowledged
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP.FrTpAckType.Receiver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>EB_FRTP_BC_SETTINGS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6759</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the module sends the correct BC value in the FC CTS.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a reception of 50 bytes on Connection 3. Indicate STF with 20 bytes.
    02: Start another reception of 80 bytes on Connection 4. Indicate STF with 10 bytes.
    03: Elapse a MF tick.
    04: VP(FrTp.ISO10681_0032.MNPC, FrTp.ISO10681_0032.SCexp, FRTP1049):
        Check whether FC CTS for both reception are sent with correct BC values.
    05: Indicate CFEOB for 1st reception with 20 bytes.
    06: Elapse MF tick and complete 1st reception. Check for PduR notification.
    07: VP(FrTp.ISO10681_0052):
        Indicate 20 CF frames 2 bytes per frame with separation of 127 MF cycles as configured and
        10 CF frames of 2 bytes per frame with separation of 100 MF cycles, for 2nd reception. Check
        that the received CF is accepted with lesser separation time.
    08: Completed the 2nd reception and check for PduR notification.
  
Test Input: 
  
Test Output: 
    04:
                        MNPC   SCExp    BC
       1st reception:    1       0      8
       2nd reception:    31      7      0xFF
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0032.MNPC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0032.SCexp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_DIFF_ML</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6921</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the module correctly handles the reception of minimal and maximal message lengths.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a reception of minimal message length of 1 byte on Connection 0.
    02: Elapse a MF tick and check that ACK is sent. Confirm it.
    03: VP(FrTp.ISO10681_0002):
        Check if PduR is notified with E_OK.
    04: Start another reception of maximal message length of 65535 bytes on Connection 2.
    05: Elapse a MF tick and check that CTS is sent. Confirm it.
    06: VP(FRTP1080_4):
        Continue until LF is received, verify that no further FC response is required and since buffer
        of sufficient size for the remaining message length was indicated in the CTS.
    07: Elapse a MF tick and check that ACK is sent. Confirm it.
    08: VP(FrTp.ISO10681_0002):
        Check if PduR is notified with E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
        <provcov>
          <linksto>FRTP1080_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>EB_FRTP_CONNCURRENT_CHANNELS_RX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>7080</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the module only supports 4 concurrent receptions.
  
Test Object: 
    FrTpChanNum
  
Test Precondition: 
    FrTpChanNum is set to 4.
  
Test Execution: 
    01: Start a unsegmented reception 5 bytes on Connection 0.
    02: VP(FRTP004_Conf):
        Check if the reception is processed and PduR calls are made.
    03: Start a unsegmented reception 5 bytes on Connection 1.
    04: VP(FRTP004_Conf):
        Check if the reception is processed and PduR calls are made.
    05: Start a unsegmented reception 5 bytes on Connection 2.
    06: VP(FRTP004_Conf):
        Check if the reception is processed and PduR calls are made.
    07: Start a unsegmented reception 5 bytes on Connection 3.
    08: VP(FRTP004_Conf):
        Check if the reception is processed and PduR calls are made.
    09: Start a unsegmented reception 5 bytes on Connection 4.
    10: VP(FRTP004_Conf):
        Check if the reception is not processed.
    11: Finish reception on Connection 0.
    12: Start a unsegmented reception 5 bytes on Connection 4.
    13: VP(FRTP004_Conf):
        Check if the reception is processed and PduR calls are made.
    14: Continue and finish all the receptions.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP004_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>EB_FRTP_INCORRECT_SDULENGTH_STF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>7227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that start frames with an SduLength that is not large enough are ignored.
  
Test Object: 
    FrTp_RxIndication
  
Test Precondition: 
  
Test Execution: 
    01: Indicate 3 segmented receptions, leaving only one channel available for one additional
        reception.
    02: Loop over steps 03-07
    03: Indicate one of the frames mentioned in the input section
    04: Elapse a main function
    05: VP: Verify that no function is called
    06: Indicate the reception of a unsegmented unacknowledged start frame.
    07: VP: Verify that the reception has been processed successfully, indicating that the reception
        in step 03 has been ignored.
  
Test Input: 
    STFU, FPL=1, SduLength = 4
    STFA, FPL=1, SduLength = 5
    STFU, FPL=1, SduLength = 8
    STFA, FPL=2, SduLength = 9
    STFU, FPL=246, SduLength = 256
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CheckSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0038.Unseg.Recv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_UNEXPECTED_FC_IN_SEGM_RX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>7335</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that flow control frames during a segmented reception are ignored if no segmented transmission is ongoing.
  
Test Object: 
    FrTp_RxIndication
  
Test Precondition: 
  
Test Execution: 
    01: Start a segmented reception
    02: Indicate the reception of a FC frame with undefined flow status.
    03: VP: Check that the received FC frame is ignored.
    04: Indicate the reception of a FC frame with flow status equal to ABT.
    05: VP: Check that the received FC frame is ignored.
    06: Indicate the reception of a FC frame with flow status equal to ACK_RET and undefined ACK value.
    07: VP: Check that the received FC frame is ignored.
    08: Conclude the segmented reception.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0059_RX_FC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_SEG_STARTOFRX_BUSY_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify the segmented reception when PDUR returned BUFREQ_E_BUSY for STFA and frame data is
     copied to the local buffer.
  
Test Object: 
    Segmented reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_E_BUSY.
    02: Indicate reception of STFA frame of msg length 34 on RxPdu_0 of RxPduPool_0.
    03: Verify that PduR_FrTpStartOfReception was called.
    04: Call main function just before FcMaxWait and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: VP(FrTp.EB.FRTP1077_SOF_BUSY):
        Elapse a MF tick and verify FC WAIT frame is sent.
    06: Confirm the FC frame.
    07: PduR shall now return BUFREQ_OK with enough buffer.
    08: Call FrTp_MainFunction and verify whether FrIf_Transmit is called.
    09: VP(FrTp.EB.FRTP1160_1b, FrTp.EB.FRTP1136_1e):
        Verify transmission of CTS frame.
    10: Confirm the CTS frame.
    11: Complete reception and check whether PduR_FrTpRxIndication was called with E_OK.
    12: Check if the received data was correctly passed to the PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_SOF_BUSY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1e</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_STARTOFRX_BUSY_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>251</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify the unsegmented reception when PDUR returned BUFREQ_E_BUSY for STFA and frame data is
     copied to the local buffer.
  
Test Object: 
    Unsegmented reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_E_BUSY.
    02: Indicate reception of STFA frame of msg length 32 bytes on RxPdu_0 of RxPduPool_0.
    03: Verify that PduR_FrTpStartOfReception was called.
    04: Call main function upto FcMaxWait and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: VP(FrTp.EB.FRTP1077_SOF_BUSY):
        Elapse a MF tick and verify FC WAIT frame is sent.
    06: Confirm the FC frame
    07: PduR shall now return BUFREQ_OK with enough buffer.
    08: Call FrTp_MainFunction and verify whether FrIf_Transmit is called.
    09: VP(FrTp.EB.FRTP1160_1b):
        Verify transmission of ACK frame.
    10: Confirm the ACK frame.
    11: Check whether PduR_FrTpRxIndication was called with E_OK.
    12: Check if the received data was correctly passed to the PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_SOF_BUSY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>EB_FRTP_SEG_LOWBUFF_STARTOFRX_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>379</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the segmented reception when PduR returned BUFREQ_OK with available buffer less than
    needed for the STFA and the frame data is copied to the local buffer.
  
Test Object: 
    Acknowledged Segmented transmission
  
Test Precondition: 
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_OK with 1 available buffer.
    02: Indicate reception of STFA frame of msg length 32 and fpl of 2 bytes on RxPdu_0 of
        RxPduPool_1.
    03: Verify that PduR_FrTpStartOfReception was called.
    04: Call main function upto FcMaxWait and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: VP(FrTp.EB.FRTP1077_SOF_LOW):
        Elapse a MF tick and verify FC WAIT frame is sent.
    06: Confirm the FC frame.
    07: PduR shall now return BUFREQ_OK with enough buffer.
    08: Call FrTp_MainFunction and verify whether FrIf_Transmit is called.
    09: VP(FrTp.EB.FRTP1160_1b):
        Verify transmission of CTS frame.
    10: Confirm the CTS frame.
    11: Complete reception and check whether PduR_FrTpRxIndication was called with E_OK.
    12: Check if the received data was correctly passed to the PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_SOF_LOW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_LOWBUFF_STARTOFRX_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>524</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the unsegmented reception when PduR returned BUFREQ_OK with available buffer less than
    needed for STFA and the frame data is copied to the local buffer.
  
Test Object: 
    Acknowledged Unsegmented reception
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_OK with available buffer of 10 bytes.
    02: Indicate reception of unsegmented STFA frame of msg length 34 bytes on RxPdu_0 of
        RxPduPool_0.
    03: Verify that PduR_FrTpStartOfReception was called.
    04: Call main function upto FcMaxWait and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: VP(FrTp.EB.FRTP1077_SOF_LOW):
        Elapse a MF tick and verify FC WAIT frame is sent.
    06: Confirm the FC frame
    07: PduR shall now return BUFREQ_OK with enough buffer.
    08: Call FrTp_MainFunction and verify whether FrIf_Transmit is called.
    09: VP(FrTp.EB.FRTP1160_1b):
        Verify transmission of ACK frame.
    10: Confirm the ACK frame.
    11: Check whether PduR_FrTpRxIndication was called with E_OK.
    12: Check if the received data was correctly passed to the PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_SOF_LOW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>TS_FRTP_STFA_MAXWAIT_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>655</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the STFA frame is aborted after FrTpMaxFcWait WAIT frames were sent and PduR is
    notified with E_NOT_OK in case of segmented and unsegmented reception.
  
Test Object: 
    Expiring Maximum WAIT for STFA frame for segmented and unsegmented reception.
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    Loop over steps 01 to 10 twice for different frame payload lengths (segmented and unsegmented).
    01: Prepare PduR to return BUFREQ_E_BUSY.
    02: Indicate reception of STFA with message length 32 and FPL as in input.
    03: Verify the call of PduR_FrTpStartOfReception.
    04: Call main function upto FcWaitMax and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: VP(FrTp.EB.FRTP1077_SOF_BUSY):
        Elapse a MF tick and verify FC WAIT frame is sent.
    06: Confirm the FC frame.
    07: Elapse a MF tick, FrTpMaxFcWait is exceeded.
    08: VP(FrTp.EB.FRTP1160_1, FrTp.EB.FRTP1136_1e):
        Verify whether the reception is ended and PduR_FrTpRxIndication is called with
        result E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_SOF_BUSY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1e</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGACK_FRTPCOPYRXDATA_BUSY_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>789</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the segmented reception when PduR_FrTpCopyRxData returned BUFREQ_E_BUSY on
    reception of segmented STFA frame and the frame data is copied to the local buffer.
  
Test Object: 
    Acknowledged segmented reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_OK and grants the buffer and
        PduR_FrTpCopyRxData returns BUFREQ_E_BUSY.
    02: Indicate reception of segmented STFA frame on PduId 0 with data length 48 bytes.
    03: Verify PduR_FrTpStartOfReception and PduR_FrTpCopyRxData are called.
    04: Call main function and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: Elapse a MF tick and check whether transmission was requested.
    06: Verify FC WAIT frame is sent.
    07: Confirm the FC frame.
    08: PduR_FrTpCopyRxData shall return BUFREQ_OK with enough buffer.
    09: Elapse a MF tick and check that transmission is requested.
    10: VP(FrTp.EB.FRTP1160_1b):
        Verify whether FC CTS is sent.
    11: Complete the reception and check wheter PduR is notified with E_OK.
    12: Check if correct data was passed to PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEGACK_FRTPCOPYRXDATA_BUSY_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>981</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the unsegmented reception when PduR_FrTpCopyRxData returned BUFREQ_E_BUSY on
    reception of segmented STFA frame and the frame data is copied to the local buffer.
  
Test Object: 
    Acknowledged unsegmented reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_OK and grants the buffer and
        PduR_FrTpCopyRxData returns BUFREQ_E_BUSY.
    02: Indicate reception of unsegmented STFA frame on PduId 0 with data length 20 bytes.
    03: Verify PduR_FrTpStartOfReception and PduR_FrTpCopyRxData are called.
    04: Call main function and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: Elapse a MF tick and check whether transmission was requested.
    06: Verify FC WAIT frame is sent.
    07: Confirm the FC frame.
    08: PduR_FrTpCopyRxData shall return BUFREQ_OK with enough buffer.
    09: Elapse a MF tick and check that transmission is requested.
    10: VP(FrTp.EB.FRTP1160_1b):
        Verify whether FC ACK is sent.
    11: Complete the reception and check whether PduR is notified with E_OK.
    12: Check if correct data was passed to PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEGACK_FRTPCOPYRXDATA_BUSY_CLB_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>1108</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the unsegmented reception when PduR_FrTpStartOfReception returned BUFREQ_E_BUSY and
    module retries for buffer for some time, grants buffer but PduR_FrTpCopyRxData returns
    BUFREQ_E_BUSY.
  
Test Object: 
    Acknowledged unsegmented reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception and PduR_FrTpCopyRxData return BUFREQ_E_BUSY.
    02: Indicate reception of unsegmented STFA frame on PduId 0 with data length 20 bytes.
    03: Verify PduR_FrTpStartOfReception was called.
    04: Call main function and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: Elapse a MF tick and check whether transmission was requested.
    06: Verify FC WAIT frame is sent.
    07: Confirm the FC frame.
    08: Call main function and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    09: Elapse a MF tick and check whether FC WAIT was sent. Confirm it.
    10: PduR_FrTpCopyRxData shall return BUFREQ_OK on buffersize request and return BUFREQ_E_BUSY
        on immediate copydata request.
    11: Elapse an MF tick and check that nothing happened.
    12: PduR_FrTpCopyRxData now return BUFREQ_OK.
    13: VP(FrTp.EB.FRTP1160_1b):
        Elapse a MF tick and check that ACK is sent.
    14: Confirm the ACK sent and check whether PduR is notified with E_OK.
    15: Check if correct data was passed to PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>TS_FRTP_CONCURRENT_RX_SOR_BUSY_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>1275</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify the concurrent segmented receptions when PDUR returned BUFREQ_E_BUSY for STFA and
     frame data are copied to the appropriate local buffer.
  
Test Object: 
    Segmented reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_E_BUSY .
    02: Indicate reception of an unsegmented STFA frame of 12 bytes on Connection 0.
    03: Verify that PduR_FrTpStartOfReception was called for Connection 0.
    04: Indicate reception of another unsegmented STFA frame of 13 bytes on Connection 2.
    05: Verify that PduR_FrTpStartOfReception was called for Connection 2.
    06: Indicate reception of another unsegmented STFA frame of 14 bytes on Connection 3.
    07: Verify that PduR_FrTpStartOfReception was called for Connection 3.
    08: Call main function just before expiration of MaxFcWait and check if the module retried with
        the call of PduR_FrTpCopyRxData for all the three receptions, upto TimeBr.
    09: VP(FrTp.EB.FRTP1136_1d):
        Elapse a MF tick and verify FC WAIT frames were sent on all the three channels.
    10: Confirm the FC frames.
    11: PduR shall now return BUFREQ_OK with enough buffer.
    12: Call FrTp_MainFunction and verify whether FrIf_Transmit was called.
    13: Verify transmission of ACK frames.
    14: Confirm the ACK frames and check whether PduR_FrTpRxIndication was called with E_OK.
    15: Check if the received data of concurrent receptions were correctly passed to the PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1d</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEG_SOR_OK_COPYRX_OK_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>1487</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify the reception if the PduR provides enough buffer for the message.
  
Test Object: 
    Segmented reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled
  
Test Execution: 
    01: Indicate a segmented STF frame of fpl of 8 bytes and ml of 30 bytes on Connection 0.
    02: VP(FRTP1078, FRTP1138):
        Verify if PduR_FrTpStartOfReception and PduR_FrTpCopyRxData are called.
    03: Elapse a MF tick and check than CTS is sent.
    04: Confirm CTS.
    05: Indicate CF of 10 bytes and LF of 12 bytes.
    06: Elapse a MF tick and check that ACK frame is sent.
    07: Confirm the ACK frame.
    08: VP(FRTP1083):
        Verify if PduR_FrTpRxIndication was called with E_OK.
    09: Check if the received data is correctly passed to the PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>FRTP1138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>FRTP1083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EB_FRTP_RX_SEGM_NACK_CONCURRENT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>175</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test multiple concurrent receptions with acknowledgement. Indicate 3 parallel receptions
    (2 segmented, 1 unsegmented) and verify that first FC CTS frame are correctly transmitted.
    Verify that PduR is correctly notified and passed all data.
  
Test Object: 
    Handling of multiple concurrent receptions without acknowledgement
  
Test Precondition: 
  
Test Execution: 
    01: VP(FRTP228, FRTP1007, FRTP1009, FRTP399, FRTP1078):
        Indicate reception of 3 STFU frames for source addresses 0x0001, 0x0002, 0x0003 (where 0x0002
        receives an unsegmented message). Verify PduR is notified of start of reception. For unsegmented
        message: Verify that PduR_FrTpRxIndication was called with PduId 1 and E_OK.
    02: VP(FrTp.ISO10681_0066a):
        Call main function. Verify FC_CTS frames are transmitted.
    03: Continue transmission until indication of last chunk of data from current block for
        source address 0x0003.
    04: VP(FrTp.ISO10681_0066b):
        Verify FC_CTS frame is correctly transmitted to target address 0x0003.
    05: Continue transmission until indication of last chunk of data from current block for
        source address 0x0001.
    06: VP():
        Verify FC_CTS frame is correctly transmitted to target address 0x0001.
    07: Continue reception until last frame was received from source address 0x0001.
    08: VP(FRTP1009):
        Verify PduR is notified of successful end of reception.
    09: Continue reception until last frame was received from source address 0x0003.
    10: VP(FRTP1083):
        Check if PduR_FrTpRxIndication was not called.
    11: Indicate LF.
    12: VP(FRTP228, FRTP1009, FRTP1083):
        Verify PduR is notified of successful end of reception.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FRTP1007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>FRTP1009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>FRTP1078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>FRTP1083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>FRTP399</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0066a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0066b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_MLFPL_ERR_NACK_SEG</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test handling of inconsistencies between message length and frame payload length in
    a last frame.
  
Test Object: 
    ML and FPL error handling
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Execute steps 02-04 until all errors denoted in input section 03 have been treated.
    02: Start reception process. Continue until last frame is expected.
    03: Indicate reception of last frame. Introduce one of the errors denoted in the
        input section.
    04: VP(FRTP142, FrTp.ISO10681_0038.Unack.Seg.Recv,
           FrTp.ISO10681_NotificationResults.C_ML_MISMATCH
          ):
        Verify FrTp_RxIndication is called with E_NOT_OK.
  
Test Input: 
    03: - message length differs from STFU frame's message length
        - payload length does not sum up to STFU frame's message length
        - payload length does not sum up to LF frame's message length
        - message length differs from STFU frame's message length in MSB byte only
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0038.Unack.Seg.Recv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ML_MISMATCH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_NOACK_BP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>497</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check that BP error handling is not occurring for connection with FrTpAckType = FRTP_NO
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Initialize.
    02: Transmit STFU with TxSduId of Connection_0.
    03: Confirm transmission of STFU.
    04: Simulate the reception of CTS frame requesting 70 bytes of data.
    05: Check whether 48 bytes ( Max Block size) of data are transmitted.
    06: Confirm the sent CF1 frames.
    07: Simulate the reception of retry frame with BP set to 60.
    08: VP(FrTp.ISO10681_0053):
        Check whether PduR_FrTpTxConfirmation is not get called.
    09: Elapse one Main cycle.
    10: Check whether segmented transmission is continued.
    11: Finish Transmission.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_STFU_FPL_LENGTHCHECK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>624</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test if the received STFU is ignored if the payload length exceeds the permissible STFU payload
    length.
  
Test Object: 
    FPL length
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate reception of STFU frame on RxPdu_0 of RxPduPool_0.
        250 bytes payload (maximum 247 bytes allowed), 400 bytes message length.
    02: VP(FrTp.ISO10681_0007):
        Check if the received STFU is ignored.
    03: Elapse a Mainfunction tick and check that no function is called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_ABORT_WRONG_SN</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>679</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test if the unacknowledged reception is aborted if a CF is received with wrong sequence number.
  
Test Object: 
    FPL length
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Indicate unacknowledged reception of STFU frame on RxPdu_0 of RxPduPool_0.
        8 bytes payload, 70 bytes message length.
    02: Elapse a mainfunction tick and check that CTS is transmitted.
    03: Indicate the first CF with SN set to 3.
    04: VP(FrTp.ISO10681_0041, FRTP_COUNTER_RX_RN, FrTp.ISO10681_NotificationResults.C_WRONG_SN):
        Check if the reception is aborted and E_NOT_OK is reported to the
        upper layer.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_RX_RN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_WRONG_SN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_STARTOFRECEPTION_BUSY</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>762</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module ignores the frame
    - when PduR_FrTpStartOfReception returns BUFREQ_E_BUSY on reception of an unsegmented STFU
      frame and
    - FrTpCopyToLocalBuffer is disabled.
  
Test Object: 
    Unsegmented Reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is disabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_E_BUSY.
    02: Indicate reception of start frame with message length and payload length as same.
    03: Verify PduR_FrTpStartOfReception is called with PduId 0 and SduLength 30.
    04: VP(FrTp.EB.FRTP1136_1_Enhancement, FrTp.ASR40.RxIndication.Precondition1):
        PduR_FrTpRxIndication should get called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxIndication.Precondition1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_STARTOFRECEPTION_ZEROBUFF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>831</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module ignores the frame when
    - PduR_FrTpStartOfReception returns zero buffer on reception of an unsegmented STFU frame and
    - FrTpCopyToLocalBuffer is disabled.
  
Test Object: 
    Unsegmented Reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is disabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_OK and zero buffer.
    02: Indicate reception of start frame with message length and payload length as same.
    03: Verify PduR_FrTpStartOfReception is called with PduId 0 and SduLength 30.
    04: VP(FrTp.EB.FRTP1136_1b_Enhancement, FrTp.ASR40.RxIndication.Precondition1):
        PduR_FrTpRxIndication should get called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1b_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.RxIndication.Precondition1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEG_STARTOFRECEPTION_BUSY</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>900</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module transmits an ABORT frame when PduR_FrTpStartOfReception
    returns BUFREQ_E_BUSY on reception of unacknowledged segmented STFU frame which
  
Test Object: 
    Unacknowledged segmented reception
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_E_BUSY
    02: Indicate reception of STFU frame on PduId 0 with data length 0x96U
    03: Verify PduR_FrTpStartOfReception is called with PduId 0 and SduLength 150.
    04: Call main function.
    05: Transmission requested
    06: VP(FrTp.ASR40.RxSTF_2):
        Verify FC ABORT frame is sent.
    07: Confirm transmission of Abort frame.
    08: VP(FrTp.ASR40.RxSTF_2, FrTp.ISO10681_NotificationResults.C_ERROR):
        PduR_FrTpRxIndication should get called with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxSTF_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>TS_FRTP_LOWBUFFER_FOR_STFU</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>987</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the reception of STFU frame is aborted when PduR returns with a buffer size less
    than that of STFU.
  
Test Object: 
    UnAcknowledged reception
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_OK and available buffer size less than that of STFU
    02: Indicate reception of STFU frame with msg length 34 and payload length 30
    03: Verify that PduR_FrTpStartOfReception was called
    04: Call FrTp_MainFunction and verify whether FrIf_Transmit is called
    05: VP(FrTp.ASR40.RxSTF_2):
        Verify FC Abort frame is sent
    06: Confirm the Abort frame
    07: VP(FrTp.ASR40.RxSTF_2, FrTp.ISO10681_NotificationResults.C_ERROR):
        Verify PduR_FrTpRxIndication was called with E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxSTF_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEG_FRTPCOPYRXDATA_BUSY</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1068</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module transmits an ABORT frame when PduR_FrTpCopyRxData
    returns BUFREQ_E_BUSY on reception of unacknowledged segmented STFU frame which
  
Test Object: 
    Unacknowledged segmented reception
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Prepare PduR stub such that PduR_FrTpStartOfReception returns BUFREQ_OK and provides enough
        buffer and PduR_FrTpCopyRxData returns BUFREQ_E_BUSY.
    02: Indicate reception of STFU frame on PduId 0 with data length 0x96U
    03: Verify PduR_FrTpStartOfReception is called with PduId 0 and SduLength 150.
    04: Verify PduR_FrTpCopyRxData is called
    05: Call main function and verify that transmission is requested
    06: VP(FrTp.ASR40.RxSTF_2b):
        Verify FC Abort frame is sent
    07: Confirm the FC Abort frame
    08: VP(FrTp.ASR40.RxSTF_2b, FrTp.ISO10681_NotificationResults.C_ERROR):
        PduR_FrTpRxIndication should get called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.RxSTF_2b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_FRTPCOPYRXDATA_BUSY</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module ignores the frame when
    - PduR_FrTpCopyRxData returns BUFREQ_E_BUSY on reception of an unsegmented STFU frame and
    - FrTpCopyToLocalBuffer is disabled.
  
Test Object: 
    Unsegmented Reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is disabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_OK and enough buffer and
        PduR_FrTpCopyRxData as BUFREQ_E_BUSY.
    02: Indicate reception of start frame with message length 30 and frame payload length as 30.
    03: Verify PduR_FrTpStartOfReception is called.
    04: Verify PduR_FrTpCopyRxData is called
    05: VP(FrTp.EB.FRTP1136_2_Enhancement, FrTp.ISO10681_NotificationResults.C_ERROR):
        PduR_FrTpRxIndication should get called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_2_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_FRTPCOPYRXDATA_ZEROBUF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1238</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module ignores the frame when
    - PduR_FrTpCopyRxData returns BUSY on reception of an unsegmented STFU frame and
    - FrTpCopyToLocalBuffer is disabled.
  
Test Object: 
    Unsegmented Reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is disabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_OK and enough buffer and
        PduR_FrTpCopyRxData as BUFREQ_OK but zero buffer.
    02: Indicate reception of start frame with message length 30 and frame payload length as 30.
    03: Verify PduR_FrTpStartOfReception is called.
    04: Verify PduR_FrTpCopyRxData is called
    05: VP(FrTp.EB.FRTP1136_2_Enhancement, FrTp.ISO10681_NotificationResults.C_ERROR):
        PduR_FrTpRxIndication should get called with result E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_2_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_LOWBUFFER_THANML</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1318</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the reception of STFU frame is ignored when PduR returns with a buffer size less
    than that message length.
  
Test Object: 
    UnAcknowledged unsegmented reception
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_OK and available buffer size less than that of message length
    02: Indicate reception of STFU frame with msg length and payload length as 30
    03: Verify that PduR_FrTpStartOfReception was called
    04: VP(FrTp.EB.FRTP1136_1b_Enhancement, FrTp.ISO10681_NotificationResults.C_ERROR):
        Verify PduR_FrTpRxIndication was called with E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1b_Enhancement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RX_UNSEGM_ACK_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FC_ACK_RET frame is sent when reception of an unsegmented STFA frame is indicated,
    even though the acknowledgement is not configured.
  
Test Object: 
  
Test Precondition: 
    Configuration parameter FrTpAckType is set to FRTP_NO.
  
Test Execution: 
    01: Indicate reception of STFA frame.
    02: VP(FRTP.FrTpAckType.Receiver):
        Verify that the reception is acknowledged
    03: Call main function and verify transmission was requested.
    04: VP(FRTP.FrTpAckType.Receiver, FrTp.ISO10681_0002):
        Verify FC_ACK_RET frame was sent.
    05: Verify PduR_FrTpRxIndication was called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP.FrTpAckType.Receiver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_SEG_STARTOFRECEPTION_BUSY_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the segmented reception when PduR_FrTpStartOfReception returned BUFREQ_E_BUSY on
    reception of segmented STFU frame and the frame data is copied to the local buffer.
  
Test Object: 
    Unacknowledged segmented reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_E_BUSY.
    02: Indicate reception of STFU frame on PduId 0 with data length 0x96U.
    03: Verify PduR_FrTpStartOfReception is called with PduId 0 and SduLength 150.
    04: Call main function and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: Elapse a MF tick and check that whether transmission was requested.
    06: VP(FrTp.EB.FRTP1136_SOF_BUSY):
        Verify FC WAIT frame is sent.
    07: Confirm transmission FC frame.
    08: PduR shall return BUFREQ_OK with enough buffer.
    09: Call FrTp_MainFunction and verify whether FrIf_Transmit is called.
        VP(FrTp.EB.UlCallout.RxIndicationName.Function):
        Verify that the upper layer callout function is called with correct parameters.
    10: VP(FrTp.EB.FRTP1160_1b):
        Verify whether FC CTS is sent.
    11: Complete the reception and check whether PduR is notified with E_OK.
    12: Check if correct data was passed to PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_SOF_BUSY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_STARTOFRECEPTION_BUSY_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>318</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module retries for the buffer when PduR_FrTpStartOfReception returns
    BUFREQ_E_BUSY on reception of an unsegmented STFU frame.
  
Test Object: 
    Unacknowledged Unsegmented Reception.
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_E_BUSY.
    02: Indicate reception of start frame with message length and payload length as same.
    03: Verify PduR_FrTpStartOfReception is called with PduId 0 and SduLength 30.
    04: VP(FrTp.EB.FRTP1136_1c):
        Verify that the buffer is requested in the FrTp_MainFunction calls till
        TimeBr.
    05: Verify that PduR_FrTpRxIndication get called with result E_NOT_OK.
        VP(EB.UlCallout.RxIndicationName.Function):
        Verify that the upper layer pre-callout function is called with identical parameters if it is activated.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1c</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_STARTOFRECEPTION_ZEROBUF_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>402</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module retries for the buffer by calling PduR_FrTpCopyRxData when
    PduR_FrTpStartOfReception returns zero buffer on reception of an unsegmented STFU frame.
  
Test Object: 
    Unacknowledged Unsegmented Reception.
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return zero buffer.
    02: Indicate reception of start frame with message length and payload length as same.
    03: Verify PduR_FrTpStartOfReception is called with PduId 0 and SduLength 30.
    04: VP(FrTp.EB.FRTP1136_1c):
        Verify that the buffer is requested again in the FrTp_MainFunction calls till
        TimeBr.
    05: Verify that PduR_FrTpRxIndication is called with result E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1c</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_VALID_AFTERRETRY</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module retries for the buffer by calling PduR_FrTpCopyRxData when
    PduR_FrTpStartOfReception returns zero buffer on reception of an unsegmented STFU frame.
  
Test Object: 
    Unacknowledged Unsegmented Reception.
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return zero buffer.
    02: Indicate reception of start frame with message length and payload length as same.
    03: Verify PduR_FrTpStartOfReception is called with PduId 0 and SduLength 30.
    04: VP(FrTp.EB.FRTP1136_1c):
        Verify that the buffer is requested again in the FrTp_MainFunction calls till
        TimeBr.
    05: Prepare PduR_FrTpCopyRxData to return a buffer of 30 and call MainFunction so that
        the data gets copied successfully.
        VP(FrTp.EB.UlCallout.RxIndicationName.Function):
        Verify that the upper layer callout function is called with correct parameters.
    06: Verify that PduR_FrTpRxIndication is called with result E_OK.
        VP(EB.UlCallout.RxIndicationName.Function):
        Verify that the upper layer pre-callout function is called with identical parameters if it is activated.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1c</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEG_LOWBUFFER_FOR_STFU_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the reception of STFU frame is aborted when PduR returns with a buffer size less
    than that of STFU.
  
Test Object: 
    Segmented unacknowledged reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_E_BUSY.
    02: Indicate reception of STFU frame on PduId 0 with data length 0x96U.
    03: Verify PduR_FrTpStartOfReception is called with PduId 0 and SduLength 150.
    04: Call main function and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: Elapse a MF tick and check that whether transmission was requested.
    06: VP(FrTp.EB.FRTP1136_SOF_LOW):
        Verify FC WAIT frame is sent.
    07: Confirm transmission FC frame.
    08: PduR shall return BUFREQ_OK with enough buffer.
    09: Elapse a MF tick and check that transmission is requested.
        VP(FrTp.EB.UlCallout.RxIndicationName.Function):
        Verify that the upper layer callout function is called with correct parameters.
    10: VP(FrTp.EB.FRTP1160_1b):
        Verify whether FC ACK is sent.
    11: Complete the reception and check whether PduR is notified with E_OK.
    12: Check if correct data was passed to PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_SOF_LOW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEG_LOWBUFFER_THANML_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>745</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module retries for the buffer by calling PduR_FrTpCopyRxData when
    PduR_FrTpStartOfReception returns smaller buffer than ML on reception of an unsegmented
    STFU frame.
  
Test Object: 
    Unacknowledged unsegmented reception.
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_OK and available buffer size less than that of message length.
    02: Indicate reception of STFU frame with msg length and payload length as 30.
    03: Verify that PduR_FrTpStartOfReception was called.
    04: VP(FrTp.EB.FRTP1136_1c):
        Verify that the buffer is requested again in the FrTp_MainFunction calls till
        TimeBr.
    05: Verify that PduR_FrTpRxIndication is called with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1c</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>TS_FRTP_SEGNACK_FRTPCOPYRXDATA_BUSY_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>824</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the segmented reception when PduR_FrTpCopyRxData returned BUFREQ_E_BUSY on
    reception of segmented STFU frame and the frame data is copied to the local buffer.
  
Test Object: 
    Unacknowledged segmented reception
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpStartOfReception return BUFREQ_OK and grants the buffer and
        PduR_FrTpCopyRxData returns BUFREQ_E_BUSY.
    02: Indicate reception of STFU frame on PduId 0 with data length 0x22U.
    03: Verify PduR_FrTpStartOfReception and PduR_FrTpCopyRxData are called.
        VP(FrTp.EB.UlCallout.RxIndicationName.Function):
        Verify that the upper layer callout function is called with correct parameters.
    04: Call main function and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: Elapse a MF tick and check whether transmission was requested.
    06: Verify FC WAIT frame is sent.
    07: Confirm the FC frame.
    08: PduR_FrTpCopyRxData shall return BUFREQ_OK with enough buffer.
    09: Elapse a MF tick and check that transmission is requested.
    10: VP(FrTp.EB.FRTP1160_1b):
        Verify whether FC CTS is sent.
    11: Complete the reception and check whether PduR is notified with E_OK.
    12: Check if correct data was passed to PduR.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEGNACK_FRTPCOPYRXDATA_BUSY_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>967</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module retries for the buffer when PduR_FrTpCopyRxData returns BUFREQ_E_BUSY
    on reception of an unsegmented STFU frame.
  
Test Object: 
    Unacknowledged Unsegmented Reception
  
Test Precondition: 
    Module is initialized
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpCopyRxData return BUFREQ_E_BUSY.
    02: Indicate reception of start frame with same message length and payload length.
    03: Verify PduR_FrTpStartOfReception and PduR_FrTpCopyRxData are called.
        VP(FrTp.EB.UlCallout.RxIndicationName.Function):
        Verify that the upper layer callout function is called with correct parameters.
    04: VP(FrTp.EB.FRTP1160_1b):
        Verify that FrTp retries for the buffer through PduR_FrTpCopyRxData till
        TimeBr.
    05: Verify that PduR_FrTpRxIndication is called with result E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>TS_FRTP_UNSEGNACK_FRTPCOPYRXDATA_ZEROBUF_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>1051</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Verify that the module retries for the buffer when PduR_FrTpCopyRxData returns BUFREQ_E_BUSY
   on reception of an unsegmented STFU frame.
  
Test Object: 
    Unacknowledged Unsegmented Reception
  
Test Precondition: 
    Module is initialized
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to let PduR_FrTpCopyRxData return BUFREQ_E_BUSY.
    02: Indicate reception of start frame with same message length and payload length.
    03: Verify PduR_FrTpStartOfReception and PduR_FrTpCopyRxData are called.
        VP(FrTp.EB.UlCallout.RxIndicationName.Function):
        Verify that the upper layer callout function is called with correct parameters.
    04: VP(FrTp.EB.FRTP1136_1f):
        Verify that FrTp retries for the buffer through PduR_FrTpCopyRxData till
        TimeBr.
    05: Verify that PduR_FrTpRxIndication is called with result E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1136_1f</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>TS_FRTP_STFU_MAXWAIT_CLB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_1_CLB/source/application/testcase.c</sourcefile>
      <sourceline>1139</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the STFU frame is aborted after FrTpMaxFcWait WAIT frames were sent and PduR is
    notified with E_NOT_OK in case of segmented reception.
  
Test Object: 
    Expiring Maximum WAIT for STFU frame for segmented reception.
  
Test Precondition: 
    Module is initialized.
    FrTpCopyToLocalBuffer is enabled.
  
Test Execution: 
    01: Prepare PduR to return BUFREQ_E_BUSY.
    02: Indicate reception of STFU with message length 32 and fpl of 2 bytes.
    03: Verify the call of PduR_FrTpStartOfReception.
    04: Call main function and check if the module retried with the call of
        PduR_FrTpCopyRxData upto TimeBr.
    05: VP(FrTp.EB.FRTP1077_SOF_BUSY):
        Elapse a MF tick and verify FC WAIT frame is sent.
    06: Confirm the FC frame.
    07: Elapse few MF ticks before FrTpMaxFcWait, check for call of PduR_FrTpStartOfReception and
        check if FC WAIT is sent. Confirm it.
    08: Elapse a MF tick, FrTpMaxFcWait is exceeded.
    09: VP(FrTp.EB.FRTP1160_1):
        Verify whether the reception is ended and PduR_FrTpRxIndication is called with
        result E_NOT_OK.
        VP(EB.UlCallout.RxIndicationName.Function):
        Verify that the upper layer pre-callout function is called with identical parameters if it is activated.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FRTP1077_SOF_BUSY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FRTP1160_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.UlCallout.RxIndicationName.Function</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_RX_MLFPL_ERR_NACK_UNSEG</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test handling of inconsistencies between message length and frame payload length in
    a start frame.
  
Test Object: 
    ML and FPL error handling
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Execute steps 02-03 until all errors denoted in input section 02 have been treated.
    02: Indicate reception of unsegmented STFU frame. Indicate frame has one of the errors denoted
        in the input section.
    03: VP(FrTp.ISO10681_0038.Unseg.Recv): Verify that frames are ignored
  
Test Input: 
    02: - payload length &gt; message length
        - payload length &gt; maximum allowed payload length (246)
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0038.Unseg.Recv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>TS_FRTP_RX_NOTX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_RxNAckKML_2/source/application/testcase.c</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that no Tx connection can be established in case no Tx channel is configured.
  
Test Object: 
  
Test Precondition: 
    Module is initialized.
    Only one connection with a Rx channel is defined.
  
Test Execution: 
    01: Try to start transmission of 2 bytes on PduId 0 (Not configured).
    02  VP(FRTP1139):
        FrTp refuses the transmission and reports to Det
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EB_FRTP_TX_CONCURRENT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test executes three concurrent transmissions and verifies data transmitted by
    FrTp_TriggerTransmit. Two transmissions are segmented, one is unsegmented.
  
Test Object: 
    FrTp_TriggerTransmit
  
Test Precondition: 
    Module is initialized
    Configuration parameter FrTpAckType is set to FRTP_ACK_WITH_RT.
  
Test Execution: 
    01: VP(FRTP136, FRTP149, FRTP228, FRTP415, FRTP1033)
        Start 3 concurrent transmissions. FrTp_Transmit returns E_OK.
    02: Elapse main function tick
    03: VP(FrTp.ISO10681_0011, FrTp.ISO10681_0017,FrTp.ASR40.TxSTF_1, FRTP.FrTpAckType.Send)
        Call FrTp_TriggerTransmit for PduIds 1,2,4. Function calls return correct STFA frames.
        Verify that SduLength equals payload length of Pdu used to transmit the start frame.
    04: Confirm PduIds.
    05: VP(FRTP1008, FrTp.ISO10681_0065):
        Verify PduR notification (PduR_FrTpTxConfirmation) for unsegmented transfer.
    06: Indicate reception of FC CTS (for segmented transfer) and FC ACK_RET (for unsegmented transfer) frames.
    07: Elapse main function tick
    08: VP(FRTP1096_EB, FrTp.ISO10681_0018, FrTp.ISO10681_0062,
           FrTp.ISO10681_0070, FRTP1020, FRTP1176):
        Call FrTp_TriggerTransmit and verify output arguments (including consecutive frame's sequence number).
        Verify Pdus are processed alternately.
    09: Confirm PduIds.
    10: Elapse main function tick.
    11: VP(FrTp.ISO10681_0019, FRTP1089):
        Call FrTp_TriggerTransmit and verify output arguments
    12: Proceed until next call to FrTp_TriggerTransmit is expected
    13: VP(FrTp.ISO10681_0019):
        call trigger transmit and verify output arguments
    14: Proceed until next call to FrTp_TriggerTransmit is expected
    15: VP(FrTp.ISO10681_0019, FrTp.ISO10681_0070, FRTP1096_EB):
        Call trigger transmit and verify output arguments.
    16: Proceed until next call to FrTp_TriggerTransmit is expected
    17: VP(FrTp.ISO10681_0019, FRTP1176):
        call trigger transmit and verify output arguments
    18: Proceed until next call to FrTp_TriggerTransmit is expected
    19: Proceed until next call to FrTp_TriggerTransmit which ends first segmented transmission
    20: Indicate reception FC CTS and FC ACK_RET frames
    21: VP(FRTP1058):
        Verify PduR notification (PduR_FrTpTxConfirmation) for segmented transfer
    22: VP(VP(FrTp.ISO10681_0019), FrTp.ISO10681_0068):
        Call trigger transmit and verify output arguments (includes last frame)
    23: Confirm PduIds.
    24: Proceed until next call to FrTp_TriggerTransmit is expected
    25: VP(FrTp.ISO10681_0019):
        call trigger transmit and verify output arguments.
    26: Proceed until next interesting verification point
    27: VP(FrTp.ISO10681_0019, FrTp.ISO10681_0021):
        Call trigger transmit and verify output arguments (before wrap around of CF sequence number)
    28: Continue for one cycle
    29: VP(FrTp.ISO10681_0021):
        Call trigger transmit and verify output arguments (after wrap around of CF sequence number)
    30: Proceed until next interesting verification point
    31: VP(FrTp.ISO10681_0068):
        Call trigger transmit and verify output arguments (last frame)
    32: Confirm TxPduIds.
    33: Indicate reception of FC ACK_RET frames (unsegmented transmission)
    34: VP(FRTP1010):
        Verify PduR notification (PduR_FrTpTxConfirmation) for segmented transfer
  
Test Input: 
    01: TxPduId: TxSduId of Connection_0, SduLength: 150  (segmented)
        TxPduId: TxSduId of Connection_1, SduLength: 70 (unsegmented)
        TxPduId: TxSduId of Connection_2, SduLength: 400  (segmented)
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>FRTP149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>FRTP228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FRTP415</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>FRTP1008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>FRTP1010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>FRTP1033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>FRTP1096_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>FRTP1020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FRTP1176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
        <provcov>
          <linksto>FRTP1089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxSTF_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
        <provcov>
          <linksto>FRTP.FrTpAckType.Send</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_RETRY</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>475</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that retry request is correctly handled
  
Test Object: 
    Retransmission of already transmitted data
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Start transmission of 400 bytes on TxSduId of Connection_2
    02: Proceed until first Pdus of new block have been transmitted. Transmitted payload is
        ascending from 0x36 to 0xA0 (106 bytes).
    03: Indicate reception of FC ACK_RET frame, requesting retry from BP 16.
    04: Proceed until next data transmission
    05: VP(FRTP1049, FrTp.ISO10681_0014, FrTp.ISO10681_0020, FrTp.ISO10681_0034, FrTp.ISO10681_0044,
           FrTp.ISO10681_0048, FrTp.ASR40.TxRETRY, FrTp.EB.TxRetry_4, FrTp.ISO10681_0033):
        Verify that the module transmits CF2 frame starting with 0x46
        (which is 16th byte when starting counting at 0x36). sequence number is 0.
        Already 106 bytes transmitted (0x36 to 0xA0) before RETRY frame is received,
        so counting from BP (16), 90 bytes are to be retransmitted starting from 0x46 to 0x9F.
    06: Indicate reception of FC ACK_RET frame, requesting retry from BP 29.
    07: VP(FrTp.ISO10681_0014, FrTp.ISO10681_0020, FrTp.ISO10681_0034, FrTp.ISO10681_0044,
           FrTp.ISO10681_0048, FrTp.ASR40.TxRETRY, FrTp.EB.TxRetry_4, FrTp.ISO10681_0033):
        Verify that the module transmits CF1 frame starting with 0x53
        (which is 29th byte when starting counting at 0x1D). sequence number is 0.
        Already 40 bytes transmitted (0x36 to 0x76) before RETRY frame is received,
        so counting from BP (29), 11 bytes are to be retransmitted starting from 0x1D to 0x28.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxRETRY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TxRetry_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_FC_ABORT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>601</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify correct handling FC ABORT frame.
  
Test Object: 
    Handling of FC ABORT frame
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Start transmission of 400 bytes on TxSduId of Connection_2
    02: Execute some flexray cycles
    03: Indicate reception of FC ABORT frame
    04: VP(FrTp.ISO10681_0064, FrTp.ISO10681_NotificationResults.C_ABORT,
           FrTp.ISO10681_0038.Ack.Send, FrTp.ISO10681_0024.Seg.ABT
          ):
        Verify that transmission was aborted and PduR_FrTpTxConfirmation was called
        with PduId 2 and result E_NOT_OK.
    05: Execute some more flexray cycles
    06: Verify that the module has not called any stub functions.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_ABORT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Seg.ABT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0038.Ack.Send</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_TIMEOUT_BS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>685</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify transmission abortion after BS timeout.
  
Test Object: 
    BS timeout
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Start transmission of 400 bytes on TxSduId of Connection_2.
    02: Proceed until FC CFEOB was transmitted and confirmed.
        Stop automatic indication of FC frames.
    03: VP(FRTP1099_Bs):
        Elapse BS-1 cycles and verify PduR_FrTpTxConfirmation was not yet called.
    04: Indicate FC Wait.
    05: Check if BS timer is restarted. Elapse BS-1 cycles and verify PduR_FrTpTxConfirmation
        was not yet called.
    05b: Verify that WAIT frame with too short SduLength is ignored. This is verified by the
         timeout in step 07.
    06: Proceed one more flexray cycle to elapse BS timeout
    07: VP(FRTP1099_Bs, FRTP1100_Bs, FrTp.ISO10681_NotificationResults.C_TIMEOUT_Bs):
        Verify PduR_FrTpTxConfirmation was called with DestPdu_0 of RoutingPath_5 and E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FRTP1100_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.CheckSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_FC_WAIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>790</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify correct handling of FC WAIT frame.
  
Test Object: 
    Handling of FC WAIT frame
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Start transmission of 400 bytes on TxSduId of Connection_2
    02: Continue transmission until end of 2nd block. Disable automatic indication of CTS frames.
    03: Proceed and indicate FC WAIT frames. Elapsed time between consecutive FC WAIT frames is
        BS - 1(the maximum wait time which does not cause a timeout).
    04: VP(FrTp.ISO10681_0064, FRTP1099_Bs):
        Verify no BS timeout occurred (which would cause PduR notification).
    05: Indicate CTS frame and enable automatic CTS indication.
    06: VP(FRTP1099_Bs):
        Verify transmission is correctly resumed.
    07: Finish transmission
    08: VP(FRTP1099_Bs):
        Verify transmission finishes successfully and module calls
        PduR_FrTpTxConfirmation with DestPdu_0 of RoutingPath_5 and E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Seg.WT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>TS_FRTP_BANDWITH_CONTROL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>903</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that sender respects bandwidth control parameter of FC CTS frame. Start a
    segmented transmission and indicate CTS frames with different BC parameters. Verify that
    separation cycles and maximum number of PDUs per cycle are respected.
  
Test Object: 
    Bandwidth Control
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start transmission of 150 bytes on TxSduId of Connection_0
    02: Proceed until indication of CTS frame (no bandwidth control
    03: VP(FrTp.ISO10681_0032.NoBandWidthControl):
        Verify consecutive frames are transmitted in subsequent main function call
        on all available Pdus. This verifies MNPC parameter (maximum number of PDUs
        per cycle).
    04: Proceed one main function tick.
    05: VP(FrTp.ISO10681_0032.SCexp):
        Verify transmission is continued after 1 main function tick. This verifies
        SCexp (separation cycle exponent) parameter.
    06: Indicate CTS frame with SCexp=7, MNPC=4
    07: VP(FrTp.ISO10681_0032.MNPC):
        Verify MNPC parameter.
    08: VP:
        Proceed 127 main function ticks. Verify no frame was sent.
    09: VP(FrTp.ISO10681_0032.SCexp):
        Proceed one more tick. Verify SCexp parameter.
    10: Indicate CTS frame with SCexp=2, MNPC=1
    11: VP(FrTp.ISO10681.SeparationTime):
        Proceed another main function tick. Check that CF was sent.
    12: VP(FrTp.ISO10681_0032.MNPC):
        Verify MNPC parameter. Only PduR will be called.
    13: VP:
        Proceed 3 main function ticks. Verify no frame was sent.
    14: VP(FrTp.ISO10681_0032.SCexp):
        Proceed one more tick. Verify SCexp parameter.
    15: Finish transmission
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0032.MNPC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0032.SCexp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0032.NoBandWidthControl</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681.SeparationTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FRTP1175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_TIMEOUT_AS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1120</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify transmission abortion after AS timeout.
  
Test Object: 
    AS timeout
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Start transmission of 400 bytes on TxSduId of Connection_2.
    02: Proceed until STFA frame was transmitted. No TxConfirmation will be called.
    03: VP(FRTP1099_As, FRTP1100_As):
        Elapse AS-1 main function ticks and verify nothing happened (timeout did not yet occur).
    04: Elapse another main function tick.
    05: VP(FRTP1099_As, FRTP1100_As, FrTp.ISO10681_NotificationResults.C_TIMEOUT_As)
        Verify PduR_FrTpTxConfirmation was called on DestPdu_0 of RoutingPath_5
        and E_NOT_OK
    06: Elapse another main function tick.
    07: VP(FRTP1099_As):
        No other functions are called.
    08: Retry the transmission of 400 bytes on TxSduId of Connection_2
    09: VP(FRTP1099_As):
        FrTp_Transmit() returns E_OK, channel is no longer occupied by the previous transmission
    10: VP(FRTP1099_As):
        FrTp_Transmit() does not report to Det
        (FRTP_E_NO_CHANNEL would be reported in case channel was still occupied)
    11: Elapse another main function tick.
    12: VP(FRTP1099_As)
        Transmission is started correctly.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1099_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FRTP1100_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>TS_FRTP_TX_REQUEST</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1245</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify transmission request is only accepted if PduId is valid and channel is available.
  
Test Object: 
    Transmission request
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: VP(FRTP1039):
        Request transmission of 150 bytes on TxSduId of Connection_0. FrTp_Transmit returns E_OK.
    02: VP(FRTP149):
        Request transmission of 150 bytes on PduId that is not configured.
        FrTp_Transmit returns E_NOT_OK.
    03: VP:
        Elapse one main function tick. Verify FrIf_Transmit is called with PduId 1.
        (First free Pdu since STFA frame does not fit into Pdu 0).
    04: VP(FRTP149):
        Request transmission of 77 bytes on TxSduId of Connection_0 (not available).
        FrTp_Transmit returns E_NOT_OK.
    05: Call FrTp_TriggerTransmit. Verify STFA frame is transmitted indicating a total message
        length of 150 bytes.
    06: Finish transmission.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>FRTP149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>TS_FRTP_TX_SDU_AVAILABLE1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1343</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test reuse of channel and internal state variables
  
Test Object: 
    Transmission request
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Call FrTp_Transmit to start a new unsegmented transmission
        (2 bytes on Connection_0, this will fit into 1 frame).
        This will set the TX_SDU_AVAILABLE flag.
    02: VP(FRTP1042):
        Proceed one main function tick. Verify PduR_FrTpCopyTxData is called (this verifies
        that TX_SDU_AVAILABLE flag is set).
    03: VP(FRTP416, FRTP1057):
        Make another call to FrTp_Transmit with the same PduId. Verify FrTp_Transmit
        returns E_NOT_OK.
    04: Call FrTp_TriggerTransmit to transmit frame.
    05: VP(FRTP416, FRTP1057):
        Make another call to FrTp_Transmit with the same PduId. Verify FrTp_Transmit
        returns E_NOT_OK.
    06: Confirm transmitted frame
    07: VP(FRTP416, FRTP1057):
        Make another call to FrTp_Transmit with the same PduId. Verify FrTp_Transmit
        returns E_NOT_OK.
    08: Indicate reception of FC ACK_RET frame. This will finally reset the TX_SDU_AVAILABLE flag
    09: VP(FRTP1057):
        Make another call to FrTp_Transmit with the same PduId. Verify FrTp_Transmit returns E_OK
    10: Finish transmission
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>FRTP1057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>FRTP1042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>TS_FRTP_TXPDUPENDINGCOUNTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test reuse of channel and internal state variables
  
Test Object: 
    Transmission request
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: FrIf_Transmit() shall return E_NOT_OK.
    02: Call FrTp_Transmit on SduId of Connection_0 and Connection_2 to start a new transmission.
    03: Elapse two MainFunction tick and check that module has retried with two calls to
        FrIf_Transmit()(one for each connection) after each Mainfunction invocation.
    04: FrIf_Transmit() shall return E_OK.
    05: Proceed until CF frames have been transmitted but TxPdu_3 and TxPdu_2
        belonging to SduId of Connection_0 and Connection_2 are not confirmed. More frames could
        be sent in the next cycles, no flow control is expected.
    05b: VP(FrTp.EB.CheckSduLength):
         During step 05 when CTS frames are expected indicate one with SduLength which
         is too short. Verify that the frame is ignored.
    05c: VP(FrTp.EB.CheckSduLength):
         As above but indicate ABORT frame which should be ignored
    05d: VP(FrTp.EB.CheckSduLength):
         As above but indicate OVERFLOW frame which should be ignored
    06: VP(FRTP1091, FRTP1095):
        Call FrTp_MainFunction. Verify that no data frames are transmitted.
    07: Confirm TxPdu_3 of Connection_0.
    08: VP(FRTP1054, FRTP1090, FRTP1092, FRTP1094, FRTP1095, FRTP.FrTpTxConTxPduPendingCounter):
        Call FrTp_MainFunction. Verify that remaining data frames of Connection_0
        are transmitted (TxPdu_3 and TxPdu_0) and PduR is notified. No frames of
        Connection_2 are transmitted.
    08b: VP(FrTp.EB.CheckSduLength):
         While connection is waiting for FC ACK indicate FC ACK frames with SduLength
         which is too short and verify they are ignored.
    09: Confirm TxPdu_2 of Connection_2.
    10: VP(FRTP1092, FRTP1094, Autosar_R20-11.ECUC_FrTp_00010, Autosar_R20-11.ECUC_FrTp_00021):
        Call FrTpMainFunction. Verify that remaining data
        frames of SduId 2 are transmitted (PduId 0 and 1) with correct source and target
        addresses and PduR is notified.
    11: VP(FRTP_COUNTER_FRIF_4):
        Verify if module recovered from error and finishes the transmission.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>FRTP1090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>FRTP1091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>FRTP1092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>FRTP1094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>FRTP1095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>FRTP.FrTpTxConTxPduPendingCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.ECUC_FrTp_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>Autosar_R20-11.ECUC_FrTp_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.CheckSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>TB_FRTP_INVALID_FS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1696</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test reception of flow control frame with invalid flow status value
  
Test Object: 
    Handling of invalid flow control frame
  
Test Precondition: 
  
Test Execution: 
    01: Loop over steps 02-04 for all input data in 03
    02: Start transmission and proceed until flow control frame is expected.
    03: Indicate reception of FC frame with invalid flow status value from input section
    04: VP(FrTp.ISO10681_0051):
        Verify PduR_FrTpRxIndication is called with E_NOT_OK
  
Test Input: 
    03: 0-2, 8-15
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_REINIT_TC</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1776</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify transmission is completely aborted after reinitialization i.e. no TxConfirmation
    tries to access outdated runtime data. This test requires the bounds check gcc to be enabled,
    otherwise the illegal access will not be detected and the test will succeed.
  
Test Object: 
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Start transmission of 400 bytes on PduId for Connection_2.
    02: Proceed until STFA frame was transmitted. No TxConfirmation will be called.
    03: Abort the transmission by calling FrTp_Init()
    04: Elapse another main function tick.
    05: Produce an unexpected TxConfirmation
    06: Execute a few more cycles
    07: VP(FRTP1035):
        The transmission was correctly aborted, no other functions called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>TS_FRTP_TX_MULTIPLE_RECEIVER_CON1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1850</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FRTP_MULTIPLE_RECEIVER_CON and the largest PDU of the pool is not available,
    the data frame is not transmitted until the PDU is available.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start transmission of 80 bytes on PduId for Connection_3.
    02: Elapse a MainFunction tick.
    03: Check if FrIf_Transmit() is called.
    04: Call FrTp_TriggerTransmit() for the message sent in STF.
    05: Start another transmission of 80 bytes on PduId for Connection_1.
    06: VP(FrTp.ISO10681_FunctionalAdressing):
        Elapse a MF tick and check that the STF for second transmission is sent as the PDU of
        sufficient size was available.
    07: Confirm the STF sent and check for PduR notification with result E_OK.
    08: Complete the first transmission.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_FunctionalAdressing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>TS_FRTP_TX_MULTIPLE_RECEIVER_CON</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>1962</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a message that does not fit into a single frame is not sent
    and DET is reported if configuration
    parameter FRTP_MULTIPLE_RECEIVER_CON is set for this connection.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
    FRTP_MULTIPLE_RECEIVER_CON is set on FrTpConnection_1 (FrTpTxSduId = 1)
    Maximum payload length of any TX PDU assigned to FrTpConnection_1 is 128 bytes
  
Test Execution: 
    01: Try to start transmission of 129 bytes on PduId for Connection_1
    02  VP(FRTP1045_2, FRTP1187, FRTP1111.FRTP_E_SEG_ERROR, FrTp.ISO10681_FunctionalAdressing):
        FrTp refuses the transmission and reports to Det
    03: Execute 20 FlexRay cycles
    04  VP(FRTP1045_2, FRTP1187):
        No timeout is occurs, no other functions are called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_SEG_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_FunctionalAdressing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>TS_FRTP_FRIFTRANSMIT_NOT_OK1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2035</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify module retries to call FrIf_Transmit in case transmission request is rejected for SF
    and finally aborts transmission if counter FrTpMaxFrIf has been reached.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Initialize stubs.
    02: FrIf_Transmit() shall return E_NOT_OK.
    03: Start transmission of 200 bytes on PduIds in the input.
    04: Loop steps 05 and 06 FrTpMaxFrIf times in the input.
    05: Call FrTp_MainFunction().
    06: VP(FRTP_COUNTER_FRIF_1):
        Check whether FrIf_Transmit is called.
    07: VP(FRTP_COUNTER_FRIF_2):
        Check whether transmission is aborted.
  
Test Input: 
    03: FrTpConf_FrTpConnection_0_FrTpTxSdu and
        FrTpConf_FrTpConnection_2_FrTpTxSdu
    04: 4 and 3.
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>TS_FRTP_FRIFTRANSMIT_NOT_OK2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify module retries to call FrIf_Transmit in case transmission request is rejected after the
    first CF of the block has been sent and finally aborts transmission if counter FrTpMaxFrIf has
    been reached.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Initialize stubs.
    02: Start transmission of 150 bytes on PduId 2.
    03: FrIf_Transmit() shall return E_NOT_OK after sending the
        first CF.
    04: Call FrTp_MainFunction() FrTpMaxFrIf (3 for this channel) times..
    05: VP(FRTP_COUNTER_FRIF_1):
        Check whether FrIf_Transmit is called on each Mainfunction call.
    06: VP(FRTP_COUNTER_FRIF_2):
        Check whether transmission is aborted.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>FRTP_COUNTER_FRIF_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
    <specobject>
      <id>TS_FRTP_TX_REUSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2228</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a channel can be reused as soon as the previous connection was correctly finished.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start segmented transmission on PduId for Connection_0
    02: VP(FRTP1041)
        Try to start another segmented transmission on PduId for Connection_0
        Verify FrTp_Transmit returns E_NOT_OK
    03: Proceed transmission until CF frame was sent and confirmed.
    04: VP(FRTP1056)
        Try to start a transmission and check that E_NOT_OK is returned, channel is not freed.
    05: Proceed transmission of LF, not confirmed.
    06: VP(FRTP1056)
        Try to start a transmission and check that E_NOT_OK is returned, channel is not freed.
    07: Confirm the LF.
    08: VP(FRTP1041)
        Try to start another segmented transmission on PduId for Connection_0
        Verify FrTp_Transmit returns E_NOT_OK
    09: Indicate reception of FC ACK.
    10: Start another segmented transmission on PduId for Connection_0
    11: VP(FRTP1056)
        Verify FrTp_Transmit returns E_OK
    12: VP(FRTP1056)
        Finish transmission successfully. Verify correct data was transmitted and
        PduR_FrTpTxConfirmation was called with result E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FRTP1056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_BFS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2403</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To check the importance of BFS (in received CTS) value in CF transmission .
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Transmit Pdu for Connection_0 with length 64 bytes.
    02: Elapse a MainFunction tick.
    03: VP:
        Check whether STF is transmitted.
    04: Indicate the reception of CTS frame with buffer size 40.
    05: VP(FrTp.ISO10681_0031):
        Check whether 40 bytes of data is sent.
    06: Confirm sent CF frames.
    07: Indicate reception of CTS frame with buffer size 30.
    08: Elapse a MainFunction tick.
    09: VP(FrTp.ISO10681_0031):
        Check whether remaining 14 bytes of data is sent.
    10: Confirm sent CF frames.
    11: Indicate the reception of ACK frame.
    12: VP:
        Check PduR notification with E_OK.
  
Test Input: 
  
Test Output: 
    Data transmitted in each block should be &lt;= BFS
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_DIFF_CTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2543</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check the dependency of number of transmitted data and buffer size in received CTS.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Transmit Pdu for Connection_0 with length 80 bytes.
    02: Elapse a MainFunction tick.
    03: VP:
        Check whether STF is transmitted.
    04: Indicate the reception of CTS frame.
    05: Elapse a MainFunction tick.
    06: VP(FrTp.ISO10681_0030a, FrTp.ISO10681_0063):
        Check whether the number of data transmitted is as per buffer size in CTS.
    07: Confirm sent CF frames.
    08: Repeat steps 04 to 07 with different buffer sizes.
    09: Indicate the reception of ACK frame.
    10: VP:
        Check PduR notification with E_OK.
  
Test Input: 
    04: Buffer Size = 40, 12, 1, 6, 3, 10
  
Test Output: 
    Data transmitted in each block should be equal to the buffer size in received CTS
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0030a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_LARGE_BFS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2734</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check whether all data are transmitted without waiting for CTS when BFS &gt; ML and BFS =0.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Loop over steps 02 to 13 3 times for bfs values specified in input section
    02: Transmit Pdu for Connection_0 with length 80 bytes.
    03: Elapse a MainFunction tick.
    04: VP:
        Check whether STF is transmitted.
    05: Indicate the reception of CTS frame with buffer size in input section.
    06: Elapse a MainFunction tick.
    07: Check whether, maximum possible no: of data get transmitted
    08: Confirm sent CF frames.
    09: Elapse a MainFunction tick.
    10: VP(FrTp.ISO10681_0030b, FrTp.ISO10681_0031.BfS0):
        Check whether rest of the data are get transmitted without reception of any CTS
    11: Confirm sent CF frames.
    12: Indicate the reception of ACK frame.
    13: VP:
        Check PduR notification with E_OK.
  
Test Input: 
   01:05: 90
          0
          260
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0030b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0031.BfS0_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TRANSMIT_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>2893</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To check new transmission request for a NPdu is ignored and FrTp_Transmit returns E_NOT_OK, if
     there is an ongoing transmission of the same NPdu.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Initialize.
    02: Start a transmission of 100 bytes on PduId 0 with 10 bytes payload on STF.
    03: Check and confirm the STF sent.
    04: Start another transmission on same PduId.
    05: VP(FrTp.ASR40.Transmit.E_NOT_OK2, FRTP1041):
        Check if request is ignored E_NOT_OK is returned.
    06: VP(FRTP1185, FRTP1111.FRTP_E_NO_CHANNEL):
        Check if Det error FRTP_E_NO_CHANNEL is reported.
    07: VP(FrTp.ASR40.Transmit.Session):
        Check if PduR_FrTpTxConfirmation is not called.
    08: Simulate reception of FC ABT.
    09: VP(FrTp.ASR40.Transmit.Session, FrTp.ISO10681_0024.Seg.ABT):
        Check if PduR_FrTpTxConfirmation is called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.Transmit.E_NOT_OK2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.Transmit.Session</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
        <provcov>
          <linksto>FRTP1041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FRTP1185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>FRTP1111.FRTP_E_NO_CHANNEL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Seg.ABT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>EB_FRTP_COPYTXDATA_FRAME_BFS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3012</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks whether the frames CF/CFEOB/LF are sent according to the BFS.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Transmit Pdu 0 with length 80 bytes.
    02: Elapse a MainFunction tick.
    03: VP: Check whether STF is transmitted.
    04: Indicate the reception of CTS frame with Bfs 48.
    05: Elapse a MainFunction tick.
    06: VP(FrTp.ASR40.TxCF):
        Check whether CFs are sent until bytes copied is less than Bfs.
    07: VP(FrTp.ASR40.TxCFEOB):
        Check if CFEOB is sent when bytes copied is equal to Bfs.
    08: Confirm sent CF frames.
    09: Indicate the reception of CTS frame with Bfs 24.
    10: Transmit next CFs.
    11: VP(FrTp.ASR40.TxLF):
        Check whether LF is sent when bytes copied is equal to message length.
    12: Confirm sent CF frames.
    13: Indicate the reception of ACK frame.
    14: Check whether the transmission is successful and PduR notification with E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.TxCF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxCFEOB</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxLF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RETRY_DATACONF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3198</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks whether RetryInfoPtr is set with TpDataState TP_DATACONF only for the
     first CF/CFEOB/LF after the reception of FC CTS.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Transmit Pdu 0 with length 81 bytes.
    02: Elapse a MainFunction tick.
    03: VP: Check whether STF is transmitted.
    04: Indicate the reception of CTS frame with Bfs 48.
    05: Elapse a MainFunction tick.
    06: VP(FrTp.ASR40.TxDATACONF, FrTp.EB.TxRetry_3):
        Check whether 3 CFs and a CFEOB were sent.
        Verify that TpDataState = TP_DATACONF was set only for the first CF sent after the CTS was received.
    07: VP(FrTp.EB.TxRetry_2):
        Check whether TpDataState = TP_CONFPENDING was set for the second CF of the block.
    08: VP(FrTp.EB.TxRetry_2):
        Check whether TpDataState = TP_CONFPENDING was set for the third CF of the block.
    09: VP(FrTp.EB.TxRetry_2):
        Check whether TpDataState = TP_CONFPENDING was set for the CFEOB of the block.
    10: Confirm sent CF frames.
    11: Indicate the reception of CTS frame with Bfs 22.
    12: Transmit next CFs.
    13: Confirm sent CF frames.
    14: Indicate reception of CTS with Bfs of 2.
    15: VP(FrTp.ASR40.TxDATACONF):
        Check whether CFEOB is sent and verify that TpDataState = TP_DATACONF is set for this frame.
    16: Confirm the CFEOB frame sent.
    17: Indicate reception of CTS requesting remaining 1 byte.
    18: VP(FrTp.EB.NO_CFEOB):
        Check whether the CF and an empty LF were sent.
    19: Confirm sent frames.
    20: Indicate the reception of ACK frame.
    21: Check whether the transmission is successful and PduR notification with E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.TxDATACONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.NO_CFEOB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TxRetry_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TxRetry_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>EB_FRTP_MIN_ML_PDUL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3438</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks whether PduInfoPtr-&gt;SduLength, in the call to PduR_FrTpCopyTxData,
     is set to ML if ML is lesser than the Pdu length.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Transmit Pdu 0 with length 7 bytes.
    02: Elapse a MainFunction tick.
    03: Check whether STFA frame is transmitted.
    04: VP(FrTp.ASR40.TxSTF_1):
        Check for the call of PduR_FrTpCopyTxData with PduInfoPtr-&gt;SduLength set to ML.
    05: Confirm the STFA frame sent and indicate ACK frame.
    06: Check whether the transmission is successful and PduR notification with E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.TxSTF_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>EB_FRTP_COPYTXDATAREQUEST_NOT_OK1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3523</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks whether the transfer is aborted if PduR_FrTpCopyTxData returns BUFREQ_E_NOT_OK
     if called to copy the payload.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Transmit Pdu 0 with length 80 bytes.
    02: Elapse a MainFunction tick.
    03: PduR_FrTpCopyTxData() shall return values other than BUFREQ_OK and BUFREQ_E_BUSY
        for the payload copy request.
    04: VP(FRTP154):
        Call FrTp_TriggerTransmit for STF and check whether PduR_FrTpCopyTxData is called.
        FrTp_TriggerTransmit returns E_NOT_OK.
    05: VP(FRTP1162):
        Check whether the transmission is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FRTP154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>EB_FRTP_COPYTXDATAREQUEST_NOT_OK2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3627</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks whether the transfer is aborted if PduR_FrTpCopyTxData returns BUFREQ_E_NOT_OK
     if called to get the length information for a STF.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Transmit Pdu 0 with length 80 bytes.
    02: PduR_FrTpCopyTxData() shall return BUFREQ_E_NOT_OK.
    03: Elapse a MainFunction tick.
    04: Check if PduR_FrTpCopyTxData() is called.
    05: VP(FRTP1042_2, FRTP1162):
        Check whether the transmission is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1042_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>FRTP1162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>EB_FRTP_COPYTXDATAREQUEST_NOT_OK3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3707</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks whether the transfer is aborted if PduR_FrTpCopyTxData returns BUFREQ_E_NOT_OK
     if called to get the length information for a CF.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Transmit Pdu 0 with length 80 bytes.
    02: Elapse a MainFunction tick.
    03: Call FrTp_TriggerTransmit for STF and confirm it.
    04: Simulate reception of FC CTS.
    05: PduR_FrTpCopyTxData() shall return BUFREQ_E_NOT_OK.
    06: Elapse a MF tick and check if PduR_FrTpCopyTxData() is called.
    07: VP(FRTP1042_2):
        Check whether the transmission is aborted and PduR is notified with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1042_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_CONCURRENT_ERROR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3799</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks whether different errors reported by two concurrent transmissions are handled
    correctly by the FrTp module.
  
Test Object: 
    FrTp_TriggerTransmit
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start 2 concurrent transmissions. FrTp_Transmit returns E_OK.
    02: Proceed until LF of Connection 0 has been transmitted and confirmed.
    03: Stop automatic indication of FC frames on Connection 0.
    04: Simulate BS timeout (i.e. 12 cycles) while waiting for FC ACK for Connection 0.
    05: VP(FrTp.EB.ConcurrentErrorHandling, FrTp.ISO10681_NotificationResults.C_TIMEOUT_Bs):
        Verify PduR notification (PduR_FrTpTxConfirmation) for Connection 0 with result,
        E_NOT_OK.
    06: Stop automatic indication of FC frames on Connection 2.
    07: Proceed until CFEOB of Connection 2 has been transmitted.
    08: Simulate AS timeout (i.e. 8 cycles) while waiting for confirmation of CFEOB sent on
        Connection 2.
    09: VP(FrTp.EB.ConcurrentErrorHandling,FrTp.ISO10681_NotificationResults.C_TIMEOUT_As):
        Verify if PduR_FrTpTxConfirmation was called for Connection 2 and E_NOT_OK.
  
Test Input: 
    01: TxPduId: 0, SduLength: 150 (segmented)
        TxPduId: 2, SduLength: 400 (segmented)
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.ConcurrentErrorHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_Bs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>EB_FRTP_SEG_MSG_NO_CF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>3925</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that no CF is sent if the remaining message fits into LF.
  
Test Object: 
    FrTp_TriggerTransmit
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start a transmission of 100 bytes on Connection 3.
    02: Elapse main function tick and check if STF is sent.
    03: Confirm the STF sent.
    04: Indicate reception of CTS.
    05: VP(FrTp.ISO10681.Segmentation):
        Elapse a MF tick and check if LF is sent.
    06: VP(FrTp.ASR40.TxDATACONF):
        Check if the Retry state is set to TP_DATACONF for the LF.
    07: Indicate ACK frame.
    08: Verify PduR notification for segmented transfer.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxDATACONF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>EB_FRTP_ERROR_PRIORITY_TX_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4025</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that E_NOT_OK is reported prior to E_NOT_OK, in case a RETRY frame
    is received with invalid flow status and invalid BP.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start transmission and proceed until flow control frame is expected.
    02: Indicate reception of FC CTS frame.
    03: Elapse a MF tick and continue until CFEOB of the block is sent and confirmed.
    04: Simulate reception of FC RET with wrong BP and wrong FS.
    05: VP(FrTp.ISO10681_NotificationResults.Priority):
        Verify PduR_FrTpTxConfirmation is called with E_NOT_OK, is reported prior to
        E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.Priority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>EB_FRTP_COPYTXDATA_ERROR</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4123</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To check the behavior when PduR_FrTpCopyTxData returns BUFREQ_E_NOT_OK while
     receiving CF.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    Loop steps 01 to 12 for different PduR return values.
    01: Transmit Pdu for Connection_0 with length 64 bytes.
    02: Elapse a MainFunction tick.
    03: VP: Check whether STF is transmitted.
    04: Indicate the reception of CTS frame with buffer size 40.
    05: Call FrTp_TriggerTransmit for first CF and verify that it returned E_OK.
    06: Set the return value of PduR_FrTpCopyTxData call for second CF as in input and
        call FrTp_TriggerTransmit for second CF and verify that it returned E_NOT_OK
    07: Expire one MainFunction cycle
    08: VP(FrTp.ASR40.CopyTxData_Error):
        Verify that PduR_FrTpTxConfirmation is not get called
    09: Call FrTp_TriggerTransmit for the remaining Pdus and verify that the calls are not
        accepted
    10: Confirm the transmitted frame.
    11: Expire one schedule cycle
    12: VP(FrTp.ASR40.CopyTxData_Error):
         Check PduR notification with E_NOT_OK.
  
Test Input: 
    06: a)BUFREQ_E_NOT_OK
        b)0x55U
        c)0xAAU
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.CopyTxData_Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>EB_FRTP_RETRY_FREE_TXPDU</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that modlue retries in the next mainfuction invocation if a free PDU of sufficient size
    for the frame is not available.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start transmission of 7 bytes on PduId 4.
    02: VP(FRTP1045_1):
        Elapse a MF tick and check if STF is sent in FrTpTxPdu_1 of FrTpTxPduPool_2, with 1 byte
        payload.
    03: Start another transmission of 7 bytes on PduId 5.
    04: Elapse a MF tick.
    05: VP(FRTP1045_1):
        Check that STF is not sent because free Pdu to hold the size of STF is not available.
    06: Elapse some MF ticks. Check that STF is not sent.
    07: Confirm the STF of first connection.
    08: VP(FRTP1045_2):
        Elapse a MF tick and check that STF of the second connection is sent with 1 byte payload.
        Confirm STF.
    09: Indicate CTS of first transmission with 10 bytes BFS.
    10: Elapse a MF tick and check that CFs are sent.
    11: Confirm the CFs sent.
    12: VP(FRTP1045_1):
        Elapse a MF tick and check that LF is sent in the second PDU since the first PDU is of
        insufficient size for LF.
    13: Indicate CTS of second transmission with 3 bytes.
    14: Elapse a MF tick and check that first CF is sent on PDU 0.
    15: VP(FRTP1045_1):
        Confirm the first CF on PDU 1. Elapse a MF tick and check that CFEOB is sent.
    16: Indicate CTS for remaining data.
    17: Elapse a MF tick and check that CF is sent.
    18: Elapse a MF tick LF is not sent.
    19: Confirm all the pending transmissions. Elapse a MF tick.
    20: VP(FRTP1045_1):
        Check if LF is sent on PDU 2, which is of sufficient size for LF.
    21: Indicate ACK and finish both the transmissions.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1045_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>FRTP1045_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TRIGGER_TRANSMIT_NOTOK_STF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4492</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that the call of FrTp_TriggerTransmit returns E_NOT_OK if the requested data of the STF
    was not copied by the upper layer.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start transmission of 50 bytes on PduId 0.
    02: Elapse a MF tick and check if transmission of STF is requested.
    03: PduR_FrTpCopyTxData shall return BUFREQ_E_BUSY.
    04: Call FrTp_TriggerTransmit for STF requested.
    05: VP(FRTP1060_2):
        Check that it returned E_NOT_OK.
    06: Check if transmission is aborted and PduR is notified.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1060_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TRIGGER_TRANSMIT_NOTOK_CF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4571</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that the call of FrTp_TriggerTransmit returns E_NOT_OK if the requested data of the CF
    was not copied by the upper layer.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start transmission of 50 bytes on PduId 0.
    02: Continue until FrTp_TriggerTransmit has to be called for CFEOB of the block.
    03: PduR_FrTpCopyTxData shall return BUFREQ_E_NOT_OK.
    04: Call FrTp_TriggerTransmit for CFEOB.
    05: VP(FRTP1060_2):
        Check that it returned E_NOT_OK.
    06: Elapse some MF ticks and check that PduR is not notified.
    07: Confirm the first two CFs that were successfully sent.
    08: Check if PduR is not notified.
    09: Confirm the last CF that was successfully sent.
    10: VP(FrTp.EB.TxPduPendingCounter):
        Check that PduR is notifed of the failed transmission.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1060_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TxPduPendingCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>EB_FRTP_STF_RETRY</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4698</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the behavior when retry with BP 0 is received for STF.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Transmit Pdu for Connection_0 with length 8 bytes.
    02: Elaspe a MF tick and check if STF is sent, confirm it.
    03: Indicate reception of FC RETRY frame with BP 0.
    04: Elapse a MF tick.
    05: VP(FrTp.ISO10681_0024.STFA.ACK_RET.1, FrTp.ISO10681_0024.STFA.ACK_RET.5):
        Check if STF is transmitted again.
    06: Indicate ACK frame.
    07: Check PduR notification with E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0024.STFA.ACK_RET.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.STFA.ACK_RET.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>EB_FRTP_STF_ZEROBUFFSIZE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4791</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the behavior when buffer size returned from PduR is 0 for STF.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    Loop the steps 01 to 07 for all available connections.
    01: Transmit Pdu with length 64 bytes.
    02: Prepare PduR to return available buffer size as 0.
    03: Elapse a MF tick and check that PduR_FrTpCopyTxData is called.
    04: VP(FRTP402_EB, FRTP1042):
        Verify that FrIf_Transmit is not called.
    05: VP(FRTP1042_3):
        Elapse MF ticks till FrtpMaxBufReq is exceeded and check that PduR_FrTpCopyTxData is called.
    06: VP(FrTp.EB.FrTpMaxBufReq):
        Check PduR notification with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP402_EB</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
        <provcov>
          <linksto>FRTP1042_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>FRTP1042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FrTpMaxBufReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>EB_FRTP_CF_ZEROBUFFSIZE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>4903</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the behavior when buffer size returned from PduR is BUFREQ_E_BUSY, when PduR_FrTpCopyTxData
    is called to get length information during transmission of CF.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Transmit Pdu with length 64 bytes.
    02: Elapse a MF tick, call FrTp_TriggerTransmit for STF and confirm it.
    03: Indicate FC CTS.
    04: Prepare PduR to return BUFREQ_E_BUSY.
    05: Elapse a MF tick and check that PduR_FrTpCopyTxData is called.
    06: VP(FRTP402_EB):
        Verify that FrIf_Transmit is not called.
    07: VP(FRTP1042_3):
        Elapse MF ticks till FrTpMaxBufReq is exceeded.
    08: VP(FrTp.EB.FrTpMaxBufReq):
        Check PduR notification with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP402_EB</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
        <provcov>
          <linksto>FRTP1042_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FrTpMaxBufReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>EB_FRTP_BROADCAST_BUFFERINSUFFICIENT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5016</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test checks that when the buffer size returned from PduR is not enough for a broadcast
    transmission (an unsegmented transmission) and the PDU of sufficient size is available, the
    module shall retry for the buffer until FrTpMaxBufReq and the transmission is resumed if the
    buffer is available otherwise transmission is aborted.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Transmit Pdu with length 120 bytes on Connection 1. Check that it returns E_OK.
    02: Prepare PduR to return available buffer size as 119 bytes.
    03: Elapse a MF tick and check that PduR_FrTpCopyTxData is called. Check if FrIf_Transmit is not
        called.
    04: VP(FRTP402_EB.Broadcast):
        Elapse MF ticks before FrTpMaxBufReq exceeds and check that PduR_FrTpTxConfirmation is not
        called.
    05: Elapse a MF tick.
    06: VP(FrTp.EB.FrTpMaxBufReq):
        Check that transmission is aborted and PduR is notified with E_NOT_OK.
    07: Start another transmission of 120 bytes on Connection 1. Check that connection is accepted.
    08: Elapse a MF tick and check that PduR_FrTpCopyTxData is called and FrIf_Transmit is not
        called.
    09: Elapse MF ticks before FrTpMaxBufReq is exceeded.
    10: Prepare PduR to provide the enough buffer.
    11: Elapse a MF tick and check if FrIf_Transmit is called.
    12: Trigger transmit the STF sent and confirm it.
    13: Indicate ACK frame.
    14: Check if transmission is completed and PduR is notified of successful transmission.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP402_EB.Broadcast</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.FrTpMaxBufReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
    <specobject>
      <id>EB_FRTP_STF_BWLIMITATION_1To1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that the STF for 1:1 connection is always sent on the first largest PDU of the pool if
    Bandwidth Limitation for the channel is enabled.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission of 50 bytes on Connection 2.
    02: Elapse a MF tick and check that STF is sent on FrTpTxPdu_2. Do not confirm it.
    03: Start another transmission of 50 bytes on Connection 0.
    04: Elapse few MF ticks and check that the STF is not sent.
    05: Confirm the STF of first transmission.
    06: VP(FRTP1174):
        Elapse a MF tick and check that the STF of second transmission is sent.
    07: Finish both the transmissions.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>EB_FRTP_STF_BWLIMITATION_1ToN</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5307</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the the STF for 1:n connection is always sent on the first largest PDU of the pool if
    Bandwidth Limitation for the channel is enabled.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission of 50 bytes on Connection 3.
    02: Elapse a MF tick and check that STF is sent on FrTpTxPdu_1. Do not confirm it.
    03: Start another transmission of 50 bytes on Connection 1.
    04: Elapse few MF ticks and check that the STF is not sent.
    05: Confirm the STF of first transmission.
    06: VP(FRTP1174):
        Elapse a MF tick and check that the STF of second transmission is sent.
    07: Finish both the transmissions.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
    <specobject>
      <id>EB_FRTP_E_NO_BUFFER</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5425</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the behavior when an OVFLW frame is received after STF transmission
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Transmit Pdu for Connection_0 with length 80 bytes.
    02: Elapse a MainFunction tick.
    03: VP: Check whether STF is transmitted and confirm the frame.
    04: Indicate the reception of FC_OVFLW frame.
    05: VP(FrTp.ISO10681_NotificationResults.C_BUFFER_OVFLW, FrTp.ISO10681_0024.Seg.OVFLW):
        Check PduR notification with E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_BUFFER_OVFLW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0024.Seg.OVFLW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>EB_FRTP_STF_UNSEG_ZEROBUFFSIZE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5513</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that the transmission is stalled because no data is available but later data is finally transmitted
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Transmit Pdu for Connection_1 with length 10 bytes.
    02: Prepare PduR to return BUFREQ_E_BUSY and available buffer size as 0
    03: Elapse a MainFunction tick.
    04: Verify the call to PduR_FrTpCopyTxData
    05: VP(FRTP402_EB):
        Verify that FrIf_Transmit is not called
    06: Update PduR stub to return BUFREQ_OK and enough buffer
    07: Elapse a MainFunction tick.
    08: VP(FRTP402_EB):
        Verify the call to PduR_FrTpCopyTxData and the transmit call
    09: Call trigger transmit
    10: Confirm PduId
    11: Verify PduR_FrTpTxConfirmation was called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP402_EB</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
    <specobject>
      <id>EB_FRTP_ERROR_INVALID_FS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5623</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that when frames with invalid FlowStatus and a FC ACK frame with invalid AckType are
    received the PduR is notified with result E_NOT_OK and E_NOT_OK
    is reported for a received FC RETRY frame with invalid BP.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Loop steps 02 to 06 for the invalid FlowStatus, AckType and BP as in the input.
    02: Start transmission and proceed until flow control frame is expected.
    03: Indicate reception of FC CTS frame.
    04: Elapse a MF tick and continue until CFEOB of the block is sent and confirmed.
    05: Simulate reception of invalid FC frames.
    06: VP(FrTp.ISO10681_NotificationResults.C_INVALID_FS,
           FrTp.ISO10681_NotificationResults.C_WRONG_BP
          ):
        Verify the PduR notification as in output.
  
Test Input: 
    01:
      FlowStatus    AckType        BufferPointer
                (for FC ACK_RET)  (for FC ACK_RET)
          0            0                 0
          2            0                 0
          8            0                 0
          0xF          0                 0
          ACK          2                 0
          ACK          0xFF              0
          RET          1                 0xFFFF
  
Test Output: 
    06:
      PduR is notified with result E_NOT_OK.
      PduR is notified with result E_NOT_OK.
      PduR is notified with result E_NOT_OK.
      PduR is notified with result E_NOT_OK.
      PduR is notified with result E_NOT_OK.
      PduR is notified with result E_NOT_OK.
      PduR is notified with result E_NOT_OK.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_INVALID_FS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_WRONG_BP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
    <specobject>
      <id>EB_FRTP_PDUR_DIFF_SIZES</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>5782</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the module behavior in case the PduR
    - returns different available data sizes AND
    - returns available a data size indicating a buffer underrun
    during an ongoing segmented transmission.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Prepare PduR to return a buffer size of 10 bytes.
    02: Start a transmission of 150 bytes on Connection 0.
    03: Elapse a MF tick and check that STF is sent. Confirm it.
    04: Indicate FC CTS with BFS set to 100 bytes.
    05: Elapse a MF tick.
    06: VP(FrTp.ASR40.TxCFEOB):
        Check that CF of 2 bytes is sent since the PduR had only 2 bytes to transmit.
    07: VP(FrTp.ASR40.TxCF):
        Elapse a MF tick and check that FrIf_Transmit is not called since PduR returned 0 bytes.
    08: Prepare PduR to provide buffer size of 48 bytes.
    09: VP(FrTp.ASR40.TxCF):
        Elapse a MF tick. Check if CFs are sent, confirm it.
    10: VP(FrTp.ASR40.TxCF):
        Elapse a MF tick and check that FrIf_Transmit is not called since PduR returned 0 bytes.
    11: Prepare PduR to provide a buffer size of 50 bytes.
    12: Elapse a MF tick and continue until CFEOB is sent, confirm it.
    13: Indicate FC CTS with BFS set to 50 bytes.
    14: Prepare PduR to provide buffer of 1 byte.
    15: Elapse a MF tick and check that CF of 1 byte is sent. Confirm it.
    16: VP(FrTp.ASR40.TxCF):
        Elapse a MF tick and check that FrIf_Transmit is not called since PduR returned 0 bytes.
    17: Prepare PduR to provide buffer of 41 byte.
    18: Elapse a MF tick and continue until LF is sent and confirmed.
    19: Indicate ACK frame and check that PduR is notified with E_OK.
  
Test Input: 
  
Test Output: 
        Frame      Payload (bytes)
    03: STF        8
    06: CF1(1)     2
    09: CF1(2)     2
        CF1(3)     10
        CF1(4)     10
        CF1(5)     26
    13: CF1(6)     2
        CF1(7)     10
        CF1(8)     10
        CF1(9)     26
        CFEOB(10)  2
    16: CF1(11)    1
    20: CF1(12)    2
        CF1(13)    10
        CF1(14)    10
        LF         19
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.TxCF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxCFEOB</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxPduRBufferUnderrun</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_DIFF_ML</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6062</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the transmission with maximal and minimal message lengths.
    transmission.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission with minimal message length of 1 byte, on Connection 0.
    02: Elapse a MF tick and check that STF is sent. Confirm it.
    03: Indicate ACK frame.
    04: VP(FrTp.ISO10681_0002):
        Check that PduR is notified with E_OK.
    05: Start another transmission with maximal message length of 65535 bytes, on Connection 0.
    06: Continue until LF is sent and confirmed.
    07: Indicate ACK frame.
    08: VP(FrTp.ISO10681_0002, FRTP1049):
        Check that PduR is notified with E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>TS_FRTP_BANDWITH_CONTROL_CFLF</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6205</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the sender sends the consequent CFs and LF with proper separation time.
  
Test Object: 
    Bandwith Control
  
Test Precondition: 
  
Test Execution: 
    01: Start a transmission of 110 bytes on Connection 0.
    02: Start another transmission of 110 bytes on Connection 2.
    03: Elapse a MF tick and check that STF is sent. Confirm the sent frames.
    04: Indicate CTS on Connection 0 with Bfs=20 bytes and BC set to 0x08. MNPC=1 and SCExp=0.
    05: Indicate CTS on Connection 2 with Bfs=20 bytes abd BC set to 0x0A. MNPC=1 and SCExp=2.
    06: VP(FRTP1096_EB, FrTp.ISO10681.SeparationTime):
        Elapse a MF ticks and check that CFs of Connection 0 and Connection 2 are sent correctly.
    07: Indicate CTS on Connection 0 with Bfs=40 bytes and BC set to 0x1E. MNPC=3 and SCExp=6.
    08: Indicate CTS on Connection 2 with Bfs=40 bytes and BC set to 0x1E. MNPC=3 and SCExp=6.
    09: VP(FRTP1096_EB, FrTp.ISO10681.SeparationTime):
        Elapse a MF ticks and check that two CFs of Connection 0 and two CFs of Connection 2
        were sent. Confirm Pdus.
    10: VP(FRTP1096_EB, FrTp.ISO10681.SeparationTime):
        Elapse a 63 MF ticks and check that no frames were transmitted on both the channels.
    11: VP(FRTP1096_EB, FrTp.ISO10681.SeparationTime):
        Elapse a MF tick and check that CFs of Connection 0 and Connection 2 are transmitted.
    12: Indicate CTS on Connection 0 with Bfs=42 bytes and BC set to 0xFF. MNPC=31 and SCExp=7.
    13: Indicate CTS on Connection 2 with Bfs=42 bytes and BC set to 0xFF. MNPC=31 and SCExp=0.
    14: VP(FRTP1096_EB, FrTp.ISO10681.SeparationTime):
        Elapse a MF tick and check that CFs of Connection 0 and Connection 2 are sent.
        Confirm PDUs.
    15: Elapse a MF tick and check that remaining frames of Connection 2 are sent.
    16: Indicate ACK frames for Connection 2 and finish transmission.
    17: VP(FRTP1096_EB, FrTp.ISO10681.SeparationTime):
        Elapse a 126 MF ticks and check that no frames are transmitted.
        Elapse another MF tick and check that remaining bytes of both the connections are sent.
        Confirm PDUs.
    18: Indicate ACK frames for Connection 0 and finish transmission.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681.SeparationTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FRTP1096_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>EB_FRTP_CONNCURRENT_CHANNELS_TX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6548</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the module only supports only 3 concurrent transmissions.
  
Test Object: 
    FrTpChanNum
  
Test Precondition: 
    FrTpChanNum is configured to 3.
  
Test Execution: 
    01: Start an unsegmented transmission of 5 bytes on Connection 2.
    02: VP(FRTP004_Conf):
        Check if request is accepted.
    03: Start an unsegmented transmission of 5 bytes on Connection 3.
    04: VP(FRTP004_Conf):
        Check if request is accepted.
    05: Start an unsegmented transmission of 1 byte on Connection 4.
    06: VP(FRTP004_Conf):
        Check if request is accepted.
    07: Start an unsegmented transmission of 1 byte on Connection 5.
    08: VP(FRTP004_Conf):
        Check if the request is not accepted.
    09: Finish transmission on Connection 4.
    10: Start an unsegmented transmission of 1 byte on Connection 5.
    11: VP(FRTP004_Conf):
        Check if the request is accepted.
    12: Complete transmission on all the channels.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP004_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_FC_ABORT_UNSEGM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6700</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify correct handling FC ABORT frame in unsegmented acknowledged transmission.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Start transmission of unsegmented message of 2 bytes on TxSduId of Connection_2.
    02: Elapse a MF tick and check that STF is transmitted.
    03: Elapse some MF ticks. FC ACK not received.
    04: Indicate reception of FC ABORT frame.
    05: VP(FrTp.ISO10681_0038.Ack.Send):
        Verify that transmission was aborted and PduR_FrTpTxConfirmation was called
        with PduId 2 and result E_NOT_OK.
    06: Elapse some more MF ticks.
    07: Verify that the module has not called any stub functions.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0038.Ack.Send</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_BFS_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6787</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     To verify the behavior of FrTp when all transmit data is not available initially and a CTS is
     received with bfs=0.
  
Test Object: 
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Initialize FrTp.
    02: Transmit Pdu for Connection_0 with length 80 bytes.
    03: Elapse a MainFunction tick.
    04: Check whether STF is transmitted and confirm the frame.
    05: Indicate the reception of CTS frame with bfs as 0.
    06: Prepare PduR_FrTpCopyTxData to return a buffer of size 38.
    07: Elapse a MainFunction tick.
    08: VP:
        Check whether 38 bytes of data ie maximum possible data is sent with last frame as CFEOB.
    09: Confirm sent CF frames.
    10: Prepare PduR_FrTpCopyTxData to return a buffer of 40 bytes for next call.
    11: Elapse a MainFunction tick.
    12: VP:
        Check whether the remaining 34 bytes of data is transmitted in next block.
    13: Confirm sent CF frames and finish the transmission.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.BfS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_CF_LF_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>6989</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that Bfs is respected even if all the remaining message could be transmitted with a final CF or LF.
  
Test Object: 
  
Test Precondition: 
    Module is initialized.
    Prepare CTS that with the last block all data but 1 byte can be transmitted.
  
Test Execution: 
    01: Start transmission of 14 bytes and process transmission until a small
        amount of data which fits into a single Pdu is left over (4 Bytes)
        but the remaining Bfs is even smaller (3 bytes).
    02: VP: FrTp shall call PduR_FrTpCopyTxData() to copy 3 bytes of payload (Bfs is respected) into
            a CFEOB which is passed to FrIf module.
    03: Initiate reception of CTS (Bfs is &gt;= than remaining message)
    04: VP: check that remaining message is transmitted properly (CF/LF, ACK)
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_BANDWITH_CONTROL_MULTIMAIN</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxAckKML_MultiMainfunctions/source/application/testcase.c</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that sender respects bandwidth control parameter of FC CTS frame. Start a
    segmented transmission and indicate CTS frames with different BC parameters. Verify that
    separation cycles and maximum number of PDUs per cycle are respected.
  
Test Object: 
    Bandwidth Control
  
Test Precondition: 
    Module is initialized.
    FrTp_MainFunction() is called 2,4,255(test dependent) times per Flexray communication cycle.
  
Test Execution: 
    01: Start transmission of 150 bytes on TxSduId of Connection_0
    02: Proceed until indication of CTS frame (no bandwidth control
    03: VP(FrTp.ISO10681_0032.NoBandWidthControl):
        Verify consecutive frames are transmitted in subsequent main function call
        on all available Pdus. This verifies MNPC parameter (maximum number of PDUs
        per cycle).
    04: Proceed one main function tick.
    05: VP(FrTp.ISO10681_0032.SCexp):
        Verify transmission is continued after 1 main function tick. This verifies
        SCexp (separation cycle exponent) parameter.
    06: Indicate CTS frame with SCexp=7, MNPC=4
    07: VP(FrTp.ISO10681_0032.MNPC):
        Verify MNPC parameter.
    08: VP:
        Proceed 127 main function ticks. Verify no frame was sent.
    09: VP(FrTp.ISO10681_0032.SCexp):
        Proceed one more tick. Verify SCexp parameter.
    10: Indicate CTS frame with SCexp=2, MNPC=1
    11: VP(FrTp.ISO10681.SeparationTime):
        Proceed another main function tick. Check that CF was sent.
    12: VP(FrTp.ISO10681_0032.MNPC):
        Verify MNPC parameter. Only PduR will be called.
    13: VP:
        Proceed 3 main function ticks. Verify no frame was sent.
    14: VP(FrTp.ISO10681_0032.SCexp):
        Proceed one more tick. Verify SCexp parameter.
    15: Finish transmission
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ISO10681_0032.MNPC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0032.SCexp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0032.NoBandWidthControl</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681.SeparationTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FRTP1175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.MainFunctionsPerFlexRayCycle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EB_FRTP_TX_SEGM_NACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>106</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify segmented unacknowledged transfer
  
Test Object: 
    Segmented unacknowledged transfer.
  
Test Precondition: 
    Module is initialized.
  
Test Execution: 
    01: Start transmission of 150 bytes on PduId 0
    02: Elapse main function tick
    03: VP(FrTp.ISO10681_0011, FRTP1049, FRTP049_Conf):
        Call FrTp_TriggerTransmit for PduId 1 and verify that STFU frame is sent.
    04: Continue transmission until shortly before last frame.
    05: Verify last Pdus of transmission are correctly sent.
    06: VP(FrTp.ASR40.TxRETRY):
        Indicate reception of RETRY frame with BP 1 and check that it is ignored.
    07: VP(FRTP1009, FRTP049_Conf):
        Verify PduR_FrTpTxConfirmation is called right after TxConfirmation of last frame.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>FRTP1049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FRTP049_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxRETRY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxNoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_UNSEGM_NACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify unsegmented unacknowledged data transfer with known message length.
  
Test Object: 
    Unsegmented unacknowledged transfer.
  
Test Precondition: 
    Module is initialized.
    Configuration parameter FrTpAckType is set to FRTP_NO.
  
Test Execution: 
    Execute steps 01 to 04 for all available channels.
    01: Start unsegmented transmission as in input.
    02: Elapse main function tick
    03: VP(FrTp.ISO10681_0011, FRTP.FrTpAckType.Send)
        Call trigger transmit and verify STFU frame is sent.
    04: VP(FRTP1007, FRTP1053):
        Confirm PduId. Verify PduR_FrTpTxConfirmation is called right after
        TxConfirmation of last frame.
  
Test Input: 
     01: Channel     Msglength
            1           8
            2          70
            3           8
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_0011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FRTP1053</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>FRTP.FrTpAckType.Send</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
        <provcov>
          <linksto>FrTp.ASR40.TxNoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>EB_FRTP_TX_CON_SAMECONCTRL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the behavior when the same FrTpConnectionControl container is referenced by
    different FrTpConnections
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start two unsegmented unacknowledged transmissions
    02: Elapse main function tick
    03: Call trigger transmit for both connections and verify STFU frame is sent.
    04: Elapse time FRTP_TIME_AS by calling Main Funtions 20 times.
    05: VP(FRTP1022, FrTp.ISO10681_NotificationResults.C_TIMEOUT_As):
        Verify whether PduR_FrTpTxConfirmation is called with E_NOT_OK for both
        transmissions.
  
Test Input: 
    01: TxPduId: TxSduId for Connection_0, SduLength:  8 (unsegmented)
        TxPduId: TxSduId for Connection_1, SduLength: 10 (unsegmented)
  
Test Output: 
    Both transmissions should get cancelled after FRTP_TIMEOUT_AS
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>FrTp.ISO10681_NotificationResults.C_TIMEOUT_As</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>EB_FRTP_NO_RETRY</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>434</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks whether RetryInfoPtr is set to NULL for unsegmented message transmission.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start unsegmented transmission of 8 bytes on PduId 0.
    02: Elapse a MainFunction tick.
    03: VP(FrTp.ASR40.TxNoRetry, FrTp.EB.TxRetry_1):
        Call TriggerTransmit and check whether PduR_FrTpCopyTxData() is called with
        RetryInfoPtr set to NULL_PTR.
    04: Confirm the message sent.
    05: VP(FRTP1058_1):
        Check if PduR_FrTpTxConfirmation is called with E_OK and TxPduId
        PduRConf_PduRRoutingPath_2_PduRDestPdu_0, the handleId configured in PduR for the PDU
        associated with TxSduRef of this connections.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.ASR40.TxNoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.TxRetry_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>FRTP1058_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>EB_FRTP_REUSE_TX_NACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>522</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a channel can be reused as soon as the previous connection was correctly finished.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Start segmented transmission on PduId for Connection_0
    02: VP(FRTP1056, FRTP1057)
        Try to start another segmented transmission on PduId for Connection_0
        Verify FrTp_Transmit returns E_NOT_OK
    03: Proceed transmission until CF frame was sent and confirmed.
    04: VP(FRTP1056, FRTP1057)
        Try to start a transmission and check that E_NOT_OK is returned, channel is not freed.
    05: Proceed transmission of LF, not confirmed.
    06: VP(FRTP1056, FRTP1057)
        Try to start a transmission and check that E_NOT_OK is returned, channel is not freed.
    07: Confirm the LF.
    08: VP(FRTP1056, FRTP1057)
        Try to start another segmented transmission on PduId for Connection_0
        Verify FrTp_Transmit returns E_OK
    09: Finish transmission successfully. Verify correct data was transmitted and
        PduR_FrTpTxConfirmation was called with result E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>FRTP1056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>EB_FRTP_ALLDATASENT_CTS_NOTEXPECTED</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Conformance/IN/FrTp_TxNAckKML_1/source/application/testcase.c</sourcefile>
      <sourceline>689</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify that a CF is sent followed by an empty LF if remaining message length fits
     completely into the CF.
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    Loop over steps 1-9 with data from input section
    01: Start a segmented transmission of 11 bytes on connection 0.
    02: Elapse a MainFunction tick.
    03: Check if STF is sent.
    04: Confirm the STF sent.
    05: Indicate reception of CTS requesting 2/100 bytes of data. PduR provides 72 / 2 bytes data.
    06: Check if CFEOB/CF1 is sent.
    07: Indicate reception of CTS requesting 1/NA byte of data. PduR provides 70 / 1 bytes data.
    08: VP(FrTp.EB.NO_CFEOB):
        Check if CF and a empty LF is sent.
    09: No more CF frame to be sent, CTS not expected. Check for successful transmission
        and PduR notification.
  
Test Input: 
    05: CTS buffersize = 2, 100
        PduR provides sufficient data (72 bytes), exactly 2 bytes
    07: CTS buffersize = 1, 100
        PduR provides sufficient data (70 bytes), exactly 1 byte
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.NO_CFEOB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_Gen_PBcfgM_00000_OnlyPbCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_00_OnlyPbCfg/source/application/FrTp_GenTest_00_OnlyPBcfg.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall prove that the FrTp post build configuration also compiles stand alone.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * Set TS_BUILD_POST_BUILD_BINARY to TRUE in the merged make file to prevent the compilation
      of all other FrTp C files.
    * Remove all generated FrTp C files except post build files if there are any.

Test Execution: 
    The test run is successful when the FrTp compiles under sticking to the precondition and a
    binary file is generated.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.PostBuild_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_GenTest_01001_Err_FrTpSdu_Missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case no FrTpTxSdu and no FrTpRxSdu
    is configured for the configuration container FrTpConnection.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Disable FrTp/FrTpMultipleConfig/FrTpMultipleConfig_0/FrTpConnection/FrTpConnection_0/FrTpTxSdu
    Disable FrTp/FrTpMultipleConfig/FrTpMultipleConfig_0/FrTpConnection/FrTpConnection_0/FrTpRxSdu

Test Execution: 
    01: Start generator with valid configuration.
    02: VP: Check for error pattern. Verify that no errors have been issued.
    03: Start generator with erroneous configuration.
    04: VP: The generator must have issued the following error:
            "[Either a FrTpRxSdu or a FrTpTxSdu has to be configured in connection /AUTOSAR/TOP-LEVEL-PACKAGES/FrTp/ELEMENTS/FrTp/FrTpMultipleConfig/FrTpMultipleConfig_0/
            FrTpConnection/FrTpConnection_0.]"

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_CONNECTION_CONTAINS_FrTpSdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01002_Warn_TimeoutIsNotMultipleOfCycleTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues a warning in case the value of the timeout
    parameters configured in FrTpConnectionControl is not a multiple of main function
    cycle time.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrTpTimeoutCr of the configuration container FrTpConnectionControl_0 to 0.71.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following warning:
            "A timeout is not a multiple of the main function cycle time. The number of ticks for
             the timeout will be round up."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.TIMEOUTS_MULTIPLE_OF_FrTpMainFuncCycle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01003_Err_FrTpTxSduRefInvalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the FrTpTxSduRef of the
    container FrTpConnection contains an invalid reference.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrTpTxSduRef of the container FrTpConnection_0 to refer to a PDU that is not configured in
    EcuC.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "../FrTpConnection/FrTpConnection_0/FrTpTxSdu/FrTpTxSduRef: Reference is invalid."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrTpTxSduRef_IS_VALID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01004_Err_FrTpRxSduRefInvalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the FrTpRxSduRef of the
    container FrTpConnection contains an invalid reference.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrTpRxSduRef of the container FrTpConnection_0 to refer a PDU that is not configured in
    EcuC.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "../FrTpConnection/FrTpConnection_0/FrTpRxSdu/FrTpRxSduRef: Reference is invalid."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrTpRxSduRef_IS_VALID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01005_Err_FrTpRxPduPoolRefInvalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the FrTpRxPduPoolRef of the
    container FrTpConnection contains an invalid reference.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrTpRxPduPoolRef of the container FrTpConnection_0 to refer a container FrTpRxPduPool that
    is not configured in FrTp.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "../FrTpConnection/FrTpConnection_0/FrTpRxPduPoolRef: Reference is invalid."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrTpRxPduPoolRef_IS_VALID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01006_Err_FrTpConCtrlRefInvalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the FrTpConCtrlRef of the
    container FrTpConnection contains an invalid reference.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrTpConCtrlRef of the container FrTpConnection_0 to refer a container FrTpConnectionControl
    that is not configured in FrTp.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "../FrTpConnection/FrTpConnection_0/FrTpConCtrlRef: Reference is invalid."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrTpConCtrlRef_IS_VALID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01007_Err_FrTpTxPduRefInvalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the FrTpTxPduRef of the
    container FrTpTxPduPool_0 contains an invalid reference.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrTpTxPduRef of FrTpTxPduPool_0 to refer a PDU that is not configured in EcuC.
    Set FrIfTxPduRef of FrIfPdu/FT_80_A_0_1 same as FrTpTxPduRef.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "../FrTpTxPduPool/FrTpTxPduPool_0/FrTpTxPdu/FrTpTxPdu_0/FrTpTxPduRef: Reference is invalid."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrTpTxPduRef_IS_VALID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01009_Err_FrIfBaseCycleTime_Differ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the FrIfBaseCycle of two
    FrIfFrameTriggering containers associated with FrTpTxPdus of the same TxPduPool differ.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrIfFrameTriggering_0/FrIfBaseCycle to 1 and FrIfFrameTriggering_1/FrIfBaseCycle to 0.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "The parameters FrIfBaseCycle associated with ../FrTpTxPduPool_0/FrTpTxPdu/FrTpTxPdu_0
             and ../FrTpTxPduPool_0/FrTpTxPdu/FrTpTxPdu_2 differ. They must be equal to guarantee
             in-order reception. The associated paths are ../FrIfFrameTriggering/FrIfFrameTriggering_0
             and ../FrIfFrameTriggering/FrIfFrameTriggering_1."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrIfBaseCycleTime_SAME_FOR_FrTpTxPdus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01010_Err_FrIfCycleRepetiton_Differ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the value of
    FrIfCycleRepetition of two FrIfFrameTriggering containers associated with FrTpTxPdus of the
    same TxPduPool differ.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrIfFrameTriggering_0/FrIfCycleRepetition to 1 and FrIfFrameTriggering_1/FrIfCycleRepetition
    to 0.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "The parameters FrIfCycleRepetition associated with ../FrTpTxPduPool/FrTpTxPduPool_0/
             FrTpTxPdu/FrTpTxPdu_0 and ../FrTpTxPduPool/FrTpTxPduPool_0/FrTpTxPdu/FrTpTxPdu_2 differ.
             They must be equal to guarantee in-order reception. The associated paths are
             ../FrIfFrameTriggering/FrIfFrameTriggering_0 and
             ../FrIfFrameTriggering/FrIfFrameTriggering_1."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrIfCycleRepetiton_SAME_FOR_FrTpTxPdus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01011_Err_FrIfChannel_Segment_Incorrect</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the value of FrIfChannel of
    the corresponding FrTpTxPdu is FRIF_CHANNEL_AB.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrIfFrameTriggering_1/FrIfChannel to FRIF_CHANNEL_AB.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "The parameter FrIfChannel associated with ../FrTpTxPduPool_0/FrTpTxPdu/FrTpTxPdu_2 has
             value 'FRIF_CHANNEL_AB', which is only allowed in the static segment. The associated
             path is ../FrIfFrameTriggering/FrIfFrameTriggering_1."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrIfChannel_DYNAMIC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01012_Err_FrIfChannel_Differ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>291</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the value of FrIfChannel of
    two FrIfFrameTriggering containers associated with FrTpTxPdus of the same TxPduPool differ.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrIfFrameTriggering_1/FrIfChannel to FRIF_CHANNEL_B and the FrIfChannel of
    the other FrIfFrameTriggering containers are set to FRIF_CHANNEL_A.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "The parameters FrIfChannel associated with ../FrTpTxPduPool_0/FrTpTxPdu/FrTpTxPdu_0 and
             ../FrTpTxPduPool_0/FrTpTxPdu/FrTpTxPdu_2 differ. They must be equal to guarantee
             in-order reception. The associated paths are ../FrIfFrameTriggering/FrIfFrameTriggering_0
             and ../FrIfFrameTriggering/FrIfFrameTriggering_1."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrIfChannel_SAME_FOR_FrTpTxPdus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01013_Err_FrTpTxPdus_Refer_Different_FrIfClusters</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>319</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the FrIfClusters associated
    with two FrTpTxPdus of the same TxPduPool differ.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Configure FrIfFrameTriggering associated with FrTpTxPdu_0 to be in FrIfCluster_1 and
    FrIfFrameTriggering associated with FrTpTxPdu_2 to be in FrIfCluster_0.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "../FrTpTxPduPool_0/FrTpTxPdu/FrTpTxPdu_0 and ../FrTpTxPduPool_0/FrTpTxPdu/FrTpTxPdu_2
             reference different clusters. The associated paths are
             ../FrIfFrameTriggering/FrIfFrameTriggering_0 and
             ../FrIfFrameTriggering/FrIfFrameTriggering_0."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrTpTxPdus_REFER_SAME_FrIfClusters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01014_Warn_FrTpTxPduPool_NotUsed</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues a warning in case the configured FrTpTxPduPool
    is not used by any of the connections.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Create FrTpTxPduPool_1 with FrTpTxPdu_0 and it shall not be referred by any of the
    FrTpConnections.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following warning:
            "FrTpTxPduPool /AUTOSAR/TOP-LEVEL-PACKAGES/FrTp/ELEMENTS/FrTp/FrTpMultipleConfig/FrTpMultipleConfig_0
			/FrTpTxPduPool/FrTpTxPduPool_1 is not used by any connection. 
			Consider removing it to reduce the ROM consumption of the module configuration."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrTpTxPduPool_IS_USED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01015_Err_FrTpSCExp_NotCorrect</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the configured value FrTpSCexp
    doesn't pass the MCG check.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    Set FrTpSCexp of the container FrTpConnectionControl_0 to 5, so that
    ((2 ^ FrTpSCexp) * tCycleTime) will be 0.16, which will be greater than the configured value of
    FrTpTimeoutCr.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "Invalid value for node "/AUTOSAR/TOP-LEVEL-PACKAGES/FrTp/ELEMENTS/FrTp/
            FrTpMultipleConfig/FrTpMultipleConfig_0/FrTpConnectionControl/FrTpConnectionControl_0/
            FrTpSCexp": ((2 ^ FrTpSCexp) - 1) x tCycleTime must be less than or equal to
            FrTpTimeoutCr."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01016_Err_ClbON_PduLength_GreaterThan_MaxAllowed</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator issues an error in case the value of PduLength of the
    configured RxPdu in EcuC, is greated than the max buffersize allowed.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    - Enable FrTpCopyToLocalBuffer.
    - Set FrTpLocalBufferSize to 64.
    - Set PduLength of Pdu_Rx_5 to 256.

Test Execution: 
    01: Start generator with erroneous configuration
    02: VP: The generator must have issued following error:
            "Invalid value for node "/AUTOSAR/TOP-LEVEL-PACKAGES/FrTp/ELEMENTS/FrTp/
             FrTpMultipleConfig/FrTpMultipleConfig_0/FrTpRxPduPool/FrTpRxPduPool_2/FrTpRxPdu/
             FrTpRxPdu_2/FrTpRxPduRef": The maximum PduLength of the PDU must be such that the
             payload of a start frame is less than or equal to FrTpLocalBufferSize"

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.FrTpLocalBufferSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01017_no_pdu_for_stf</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>432</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that it is not possible to configure a connection with enabled FrTpTxSdu container,
    if the referenced FrTpTxPduPool does not have TxPdus which are large enough to transmit a start frame.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.IF_FrTpTxPdus_ARE_LARGE_ENOUGH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01018_invalid_PduLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Generic/IN/FrTp_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>452</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that an error message is reported if FrTpTxSduRef or FrTpRxPduRef reference to an 
    Pdu with a length larger than supported by FrTp (65535).
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.CHECK.SDU_EXCEEDS_MAXIMUM_MESSAGE_LENGTH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_INCLUDE1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Implementation/IN/FrTp_ImpTest_1/source/application/FrTp_ImpTest_1.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrTp.c includes FrTp_Api.h
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: VP (FRTP195.1):
        Verify that the FrTp_Api.h file guard _FRTP_API_H is defined
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP195.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
    <specobject>
      <id>TS_FRTP_INCLUDE3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Implementation/IN/FrTp_ImpTest_1/source/application/FrTp_ImpTest_1.c</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that FrTp.c includes all header files required from other modules.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP (FRTP1004.1):
        Verify that the following file include guards are defined:
        _FRTP_API_H, FRIF_H, MEMMAP_H, DET_H, SCHM_FRTP_H, PDUR_FRTP_H, STD_TYPES_H, COMSTACK_TYPES_H, _FRTP_TYPES_H, _FRTP_CFG_H, _FRTP_CBK_H.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>TS_FRTP_MODULEID</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Implementation/IN/FrTp_ImpTest_1/source/application/FrTp_ImpTest_1.c</sourcefile>
      <sourceline>117</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module version info macros are correctly defined
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP (FRTP1108):
        Verify that Module version info macros are defined.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>FRTP1109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>TS_FRTP_LCFGSIGNATURE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Implementation/IN/FrTp_ImpTest_1/source/application/FrTp_ImpTest_1.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module version info macros are correctly defined
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP (FrTp.EB.PBCFGM105):
        Verify that Link time configuration signature is correctly generated.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTp.EB.PBCFGM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRTP_PRECOMPILE_CFG</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTp/test/ts5/Implementation/IN/FrTp_ImpTest_1/source/application/precompile_cfg_test.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrTp_Cfg.h defines all pre-compile symbol
  
Test Object: 
  
Test Precondition: 
    Module is initialized
  
Test Execution: 
    01: Verify that each of the macros listed in the input section exists and has the correct value
    02: Verify that FRTP_PBCFGM_SUPPORT_ENABLED is disabled, if PbcfgM module is not referenced by
        FrTp.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FRTP1003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FrTp.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
