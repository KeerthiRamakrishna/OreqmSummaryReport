<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_SvcAs_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_comsignalgroups.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_comsignals.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_demevents.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_ecuminitfunctions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_focomsignals.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_ldcomsignals.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_nvmblocks.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osalarms.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_oscounters.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osevents.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osiocchannels.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osisrs.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osresources.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osscheduletables.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osspinlocks.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_ostasks.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_providercommon.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_xfrmmappings.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_error_handling_view.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_interface_view_gui.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_requirements_SvcAs.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_GenericImporter/reqm_QFT.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_GenericImporter/reqm_TCS.reqm</commandline>
    <timestamp>Mon Jun 17 19:27:05 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_SvcAs_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_comsignalgroups.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_comsignals.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_demevents.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_ecuminitfunctions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_focomsignals.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_ldcomsignals.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_nvmblocks.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osalarms.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_oscounters.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osevents.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osiocchannels.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osisrs.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osresources.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osscheduletables.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_osspinlocks.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_ostasks.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_providercommon.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_algorithm_view_xfrmmappings.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_error_handling_view.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_design_assistant_interface_view_gui.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_Native/asc_SvcAs_requirements_SvcAs.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_GenericImporter/reqm_QFT.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/build/reqm/ReqM2_GenericImporter/reqm_TCS.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.comsignalgroups.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignalgroups.AddComSignalGroup</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each Com signal group service request, the Com signal provider shall
                add a container to Com/ComConfig/&lt;Name of first
                ComConfig&gt;/ComSignalGroup.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFilters</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFiltersManuallyEdited</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testVersionIncompatible</srcid><srcstatus/><internalId>163</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalGroupProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignalgroups.ComSignalGroupParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com signal group service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table Com signal group service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalGroupProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignalgroups.ComSignalGroupsEnableParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com signal group provider shall enable the ECU configuration parameters
                ComNotification, ComErrorNotification, ComDataInvalidAction, ComTimeout,
                ComTimeoutNotification if the parameters are set in the request.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalGroupProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignalgroups.ComSignalGroupInvalidNotification</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com service provider shall only set the parameter
                ComInvalidNotification if the parameter dataInvalidAction is set to
                NOTIFY.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalGroupProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignalgroups.ComRxDataTimeoutAction</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com service provider shall set the parameter
                ComRxDataTimeoutAction</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalGroupProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignalgroups.ComSignalInitValue</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com service provider shall set the parameter ComSignalInitValue for all
                ComGroupSignal that it creates</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalGroupProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignalgroups.ComSignalDataInvalidValue</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com service provider shall set the parameter ComSignalDataInvalidValue
                for all ComGroupSignal that it creates</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalGroupProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
		
		<specobject>
            <id>svcas.design.algorithm.provider.comsignalgroups.ComTimeoutSubstitutionValue</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com service provider shall set the parameter ComTimeoutSubstitutionValue
                for all ComGroupSignal that it creates</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupsForTimeOutSubstitutionValue</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testSetComSignalGroupForTimeOutSubstitutionValue</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalGroupProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.comsignals.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignals.AddComSignal</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each Com signal service request, the Com signal provider shall added a
                container to Com/ComConfig/&lt;Name of first ComConfig&gt;/ComSignal.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComNotifications</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFilters</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFiltersManuallyEdited</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testVersionIncompatible</srcid><srcstatus/><internalId>163</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignals.ComSignalParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com signal service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table Com signal service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComNotifications</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFilters</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFilters</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFiltersManuallyEdited</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFiltersManuallyEdited</srcid><srcstatus/><internalId>155</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignals.ComSignalsEnableParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com signal provider shall enable the ECU configuration parameters
                ComNotification, ComErrorNotification, ComSignalDataInvalidValue,
                ComDataInvalidAction, ComSignalInitValue, ComTimeout, ComTimeoutNotification if the
                parameters are set in the request.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComNotifications</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignals.ComSignalInvalidNotification</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com service provider shall only set the parameter
                ComInvalidNotification if the parameter dataInvalidAction is set to
                NOTIFY.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComNotifications</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.comsignals.ComRxDataTimeoutAction</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com service provider shall set the parameter
                ComRxDataTimeoutAction</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
		
		<specobject>
            <id>svcas.design.algorithm.provider.comsignals.ComTimeoutSubstitutionValue</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Com service provider shall set the parameter
                ComTimeoutSubstitutionValue</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testSetComSignalForTimeOutSubstitutionValue</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.ComSignalProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.demevents.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.demevents.AddDemEvent</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each Dem event service request, the Dem event provider shall add a
                container to Dem/DemConfigSet/&lt;Name of first
                DemConfigSet&gt;/DemEventParameter.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DemEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.demevents.AddDemMultipleConfigContainer</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Dem event provider shall add a default multiple configuration container
                to Dem/DemConfigSet first if there is no existing container.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DemEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.demevents.DemEventParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Dem event service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table Dem event service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DemEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.demevents.CalcEventIds</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>After allocating the Dem events, the Dem event provider shall assign the
                DemEventId consecutively beginning with 1 to all Dem events i.e. also those Dem events
                which have not been allocated by the Dem provider.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DemEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.demevents.SetEventKind</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Dem event provider shall set the parameter DemEventKind to
                DEM_EVENT_KIND_BSW for all allocated Dem events.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DemEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.demevents.SetOperationCycle</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Dem event provider shall set the parameter DemOperationCycleRef to
                /Dem/Dem/DemGeneral/DEM_OPCYC_POWER for all allocated Dem events.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DemEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.demevents.DisableParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Dem event provider shall disable the following optional nodes when they
                are not manually modified: DemDTCClassRef, DemExtendedDataClassRef,
                DemFreezeFrameClassRef,
                DemEventClass/DemDebounceAlgorithmClass/DemDebounceMonitorInternal/DemCallbackGetFDC.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DemEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.demevents.SetDebounceCounterBasedSupport</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When at least one Dem event uses counter-based debouncing, the Dem event
                provider shall set the parameter /Dem/DemGeneral/DemDebounceCounterBasedSupport to
                true.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DemEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.demevents.SetTimeBasedSupport</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When at least one Dem event uses timer-based debouncing, the Dem event
                provider shall set the parameter /Dem/DemGeneral/DemDebounceTimeBasedSupport to
                true.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DemEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.ecuminitfunctions.</idprefix>
            <source>EB</source>
        </defaults>


        <specobject>
            <id>svcas.design.algorithm.provider.ecuminitfunctions.AddInitListZeroEntry</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each EcuM init function request, the EcuM init function provider shall
                add container to EcuM/EcuMConfiguration/&lt;Name of first
                EcuMConfiguration&gt;/EcuMCommonConfiguration/EcuMDriverInitListZero/EcuMDriverInitItem
                if the initList parameter is set to 0.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.EcuMInitFunctionProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.ecuminitfunctions.AddInitListOneEntry</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each EcuM init function request, the EcuM init function provider shall
                add container to EcuM/EcuMConfiguration/&lt;Name of first
                EcuMConfiguration&gt;/EcuMCommonConfiguration/EcuMDriverInitListOne/EcuMDriverInitItem
                if the initList parameter is set to 1.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.EcuMInitFunctionProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.ecuminitfunctions.AddEcuMMultipleConfigContainer</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The EcuM init function provider shall add a default multiple configuration
                container to EcuM/EcuMConfiguration first if there is no existing
                container.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.EcuMInitFunctionProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.ecuminitfunctions.EcuMInitFunctionParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The EcuM init function service provider shall transform the parameters of
                the service requests to ECU configuration parameters according to the mapping
                described in the table EcuM init function service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.EcuMInitFunctionProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.ecuminitfunctions.SortEntries</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The EcuM main function provider shall sort the entries in the init lists
                according to the parameters initializeBefore and initializeAfter when the parameters
                are present.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.EcuMInitFunctionProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.ecuminitfunctions.EntryExists</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The EcuM main function provider shall check if an init function entry is
                already existing. If it already exists, the provider shall update the existing
                entry.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.EcuMInitFunctionProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.ecuminitfunctions.WrongInitList</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>If an init function is already present in the EcuM configuration but in the
                wrong init list, the EcuM main function provider shall not add the init function
                again to the right init list but shall update the existing entry.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.EcuMInitFunctionProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
		
		<specobject>
            <id>svcas.design.algorithm.provider.ecuminitfunctions.EcuMModuleRef</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The EcuM main function provider shall add the reference value to EcuMModuleRef</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.EcuMInitFunctionProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

		<specobject>
            <id>svcas.design.algorithm.provider.ecuminitfunctions.EcuMModuleParameter</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The EcuM main function provider shall add the value to EcuMModuleParameter</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.EcuMInitFunctionProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.focomsignals.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.focomsignals.FOComSignalParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The FOCom signal service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table FOCom signal service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testFoComPdus</srcid><srcstatus/><internalId>190</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.FOComPduProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.ldcomsignals.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.ldcomsignals.LdComSignalParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The LdCom signal service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table LdCom signal service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testLdComPdus</srcid><srcstatus/><internalId>198</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.LdComPduProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.nvmblocks.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.nvmblocks.AddNvMBlock</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each NvM service request, the NvM block provider shall add a container
                to NvM/NvMBlockDescriptor.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.NvMBlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.nvmblocks.NvMBlockParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The NvM block service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table NvM block service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.NvMBlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>


        <specobject>
            <id>svcas.design.algorithm.provider.nvmblocks.CalcBlockIdentifier</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>After allocating the NvM blocks, the NvM block provider shall assign the
                parameter NvMNvramBlockIdentifier zero-based consecutively for all NvM blocks i.e.
                also for those which have not been added by the NvM block provider.</description>
            <rationale>This is a limitation in the current version of the EB NvM. The block
                identifier must always be zero-based consecutively.</rationale>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.NvMBlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.nvmblocks.CalcRomBlockNum</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> The NvM block provider shall the set parameter NvMRomBlockNum to 0 when
                romBlockDataAddress is not configured, to 1 when romBlockDataAddress is configured
                and the block type is native or redundant, or to nDataSets when the block type is a
                data set block. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.NvMBlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.nvmblocks.CalcBlockNum</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> The NvM block provider shall the set parameter NvMNvBlockNum to 1 for
                native blocks, to 2 for redundant blocks and to nDataSets for dataset blocks. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.NvMBlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.nvmblocks.SetDefaultValues</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> The NvM block provider shall the set to following parameters to default
                values when they are not manually modified: NvMUserProvidesSpaceForBlockAndCrc =
                false, NvMExtraBlockChecks = false. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.NvMBlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.nvmblocks.CalcCRCParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When crc=none, the NvM block provider shall set the parameter
                NvMBlockUseCrc to false. When crc=CRC16, the provider shall set NvMBlockUseCrc to
                true and NvMBlockCRCType to NVM_CRC16. When crc=CRC32, the provider shall set
                NvMBlockUseCrc to true and NvMBlockCrcType to NVM_CRC32.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.NvMBlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
		
		<specobject>
            <id>svcas.design.algorithm.provider.nvmblocks.CalcNvMCallbacks</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The NvM block provider shall be able to set the parameter 
			NvMBlockUseSyncMechanism based on an XPATH expression. If this value is true, 
			then both NvMWriteRamBlockToNvCallback and NvMReadRamBlockFromNvCallback will be set to true. 
			If false, then these params are also false.
			Also, it shall set it according to the availability of the values for 
			NvMWriteRamBlockToNvCallback and NvMReadRamBlockFromNvCallback. 
			</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.NvMBlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.osalarms.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.osalarms.AddOsAlarm</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each Os alarm request, the Os alarm provider shall add a container
                to Os/OsAlarm.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarms1</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsAlarmProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osalarms.OsAlarmParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os alarm service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table Os alarm service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarms1</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsAlarmProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osalarms.OsAlarmApplicationRef</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When the request contains the parameter applicationRef, the Os alarm
                provider shall set the reference OsAppAlarmRef of the Os application with the
                short name ApplicationRef. The reference shall be set to the short name path of the
                requested Os alarm.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarms1</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsAlarmProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
        

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.oscounters.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.oscounters.AddOsCounter</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each Os counter request, the Os counter provider shall add a container
                to Os/OsCounter.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounters1</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsCounterProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.oscounters.OsCounterParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os counter service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table Os counter service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounters1</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsCounterProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.oscounters.OsCounterApplicationRef</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When the request contains the parameter applicationRef, the Os counter
                provider shall set the reference OsAppCounterRef of the Os application with the
                short name ApplicationRef. The reference shall be set to the short name path of the
                requested Os counter.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounters1</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsCounterProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
        

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.osevents.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.osevents.AddOsEvent</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each Os event request, the Os event provider shall add a container to
                Os/OsEvent.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsEvents1</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osevents.OsEventParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os event service provider shall transform the parameters of the service
                requests to ECU configuration parameters according to the mapping described in the
                table Os event service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsEvents1</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osevents.OsEventTasks</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When the request contains one or more tasks parameters, the Os event
                provider shall add a reference OsTaskEventRef to the Os task with the short name
                given by the tasks parameter. The reference shall be set to the short name path
                of the requested Os event.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsEvents1</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsEventProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.osiocchannels.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.osiocchannels.AddOsIocChannel</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> For each Os Ioc Channel service request, the Os Ioc channel provider shall
                add a container to Os/OsIoc/OsIocCommunication. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannels1</srcid><srcstatus/><internalId>221</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannelsHeaderManuallyEdited</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsIocChannelProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osiocchannels.AddOsIocDataTypeIncludeHeader</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> For each Os Ioc Channel service request, the Os Ioc channel provider shall
                add one container to Os/OsIoc/OsIocDataTypeIncludeHeader. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannels1</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsIocChannelProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osiocchannels.EnableIoc</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> If the Ioc communication container Os/OsIoc is not enabled, the Os Ioc
                channel provider shall enable it. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannels1</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsIocChannelProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osiocchannels.OsIocChannelParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os Ioc channel service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table Os Ioc channel service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannels1</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsIocChannelProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.osisrs.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.osisrs.AddISR</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> For each Os Isr service request, the Os ISR provider shall add a container
                to Os/OsIsr. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsrs1</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsISRProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osisrs.OsISRParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os ISR service provider shall transform the parameters of the service
                requests to ECU configuration parameters according to the mapping described in the
                table Os ISR service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsrs1</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsISRProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osisrs.IRQLevel</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os ISR service provider shall set the parameter given by
                irqLevelParameterName to the value given by irqLevel.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsrs1</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsISRProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osisrs.IRQVector</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os ISR service provider shall set the parameter given by
                vectorParameterName to the value given by vector.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsrs1</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsISRProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
        
        <specobject>
            <id>svcas.design.algorithm.provider.osisrs.OsISRApplicationRef</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When the request contains the parameter applicationRef, the Os ISR
                provider shall set the reference OsIsrAccessingApplication of the Os application with the
                short name ApplicationRef. The reference shall be set to the short name path of the
                requested Os resource.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsrs1</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsISRProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.osresources.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.osresources.AddOsResource</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> For each Os resource service request, the Os resource provider shall add a
                container to Os/OsResource. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsResources1</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsResourceProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osresources.OsResourceParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os resource service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table Os resource service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsResources1</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsResourceProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osresources.OsResourceTasks</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When the request contains one or more tasks parameters, the Os resource
                provider shall add a reference OsTaskResourceRef to the Os task with the short name
                given by the tasks parameter. The reference shall be set to the short name path of
                the requested Os resource.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsResources1</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsResourceProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osresources.OsResourceApplicationRef</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When the request contains the parameter applicationRef, the Os resource
                provider shall set the reference OsAppResourceRef of the Os application with the
                short name ApplicationRef. The reference shall be set to the short name path of the
                requested Os resource.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsResources1</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsResourceProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osresources.OsResourceISR</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When the request contains one or more ISR parameters, the Os resource
                provider shall add a reference OsISRResourceRef to the Os resource with the short name
                given by the tasks parameter. The reference shall be set to the short name path of
                the requested Os resource.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsResources1</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsResourceProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
        
    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.osscheduletables.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.osscheduletables.AddOsScheduleTable</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> For each Os schedule table service request, the Os schedule table provider
                shall add a container to Os/OsScheduleTable. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesNoExpiryPointsLimit</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsScheduleTableProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osscheduletables.OsScheduleTableParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os schedule table service provider shall transform the parameters of
                the service requests to ECU configuration parameters according to the mapping
                described in the table Os schedule table service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSecondsPerTickInPicoSeconds</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsScheduleTableProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osscheduletables.OsScheduleTableApplicationRef</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When the request contains the parameter applicationRef, the Os schedule
                table provider shall set the reference OsAppScheduleTableRef of the Os application
                with the short name ApplicationRef. The reference shall be set to the short name
                path of the requested Os schedule table.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsScheduleTableProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osscheduletables.DuplicateActions</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> The Os schedule table provider shall only add an action (set event,
                activate task) to an expiry point when it does not exist yet. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsScheduleTableProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>


    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.osspinlocks.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.osspinlocks.AddOsSpinlock</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> For each Os spinlock service request, the Os spinlock provider shall add a
                container to Os/OsSpinlock. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinlocks1</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsSpinlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.osspinlocks.OsSpinlockParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os spinlock service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table Os spinlock service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinlocks1</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsSpinlockProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.ostasks.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.ostasks.AddOsTask</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description> For each Os task service request, the Os task provider shall add a
                container to Os/OsTask. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsTaskProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.ostasks.OsTaskParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os task service provider shall transform the parameters of the service
                requests to ECU configuration parameters according to the mapping described in the
                table Os task service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsTaskProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
        
        <specobject>
            <id>svcas.design.algorithm.provider.ostasks.OsTaskApplicationRef</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>When the request contains the parameter applicationRef, the Os task
                provider shall set the reference OsAppResourceRef of the Os application with the
                short name ApplicationRef. The reference shall be set to the short name path of the
                requested Os task.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.OsTaskProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.common.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.common.Merge</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>
                The Service Needs Calculator shall merge requests of the same type based on the name
                parameter.
            </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testMergeTagNoContent</srcid><srcstatus/><internalId>164</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testMergeTagWithName</srcid><srcstatus/><internalId>165</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testMergeSetXPath</srcid><srcstatus/><internalId>166</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.XMLRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
                <provcov>
                    <linksto>svcas.req.JavaRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.common.BaseSuffix</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>
                Each request shall optionally support the parameters base and suffix. Both shall
                support XPath expressions. When base evaluates to a list of nodes, the provider shall
                duplicate the request for each node in the list. For each node specified by the base parameter, the
                service provider shall evaluate the suffix parameter relatively to the node. The provider shall add the evaluated suffix to the name of
                request.
                
            </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testBaseSuffixXPathParameters</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.XMLRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
                <provcov>
                    <linksto>svcas.req.JavaRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
        
        <specobject>
            <id>svcas.design.algorithm.provider.common.XPathParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>
               When the base parameter is used, the XPath expressions of all parameters of the
               request shall be evaluated relatively to the nodes to which the base parameter
               evaluates.
            </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testBaseSuffixXPathParameters</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.JavaRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
                <provcov>
                    <linksto>svcas.req.XMLRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
        
        <specobject>
            <id>svcas.design.algorithm.provider.common.Enable</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>
                Each request shall optionally support the parameter enable. If enable evaluates to false,
                the request shall be ignored. If enable evaluates to
                true or if it does not exist, the request shall be processed.
            </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testBaseSuffixXPathParameters</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.JavaRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
                <provcov>
                    <linksto>svcas.req.XMLRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
        
        <specobject>
            <id>svcas.design.algorithm.provider.common.UpdateReference</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>
                Each request shall optionally support the parameter updateReference. If this parameter evalutes to a reference node, the
                service provider shall set this reference to the top level node which has been added for
                the request.
            </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testUpdateReference</srcid><srcstatus/><internalId>168</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.XMLRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
                <provcov>
                    <linksto>svcas.req.JavaRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.common.EnableRoot</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>
                Each request shall optionally support the parameter enable at the root of request. If enable evaluates to false,
                all requests in event shall be ignored. If enable evaluates to
                true or if it does not exist, all request shall be processed.
            </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testRequestDisabled</srcid><srcstatus/><internalId>161</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testRequestDisabled</srcid><srcstatus/><internalId>178</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testRequestDisabled</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testRequestDisabled</srcid><srcstatus/><internalId>217</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testRequestDisabled</srcid><srcstatus/><internalId>250</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.JavaRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
                <provcov>
                    <linksto>svcas.req.XMLRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
		
		<specobject>
            <id>svcas.design.algorithm.provider.common.EnableEvent</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>
                SvcRequestsEvent shall have enabled property. If enabled property is set to false,
                all requests in event shall be ignored. If enabled is set to
                true, all request shall be processed.
            </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testEventDisabled</srcid><srcstatus/><internalId>162</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testEventDisabled</srcid><srcstatus/><internalId>179</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEventDisabled</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testEventDisabled</srcid><srcstatus/><internalId>196</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testEventDisabled</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testEventDisabled</srcid><srcstatus/><internalId>218</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testEventDisabled</srcid><srcstatus/><internalId>251</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testEventDisabled</srcid><srcstatus/><internalId>276</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.JavaRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
                <provcov>
                    <linksto>svcas.req.XMLRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.algorithm.provider.xfrmmappings.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.algorithm.provider.xfrmmappings.AddXfrmMapping</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>For each Xfrm service request, the Xfrm mappings provider shall add a container
                to */XfrmImplementationMapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testSomeIpXfMappings</srcid><srcstatus/><internalId>259</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testE2EXfMappings</srcid><srcstatus/><internalId>260</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testE2EXfMappingsForTransformersWithTheSameReference</srcid><srcstatus/><internalId>261</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.XfrmProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

        <specobject>
            <id>svcas.design.algorithm.provider.xfrmmappings.XfrmParameters</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Xfrm mappings service provider shall transform the parameters of the
                service requests to ECU configuration parameters according to the mapping described
                in the table Xfrm mappings service parameter mapping.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testSomeIpXfMappings</srcid><srcstatus/><internalId>259</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testE2EXfMappings</srcid><srcstatus/><internalId>260</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.XfrmProvider</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.errorhandling.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.errorhandling.ecuminitfunctions.UnpreferredInitList</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The EcuM init function provider shall report a warning when an init
                function is not contained in the preferred init list.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctionsUnpreferredInitList</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

        <specobject>
            <id>svcas.design.errorhandling.ecuminitfunctions.UnfulfilledOrder</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The EcuM init function provider shall report a warning when the requested
                order cannot be fulfilled.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctionsUnfulfilledOrder</srcid><srcstatus/><internalId>182</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
		
		<specobject>
            <id>svcas.design.errorhandling.ecuminitfunctions.InvalidModuleRefPath</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The EcuM init function provider shall report a warning when the requested
                reference module is either invalid or not loaded.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testInvalidModuleRef</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

        <specobject>
            <id>svcas.design.errorhandling.osscheduletables.InvalidCounter</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os schedule table provider shall report a warning when the OsCounter is
                not correctly specified in the request.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesInvalidCounter</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

        <specobject>
            <id>svcas.design.errorhandling.osscheduletables.InvalidDuration</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os schedule table provider shall report a warning when the schedule
                table duration cannot be converted to ticks due to a missing OsSecondsPerTick
                parameter of the OsCounter.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesMissingOsSecondsPerTick</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

        <specobject>
            <id>svcas.design.errorhandling.osscheduletables.InvalidExpiryPointOffset</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os schedule table provider shall report a warning when the expiry point
                offset cannot be converted to ticks due to a missing OsSecondsPerTick parameter of
                the OsCounter.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesMissingOsSecondsPerTick</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

        <specobject>
            <id>svcas.design.errorhandling.osscheduletables.InvalidMaxAdvanceRetard</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os schedule table provider shall report a warning when the max
                advance/retard parameter cannot be converted to ticks due to a missing
                OsSecondsPerTick parameter of the OsCounter.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesMissingOsSecondsPerTick</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

        <specobject>
            <id>svcas.design.errorhandling.osscheduletables.DurationTooSmall</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os schedule table provider shall report a warning when the schedule
                table duration is less than the duration of one counter tick.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesDurationTooSmall</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

        <specobject>
            <id>svcas.design.errorhandling.osscheduletables.ExpiryPointOffsetTooSmall</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os schedule table provider shall report a warning when the schedule
                table expiry point offset is less than the duration of one counter
                tick.</description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesExpiryPointOffsetTooSmall</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
		
		<specobject>
            <id>svcas.design.errorhandling.osscheduletables.DuplicateExpiryPoints</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Os schedule table provider shall ignore duplicate expiry points. Two expiry points are considered duplicates if they have the same name. </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesDuplicateExpiryPoints</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

        <specobject>
            <id>svcas.design.errorhandling.common.IngoreInvalidRequests</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>
                The Service Needs Calculator shall ignore requests which do not validate against the
                schema, other shall still be supported.
            </description>
            <needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testIngoreInvalidRequests</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.JavaRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
                <provcov>
                    <linksto>svcas.req.XMLRequester</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>        

    </specobjects>
    <specobjects doctype="dsn">
        <defaults>
            <idprefix>svcas.design.interface.gui.</idprefix>
            <source>EB</source>
        </defaults>

        <specobject>
            <id>svcas.design.interface.gui.ProviderTable</id>
            <status>approved</status><source>EB</source>
            <version>1</version>
            <description>The Service Needs Calculator configuration GUI shall contain a table which
                lists all available providers. The first column shall contain a checkbox to enable
                and disable a provider. Further columns shall show the name and the AUTOSAR release
                version of the provider. </description>
			<needscoverage>
                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>runSvcAsProject1</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>runSvcAsProject2</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>runSvcAsProject3</srcid><srcstatus/><internalId>144</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
            <providescoverage>
                <provcov>
                    <linksto>svcas.req.DisableProviders</linksto>
                    <dstversion>1</dstversion>
                <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
            </providescoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    </specobjects>
    <specobjects doctype="req">
                <defaults>
                        <idprefix>svcas.req.</idprefix>
                        <source>EB</source>
                </defaults>
 
                <specobject>
                        <id>svcas.req.CalculateServiceNeeds</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>If the Service Needs Calculator is executed it shall (re)calculate service needs for all
                                modules of the project that request a provided service.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.legacy.SvcAsLegacyBackendTest.testDoRun</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComNotifications</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFilters</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFilters</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFiltersManuallyEdited</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFiltersManuallyEdited</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarms1</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsEvents1</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannels1</srcid><srcstatus/><internalId>221</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsrs1</srcid><srcstatus/><internalId>222</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsResources1</srcid><srcstatus/><internalId>223</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinlocks1</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounters1</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testFindOsCounters</srcid><srcstatus/><internalId>235</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannelsHeaderManuallyEdited</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>95</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ExecutionMultipleTimes</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall be executable multiple times for a project (e.g. in case
                                configuration parameters of the requester module changed).</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComNotifications</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFilters</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFilters</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFiltersManuallyEdited</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFiltersManuallyEdited</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarms1</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsEvents1</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannels1</srcid><srcstatus/><internalId>221</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsrs1</srcid><srcstatus/><internalId>222</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsResources1</srcid><srcstatus/><internalId>223</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinlocks1</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounters1</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannelsHeaderManuallyEdited</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>96</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.XMLRequester</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall provide a mechanism to specify static and dynamic (i.e.
                                configuration-dependent) service needs requests in XML without writing Java
                                code.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.common.Merge</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.BaseSuffix</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.XPathParameters</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.Enable</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.UpdateReference</srcid><srcstatus/><internalId>78</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.EnableRoot</srcid><srcstatus/><internalId>79</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.EnableEvent</srcid><srcstatus/><internalId>80</internalId></linkedfrom><linkedfrom><srcid>svcas.design.errorhandling.common.IngoreInvalidRequests</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.JavaRequester</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall provide a mechanism to specify static and dynamic (i.e.
                                configuration-dependent) service needs requests in Java code.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.common.Merge</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.BaseSuffix</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.XPathParameters</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.Enable</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.UpdateReference</srcid><srcstatus/><internalId>78</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.EnableRoot</srcid><srcstatus/><internalId>79</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.common.EnableEvent</srcid><srcstatus/><internalId>80</internalId></linkedfrom><linkedfrom><srcid>svcas.design.errorhandling.common.IngoreInvalidRequests</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.AUTOSARVersions</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall support providers for different AUTOSAR versions. Only
                                those providers shall be called which support the release version of the
                                configuration project.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testChainedRequests</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ChainedRequests</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>It shall be possible to chain service requests which means that if one
                                requests results that the service provider itself now needs service from another
                                module the assistant shall handle this in one run.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testChainedRequests</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ResultView</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>After execution the assistant shall provide a summary which service
                                requests have been processed, which are fulfilled or not, and what configuration has
                                been added. For each service requester and provider the according BSW-module shall
                                be stated.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>runSvcAsProject1</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>runSvcAsProject2</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>runSvcAsProject3</srcid><srcstatus/><internalId>144</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.DisableProviders</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The configuration GUI of the Service Needs Calculator shall allow to disable service
                                providers.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.interface.gui.ProviderTable</srcid><srcstatus/><internalId>94</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ContributeConfigurationGUI</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>Service providers shall be able to contribute to the configuration GUI of
                                the Service Needs Calculator.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>runSvcAsProject1</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>runSvcAsProject2</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>runSvcAsProject3</srcid><srcstatus/><internalId>144</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ProviderNotAvailable</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>If a service requester supplies a request but the service provider modules
                                is not present the request shall be silently ignored.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testProviderDisabled</srcid><srcstatus/><internalId>170</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ProviderDisabled</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>If a service requester supplies a request but the service provider modules
                                is disabled the request shall be silently ignored.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testProviderDisabled</srcid><srcstatus/><internalId>170</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.EcuMInitFunctionProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for init
                                functions in the EcuM module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.ecuminitfunctions.AddInitListZeroEntry</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ecuminitfunctions.AddInitListOneEntry</srcid><srcstatus/><internalId>24</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ecuminitfunctions.AddEcuMMultipleConfigContainer</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ecuminitfunctions.EcuMInitFunctionParameters</srcid><srcstatus/><internalId>26</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ecuminitfunctions.SortEntries</srcid><srcstatus/><internalId>27</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ecuminitfunctions.EntryExists</srcid><srcstatus/><internalId>28</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ecuminitfunctions.WrongInitList</srcid><srcstatus/><internalId>29</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ecuminitfunctions.EcuMModuleRef</srcid><srcstatus/><internalId>30</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ecuminitfunctions.EcuMModuleParameter</srcid><srcstatus/><internalId>31</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.DemEventProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Dem
                                events in the Dem module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.demevents.AddDemEvent</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.demevents.AddDemMultipleConfigContainer</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.demevents.DemEventParameters</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.demevents.CalcEventIds</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.demevents.SetEventKind</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.demevents.SetOperationCycle</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.demevents.DisableParameters</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.demevents.SetDebounceCounterBasedSupport</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.demevents.SetTimeBasedSupport</srcid><srcstatus/><internalId>22</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.NvMBlockProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for NvM
                                blocks in the Nvm module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.nvmblocks.AddNvMBlock</srcid><srcstatus/><internalId>34</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.nvmblocks.NvMBlockParameters</srcid><srcstatus/><internalId>35</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.nvmblocks.CalcBlockIdentifier</srcid><srcstatus/><internalId>36</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.nvmblocks.CalcRomBlockNum</srcid><srcstatus/><internalId>37</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.nvmblocks.CalcBlockNum</srcid><srcstatus/><internalId>38</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.nvmblocks.SetDefaultValues</srcid><srcstatus/><internalId>39</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.nvmblocks.CalcCRCParameters</srcid><srcstatus/><internalId>40</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.nvmblocks.CalcNvMCallbacks</srcid><srcstatus/><internalId>41</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.XfrmProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for *Xf
                                XfrmImplementationMappings.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.xfrmmappings.AddXfrmMapping</srcid><srcstatus/><internalId>81</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.xfrmmappings.XfrmParameters</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ComSignalProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Com
                                signals.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.comsignals.AddComSignal</srcid><srcstatus/><internalId>8</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignals.ComSignalParameters</srcid><srcstatus/><internalId>9</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignals.ComSignalsEnableParameters</srcid><srcstatus/><internalId>10</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignals.ComSignalInvalidNotification</srcid><srcstatus/><internalId>11</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignals.ComRxDataTimeoutAction</srcid><srcstatus/><internalId>12</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignals.ComTimeoutSubstitutionValue</srcid><srcstatus/><internalId>13</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ComSignalGroupProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Com
                                signal groups.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.comsignalgroups.AddComSignalGroup</srcid><srcstatus/><internalId>0</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignalgroups.ComSignalGroupParameters</srcid><srcstatus/><internalId>1</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignalgroups.ComSignalGroupsEnableParameters</srcid><srcstatus/><internalId>2</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignalgroups.ComSignalGroupInvalidNotification</srcid><srcstatus/><internalId>3</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignalgroups.ComRxDataTimeoutAction</srcid><srcstatus/><internalId>4</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignalgroups.ComSignalInitValue</srcid><srcstatus/><internalId>5</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignalgroups.ComSignalDataInvalidValue</srcid><srcstatus/><internalId>6</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.comsignalgroups.ComTimeoutSubstitutionValue</srcid><srcstatus/><internalId>7</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.OsEventProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Os
                                events in the Os module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.osevents.AddOsEvent</srcid><srcstatus/><internalId>48</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osevents.OsEventParameters</srcid><srcstatus/><internalId>49</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osevents.OsEventTasks</srcid><srcstatus/><internalId>50</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.OsResourceProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Os
                                resources in the Os module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.osresources.AddOsResource</srcid><srcstatus/><internalId>60</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osresources.OsResourceParameters</srcid><srcstatus/><internalId>61</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osresources.OsResourceTasks</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osresources.OsResourceApplicationRef</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osresources.OsResourceISR</srcid><srcstatus/><internalId>64</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.OsTaskProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Os
                                tasks in the Os module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.ostasks.AddOsTask</srcid><srcstatus/><internalId>71</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ostasks.OsTaskParameters</srcid><srcstatus/><internalId>72</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.ostasks.OsTaskApplicationRef</srcid><srcstatus/><internalId>73</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.OsAlarmProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Os
                                alarms in the Os module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.osalarms.AddOsAlarm</srcid><srcstatus/><internalId>42</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osalarms.OsAlarmParameters</srcid><srcstatus/><internalId>43</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osalarms.OsAlarmApplicationRef</srcid><srcstatus/><internalId>44</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.OsScheduleTableProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Os
                                schedule tables in the Os module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.osscheduletables.AddOsScheduleTable</srcid><srcstatus/><internalId>65</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osscheduletables.OsScheduleTableParameters</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osscheduletables.OsScheduleTableApplicationRef</srcid><srcstatus/><internalId>67</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osscheduletables.DuplicateActions</srcid><srcstatus/><internalId>68</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.UniqueOsAppScheduleTableRef</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator will take care that no schedule table in the Os module will be
                                set as a reference for OsAppScheduleTableRef on two different
                                Applications.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.OsIocChannelProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Ioc
                                channels in the Os module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.osiocchannels.AddOsIocChannel</srcid><srcstatus/><internalId>51</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osiocchannels.AddOsIocDataTypeIncludeHeader</srcid><srcstatus/><internalId>52</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osiocchannels.EnableIoc</srcid><srcstatus/><internalId>53</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osiocchannels.OsIocChannelParameters</srcid><srcstatus/><internalId>54</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.OsISRProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Os
                                ISRs in the Os module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.osisrs.AddISR</srcid><srcstatus/><internalId>55</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osisrs.OsISRParameters</srcid><srcstatus/><internalId>56</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osisrs.IRQLevel</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osisrs.IRQVector</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osisrs.OsISRApplicationRef</srcid><srcstatus/><internalId>59</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.PushOperation</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>Push data into the system model </description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComPushOperation</srcid><srcstatus/><internalId>160</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemPushOperation</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMOperation</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testFoComPushOperation</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testLdComPushOperation</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMPushOperation</srcid><srcstatus/><internalId>216</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsPushOperation</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testXfrmPushOperation</srcid><srcstatus/><internalId>272</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.DebuggingToString</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall provide user readable string representations for data
                                objects.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testNLSString</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testNLSString</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testNLSString</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testNLSString</srcid><srcstatus/><internalId>192</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testNLSString</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LibProviderTest.testSvcLibOperationStatus</srcid><srcstatus/><internalId>207</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LibProviderTest.testNLSString</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LibProviderTest.testNLSString2</srcid><srcstatus/><internalId>211</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testNLSString</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.StringTest.testSvcRequestsEvent</srcid><srcstatus/><internalId>254</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.StringTest.testNamedEntry</srcid><srcstatus/><internalId>255</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.StringTest.testSvcURI</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.StringTest.testSingleValue</srcid><srcstatus/><internalId>257</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.StringTest.testServiceDescriptor</srcid><srcstatus/><internalId>258</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testNLSString</srcid><srcstatus/><internalId>264</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testAutosarVersion</srcid><srcstatus/><internalId>269</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>121</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ValidateClasses</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>Test setters and getters of classes.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testSvcComOperationStatus</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testCom</srcid><srcstatus/><internalId>159</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testSvcDemOperationStatus</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvent</srcid><srcstatus/><internalId>177</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcumInitFnctEntry</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testSvcLdComOperationStatus</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testSvcFoComOperationStatus</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testPduEntries</srcid><srcstatus/><internalId>193</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testPduIndicationConfirmation</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testNullValue</srcid><srcstatus/><internalId>195</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testSvcLdComOperationStatus</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testPduEntries</srcid><srcstatus/><internalId>201</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testPduIndicationConfirmation</srcid><srcstatus/><internalId>202</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testPduTransmit</srcid><srcstatus/><internalId>203</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testNullValue</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LibProviderTest.testSvcLibApiOperationStatus</srcid><srcstatus/><internalId>208</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LibProviderTest.testSvcAsOperationStatus</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LibProviderTest.testSvcRequestsEvent</srcid><srcstatus/><internalId>212</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlock</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testSvcNvMOperationStatus</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testSvcOsOperationStatus</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testDoSetOsResource</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarm</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounter</srcid><srcstatus/><internalId>241</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsEvent</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannel</srcid><srcstatus/><internalId>243</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsr</srcid><srcstatus/><internalId>244</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsResource</srcid><srcstatus/><internalId>245</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSchedule</srcid><srcstatus/><internalId>246</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinLock</srcid><srcstatus/><internalId>247</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTask</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testE2EXf</srcid><srcstatus/><internalId>262</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testScvXfrmOperationStatus</srcid><srcstatus/><internalId>263</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testXfrmMapping</srcid><srcstatus/><internalId>265</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testEventDescription</srcid><srcstatus/><internalId>266</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testSingleValue</srcid><srcstatus/><internalId>267</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testSingleValue2</srcid><srcstatus/><internalId>268</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testSvcRequestEvent</srcid><srcstatus/><internalId>270</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testServiceManagedEntries</srcid><srcstatus/><internalId>273</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testSvcRequestOperation</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testRequestOperation</srcid><srcstatus/><internalId>275</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>122</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.DebuggingNamedEntryEquals</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall provide an equals method operating on the
                                name.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.CommonTest.testNamedEntryEquals</srcid><srcstatus/><internalId>172</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testEntries</srcid><srcstatus/><internalId>271</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.OsSpinlockProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Os
                                Spinlocks in the Os module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.osspinlocks.AddOsSpinlock</srcid><srcstatus/><internalId>69</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.osspinlocks.OsSpinlockParameters</srcid><srcstatus/><internalId>70</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.LdComPduProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for
                                LdCom pdus.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.ldcomsignals.LdComSignalParameters</srcid><srcstatus/><internalId>33</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ResultStatusAfterCalculateServiceNeeds</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> After service needs is trigered, all the required status shall be
                                correctly added to ApiOperationStatus.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.IgnoreManuallyEditedParameter</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> Service needs assistant shall ignore in case a parameter value is set to
                                'manually edited'. </description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testFoComPdus</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testLdComPdus</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinlocks1</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
 
				<specobject>
                        <id>svcas.req.IgnoreCalculatedParameter</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> Service needs assistant shall ignore in case a parameter was calculated by other wizard. </description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.AddWarningForManuallyEdited</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> Service needs assistant shall print a warning in case a parameter value is
                                set to 'manually edited'. </description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.FOComProviderTest.testFoComPdus</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.LdComProviderTest.testLdComPdus</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinlocks1</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.AddWarningForDisabledObjectWithRequest</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>Service needs assistant shall print a warning in case a parameter is disabled in
                                schema (it has the enable on false), but it has a requested value to be set. </description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinlocks1</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
                
                <specobject>
                        <id>svcas.req.ImporterInfoData</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall add an extra data for IMPORTER_INFO on the .xdm file when
                                it is triggered to know that the paramter has been changed by SVcAs. The value of
                                the importerInfo should look like : @CALC(SvcAs,com.signals,1).</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.CreateCtrModuleDemEventParameterRefsOnlyIfListEmpty</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> In case of DemEvents, Svc creates a ctr for a module (eg Eth, Mcu, Fls
                                etc), if it's corresponding event has updateReference var in the .xdm file. If the
                                container has already been created by the user or if it's imported (even if it has
                                another name), then the wizard should not create an additional one. </description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.XfrmMappingsWithSameReference</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>If in the E2EXF/ComXf modules configuration is at least one further
                                transformer which references the same ISignalGroup,
                                XfrmVariableDataPrototypeInstanceRef is enabled automatically if at least two
                                XfrmImplementationMapping within a transformer reference the same ISignal or
                                ISignalGroup. </description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.XfrmProviderTest.testE2EXfMappingsForTransformersWithTheSameReference</srcid><srcstatus/><internalId>261</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.NvmUserHeader</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> In case SvcAs detects that at least one RTE callback function is
                                configured, it should add Rte_Cbk.h header file among the NvMUserHeader </description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ContainerDisabledIfEmpty</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> A container created by SvcAs in a previous run, shall be disabled or
                                deleted if it doesn't have any children. (ex OsIoc)</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannels1</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.RemoveObsoleteOnlyIfExtraData</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> SvcAs shall remove obsolete containers and variables only if they have the
                                extra data for importer info "@CALC(SvcAs,service,version)".</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarms1</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounters1</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.RemoveObsoleteOsReferences</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>If a "calculated" reference from Os module becomes obsolete, the SvcAs
                                assistant shall remove it even. The reference is obsolete if it's request is null or
                                if it's corresponding container is removed. </description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarms1</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsEvents1</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsResources1</srcid><srcstatus/><internalId>223</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinlocks1</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounters1</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testContainerDoesNotExist</srcid><srcstatus/><internalId>252</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.OsProviderTest.testNoOsIoc</srcid><srcstatus/><internalId>253</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.RemoveComNotifications</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> If all the mappings from a comSignal are removed, the following
                                notifications shall be deleted and disabled: ComNotification, ComErrorNotification,
                                ComInvalidNotification, ComTimeoutNotification only if they were calculated before
                                by SvcAs.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComNotifications</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
 
                <specobject>
                        <id>svcas.req.ObsoleteComContainers</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description> If a com container has a null request and it was calculated by SvcAs in a
                                previous run, it shouldn't be removed.</description>
                        <needscoverage>
                                <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComNotifications</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
				
				<specobject>
                        <id>svcas.req.FOComPduProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for
                                FOCom pdus.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.focomsignals.FOComSignalParameters</srcid><srcstatus/><internalId>32</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
				<specobject>
                        <id>svcas.req.OsCounterProvider</id>
                        <status>approved</status><source>EB</source>
                        <version>1</version>
                        <description>The Service Needs Calculator shall contain a service provider that handles requests for Os
                                counters in the Os module.</description>
                        <needscoverage>
                                <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>svcas.design.algorithm.provider.oscounters.AddOsCounter</srcid><srcstatus/><internalId>45</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.oscounters.OsCounterParameters</srcid><srcstatus/><internalId>46</internalId></linkedfrom><linkedfrom><srcid>svcas.design.algorithm.provider.oscounters.OsCounterApplicationRef</srcid><srcstatus/><internalId>47</internalId></linkedfrom></coveredby></needscov>
                        <containerCovstatus>covered</containerCovstatus></needscoverage>
                <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
 
 
        </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>runSvcAsProject1</id>
      <status>approved</status>
      <source>EB test specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/qft/svcasUpdated.qft</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ResultView</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>svcas.design.interface.gui.ProviderTable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ContributeConfigurationGUI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>runSvcAsProject2</id>
      <status>approved</status>
      <source>EB test specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/qft/svcasUpdated.qft</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ResultView</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>svcas.design.interface.gui.ProviderTable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ContributeConfigurationGUI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>runSvcAsProject3</id>
      <status>approved</status>
      <source>EB test specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/qft/svcasUpdated.qft</sourcefile>
      <sourceline>360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ResultView</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>svcas.design.interface.gui.ProviderTable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ContributeConfigurationGUI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.legacy.SvcAsLegacyBackendTest.testDoRun</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/legacy/SvcAsLegacyBackendTest.java</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Calculates the service needs for a given request&lt;/pre&gt;</description>
      <testexec>Run SvcAs</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testStatusForCom</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Com service provider correctly adds Com signals and removes signals which are not requested anymore.&lt;/pre&gt;</description>
      <testexec>01: create new project with Com
                 02: request two signals</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.AddComSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalsEnableParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalInvalidNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ResultStatusAfterCalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AddWarningForManuallyEdited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>svcas.req.IgnoreManuallyEditedParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ImporterInfoData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupsForTimeOutSubstitutionValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests ComTimeOutSubstitutionValue of ComSignalGroups&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.ComTimeoutSubstitutionValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testSetComSignalForTimeOutSubstitutionValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1236</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests setTimeOutSubstitutionValue() of ComSignal&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComTimeoutSubstitutionValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testSetComSignalGroupForTimeOutSubstitutionValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1254</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests setTimeOutSubstitutionValue() of ComSignalGroup&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.ComTimeoutSubstitutionValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testComNotifications</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1271</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Com service provider correctly adds Com signals and removes signals which are not requested anymore.&lt;/pre&gt;</description>
      <testexec>01: create new project with Com
                 02: request two signals
                 04: VP: check the notifications when request = null</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.AddComSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalsEnableParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalInvalidNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ObsoleteComContainers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveComNotifications</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testComSignals1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Com service provider correctly adds Com signals and removes signals which are not requested anymore.&lt;/pre&gt;</description>
      <testexec>01: create new project with Com
                 02: request two signals
                 04: VP: check that signals have been added and parameters are enabled and set (AddComSignal, ComSignalParameters, ComSingalsEnableParameters)
                 05: request three signals, with different parameters
                 06: VP: check that signals have been added and parameters are enabled and set (AddComSignal, ComSignalParameters, ComSingalsEnableParameters,ComSignalInvalidNotification)
                 07: do not request any signals anymore
                 08: signals shouldn'be removed</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.AddComSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalsEnableParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalInvalidNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComTimeoutSubstitutionValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AddWarningForManuallyEdited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>svcas.req.IgnoreManuallyEditedParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ImporterInfoData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ObsoleteComContainers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFilters</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>471</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Com service provider correctly adds Com signals and ComFilter's parameters&lt;/pre&gt;</description>
      <testexec>01: create new project with Com
                 02: request 6 signals
                 04: VP: check that signals have been added
                 05: VP: check the comFilters</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.AddComSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFilters</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>599</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Com service provider correctly adds Com signals group&lt;/pre&gt;</description>
      <testexec>01: create new project with Com
                 02: request thesignals groups
                 04: VP: check that signal groups have been added
                 05: VP: check the comFilters</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.AddComSignalGroup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalFiltersManuallyEdited</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>733</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Com service provider correctly adds Com signals and ComFilter's parameters&lt;/pre&gt;</description>
      <testexec>01: create new project with Com
                 02: request 6 signals
                 04: VP: check that signals have been added
                 05: VP: check the comFilters</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.AddComSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroupFiltersManuallyEdited</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>824</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Com service provider correctly adds Com signals group&lt;/pre&gt;</description>
      <testexec>01: create new project with Com
                 02: request thesignals groups
                 04: VP: check that signal groups have been added
                 05: VP: check the comFilters manually edited</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.AddComSignalGroup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComSignalParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testComSignalGroups1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>917</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Com service provider correctly adds Com signals and removes signals which are not requested anymore.&lt;/pre&gt;</description>
      <testexec>01: create new project with Com
                 02: request two signals groups
                 04: VP: check that signal groups have been added and parameters are enabled and set (AddComSignalGroup, ComSignalGroupParameters, ComSingalGroupsEnableParameters)
                 05: request three signal groups with different parameters
                 06: VP: check that signal groups have been added and parameters are enabled and set (AddComSignalGroup, ComSignalGroupParameters, ComSingalGroupsEnableParameters,ComSignalInvalidNotification)
                 07: do not request any signal groups anymore
                 08: check that signals group are not removed</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.AddComSignalGroup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.ComSignalGroupParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.ComSignalGroupsEnableParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.ComSignalGroupInvalidNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.ComRxDataTimeoutAction</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.ComRxDataTimeoutAction</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.ComSignalInitValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.ComSignalDataInvalidValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ObsoleteComContainers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveComNotifications</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testSvcComOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1345</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testNLSString</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1369</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testCom</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1397</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testComPushOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1477</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Push data into the system model&lt;/pre&gt;</description>
      <testexec>01:  Push data into the system model</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.PushOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testRequestDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1543</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if correct statuses are added when request is disabled.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableRoot</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testEventDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1584</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if no changes are made for disabled event.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.ComProviderTest.testVersionIncompatible</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/ComProviderTest.java</sourcefile>
      <sourceline>1615</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if error message is thrown when passing incompatible version of Com module with SvcAs.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignals.AddComSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.comsignalgroups.AddComSignalGroup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.CommonTest.testMergeTagNoContent</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/CommonTest.java</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests that tags with no content and no name attribute are merged.&lt;/pre&gt;</description>
      <testexec>01: setup two requests
                 02: VP: check that the requests have been merged correctly</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.Merge</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.CommonTest.testMergeTagWithName</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/CommonTest.java</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests that same tags with same name tag are merged while ones with a different name tag are not merged.&lt;/pre&gt;</description>
      <testexec>01: setup two requests
                 02: VP: check that the requests have been merged correctly</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.Merge</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.CommonTest.testMergeSetXPath</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/CommonTest.java</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests that requests can be merged using XPath.&lt;/pre&gt;</description>
      <testexec>01: setup two requests
                 02: VP: check that the requests have been merged correctly</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.Merge</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.CommonTest.testBaseSuffixXPathParameters</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/CommonTest.java</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests requests with base, suffix and enable attributes&lt;/pre&gt;</description>
      <testexec>01: setup a project with Os module
                 02: add os task "Init_Task" and three Os applications
                 03: run the SvcAs but disable any requests with the appropriate enable expression parameter
                 04: VP: the SchM configuration does not contain any main functions  (Enable check)
                 05: run the SvcAs again, request one Os event per Os application using the base attribute,
                     specify the application name as suffix using a relative XPath expression,
                     set header ComMChannelId using relative XPath expression
                 06: VP: Os configuration contains the three Os events 1-3,
                     short names and suffix are correctly set, Os task event ref is set correctly (checks XPathParameters, BaseSuffix)
                 07: remove Os application 3 and add Os application 4
                 08: run the SvcAs again
                 09: VP: Os configuration contains the three events 1,2 and 4, event 3 does not exist anymore
                     short names and suffix are correctly set, header is set correctly (XPathParameters, BaseSuffix)
                 10: remove all Os applications
                 11: run the SvcAs again
                 12: VP: Os configuration does not contain events anymore since the base attribute evaluates to an empty list</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.BaseSuffix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.XPathParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.CommonTest.testUpdateReference</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/CommonTest.java</sourcefile>
      <sourceline>285</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests requests with the updateReference attribute&lt;/pre&gt;</description>
      <testexec>01: setup a project with Dem and EcuM (stub), remove multiple config container from EcuM
                 02: request a Dem event with updateReference attribute
                 03: VP: the EcuM reference to the Dem event is enabled and set (UpdateReference)
                 04: manually modify the EcuM reference to the Dem event
                 05: request a Dem event with updateReference attribute
                 06: VP: the EcuM reference to the Dem event  has not been changed(UpdateReference)</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.UpdateReference</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.CommonTest.testIngoreInvalidRequests</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/CommonTest.java</sourcefile>
      <sourceline>355</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests xml request which does not apply to the xml schema. The request must be ignored without
affecting any other request.&lt;/pre&gt;</description>
      <testexec>01: setup a project with Dem
                 02: run the SvcAs and request Dem events with a valid (resources/dem.events_1.xml) and an
                     invalid (resources/dem.events_1_Invalid.xml) xml files
                 03: VP: verify that the SvcAs warned about the invalid xml request file
                 04: VP: verify that the other Dem request file has been correctly processed anyway</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.errorhandling.common.IngoreInvalidRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.CommonTest.testProviderDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/CommonTest.java</sourcefile>
      <sourceline>412</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests to disable and enable service providers. Implicitely tests "svcas.req.ProviderNotAvailable"
since file resources/xy.abcdefs_1.xml is registered for a service that is never provided and the
SvcAs silently ignores this request without affecting any other operation (see VP 04).&lt;/pre&gt;</description>
      <testexec>01: setup a project with Com, Dem, EcuM and Os.
                 02: In the configuration/preferences section of the SvcAs memento disable all services (just
                     like the configuration page does).
                 03: run the SvcAs.
                 04: VP: verify that the SvcAs did not change any module configuration since all services are
                     disabled. Verify that the SvcAs did not warn about any request (i.e. those who have no provider
                     available at all).
                 05: Now enable all services.
                 06: run the SvcAs.
                 07: VP: verify that the SvcAS changed the module configuration.</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ProviderNotAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ProviderDisabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.CommonTest.testChainedRequests</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/CommonTest.java</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests chained requests from test provider AAAProviderOperation to BBBProviderOperation. So there
is only a static request xml file for the AAA service (aaa.models:1). The AAAProvider requests as
many BBB models in its execute phase as it got requests for aaa models. The BBBProvider sets the
updateReference which is then evaluated by the AAAProvider in the result phase.
Tests support for different Autosar versions since it creates a 3.1 project unlike other tests.&lt;/pre&gt;</description>
      <testexec>01: setup a project with Com (necessary for both test providers to get a valid DCtxt).
                 02: run the SvcAs.
                 03: VP: verifies that the chained request was successful by quering the AAAProvider.</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ChainedRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AUTOSARVersions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.CommonTest.testNamedEntryEquals</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/CommonTest.java</sourcefile>
      <sourceline>678</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that a NamedEntry has a working equals method operating on the name.&lt;/pre&gt;</description>
      <testexec>01: create three new EventSettings (name == null)
                 02: set name of setting3 to "a"
                 03: VP: setting1 does not equal null
                 04: VP: setting1 does equal itself
                 05: VP: setting1 does equal setting2
                 06: VP: setting1 does not equal setting3
                 07: set name of setting1 to "a"
                 08: VP: setting1 does equal setting3
                 09: VP: check that hash code for setting1 does equal hash code for setting3 and does not equal hash code for setting 2</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingNamedEntryEquals</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvents1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/DemProviderTest.java</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <description>Verifies that the Dem service provider correctly adds Dem events and removes Dem events which are not requested anymore.</description>
      <testexec>01: create new project with Dem
                 02: request three Dem events (internal, counter-based, time-based)
                 03: VP: multiple configuration container has been added (AddDemMultipleConfigContainer)
                 04: VP: Dem events and parameters have been set, required parameters are disabled (AddDemEvent, DemEventParameters, SetEventKind, SetOperationCycle, DisableParameters)
                 05: VP: time-based and counter based support is enabled (SetDebounceCounterBasedSupport, SetTimeBasedSupport)
                 06: VP: events Ids are assigned correctly (CalcEventIds)
                 07: set several parameters of the counter-based and internal event to enabled and manually modified
                 08: only request internal and counter-based event, counter-based event request has different parameters
                 09: VP: the time-based event does not exist anymore
                 10: VP: the manual modified parameters have not been changed (SetOperationCycle,DisableParameters), other parameters have correct value
                 11: VP: event Ids are assigned correctly (CalcEventIds)
                 12: do not request Dem events anymore
                 13: VP: the three previously allocated Dem events do not exist anymore</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.demevents.AddDemEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.demevents.AddDemMultipleConfigContainer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.demevents.DemEventParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.demevents.CalcEventIds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.demevents.SetEventKind</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.demevents.SetOperationCycle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.demevents.DisableParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.demevents.SetDebounceCounterBasedSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.demevents.SetTimeBasedSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CreateCtrModuleDemEventParameterRefsOnlyIfListEmpty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.DemProviderTest.testSvcDemOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/DemProviderTest.java</sourcefile>
      <sourceline>283</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.DemProviderTest.testNLSString</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/DemProviderTest.java</sourcefile>
      <sourceline>308</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.DemProviderTest.testDemPushOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/DemProviderTest.java</sourcefile>
      <sourceline>335</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Push data into the system model&lt;/pre&gt;</description>
      <testexec>01:  Push data into the system model</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.PushOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.DemProviderTest.testDemEvent</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/DemProviderTest.java</sourcefile>
      <sourceline>414</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.DemProviderTest.testRequestDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/DemProviderTest.java</sourcefile>
      <sourceline>463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if correct statuses are added when request is disabled.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableRoot</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.DemProviderTest.testEventDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/DemProviderTest.java</sourcefile>
      <sourceline>487</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if no changes are made for disabled event.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctions</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>Verifies that the EcuM service provider correctly adds EcuM init functions and removes init functions which are not requested anymore.</description>
      <testexec>01: create new project with EcuM
                 02: request six init functions, one in init list zero, and five in init list one
                 03: VP: check that multiple configuration container has been added (AddEcuMMultipleConfigContainer)
                 04: VP: check that the init functions have been added to the corresponding init lists (AddInitListZeroEntry, AddInitListOneEntry, EcuMInitFunctionParameters)
                 05: VP: check that the entries have been added in the right order (SortEntries)
                 06: delete Det_Init from initList_0 and create it under a different name MyDet_Init but with same service in initList_1
                 07: request seven init functions
                 08: VP: check that the SvcAs has not re-created Det_Init under initList_0 and uses MyDet_Init (EntryExists, UnpreferredInitList)
                 09: VP: check that the init functions have been added to the corresponding init lists (AddInitListOneEntry, EcuMInitFunctionParameters)
                 10: VP: check that the entries have been added in the right order (SortEntries)
                 11: don't request init functions anymore
                 12: VP: check that all init functions have been removed except the manually added Det_Init</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ecuminitfunctions.AddInitListZeroEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ecuminitfunctions.AddInitListOneEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ecuminitfunctions.AddEcuMMultipleConfigContainer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ecuminitfunctions.EcuMInitFunctionParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ecuminitfunctions.SortEntries</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ecuminitfunctions.EntryExists</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ecuminitfunctions.WrongInitList</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>svcas.design.errorhandling.ecuminitfunctions.UnpreferredInitList</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ecuminitfunctions.EcuMModuleParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ecuminitfunctions.EcuMModuleRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AddWarningForManuallyEdited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>svcas.req.IgnoreManuallyEditedParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctionsUnpreferredInitList</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the EcuM service provider warns if a manual init function entry was found in an
init list other than the preferred one.&lt;/pre&gt;</description>
      <testexec>01: create new project with EcuM
                 02: creates a manual init function entry for the Can Init function in list zero
                 03: run svcAs
                 04: VP: check that the SvcAs warned about the unpreferred init list of Can Init</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.errorhandling.ecuminitfunctions.UnpreferredInitList</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMInitFunctionsUnfulfilledOrder</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>433</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the EcuM service provider warns if the requested init functions order can not be
performed (i.e. if the order contains unresolveable cycles).&lt;/pre&gt;</description>
      <testexec>01: create new project with EcuM
                 02: creates a manual init function entry for the Can Init function in list zero
                 03: run svcAs
                 04: VP: check that the SvcAs warned about the unfulfilled init list order of Can Init</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.errorhandling.ecuminitfunctions.UnfulfilledOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testInvalidModuleRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <description>Verifies that the EcuM service provider donnot set value to EcuMModuleRef if the requested reference is invalid or not loaded in the project.</description>
      <testexec>01: create new project with EcuM
                 02: creates a manual init function entry for the Can Init function in list zero
                 03: run svcAs
                 04: VP: check that the SvcAs has not set any value to EcuMModuleRef</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.errorhandling.ecuminitfunctions.InvalidModuleRefPath</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcumInitFnctEntry</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>536</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testSvcLdComOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>563</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testNLSString</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>587</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testEcuMOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>617</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Push data into the system model&lt;/pre&gt;</description>
      <testexec>01:  Push data into the system model</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.PushOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testRequestDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>690</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if correct statuses are added when request is disabled.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableRoot</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.EcuMProviderTest.testEventDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/EcuMProviderTest.java</sourcefile>
      <sourceline>716</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if no changes are made for disabled event.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.FOComProviderTest.testFoComPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/FOComProviderTest.java</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests the service provider for the FOCom module&lt;/pre&gt;</description>
      <testexec>Run SvcAs and check config</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.focomsignals.FOComSignalParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AddWarningForManuallyEdited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>svcas.req.IgnoreManuallyEditedParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.FOComProviderTest.testSvcFoComOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/FOComProviderTest.java</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.FOComProviderTest.testNLSString</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/FOComProviderTest.java</sourcefile>
      <sourceline>117</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.FOComProviderTest.testPduEntries</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/FOComProviderTest.java</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.FOComProviderTest.testPduIndicationConfirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/FOComProviderTest.java</sourcefile>
      <sourceline>170</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.FOComProviderTest.testNullValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/FOComProviderTest.java</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.FOComProviderTest.testEventDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/FOComProviderTest.java</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if no changes are made for disabled event.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.FOComProviderTest.testFoComPushOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/FOComProviderTest.java</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Push data into the system model&lt;/pre&gt;</description>
      <testexec>01:  Push data into the system model</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.PushOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LdComProviderTest.testLdComPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LdComProviderTest.java</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests the service provider for the LdCom module&lt;/pre&gt;</description>
      <testexec>Run SvcAs and check config</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ldcomsignals.LdComSignalParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AddWarningForManuallyEdited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>svcas.req.IgnoreManuallyEditedParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LdComProviderTest.testSvcLdComOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LdComProviderTest.java</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LdComProviderTest.testNLSString</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LdComProviderTest.java</sourcefile>
      <sourceline>179</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LdComProviderTest.testPduEntries</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LdComProviderTest.java</sourcefile>
      <sourceline>206</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LdComProviderTest.testPduIndicationConfirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LdComProviderTest.java</sourcefile>
      <sourceline>230</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LdComProviderTest.testPduTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LdComProviderTest.java</sourcefile>
      <sourceline>257</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LdComProviderTest.testNullValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LdComProviderTest.java</sourcefile>
      <sourceline>274</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LdComProviderTest.testLdComPushOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LdComProviderTest.java</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Push data into the system model&lt;/pre&gt;</description>
      <testexec>01:  Push data into the system model</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.PushOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LdComProviderTest.testEventDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LdComProviderTest.java</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if no changes are made for disabled event.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LibProviderTest.testSvcLibOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LibProviderTest.java</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies the NLS messages.&lt;/pre&gt;</description>
      <testexec>Test NLS messages</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LibProviderTest.testSvcLibApiOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LibProviderTest.java</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LibProviderTest.testSvcAsOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LibProviderTest.java</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LibProviderTest.testNLSString</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LibProviderTest.java</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LibProviderTest.testNLSString2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LibProviderTest.java</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.LibProviderTest.testSvcRequestsEvent</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/LibProviderTest.java</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlocks1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/NvMProviderTest.java</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <description>Verifies that the NvM service provider correctly adds NvM blocks and removes NvM blocks which are not requested anymore.</description>
      <testexec>01: create new project with NvM
                 02: request three NvM blocks (native, redundant, dataset)
                 03: VP: NvM blocks and parameters have been set (AddNvMBlock, NvMBlockParameters )
                 04: VP: block Ids are assigned correctly (CalcBlockIdentifier)
                 05: VP: calculated values and default values assigned correctly (CalcRomBlockNum, CalcBlockNum, SetDefaultValues, CalcCRCParameters)
                 06: set several parameters of the native and redundant block to manually modified
                 07: only request native and redundant block, redundant block request has different parameters
                 08: VP: the data set block does not exist anymore
                 09: VP: the manual modified parameters have not been changed (SetDefaultValues), other parameters have correct value
                 10: VP: VP: block Ids are assigned correctly (CalcBlockIdentifier)
                 11: do not request NvM blocks anymore
                 12: VP: the three previously allocated NvM blocks do not exist anymore</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.nvmblocks.AddNvMBlock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.nvmblocks.NvMBlockParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.nvmblocks.CalcBlockIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.nvmblocks.CalcRomBlockNum</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.nvmblocks.CalcBlockNum</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.nvmblocks.SetDefaultValues</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.nvmblocks.CalcCRCParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.nvmblocks.CalcNvMCallbacks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AddWarningForManuallyEdited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>svcas.req.IgnoreManuallyEditedParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>svcas.req.NvmUserHeader</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMBlock</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/NvMProviderTest.java</sourcefile>
      <sourceline>554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.NvMProviderTest.testSvcNvMOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/NvMProviderTest.java</sourcefile>
      <sourceline>604</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.NvMProviderTest.testNvMPushOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/NvMProviderTest.java</sourcefile>
      <sourceline>629</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Push data into the system model&lt;/pre&gt;</description>
      <testexec>01:  Push data into the system model</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.PushOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.NvMProviderTest.testRequestDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/NvMProviderTest.java</sourcefile>
      <sourceline>698</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if correct statuses are added when request is disabled.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableRoot</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.NvMProviderTest.testEventDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/NvMProviderTest.java</sourcefile>
      <sourceline>731</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if no changes are made for disabled event.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarms1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider correctly adds Os alarms and removes Os alarms which are not requested anymore.&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os Alarms initially exist
                 03: request two Os alarms
                 04: VP: the Os alarms and its parameters have been set
                 05: VP: two references OsAppAlarmRef of the Os application "MyApplication" have been set
                 06: set several parameters of the alarm to different values and manually modified
                 07: request again the Os alarms
                 08: VP: the manual modified parameters of the alarm have not been changed, other parameters have correct value
                 09: do not request Os alarms anymore
                 10: VP: the two previously allocated Os alarms do not exist anymore
                 11: VP: the references from the Os application "MyApplication" to the removed Os alarms are also removed</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osalarms.AddOsAlarm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osalarms.OsAlarmParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osalarms.OsAlarmApplicationRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOnlyIfExtraData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOsReferences</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsEvents1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>353</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider correctly adds Os events and removes Os events which are not requested anymore.&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os events initially exist
                 03: request two Os events
                 04: VP: the Os event and its parameters have been set
                 05: VP: three references OsTaskEventRef of several Os tasks have been set
                 06: do not request Os events anymore
                 07: VP: the two previously allocated Os events do not exist anymore
                 08: VP: the references from the Os tasks to the removed Os events are also removed</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osevents.AddOsEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osevents.OsEventParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osevents.OsEventTasks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOsReferences</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannels1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>446</sourceline>
      <version>1</version>
      <description>Verifies that the Os service provider correctly adds Os Ioc channels and removes Os Ioc channels which are not requested anymore.</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os Ioc channels initially exist, the Os/OsIoc container is disabled
                 03: request one Os Ioc channels
                 04: VP: the Os/OsIoc container is enabled, the Os Ioc channel and its parameters have been set
                 05: set several parameters of the Ioc channel to different values and manually modified
                 06: request again the Os Ioc channel and additionally request a second Ioc channel
                 07: VP: the manual modified parameters of "MyIOCChannel1" have not been changed, other parameters have correct value
                 08: VP: the newly requested Os Ioc channel "MyIOCChannel2" has been set
                 09: do not request Os Ioc channels anymore
                 10: VP: the three previously allocated OS Ioc channels do not exist anymore</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osiocchannels.AddOsIocChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osiocchannels.AddOsIocDataTypeIncludeHeader</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osiocchannels.EnableIoc</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osiocchannels.OsIocChannelParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ContainerDisabledIfEmpty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsrs1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>772</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider correctly adds Os ISRs and removes Os ISRs which are not requested anymore.&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os ISRs initially exist
                 03: request two Os ISRs
                 04: VP: Os ISRs and parameters have been set
                 04: VP: Os ISRs and parameters have been set, required parameters are disabled (AddISR, OsISRParameters, IRQLevel, IRQVector)
                 05: set several parameters of the ISR "Can_Tx_Interrupt" to different values and manually modified
                 06: request again the two Os Isrs with slightly different parameters and additionally request a third ISR
                 07: VP: the stack size of ISR "Can_Rx_Interrupt" has been correctly updated
                 08: VP: the manual modified parameters of "Can_Tx_Interrupt" have not been changed, other parameters have correct value
                 09: VP: the newly requested Os Isr "MyIsr" has been set
                 10: do not request Os ISRs anymore
                 11: VP: the three previously allocated OS ISRs do not exist anymore</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osisrs.AddISR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osisrs.OsISRParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osisrs.IRQLevel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osisrs.IRQVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osisrs.OsISRApplicationRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsResources1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>912</sourceline>
      <version>1</version>
      <description>Verifies that the Os service provider correctly adds Os resources and removes Os resources which are not requested anymore.</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os resources initially exist
                 03: request two Os resources
                 04: VP: Os resources and parameters have been set
                 05: set parameter "OsResourceProperty" of resource "MyOsResource1" to "INTERNAL" and thus make it manually modified
                 06: request again the Os resource "MyOsResource1", the Os resource "MyOsResource2" is no longer requested
                 07: VP: the Os Resource "MyOsResource2" and any reference to it has been removed, the parameter "OsResourceProperty" of resource "MyOsResource1" has not been overwritten
                 08: do not request Os resources anymore
                 09: VP: the Os resource "MyOsResource1" and any reference to it has been removed, there are no more Os resources</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osresources.AddOsResource</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osresources.OsResourceParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osresources.OsResourceTasks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osresources.OsResourceISR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osresources.OsResourceApplicationRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOsReferences</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinlocks1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>1109</sourceline>
      <version>1</version>
      <description>Verifies that the Os service provider correctly adds Os spinlocks and removes Os spinlocks which are not requested anymore.</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os spinlocks initially exist
                 03: request two Os spinlocks with MyOsSpinlock2 being successor of MyOsSpinlock1
                 04: VP: Os spinlocks, parameters, and references have been set
                 05: invert successor relation and thus make both spinlocks manually modified
                 06: request again both the Os spinlocks
                 07: VP: successor relation has been inverted
                 08: do not request Os MyOsSpinlock1 anymore
                 09: VP: the Os resource "MyOsSpinlock1" and any reference (including successor relationship) to it has been removed, MyOsSpinlock2 exists without successor
                 10: do not request any spinlocks anymore
                 11: VP: no spinlocks exist anymore</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osspinlocks.AddOsSpinlock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osspinlocks.OsSpinlockParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AddWarningForManuallyEdited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AddWarningForDisabledObjectWithRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>svcas.req.IgnoreManuallyEditedParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOsReferences</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTables1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>1307</sourceline>
      <version>1</version>
      <description>Verifies that the Os service provider correctly adds Os schedule tables and removes Os schedule tables which are not requested anymore.</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os schedule tables initially exist
                 03: request two Os schedule tables, "Rte_SchMScheduleTable" has length, expiry points and maxAdvance/maxRetard which are too short for the counter
                 04: VP: Os schedule tables and parameters have been set
                 05: VP: check that the warnings regarding too short duration, expiry points and maxAdvance/maxRetard have been reported (DurationTooSmall,ExpiryPointOffsetTooSmall)
                 06: set several parameters of schedule table "Rte_default_schedule_table"and thus make it manually modified
                 07: create schedule table "DuplicateActionsTest_ScheduleTable" with a setEvent and taskActivation action
                 08: request again the two Os schedule tables and additionally request a third one "DuplicateActionsTest_ScheduleTable"
                 09: VP: the three Os schedule tables exist and have correct values, manually edited parameters have not been overwritten
                 10: VP: the schedule table "DuplicateActionsTest_ScheduleTable" has only the two manually created actions; the requested actions with different names have been merged with the existing ones
                 11: VP: check that the calculated application scheduleTable references get deleted by SvcAs and recreated if needed.
                                                 Also check that the manually created application scheduleTable references are not altered by SvcAs
                                 12: remove manually created schedule table since it may not be removed by the wizard
                 13: do not request Os schedule tables anymore
                 14: VP: all Os schedule tables have been removed, the references to the removed schedule tables also have been removed</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osscheduletables.AddOsScheduleTable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osscheduletables.OsScheduleTableParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osscheduletables.OsScheduleTableApplicationRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osscheduletables.DuplicateActions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>svcas.design.errorhandling.osscheduletables.DurationTooSmall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>svcas.design.errorhandling.osscheduletables.ExpiryPointOffsetTooSmall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.UniqueOsAppScheduleTableRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOsReferences</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounters1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>1709</sourceline>
      <version>1</version>
      <description>Verifies that the Os service provider correctly adds Os counters and removes Os counters which are not requested anymore.</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.oscounters.AddOsCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.oscounters.OsCounterParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.oscounters.OsCounterApplicationRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOnlyIfExtraData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOsReferences</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesInvalidCounter</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>1870</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider warns if the specified Os counter is invalid or non-existing.&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os, create default objects but do not create any Os counter
                 02: VP: no Os schedule tables initially exist
                 03: run SvcAs / request two Os schedule tables
                 04: VP: verify that the SvcAs warned about the missing os counter</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.errorhandling.osscheduletables.InvalidCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesMissingOsSecondsPerTick</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>1909</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider warns if the specified Os counter lacks a specified OsSecondsPerTick
parameter and thus the schedule table duration can not be calculated.&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os, disable the Os counter OsSecondsPerTick parameters
                 02: VP: no Os schedule tables initially exist
                 03: run SvcAs / request two Os schedule tables
                 04: VP: verify that the SvcAs warned about invalid duration, expiry point offset and maximum advanced retard</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.errorhandling.osscheduletables.InvalidDuration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>svcas.design.errorhandling.osscheduletables.InvalidExpiryPointOffset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>svcas.design.errorhandling.osscheduletables.InvalidMaxAdvanceRetard</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesDurationTooSmall</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>1960</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider warns if the requested schedule table duration is less
than the duration of the specified Os counter.&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os schedule tables initially exist
                 03: run SvcAs / request a Os schedule table whose duration is less than the one of the counter
                 04: VP: verify that the SvcAs warned about the too short schedule table duration</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.errorhandling.osscheduletables.DurationTooSmall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesExpiryPointOffsetTooSmall</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2000</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider warns if the requested schedule table expiry point offset
is less than the duration of the specified Os counter.&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os schedule tables initially exist
                 03: run SvcAs / request a Os schedule table whose expiry point offset is less than one Os counter tick
                 04: VP: verify that the SvcAs warned about the too short schedule table expiry point offset</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.errorhandling.osscheduletables.ExpiryPointOffsetTooSmall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsSecondsPerTickInPicoSeconds</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2040</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider can process a very small OsSecondsPerTick value
(i.e. still generates correct values)&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: set a small value for SecondsPerTick
                 03: VP: no Os schedule tables initially exist
                 04: run SvcAs / request a Os schedule table that contains a small duration
                 05: VP: verify that the SvcAs set correct values</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osscheduletables.OsScheduleTableParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesNoExpiryPointsLimit</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2141</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider does no limit creation of expiry points.&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os schedule tables initially exist
                 03: run SvcAs / request a Os schedule table that contains 5001 expiry points (see request class
                     eb.tresos.svcas.test.requester.OsScheduleTableMaxExpiryPointsRequester
                 04: VP: verify that the requested schedule table has been created with all expiry points</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osscheduletables.AddOsScheduleTable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsScheduleTablesDuplicateExpiryPoints</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Checks that duplicate expity points are merged&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os schedule tables initially exist
                 03: run SvcAs / request a Os schedule table that contains duplicate expiry points
                 04: VP: verify that the SvcAs merged duplicated entry points     *</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.errorhandling.osscheduletables.DuplicateExpiryPoints</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsTasks1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the Os service provider correctly adds Os tasks and removes Os tasks which are not requested anymore.&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os tasks initially exist
                 03: request two Os tasks
                 04: VP: Os tasks and parameters have been set
                 05: set several parameters of Task "MyTask1" and thus make it manually modified
                 06: request again the two Os tasks
                 07: VP: the manually edited parameters have not been overwritten
                 08: do not request Os tasks anymore
                 09: VP: the Os tasks have been removed</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ostasks.AddOsTask</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ostasks.OsTaskParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.ostasks.OsTaskApplicationRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>svcas.req.AddWarningForManuallyEdited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>svcas.req.IgnoreManuallyEditedParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>svcas.req.IgnoreCalculatedParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOsReferences</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testFindOsCounters</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2387</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Finds the OsCounters&lt;/pre&gt;</description>
      <testexec>01: create new project with module configuration Os
                 02: create 2 OsCounters
                 03: VP: verify that OsCounters contains some string
                 04: VP: set the OsCounters null
                 05: VP: verify that the OsCounters are empty</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testSvcOsOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2556</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testNLSString</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2593</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsPushOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2642</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Push data into the system model&lt;/pre&gt;</description>
      <testexec>01:  Push data into the system model</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.PushOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testDoSetOsResource</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2774</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsAlarm</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2805</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsCounter</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2842</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsEvent</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2872</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2894</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsIsr</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2959</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsResource</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>2999</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsSchedule</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>3019</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsSpinLock</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>3058</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsTask</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>3081</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testOsIocChannelsHeaderManuallyEdited</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>3111</sourceline>
      <version>1</version>
      <description>Verifies that the Os service provider correctly adds Os Ioc channels and does not remove Os Ioc Headers that were added manually</description>
      <testexec>01: create new project with module configuration Os
                 02: VP: no Os Ioc channels initially exist, the Os/OsIoc container is disabled
                 03: request one Os Ioc channels
                 04: VP: new Ioc include header marked as manually edited is added
                 05: verify that manually edited Ioc include header was not removed even when it was no longer requested</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.osiocchannels.AddOsIocChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>svcas.req.CalculateServiceNeeds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>svcas.req.ExecutionMultipleTimes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testRequestDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>3229</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if correct statuses are added when request is disabled.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableRoot</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testEventDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>3262</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if no changes are made for disabled event.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testContainerDoesNotExist</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>3293</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if container is missing no exception is thrown.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOsReferences</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.OsProviderTest.testNoOsIoc</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/OsProviderTest.java</sourcefile>
      <sourceline>3330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if request is processed correctly when OsIoc is not inside Os.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.RemoveObsoleteOsReferences</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.StringTest.testSvcRequestsEvent</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/StringTest.java</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the SvcRequestsEvent has a working toString() method.&lt;/pre&gt;</description>
      <testexec>01: create new SvcRequestsEvent
                 02: VP: toString() does not return null</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.StringTest.testNamedEntry</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/StringTest.java</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the EventSetting has a working toString() method.&lt;/pre&gt;</description>
      <testexec>01: create new EventSetting
                 02: VP: toString() does return "EventSetting(null)"</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.StringTest.testSvcURI</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/StringTest.java</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the SvcURI has a working toString() method.&lt;/pre&gt;</description>
      <testexec>01: create new SvcURI without scheme, host, port and fragment
                 02: VP: toString() does return "null://null"
     03: create new SvcURI with scheme "a" without host, port and fragment
                 04: VP: toString() does return "a://null"
     05: create new SvcURI with scheme "a", host "b" without port and fragment
                 06: VP: toString() does return "a://b"
     07: create new SvcURI with scheme "a", host "b", port "1" without fragment
                 08: VP: toString() does return "a://b:1"
     09: create new SvcURI with scheme "a", host "b", port "1", fragment "c"
                 10: VP: toString() does return "a://b:1#c"
     11: create new SvcURI with scheme "a", host "b", fragment "c" without port
                 12: VP: toString() does return "a://b#c"
     13: create new SvcURI with host "b" without scheme, port, fragment
                 14: VP: toString() does return "null://b"
     15: create new SvcURI with port "1" without scheme, host, fragment
                 16: VP: toString() does return "null://null:1"</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.StringTest.testSingleValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/StringTest.java</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the SingleValue has a working toString() method.&lt;/pre&gt;</description>
      <testexec>01: create new empty SingleValue
                 02: VP: toString() does return "PLAIN: null"
     03: create new SingleValue "abc"
                 04: VP: toString() does return "PLAIN: abc"
                 05: create new SingleValue of type SingleValue.TYPE.XPATH "abc"
                 06: VP: toString() does return "XPATH: abc"</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.StringTest.testServiceDescriptor</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/StringTest.java</sourcefile>
      <sourceline>165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies that the ServiceDescriptor has a working toString() method.&lt;/pre&gt;</description>
      <testexec>01: create new ServiceDescriptor with name "name", undefined version without description and AUTOSAR version
                 02: VP: toString() does return "name:-1 (null)"
                 03: create new ServiceDescriptor with name "name", version 5,  description "description" without AUTOSAR version
                 04: VP: toString() does return "name:5 (1.2.3)"</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testSomeIpXfMappings</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests the service provider for the SomeIpXf module&lt;/pre&gt;</description>
      <testexec>Run SvcAs and check config</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.xfrmmappings.AddXfrmMapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.xfrmmappings.XfrmParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testE2EXfMappings</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests the service provider for the E2EXf module&lt;/pre&gt;</description>
      <testexec>Run SvcAs and check config</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.xfrmmappings.AddXfrmMapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>svcas.design.algorithm.provider.xfrmmappings.XfrmParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testE2EXfMappingsForTransformersWithTheSameReference</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests the service provider for the E2EXf module&lt;/pre&gt;</description>
      <testexec>Run SvcAs and check config</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.xfrmmappings.AddXfrmMapping</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>svcas.req.XfrmMappingsWithSameReference</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testE2EXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testScvXfrmOperationStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>292</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testNLSString</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>317</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testXfrmMapping</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testEventDescription</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>400</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testSingleValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>433</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testSingleValue2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>468</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testAutosarVersion</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>500</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Verifies NLS Messages contain all the messages.&lt;/pre&gt;</description>
      <testexec>01: Test if nls are correctly generated</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingToString</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testSvcRequestEvent</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>520</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testEntries</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>581</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;The svcas shall provide an equals method operating on the name&lt;/pre&gt;</description>
      <testexec>01: The svcas shall provide an equals method operating on the name</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.DebuggingNamedEntryEquals</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testXfrmPushOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>607</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Push data into the system model&lt;/pre&gt;</description>
      <testexec>01:  Push data into the system model</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.PushOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testServiceManagedEntries</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>712</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testSvcRequestOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>744</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testRequestOperation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>796</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test setters and getters of classes.&lt;/pre&gt;</description>
      <testexec>01: Test setters and getters of classes</testexec>
      <providescoverage>
        <provcov>
          <linksto>svcas.req.ValidateClasses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.svcas.test.provider.XfrmProviderTest.testEventDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_SvcAs)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SvcAs/test/junit/plugin.Test_SvcAs.Autosar.WINDOWS/Java/eb/tresos/svcas/test/provider/XfrmProviderTest.java</sourcefile>
      <sourceline>871</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests if no changes are made for disabled event.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>svcas.design.algorithm.provider.common.EnableEvent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
