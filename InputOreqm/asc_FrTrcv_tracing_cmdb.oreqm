<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_FrTrcv_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_Native/asc_FrTrcv_Autosar_T01_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_Native/asc_FrTrcv_Autosar_T01_requirements_AUTOSAR_SWS_FlexRayTransceiverDriver.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_Native/asc_FrTrcv_Autosar_T01_requirements_FrTrcv_EBExtensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_Native/asc_FrTrcv_Autosar_T01_test_manConfTests.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/common_req/FrTrcv_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 19:42:43 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_FrTrcv_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_Native/asc_FrTrcv_Autosar_T01_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_Native/asc_FrTrcv_Autosar_T01_requirements_AUTOSAR_SWS_FlexRayTransceiverDriver.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_Native/asc_FrTrcv_Autosar_T01_requirements_FrTrcv_EBExtensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_Native/asc_FrTrcv_Autosar_T01_test_manConfTests.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/common_req/FrTrcv_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">

    <specobject>
    <!-- lim.FrTrcv.Reinit -->
      <id>lim.FrTrcv.EB_INTREQ_FrTrcv_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      Limitation: The reinitialization process shall not interrupt other module functions.
      If reinitialization of the module is required, the call of
      <code>FrTrcv_Init()</code> shall not interrupt other module functions.
      </description>
      <rationale>
      The reinitialisation process resets all internal shared variables. Continuing an
      interrupted module function after reinitialization can lead to undefined module behavior.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
    <!-- 
      lim.FrTrcv.Init.Preemption
      ASCFRTRCV-326
    -->
      <id>lim.FrTrcv.EB_INTREQ_FrTrcv_0002</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      <code>FrTrcv_Init()</code> shall not be preempted by any other module API calls.
      It needs to be ensured that the function call <code>FrTrcv_Init()</code> is not
      preempted by any other module API calls.
      </description>
      <rationale>
      During the call of <code>FrTrcv_Init()</code> global variables get
      initialized. It is easy for the integrator to avoid this preemption, thus no data protection
      mechanism has been implemented for function <code>FrTrcv_Init()</code>.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv231</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall use the APIs of underlying DIO drivers
        synchronously.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement which defines required resources. It is not a requirement
        of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv433</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver should use the APIs of underlying SPI drivers
        synchronously if possible and asynchronously where required.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement which defines required resources. It is not a requirement
        of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv441</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay transceiver requires a LEVEL 2, Enhanced  (Synchronous/Asynchronous)
        SPI Handler/Driver
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement which defines required resources. It is not a requirement
        of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv238</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall handle the transceiver-specific timing
        req internally.
      </description>
         <comment>
        The timing behavior is configurable.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4_35</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv059</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        A FlexRay Transceiver Driver implementation may support different FlexRay
        Transceiver hardware.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This requirement a suggestion and does not describe how to implement the
        support of different FlexRay transceiver hardware within an implementation.
        The EB plugin and build environment assumes that each transceiver hardware
        has its own parallel implementation. This is called "Variant".
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv021</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The BSW00347 is applied for the naming in a way that no FlexRay transceiver
        hardware specific naming extensions are used. The following naming
        convention shall be used as mentioned in BSW00347: Driver modules shall
        be named according to the following rules (only for implementation, not
        for the software specification): First the module name has to be listed:
        &lt;Module Abbreviation&gt; After that the vendor Id defined in the AUTOSAR
        vendor list has to be given &lt;Vendor Id&gt; At last a vendor specific name
        follows &lt;Vendor specific name&gt; All parts shall be separated by
        underscores "_" This naming extension applies to the following
        externally visible elements of the module:
        File names
        API names
        Published parameters
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_Manual_NamingConvention</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv033</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        FrTrcv.c is the implementation general C file. It does not contain interrupt
        routines.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        This paragraph does not describe the interface or the functionality of the module.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv058</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00346 Basic set of module files: FrTrcv_Cfg.c is the pre compile time
        configuration code file. It is generated by the configuration tool.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        The actual implementation does not require generated c-files for
        pre-compile-time parameters.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv057</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00345 Pre-compile-time configuration
        All modules of the AUTOSAR Basic Software, operating on Pre-compile-time
        configuration data (not to be modified after compile time), shall group
        and export the configuration data to configuration files.
        Module specific configuration header file naming convention:
        - &lt;Module name&gt;_Cfg.h and possibly
        - &lt;Module name&gt;_Cfg.c
        Static configuration is decoupled from implementation. Separation of
        configuration dependent data at compile time furthermore enhances flexibility,
        readability and reduces version management as no source code is affected.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is in first order a requirement on the SWS.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv079</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00380 Separate C-Files for configuration parameters
        Configuration parameters being stored in memory shall be placed into separate
        c-files (effected parameters are those from link-time configuration as well as
        those from post-build time configuration).
        Rationale: Enable the use of different object files.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/generate/src/FrTrcv_1_T01_Lcfg.c_7</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv117</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00419 Separate C-Files for pre-compile time configuration parameters
        Configuration parameters being stored in memory shall be placed into separate
        c-files (effected parameters are those from link-time configuration as well
        as those from post-build time configuration).
        Enable the use of different object files.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/generate/src/FrTrcv_1_T01_Lcfg.c_7</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv022</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        All AUTOSAR Basic Software Modules shall only import the necessary information
        (i.e. header files) that is required to fulfill the modules functional
        req. The header file structure shall include the following
        FlexRay-specific header files:
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        This paragraph does not describe the interface or the functionality of the module.
        Internal header files and interface header files shall only be included when required.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv113</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        FrTrcv.h - General header file of the FlexRay Transceiver Driver. It contains
        only information relevant for other BSW modules (API). Differences in API
        depending on the configuration are encapsulated.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/include/FrTrcv_1_T01.h_6</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv023</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Limit exported information: All AUTOSAR Basic Software Modules shall export only
        that kind of information in their correspondent header--files explicitly
        needed by other modules.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_Manual_FrTrcv.h</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv110</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        FrTrcv_Cfg.h - Pre compile time configuration parameter file. It is generated
        by the configuration tool.
      </description>
         <comment>
        <!-- Linked to FrTrcv_1_T01_Cfg.h -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/generate/include/FrTrcv_1_T01_Cfg.h_7</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv080</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv429</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        FrTrcv.h shall include FrTrcv_Cfg.h
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/include/FrTrcv_1_T01.h_15</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv430</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        FrTrcv.h shall include ComStack_Types.h
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/include/FrTrcv_1_T01.h_13</srcid><srcstatus/><internalId>347</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv431</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        FrTrcv.h shall include Fr_GeneralTypes.h Note: Fr_GeneralTypes.h - Contains
        definitions and declarations shared by all AUTOSAR FlexRay BSW modules.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/include/FrTrcv_1_T01.h_11</srcid><srcstatus/><internalId>346</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv266</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        SchM_FrTrcv.h - contains BSW scheduler declarations used by the FlexRay
        Transceiver Driver is included as specified by [21]
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        This paragraph does not describe the interface or the functionality of the module.
        Note: It is required to read BSW00435 to understand the paragraph.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv267</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        MemMap.h - the memory mapping abstraction mechanisms information is included as
        specified by [22].
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        This paragraph does not describe the interface or the functionality of the module.
        Note: It is required to read BSW00436 to understand the paragraph.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv335</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Dem.h - The module FrTrcv shall include the Dem.h file (see FrTrcv107). By this
        inclusion the APIs to report errors as well as the required Event Id
        symbols are included. Note: This specification defines the name of the
        Event Id symbols which are provided by XML to the DEM configuration tool.
        The DEM configuration tool assigns ECU dependent values to the Event Id
        symbols and publishes the symbols in Dem_IntErrId.h.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv335_1</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv335_2</srcid><srcstatus/><internalId>24</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv335_1</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Dem.h - The module FrTrcv shall include the Dem.h file (see FrTrcv107). By this
        inclusion the APIs to report errors as well as the required Event Id
        symbols are included. Note: This specification defines the name of the
        Event Id symbols which are provided by XML to the DEM configuration tool.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a general statement. The usage of the Dem API will be covered by other
        req.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv335</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv335_2</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The DEM configuration tool assigns ECU dependent values to the Event Id
        symbols and publishes the symbols in Dem_IntErrId.h.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for Dem. It is not a requirement of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv335</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv060</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Std_Types.h - includes platform specifc header files and compiler specifc
        header files. It defines standard data types and values for standard
        defines. This file is indirectly included via ComStack_Types.h.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for ComStack_Types.h (Base module).
        It is not a requirement of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv068</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Compiler.h - the compiler specific header file is Compiler.h. All mappings of
        not standardized keywords of compiler specific scope shall be placed and
        organized in this compiler specific type and keyword header. This file is
        indirectly included via ComStack_Types.h.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for ComStack_Types.h (Base module).
        It is not a requirement of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv062</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Platform_Types.h - the platform specific header file. All integer type
        definitions of target and compiler specific scope shall be placed and
        organized in this single type header. This file is indirectly included
        via ComStack_Types.h.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for ComStack_Types.h (Base module).
        It is not a requirement of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv424</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Det.h - FrTrcv.c shall include Det.h only if development error detection is
        turned on.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        This paragraph does not describe the interface or the functionality of the module.
        Note: It is required to read BSW00435 to understand the paragraph.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv408</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        EcuM_WakeupSourceType shall be imported via EcuM.h in case wake up is configured
        and supported by hardware.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/include/FrTrcv_1_T01_Extension.h_29</srcid><srcstatus/><internalId>349</internalId></linkedfrom><linkedfrom><srcid>src/Autosar_T01/src/FrTrcv_1_T01_CheckWakeupByTransceiver.c_22</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv409</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        EcuM_Cbk.h - the transceiver driver indicates the wake up source and mode to
        the ECU State Manager if supported by hardware
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.EB.ReportWakeUpToEcuM</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv476</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        FrTrcv_Cbk.h - the transceiver driver encapsulates declarations of the
        callouts/callbacks configured in FrTrcv456_Conf in this header file.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        FrTrcv provides no callback functions which are called by lower layer modules.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv227</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall support the independent configuration of
        the bus operation mode for each supported Cluster. Due to the different
        startup req on a multiple-FlexRay-Cluster-ECU, the FlexRay
        Transceiver Driver support the independent pre-selection of the bus
        operation mode  to which each FlexRay Transceiver device is set during
        the driver initialization.
      </description>
         <comment>
        Refined by FrTrcv.ASR40.FrTrcv270, which specifies the same behavior more clearly.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv270</srcid><srcstatus/><internalId>99</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv291</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        On initialization, the FrTrcv module shall switch all covered FlexRay
        transceivers into the state ACTIVE. This is observable, see FrTrcv277. In
        state ACTIVE each FlexRay transceiver may be in a different sub state.
        Only the states NORMAL and STANDBY are mandatory for FlexRay
        transceivers; all other states are optional. If a state is optional
        according to [5] and NOT supported by the transceiver and ECU hardware
        (e.g. SLEEP or RECEIVEONLY), the transceiver driver substitutes an
        equivalent state (i.e. STANDBY instead of SLEEP; and NORMAL instead of
        RECEIVEONLY) and returns the state actually supported by the transceiver
        hardware by the FrTrcv_GetTransceiverMode() function.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv291_1</srcid><srcstatus/><internalId>34</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv291_2</srcid><srcstatus/><internalId>35</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv291_3</srcid><srcstatus/><internalId>36</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv291_1</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        On initialization, the FrTrcv module shall switch all covered FlexRay
        transceivers into the state ACTIVE.
      </description>
         <comment>
        Refined by FrTrcv.ASR40.FrTrcv270
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv270</srcid><srcstatus/><internalId>99</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv291</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv291_2</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        In state ACTIVE each FlexRay transceiver may be in a different sub state.
        Only the states NORMAL and STANDBY are mandatory for FlexRay
        transceivers; all other states are optional.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This paragraph only informs about the minimum amount of states.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv291</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv291_3</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If a state is optional
        according to [5] and NOT supported by the transceiver and ECU hardware
        (e.g. SLEEP or RECEIVEONLY), the transceiver driver substitutes an
        equivalent state (i.e. STANDBY instead of SLEEP; and NORMAL instead of
        RECEIVEONLY) and returns the state actually supported by the transceiver
        hardware by the FrTrcv_GetTransceiverMode() function.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        Hardware supports all states.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv291</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv352</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay transceiver driver encapsulates transient or temporary modes within
        one of the static optional or mandatory FlexRay transceiver driver
        software states.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/src/FrTrcv_1_T01_SetTransceiverMode.c_186</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv451</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If a transceiver supports active star mode, do NOT assume it is in node mode.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is an advice for upper layer module and no FlexRay transceiver requirement.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv107</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Values for production code Event Ids are assigned externally by the
        configuration of the Dem. They are published in the file Dem_IntErrId.h
        and included via Dem.h.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for Dem. It is not a requirement of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv050</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Development error values are of type uint8.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        The type of development errors depend on the provided API to report.
        This is a requirement to the DET API.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv084</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Production code errors and development errors of FlexRay Transceiver Driver are
        provided in the table below. This list must be mapped into the code (i.e.
        the respective function calls to the error notifications must be in the
        code).
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        The list of production code and development errors is provided in
        FrTrcv.ASR40.FrTrcv085.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv085</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Development and Production Errors used by the FlexRay Transceiver Driver:
         ------------------------------------------------------------------------------------------
        |Type or error                 | Relevance   | Related error code              | Value[hex]|
         ==========================================================================================
        |API service called with wrong | Development | FRTRCV_E_FR_INVALID_TRCVIDX     | 0x01      |
        |parameter                     |             | FlexRay transceiver index       |           |
        |                              |             | out of range                    |           |
         ------------------------------------------------------------------------------------------
        |API service called with wrong | Development | FRTRCV_E_FR_INVALID_BRANCHIDX   | 0x02      |
        |parameter                     |             | FlexRay transceiver branch      |           |
        |                              |             | index out of range              |           |
         ------------------------------------------------------------------------------------------
        |API Service used without      | Development | FRTRCV_E_FR_UNINIT              | 0x10      |
        |initialization                |             |                                 |           |
         ------------------------------------------------------------------------------------------
        |API Service called in wrong   | Development | FRTRCV_E_FR_TRCV_NOT_STANDBY    | 0x11      |
        |operation mode                |             | FRTRCV_E_FR_TRCV_NOT_NORMAL     | 0x12      |
        |                              |             | FRTRCV_E_FR_TRCV_NOT_SLEEP      | 0x13      |
        |                              |             | FRTRCV_E_FR_TRCV_NOT_RECEIVEONLY| 0x14      |
         ------------------------------------------------------------------------------------------
        |API service called passing    | Development | FRTRCV_E_FR_TRCV_NULL_PTR       | 0x15      |
        |a NULL pointer as a parameter |             |                                 |           |
         ------------------------------------------------------------------------------------------
        |Error Status of Class A       | Production  | FRTRCV_E_FR_ERRN_TRCV           | *         |
        |(GPIO) transceiver            |             | &lt;TrcvIdx&gt;                 |           |
         ------------------------------------------------------------------------------------------
        |Error Status of B (SPI)       | Production  | FRTRCV_E_FR_BUSERROR_TRCV       | *         |
        |transceiver bus errors where  |             | &lt;TrcvIdx&gt;                 |           |
        |TrcvIdx is the transceiver    |             |                                 |           |
        |index                         |             |                                 |           |
         ------------------------------------------------------------------------------------------
        |No/incorrect communication    | Development | FRTRCV_E_FR_NO_CONTROL_TRCV     | 0x16      |
        |to transceiver                |             |                                 |           |
         ------------------------------------------------------------------------------------------
         * Assigned by DEM
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This paragraph gives an overview of all error codes. The usage of
        the error codes will be defined in other requirements.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv041</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00327 Error values naming convention
        All AUTOSAR Basic Software Modules shall apply the following naming rules
        for all error values:
        Error values shall have only CAPITAL LETTERS
        Naming convention: FRTRCV_E_&lt;ERRORNAME&gt;
        If &lt;ERRORNAME&gt; consists of several words, they shall be separated by underscores
        The error shows to which module it belongs.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS and not for the module itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv061</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The detection of development errors is configurable (ON / OFF) at pre-compile
        time. The switch FRTRCV_DEV_ERROR_DETECT shall activate or deactivate the
        detection of all development errors.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/config/FrTrcv_Extension.xdm.m4_461</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv061_1</srcid><srcstatus/><internalId>45</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv061_2</srcid><srcstatus/><internalId>46</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv061_1</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If FRTRCV_DEV_ERROR_DETECT is configured as ON, the FlexRay Transceiver Driver
        shall uses the API of the DET module.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_SetTransceiverMode</srcid><srcstatus/><internalId>365</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_GetTransceiverMode</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_GetTransceiverWUReason</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_ClearTransceiverWakeup</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_EnableTransceiverBranch</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_DisableTransceiverBranch</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_GetTransceiverError</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_SetTransceiverMode</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_GetTransceiverMode</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_GetTransceiverWUReason</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_ClearTransceiverWakeup</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_EnableTransceiverBranch</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_DisableTransceiverBranch</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_GetTransceiverError</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NullPtr_GetVersionInfo</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NullPtr_GetTransceiverMode</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NullPtr_GetTransceiverWUReason</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_NullPtr_GetTransceiverError</srcid><srcstatus/><internalId>385</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Det_InvMode_SetTransceiverMode</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv061</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>45</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv061_2</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If FRTRCV_DEV_ERROR_DETECT is configured as OFF, the FlexRay Transceiver Driver
        shall not uses the API of the DET module.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_Manual_DetOff</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv061</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv037</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If the FRTRCV_DEV_ERROR_DETECT switch is enabled API parameter checking is
        enabled. The detailed description of the detected errors can be found in
        chapter 7.3.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv119</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The detection of production code errors cannot be switched off.
      </description>
         <comment>
        This requirement is not applicable.
        Conflicts with EB requirement [BSWM_EB_002].
        See: http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/
        Software_Construction/Coding_Guidelines
        <!-- Not linked to deviation! -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv237</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall check the control communication to the
        transceiver and the reaction of the transceiver for correctness if
        supported by hardware.
      </description>
         <comment>
        This general requirement is covered by the specific requirements:
        FrTrcv.ASR40.FrTrcv278
        FrTrcv.ASR40.FrTrcv281
        FrTrcv.ASR40.FrTrcv284
        FrTrcv.ASR40.FrTrcv306
        FrTrcv.ASR40.FrTrcv437
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv437</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv278</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv281</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv284</srcid><srcstatus/><internalId>141</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv306</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv354</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        In case of faults of the transceiver hardware, the FlexRay Transceiver Driver
        shall raise a development error FRTRCV_E_FR_NO_CONTROL_TRCV if
        development error detection for the module FrTrcv is enabled.
      </description>
         <comment>
        This general requirement is covered by the specific requirements:
        FrTrcv.ASR40.FrTrcv278
        FrTrcv.ASR40.FrTrcv281
        FrTrcv.ASR40.FrTrcv284
        FrTrcv.ASR40.FrTrcv306
        FrTrcv.ASR40.FrTrcv437
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv437</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv278</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv281</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv284</srcid><srcstatus/><internalId>141</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv306</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv295</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FrTrcv module shall check for bus errors and report them to DEM executing
        Dem_ReportErrorStatus(FRTRCV_E_FR_BUSERROR_TRCV&lt;TrcvIdx&gt;,
        DEM_EVENT_STATUS_PREFAILED).
      </description>
         <comment>
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DemReporting</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DemReporting_ReceiveOnly</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DemReporting_StandbySleep</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv472</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If a no bus error is detected, the module shall execute
        Dem_ReportErrorStatus(FRTRCV_E_FR_BUSERROR_TRCV&lt;TrcvIdx&gt;,
        DEM_EVENT_STATUS_PREPASSED).
      </description>
         <comment>
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DemReporting</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DemReporting_ReceiveOnly</srcid><srcstatus/><internalId>391</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv051</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Detected development errors will be reported to the error hook of the
        Development Error Tracer (DET) if the pre-processor switch
        FRTRCV_DEV_ERROR_DETECT is set (see chapter 10).
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This paragraph only informs that error shall be reported to DET
        depends on FRTRCV_DEV_ERROR_DETECT. The specific DET reports will be
        defined in other requirements.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv052</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Production errors shall be reported to Diagnostic Event Manager.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a general statement. The implementation specific aspects are
        already covered by other requirements which explicitly state the
        situation and the corresponding error code.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv391</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If the configuration parameter FrTrcvErrorCheckDuringCommunication is set to
        true, the function FrTrcv_MainFunction shall report periodically the
        error state of the FlexRay transceiver to the Diagnostic Event Manager.
      </description>
         <comment>
        FrTrcvErrorCheckDuringCommunication parameter is not used. Control of DEM reporting
        is described in a linked requirements.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_20020</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_20021</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv384</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If an error (e.g. the state of the ERRN pin is active low) is detected the
        module shall execute Dem_ReportErrorStatus(
        FRTRCV_E_FR_ERRN_TRCV&lt;TrcvIdx&gt;, DEM_EVENT_STATUS_PREFAILED). In the above
        description, &lt;TrcvIdx&gt; represents the transceiver index.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.FeaturesNotSupported -->
        FrTrcv supports class A (GPIO) transciever, but with error detection capabilities of 
        Class B (SPI) transciever. This is the reason why FrTrcv reports FRTRCV_E_FR_BUSERROR_TRCV
        only, i.e. FRTRCV_E_FR_ERRN_TRCV is not reported.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.FeaturesNotSupported</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv395</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If an error is not detected (e.g. the state of the ERRN pin is passive high) the
        module shall execute Dem_ReportErrorStatus(
        FRTRCV_E_FR_ERRN_TRCV&lt;TrcvIdx&gt;, DEM_EVENT_STATUS_PREPASSED). In the above
        descriptions, &lt;TrcvIdx&gt; represents the transceiver index.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.FeaturesNotSupported -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.FeaturesNotSupported</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv296</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FrTrcv module shall use drivers for SPI and Dio to control the FlexRay bus
        transceiver hardware.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv296_1</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv296_2</srcid><srcstatus/><internalId>60</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv296_1</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FrTrcv module shall use drivers for SPI to control the FlexRay bus
        transceiver hardware.
      </description>
         <comment>
        This requirement is not applicable.
        Rational:
        Hardware of FrTrcv T01 cannot be controlled through SPI.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv296</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv296_2</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FrTrcv module shall use drivers for Dio to control the FlexRay bus
        transceiver hardware.
      </description>
         <comment>
        This requirement is informational only.
        Rational:
        This is a general requirement and does not explain how the Dio driver shall be used.
        Dio is necessary to control the hardware and is used in every conformance test.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv296</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv228</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The schedule of the initialization of the FlexRay Transceiver Driver shall be
        configurable.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        This describes a constraint of using the Init function of the FlexRay transceiver
        module. It is not a requirement for the FlexRay transceiver itself since the way of
        calling API functions is out of scope of the module implementation.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv358</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay bus transceiver driver shall fulfill the FlexRay Transceiver
        hardware timing requirements also on initialization.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4_35</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv359</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay transceiver driver initialization shall schedule before other BSW
        modules (e.g. the FlexRay State manager) access its software services.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This describes a constraint of using the Init function of the FlexRay transceiver
        module. It is not a requirement for the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv360</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The runtime of the underlying services used shall be short enough and
        synchronous in order to fulfill the requirements defined by the
        FlexRay EPL [5] and the timing requirements of the hardware device used. (FrTrcv231).
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This describes requirements for the underlying services (e.g. Dio).
        It is not a requirement for the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv361</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver runtime shall support setup and hold times
        of the FlexRay Transceiver Hardware devices in all states including low power
        states, e.g. sleep.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4_35</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv226</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Multiple FlexRay transceivers of the same type are handled by a single FlexRay
        transceiver driver;
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_TrcvModeTest</srcid><srcstatus/><internalId>395</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv401</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Each variable that shall be accessible by AUTOSAR Debugging, shall be defined as
        global variable.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.Debugging -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.Debugging</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv402</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        All type definitions of variables which shall be debugged, shall be accessible
        by the header file FrTrcv.h.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.Debugging -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.Debugging</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv403</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The declaration of variables in the header file shall be such, that it is
        possible to calculate the size of the variables by C-"sizeof".
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.Debugging -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.Debugging</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv404</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Variables available for debugging shall be described in the respective Basic
        Software Module Description
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.Debugging -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.Debugging</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv405</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The mode (FrTrcv_TrcvModeType) of the FlexRay Transceiver shall be available for
        debugging.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.Debugging -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.Debugging</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv406</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The wake up reason (FrTrcv_TrcvWUReasonType) of the FlexRay Transceiver shall be
        available for debugging if supported by hardware.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.Debugging -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.Debugging</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv407</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The wake up state of the FlexRay Transceiver shall be available for debugging if
        supported by hardware.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.Debugging -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.Debugging</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv450</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The branch state of the FlexRay Transceiver active stars shall be available for
        debugging if supported by hardware.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.Debugging -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.Debugging</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv002</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver module shall perform Inter Module Checks to avoid
        integration of incompatible files. The imported included files shall be
        checked by preprocessing directives. The following version numbers shall
        be verified:
        - &lt;MODULENAME&gt;_AR_RELEASE_MAJOR_VERSION
        - &lt;MODULENAME&gt;_AR_RELEASE_MINOR_VERSION
        Where &lt;MODULENAME&gt; is the module
        short name of the other (external) modules which provide header files
        included by the FlexRay Transceiver Driver module. If the values are not
        identical to the expected values, an error shall be reported. (BSW00004)
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.ConsistencyCheck -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.ConsistencyCheck</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv321</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Module Imported Type
        Dem
          Dem_EventIdType
          Dem_EventStatusType
        Dio
          Dio_ChannelType
          Dio_LevelType
          Dio_PortLevelType
          Dio_PortType
          Dio_ChannelGroupType
        EcuM
          EcuM_WakeupSourceType
        Icu
          Icu_ChannelType
        Spi
          Spi_ChannelType
          Spi_DataType
          Spi_NumberOfDataType
          Spi_SequenceType
          Spi_StatusType
        Std_Types
          Std_ReturnType
          Std_VersionInfoType
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This paragraph is no requirement, just a summary of used types.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv030</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00310 API naming convention All AUTOSAR Basic Software Modules shall
        implement an API based on the following naming rules: - Composition of
        API: &lt;Module name&gt;_ServiceName() Module name: 2..8 letters, derived from
        WP Architecture SW Module List - Only one underscore between module name
        and service name - Spelling of API: First letter of each word upper case,
        consecutive letters lower case.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS and not for the module itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv045</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00331 Separation of error and status values All Basic Software Modules shall
        strictly separate error and status information. This requirement applies
        to return values and also to internal variables.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS and not for the module itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv069</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00369 Do not return development error codes via API All AUTOSAR Basic
        Software Modules shall not return specific development error codes via
        the API. In case of a detected development error the error shall only be
        reported to the DET. If the API- function which detected the error has a
        return type it shall return E_NOT_OK.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS and not for the module itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv071</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00371 Do not pass function pointers via API The passing of function pointers
        as API parameter is forbidden for all AUTOSAR Basic Software Modules.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a general design rule. If implementing the module API as specified by
        AUTOSAR this requirement is fulfilled automatically and therefore redundant.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv076</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00377 Module specific API return types If a Basic Software Module needs
        module specific return types, it shall use one of the following
        possibilities: 1. Use uint8 as return value, take the standard E_OK value
        from Std_Types.h and define additional return values using #define. 2.
        Define a module specific return value with typedef enum. Hint: Within
        this enum, E_OK cannot be used (because E_OK is already #defined in
        Std_Types.h and OSEK OS)
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a general design rule. If implementing the module API as specified by
        AUTOSAR this requirement is fulfilled automatically and therefore redundant.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv048</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00335 Status values naming convention: The following naming rules apply for
        status values that are visible outside of the module: - Status values
        shall have only CAPITAL LETTERS - Naming convention: FRTRCV_&lt;STATUSNAME&gt;
        If &lt;STATUSNAME&gt; consists of several words, they shall be separated by
        underscores.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS and not for the module itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv434</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The type definition FrTrcv_TrcvModeType shall be kept in a file named
        Fr_GeneralTypes.h and be protected by a FR_GENERAL_TYPES define in order:
        - to be shared between different FlexRay Transceiver Drivers
        - to be included into the FrIf
        If different FlexRay Transceiver Drivers are used, only one instance of
        this file has to be included in the source tree
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for Fr_GeneralTypes.h (Base module). It is not a requirement
        of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv435</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The type definition FrTrcv_TrcvWUReasonType shall be kept in a file named
        Fr_GeneralTypes.h and be protected by a FR_GENERAL_TYPES define in order:
        - to be shared between different FlexRay Transceiver Drivers
        - to be included into the FrIf
        If different FlexRay Transceiver Drivers are used,
        only one instance of this file has to be included in the source tree.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for Fr_GeneralTypes.h (Base module). It is not a requirement
        of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv074</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name: FrTrcv_TrcvWUReasonType  Type: Enumeration  Range:
        FRTRCV_WU_NOT_SUPPORTED The transceiver does not support any information
                                for the wake up reason.
        FRTRCV_WU_BY_BUS The transceiver has detected that the bus has
                         caused the wake up of the ECU.
        FRTRCV_WU_BY_PIN The transceiver has detected a wake-up event at one
                         of the transceiver's pins (not at the FlexRay bus).
        FRTRCV_WU_INTERNALLY The transceiver has detected that the bus has woken
                             up by the ECU via FrTrcv_SetTransceiverMode() API call
        FRTRCV_WU_RESET The transceiver has detected that the "wake up" is  due to
                        an ECU reset.
        FRTRCV_WU_POWER_ON The transceiver has detected that the "wake up" is
                           due to an ECU reset after power on.
        Description: This type to be used to specify the wake up reason detected by
                     the FR transceiver in detail.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for Fr_GeneralTypes.h (Base module). It is not a requirement
        of the FlexRay transceiver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv043</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00329 Avoidance of generic interfaces All Basic Software Modules shall not
        use generic interfaces. A 'generic interface' is an interface without
        a defined scope and content.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a general design rule. If implementing the module API as specified by
        AUTOSAR this requirement is fulfilled automatically and therefore redundant.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv089</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00390 Parameter content shall be unique within the module The same intention,
        logical contents or semantic shall be placed in one parameter only (There
        must not be several parameters with the same intention, logical contents
        or semantic ).
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS and not for the module itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv090</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00391 Parameter shall have unique names A parameters name must be unique per
        module. If the parameter is exported it must be unique to all modules
        using this parameter.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS and not for the module itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv092</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00393 Parameters shall have a range Each parameter shall have a list of valid
        values or the minimum as well as maximum values shall be specified.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS and not for the module itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv093</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00394 Specify the scope of the parameters A parameter may only be applicable
        for the module it is defined in. In this case, the parameter is marked as
        "local". Alternatively, the parameter may be shared with other
        modules (i.e. exported). In that case, the scope shall list the names of
        the other modules sharing this parameter. Each parameter shall only be
        defined once in one module. All other modules sharing the parameter must
        not define the parameter again. Instead, the parameter is to be imported.
        This is applicable for c-code as well as for .XML configuration.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a general design rule.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv094</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00395 List the required parameters (per parameter) The Basic Software Module
        specifications must list configuration parameters of this or other
        modules this parameter relies on. A dependency is for example: the value
        of another parameter influences or invalidates the setting of this
        parameter.
      </description>
         <comment>
        This requirement is informational only.
        This is a general design rule.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv104</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00406 Check module initialization A static status variable denoting if a BSW
        module is initialized shall be initialized with value 0 before any APIs
        of the BSW module is called. The initialization function of the BSW
        modules shall set the static status variable to a value not equal to 0.
        Exception shall be the "&lt;Module name&gt;_GetVersionInfo" function. It
        shall be possible to call this function at any time.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/generate/src/FrTrcv_1_T01_Lcfg.c_63</srcid><srcstatus/><internalId>344</internalId></linkedfrom><linkedfrom><srcid>src/Autosar_T01/src/FrTrcv_1_T01_Init.c_108</srcid><srcstatus/><internalId>353</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv322</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_Init
        Syntax: void FrTrcv_Init(  void  )
        Service ID[hex]: 0x00
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters(in): None
        Parameters(inout): None
        Parameters (out): None
        Return value: None
        Description: This service initializes the FrTrcv.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv008</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00101 Initialization interface The FlexRay transceiver driver initializes
        variables and hardware resources in a separate initialization function.
        This function shall be named FrTrcv_Init(). Note: According to EcuM2562:
        Drivers which serve wakeup sources must be reinitialized in the restart
        block. The driver restart shall re-arm the trigger mechanism of the
        'wakeup detected' call-back (see 7.7.4.1 WAKEUP I).
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv008_1</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv008_2</srcid><srcstatus/><internalId>96</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv008_1</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00101 Initialization interface The FlexRay transceiver driver initializes
        variables and hardware resources in a separate initialization function.
        This function shall be named FrTrcv_Init().
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS to introduce a FrTrcv_Init() API function.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv008</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv008_2</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Note: According to EcuM2562:
        Drivers which serve wakeup sources must be reinitialized in the restart
        block. The driver restart shall re-arm the trigger mechanism of the
        'wakeup detected' call-back (see 7.7.4.1 WAKEUP I).
      </description>
         <comment>
        This requirement duplicates FrTrcv.ASR40.FrTrcv366.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv366</srcid><srcstatus/><internalId>108</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv008</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv228_1</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05134 Initialization Sequence for FlexRay Transceiver Driver The FlexRay
        Transceiver Driver shall support the configuration sequence of the
        AUTOSAR stack. To start the ECU from power-up or reset, a fixed sequence
        of driver and manager initialization is necessary to reach the required
        startup times and to set the FlexRay stack into working state. The
        sequence itself depends on many requirements, partly dependent on the
        FlexRay controller and the power supply concept
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This paragraph refers to the startup behavior controlled outside the
        FlexRay transceiver module.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv230</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05137 Initialize the FlexRay Transceiver Driver The FlexRay Transceiver
        Driver shall provide an API to initialize the driver internally and set
        then all attached FlexRay Transceivers in their preselected operation
        modes.
        - The FlexRay Transceiver Driver must be initialized during the
        power-up/reset  sequence of the ECU.
        - Depending on the used drivers to control the transceivers (e.g. DIO, SPI),
        they  must be already available and working when the FlexRay Transceiver
        Driver is initialized.
        - The wake-up reason has to be detected and stored during
        the execution of the  driver initialization, too.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This requirement refers to the startup behavior controlled outside the
        FlexRay transceiver module.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv270</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_Init shall set all transceivers in the state defined by the
        configuration parameter FRTRCV_INIT_STATE, i.e. in any state defined by
        FrTrcv434.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_ChannelInitMode</srcid><srcstatus/><internalId>416</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv227</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv291_1</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv437</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        In case of a fault during transceiver access, the initialization process shall
        be restarted from the beginning. It shall be retried until the retry counter
        exceeds the number specified by FrTrcvRetryCountInInit. If the process doesn't
        succeed, the function FrTrcv_Init shall raise a development error
        FRTRCV_E_FR_NO_CONTROL_TRCV if development error detection for the module FrTrcv
        is enabled (see also FrTrcv237).
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.FeaturesNotSupported -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.FeaturesNotSupported</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv237</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv354</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv390</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If the configuration parameter FrTrcvErrorCheckInInit is set true, the function
        FrTrcv_Init shall check state of ERRN to detect hardware failure. If an
        error is detected, FrTrcv_Init shall raise a production error
        FRTRCV_E_FR_ERRN_TRCV&lt;TrcvIdx&gt;.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.ErrorDetectionInInit -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.ErrorDetectionInInit</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv438</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_Init shall check whether there has been a wake up due to
        transceiver activity if supported by hardware and report this to the EcuM
        via EcuM_SetWakeupEvent(event).
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DetectInitWakeUpByBus</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv362</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The driver has to notify ECU State Manager by invoking the EcuM_SetWakeupEvent
        service once only if a wakeup event is detected.
      </description>
         <comment>
        This requirement correspond to the detection of a wake up during
        initialization. A wake up shall not be reported again when detected
        during initialization.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DetectInitWakeUpByBus</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv363</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The driver has to detect a pending wakeup event during the initialization.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DetectInitWakeUpByBus</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv364</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The driver shall notify ECU State Manager of wakeup events if triggered by the
        API call FrTrcv_CheckWakeupByTransceiver.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.EB.ReportWakeUpToEcuM</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv112</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00414 The init function in general shall have no parameter.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a redundant requirement. The signature of the init function is defined
        in a seperate requirement (see FrTrcv.ASR40.FrTrcv322)
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv065</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The return type of init() functions implemented by AUTOSAR Basic
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a redundant requirement. The signature of the init function is defined
        in a seperate requirement (see FrTrcv.ASR40.FrTrcv322)
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv366</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The driver restart shall re-arm the trigger mechanism of the 'wakeup detected'
        call-back i. e. wake up events are enabled at driver initialization if
        configured accordingly and supported by hardware.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DetectInitWakeUpByBus</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv008_2</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv367</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver driver shall support a wakeup ISR if supported by
        hardware.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        For this Hardware only supports remote wake up detection by polling ERRN status register.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv414</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05214 Hardware Resetting Function on Bus Driver The FlexRay Transceiver
        Driver shall provide a method that reinitializes BD's functionality
        Hint: When trouble occurs in the hardware level, it is likely to fix the
        cause by resetting the hardware. This function shall be executed when a
        configurable amount of errors are detected in by the FlexRay modules and
        have been reported to DEM.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        FrTrcv T01 does not support to reset the hardware.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv455</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If a transceiver is in active star mode and one or more branches have been
        disabled, the FlexRay Transceiver Driver shall re-enable all branches on
        initialization.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.ActiveStar -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.ActiveStar</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv323</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_SetTransceiverMode
        Syntax: Std_ReturnType FrTrcv_SetTransceiverMode
        (
          uint8 FrTrcv_TrcvIdx,
          FrTrcv_TrcvModeType FrTrcv_TrcvMode
        )
        Service ID[hex]: 0x01
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in):
        FrTrcv_TrcvIdx
          This zero based index identifies the transceiver within the context of the transceiver driver
          to which the API call has to be applied.
        FrTrcv_TrcvMode
          Selects the state the transceiver will transit to
          (transitions to  optional states may fail)
        Parameters (inout): None
        Parameters (out): None
        Return value: Std_ReturnType
        E_OK:
          will be returned if the transceiver state has been changed to the requested mode.
        E_NOT_OK:
          will be returned if the transceiver state change has failed.
          The previous state has not been changed.
        Description: This service sets the transceiver mode.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv323_1</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        In case the FrTrcv_SetTransceiverMode() returns E_NOT_OK,
        the transceiver state change has failed. As a result the previous state
        shall not change.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_PinDioFailure_SetTransceiverMode</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv252</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05166 Set FlexRay Transceiver Operation Mode
        The FlexRay Transceiver Driver
        shall provide a software interface to set the operation mode of a
        specific FlexRay Transceiver device.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the SWS and not for the module itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv392</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Whenever FrTrcv_SetTransceiverMode changes the state to STANDBY, it shall clear error
        history in transceiver as long as the hardware supports such a function. This
        modification has the same effect as introducing a new API
        FrTrcv_ClearErrorHistory() and adding a call of the function in FrSm's
        sequence.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        It is not possible to clear error history on the hardware; However, this will be done
        automatically after reading ERRN status register in case that EN pin is not changed
        for a certain time.
        <!-- Hardware specific -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv393</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        After setting FlexRay Trcv to STANDBY the FrTrcv shall call a configurable
        callout function (see FrTrcv456_Conf), in which the integrator can enable
        the interrupt pin. If optional states are used, this requirement applies,
        whenever a transition from a state not capable to a state capable of
        detecting and/or latching wake up occurs (e.g.: a transition from
        RECEIVEONLY to SLEEP) and if wake up is supported by hardware.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.FeaturesNotSupported -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.FeaturesNotSupported</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv086</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The callout function of FrTrcv393 shall be pre compile configurable, its name is
        provided in FrTrcv456_Conf.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.FeaturesNotSupported -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.FeaturesNotSupported</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv474</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        A mode request of the current mode is allowed and shall not lead to an error
        even if DET is enabled.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_SetSameState</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv064</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00357 Standard API return type: The Std_ReturnType shall normally be used
        with value E_OK or E_NOT_OK. If those return values are not sufficient
        user specific values can be defined by using the 6 least specific bits.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a redundant requirement. The signature of FrTrcv_SetTransceiverModefunction
        is defined in a separate requirement (see FrTrcv.ASR40.FrTrcv323)
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv272</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_SetTransceiverMode shall switch the internal state of the
        transceiver identified by FrTrcv_TrcvIdx to the state indicated by
        FrTrcv_TrcvMode.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_TrcvModeTest</srcid><srcstatus/><internalId>395</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv273</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_SetTransceiverMode shall return E_NOT_OK and doesn't
        change the current state if a transition not defined in
        FrTrcv_TrcvModeType is requested.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvMode_SetTransceiverMode</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv274</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If an optional state is NOT supported by the transceiver and ECU hardware, the
        function FrTrcv_SetTransceiverMode shall switch to an equivalent state.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        Hardware and implementation support all states.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv440</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If the FlexRay transceiver and ECU hardware does not support a receive only
        state, FrTRCV_TRCVMODE_NORMAL shall be used.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        Hardware and implementation support all states.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv236</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If the FlexRay transceiver and ECU hardware does not support a sleep state,
        FrTRCV_TRCVMODE_STANDBY shall be used. (EcuM2486: The driver shall
        provide an explicit service to put the wakeup source to sleep. This
        service shall put the wakeup source into a energy saving and inert
        operation mode and re-arm the wakeup notification mechanism.)
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        Hardware and implementation support all states.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv278</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        In case of a fault during transceiver access, the function
        FrTrcv_SetTransceiverMode shall raise development error
        FRTRCV_E_FR_NO_CONTROL_TRCV if development error detection
        for the module FrTrcv is enabled (see also FrTrcv237) and return
        E_NOT_OK.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_PinDioFailure_SetTransceiverMode</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv237</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv354</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv368</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The API function calls to the FlexRay Transceiver Driver shall be synchronuous.
      </description>
         <comment>
        This requirement is informational only.
        Upper layers are responsible to call and use API functions as specified.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv275</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection for the module FrTrcv is enabled: If the
        parameter FrTrcv_TrcvIdx is not within the allowed range, the function
        FrTrcv_SetTransceiverMode shall raise development error
        FRTRCV_E_FR_INVALID_TRCVIDX and return E_NOT_OK.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_SetTransceiverMode</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv276</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection for the module FrTrcv is enabled: If the mode
        transition fails (FrTrcv452), the function FrTrcv_SetTransceiverMode
        shall raise the following development error and return E_NOT_OK:
        - FRTRCV_E_FR_TRCV_NOT_STANDBY: Transition to FRTRCV_TRCVMODE_STANDBY failed
        - FRTRCV_E_FR_TRCV_NOT_NORMAL: Transition to FRTRCV_TRCVMODE_NORMAL failed
        - FRTRCV_E_FR_TRCV_NOT_SLEEP: Transition to FRTRCV_TRCVMODE_SLEEP failed
        - FRTRCV_E_FR_TRCV_NOT_RECEIVEONLY: Transition to FRTRCV_TRCVMODE_RECEIVEONLY failed
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_PinDioFailure_SetTransceiverMode</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv452</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        A mode transition fails, if the mode returned by the API service
        FrTrcv_GetTransceiverMode() would mismatch the mode requested by the API
        service FrTrcv_SetTransceiverMode().
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a redundant explanation how to interpret return values for the callee.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv277</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection for the module FrTrcv is enabled: if the
        transceiver has not been initialized, the function
        FrTrcv_SetTransceiverMode shall raise development error
        FRTRCV_E_FR_UNINIT and return E_NOT_OK.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_SetTransceiverMode</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv415</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05213 Hardware Checking Function on Bus Driver
        The FlexRay Transceiver
        Driver's initialization function shall check error status in BD to
        ensure the hardware is working properly. This functionality ensures that
        the hardware is working as expected. Improvement of hardware reliability.
      </description>
         <comment>
        Requirement is imprecise in following points:
        a) The term "Transceiver Driver's initialization function" may refer to
        FrTrcv_Init() or FrTrcv_SetTransceiverMode().
        b) which status shall be checked exactly?
        c) What to do in case of status NOK?
        d) What to do in case of status OK?
        <!-- Linked to dev.FrTrcv.ErrorDetectionInInit -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.ErrorDetectionInInit</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv454</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If a transceiver is in active star mode and one or more branches are disabled,
        the FlexRay Transceiver Driver shall avoid side effects of the API
        service FrTrcv_SetTransceiverMode() which re-enable any branches.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.ActiveStar -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.ActiveStar</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv324</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_GetTransceiverMode
        Syntax: Std_ReturnType FrTrcv_GetTransceiverMode
        (
          uint8 FrTrcv_TrcvIdx,
          FrTrcv_TrcvModeType* FrTrcv_TrcvModePtr
        )
        Service ID[hex]: 0x05
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in):
        FrTrcv_TrcvIdx
          This zero based index identifies the transceiver within the context of
          the transceiver driver to which the API call has to be applied.
        Parameters (inout): None
        Parameters (out):
          FrTrcv_TrcvModePtr Pointer to structure of current transceiver state; the
          FlexRay transceiver driver will write the transceiver state information  there.
        Return value: Std_ReturnType
        E_OK:
          will be returned if the transceiver state has been provided
        E_NOT_OK:
          will be returned if the parameter is out of range. Output parameters remain
          unchanged.
        Description: This function returns the actual state of the transceiver.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv253</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_GetTransceiverMode shall return the state of the transceiver
        identified by FrTrcv_TrcvIdx.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_TrcvModeTest</srcid><srcstatus/><internalId>395</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv281</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        In case of a fault during transceiver access, the function
        FrTrcv_GetTransceiverMode shall raise the development error
        FRTRCV_E_FR_NO_CONTROL_TRCV (see also FrTrcv237) and return
        E_NOT_OK.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        This implementation of this function does not access the hardware.
        Therefore there is no need to call Det.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv237</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv354</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv279</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection for the module FrTrcv is enabled: if the
        parameter FrTrcv_TrcvIdx is out of range, the function
        FrTrcv_GetTransceiverMode shall raise the development error
        FRTRCV_E_FR_INVALID_TRCVIDX and return E_NOT_OK.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_GetTransceiverMode</srcid><srcstatus/><internalId>375</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv280</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection for the module FrTrcv is enabled: if the
        transceiver has not been initialized, the function
        FrTrcv_GetTransceiverMode shall raise the development error
        FRTRCV_E_FR_UNINIT and return E_NOT_OK.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_GetTransceiverMode</srcid><srcstatus/><internalId>366</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv397</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        When the caller provides a NULL pointer as a parameter value to the API
        FrTrcv_GetTransceiverMode, the return value shall be E_NOT_OK and the
        development error FRTRCV_E_FR_TRCV_NULL_PTR shall be reported to DET if
        development error detection is enabled.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NullPtr_GetTransceiverMode</srcid><srcstatus/><internalId>383</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv325</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_GetTransceiverWUReason
        Syntax: Std_ReturnType FrTrcv_GetTransceiverWUReason
        (
          uint8 FrTrcv_TrcvIdx,
          FrTrcv_TrcvWUReasonType* FrTrcv_TrcvWUReasonPtr
        )
        Service ID[hex]: 0x06
        Sync/Async: Synchronous
        Parameters (in):
        FrTrcv_TrcvIdx
          This zero based index identifies
          the transceiver within the context of the transceiver
          driver to which the API call has to be applied.
        Parameters (inout): None
        Parameters (out):
        FrTrcv_TrcvWUReasonPtr
          Pointer to structure of least recent
          wakeup source, the FlexRay transceiver driver will
          write the transceiver wakeup reason information.
        Return value: Std_ReturnType
        E_OK:
          will be returned if the transceiver wake up  source has been provided
        E_NOT_OK:
          will be returned if the transceiver wakeup
          reason is not defined in FrTrcv_TrcvWUReasonType. Output parameters
          remain unchanged.
        Description: This function returns the wakeup reason.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv232</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_GetTransceiverWUReason shall return the reason for the wake
        up that the FlexRay transceiver identified by FrTrcv_TrcvIdx has detected
        if supported by hardware. The ability to detect and differentiate the
        possible wake up reasons depends strongly on the FlexRay transceiver
        hardware.
      </description>
         <comment>
        FrTrcv_1_T01 can only detect wake up by bus.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_VerifyWakeUpReason</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv284</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        In case of a fault during transceiver access, the function
        FrTrcv_GetTransceiverWUReason shall raise the development error
        FRTRCV_E_FR_NO_CONTROL_TRCV if development error detection for the
        module FrTrcv is enabled (see also FrTrcv237) and return E_NOT_OK.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        This implementation of this function does not access the hardware.
        Therefore there is no need to call Det.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv237</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv354</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv453</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall report the wake up reason in the order
        defined by FrTrcv074. Thus, FRTRCV_WU_BY_BUS is reported first in case of
        multiple concurrent events.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        Only remote wake up by bus is supported. There are no multiple concurrent wake up situations.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv282</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of the module FrTrcv is enabled: if the parameter
        FrTrcv_TrcvIdx is out of range, the function
        FrTrcv_GetTransceiverWUReason shall raise the development error
        FRTRCV_E_FR_INVALID_TRCVIDX and return E_NOT_OK.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_GetTransceiverWUReason</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv283</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of the module FrTrcv is enabled: if the
        transceiver has not been initialized, the function
        FrTrcv_GetTransceiverWUReason shall raise the development error
        FRTRCV_E_FR_UNINIT and return E_NOT_OK.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_GetTransceiverWUReason</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv398</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        When the caller provides a NULL pointer as a parameter value to the API
        FrTrcv_GetTransceiverWUReason, the development error
        FRTRCV_E_FR_TRCV_NULL_PTR shall be reported to DET if development error
        detection is enabled.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NullPtr_GetTransceiverWUReason</srcid><srcstatus/><internalId>384</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv326</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_GetVersionInfo
        Syntax: void FrTrcv_GetVersionInfo( Std_VersionInfoType* versioninfo  )
        Service ID[hex]: 0x07
        Sync/Async:  Synchronous
        Reentrancy: Reentrant
        Parameters (in): None
        Parameters (inout):  None
        Parameters (out):
        versioninfo
          Pointer to structure with version information.
        Return value: None
        Description: This service returns the version information of this module.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv001</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00003 Version identification: The FlexRay transceiver driver shall support a
        version information API.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the FlexRay transceiver SWS and not for
        the module implementation.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv105</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Function to read out published parameters: The function FrTrcv_GetVersionInfo
        shall return the version information of the FrTrcv module.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_GetVersionInfo</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>FrTrcv_ConTest01001_NoInit_GetVersionInfo</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv109</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00411 Get version info keyword: The FlexRay transceiver driver shall apply
        the following naming rule for enabling/disabling the existence of the
        API. FrTrcv_GetVersionInfo(...) (see BSW00407): FRTRCV_VERSION_INFO_API
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This requirement is redundant, as it is already covered by FrTrcv.ASR40.FrTrcv339.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv073</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00374 Module vendor identification
        All Basic Software Modules shall provide a readable module vendor
        identification (according to HIS) in their published parameters.
        Naming convention:
        FRTRCV_VENDOR_ID
        The vendor ID shall be represented in uint16 (16 bit).
        Allow identification of module vendor
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv078</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00379 Module identification
        All software modules shall provide a module identifier in the header file
        and in the module XML description file.
        The value shall be taken from the Basic Software Module List.
        Naming convention:
        FRTRCV_MODULE_ID
        The module ID shall be represented in uint8 (8 bit).
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv034</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00318 Format of module version numbers:
        Each AUTOSAR Basic Software Module file shall provide version numbers in the
        header file as defined below:
        Naming convention:
        FRTRCV_SW_MAJOR_VERSION
        FRTRCV_SW_MINOR_VERSION
        FRTRCV_SW_PATCH_VERSION
        FRTRCV_AR_RELEASE_MAJOR_VERSION
        FRTRCV_AR_RELEASE_MINOR_VERSION
        FRTRCV_AR_RELEASE_REVISION_VERSION
        AR: Major/minor/patch version number of AUTOSAR specification which the
        appropriate implementation is based on.
        SW: Major/minor/patch version number of the vendor specific implementation of the module.
        The numbering shall be vendor specific, but it shall follow requirement BSW00321.
        Each number shall be represented in uint8 (8 bit).
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv285</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_GetVersionInfo shall return the version information of the
        FrTrcv module, NOT the version of the FlexRay transceiver hardware.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_GetVersionInfo</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>FrTrcv_ConTest01001_NoInit_GetVersionInfo</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv339</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_GetVersionInfo shall be pre compile time configurable On/Off
        by the configuration parameter: FRTRCV_GET_VERSION_INFO.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/src/FrTrcv_1_T01_GetVersionInfo.c.m4_66</srcid><srcstatus/><internalId>352</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv338</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If source code for caller and callee of FrTrcv_GetVersionInfo is available, the
        FrTrcv module should realize FrTrcv_GetVersionInfo as a macro, defined in
        the module's header file.
      </description>
         <comment>
        This requirement is not applicable.
        Macro implementation of FrTrcv_GetVersionInfo adds no real benefit and is therefore
        solely implemented as a function according
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/Software_Construction/Coding_Guidelines#Availability_of_function_GetVersionInfo.28.29
        <!--
        Not linked to deviation!
        -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv396</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        When a NULL pointer is passed as a parameter value of FrTrcv_GetVersionInfo, the
        development error FRTRCV_E_FR_TRCV_NULL_PTR shall be reported to DET if development error
        detection is enabled.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NullPtr_GetVersionInfo</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv329</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_ClearTransceiverWakeup
        Syntax: Std_ReturnType FrTrcv_ClearTransceiverWakeup(uint8 FrTrcv_TrcvIdx)
        Service ID[hex]: 0x0c
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in):
        FrTrcv_TrcvIdx
          This zero based index identifies the transceiver within the context
          of the transceiver driver to which the API call has to be applied.
        Parameters (inout): None
        Parameters (out): None
        Return value: Std_ReturnType
        E_OK:
          will be returned if the transceiver wake up source has been cleared
        E_NOT_OK:
          will be returned if the parameter FrTrcv_TrcvIdx is out of range. Wake up state remains
          unchanged.
        Description: This function clears a pending wake up event.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv247</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_ClearTransceiverWakeup shall clear a pending wake up event
        on the transceiver identified by FrTrcv_TrcvIdx.
      </description>
         <comment>
        Function clears the wake up reason. Checking for a new remote wake up
        will be enabled through mode transition to FRTRCV_TRCVMODE_SLEEP or
        FRTRCV_TRCVMODE_STANDBY.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_VerifyWakeUpReason</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv371</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The API shall clear all pending wake up events under control of the higher layer.
        It may even be used if the wake up notification is disabled.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        Since remote bus wake up is the only wake up source, it does not make sense to
        queue wake up events. The single wake up event procedure is already covered by
        FrTrcv.ASR40.FrTrcv247.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv306</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        In case of a fault during transceiver access, the function
        FrTrcv_ClearTransceiverWakeup shall raise the development error
        FRTRCV_E_FR_NO_CONTROL_TRCV if development error detection for
        the module FrTrcv is enabled(see also FrTrcv237) and return
        E_NOT_OK.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        This implementation of this function does not access the hardware.
        Therefore there is no need to call Det.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv237</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv354</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv304</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection is enabled for the module FrTrcv: if the
        parameter FrTrcv_TrcvIdx is out of range, the function
        FrTrcv_ClearTransceiverWakeup shall raise the development error code
        FRTRCV_E_FR_INVALID_TRCVIDX and return E_NOT_OK.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_ClearTransceiverWakeup</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv305</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection is enabled for the module FrTrcv: if the
        transceiver has not been initialized, the function
        FrTrcv_ClearTransceiverWakeup shall raise the development error code
        FRTRCV_E_FR_UNINIT and return E_NOT_OK.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_ClearTransceiverWakeup</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv331</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_CheckWakeupByTransceiver
        Syntax: void FrTrcv_CheckWakeupByTransceiver(uint8 FrTrcv_TrcvIdx)
        Service ID[hex]: 0x0e
        Sync/Async: Synchronous
        Reentrancy: Reentrant for different values of TrcvIdx
        Parameters (in):
        FrTrcv_TrcvIdx
          This zero based index identifies the transceiver within the context
          of the transceiver driver to which the API call has to be applied
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: -
      </description>
         <comment>
        Replaced duplicated service ID from 0x0e (used by API FrTrcv_EnableTransceiverBranch) to 0x10.
        Updated reentrancy from 'Reentrant' to 'Reentrant for different values of TrcvIdx'.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv233</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05147 Notification for Wake-up by Bus The FlexRay Transceiver Driver shall
        support a notification to inform higher layers about the wake-up by bus.
        It must be possible to support more than one bus within the ECU with this
        notification. The FlexRay Transceiver Driver shall call this notification
        when the transceiver detects a wake-up by bus. The FlexRay Transceiver
        Driver is notified by a notification from the underlying SPI or DIO
        driver in that case. The notification is executed in the context of the
        caller (may be interrupt context!). Because the delay from wake-up
        detection until the start of the necessary actions has a large influence
        on the startup time of an ECU, this event shall be processed internally
        and transferred immediately via this notification to the next layer. The
        call context and the reaction time depend on the call context of the
        lower layer DIO or SPI. In case of interrupt it is very fast but data
        consistency issues must be covered in all layers. In case of polling data
        consistency issues are reduced but reaction time may be too slow.
        Rationale:
        Support wake-up by FlexRay Transceiver devices.
        Use Case:
        The FlexRay Transceiver detects a wake-up condition on the bus and shows this
        to the uC via e.g. a port pin. Further handling depends on current ECU
        state. Assuming the ECU is halted, the change on the port may terminate
        the "HALT" statement and let the processor continue its work. The
        assigned port interrupt will be executed and this handler is called. Now,
        the FlexRay Transceiver Driver will store the wake-up reason and give the
        call via this notification to e.g. the NM to let the NM decide how to
        handle the event.
      </description>
         <comment>
        <!-- Linked to dev.RemoteWakeUpByBusDetection -->
        Underlying Dio does not notify FrTrcv module about a wake up by bus event. This
        can only be detected by polling the ERRN status register. Polling shall be controlled
        by upper layer (e.g. EcuM) and therefore the upper layer shall satisfy any timing requirements
        corresponding to wake up detection.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.RemoteWakeUpByBusDetection</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv262</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        EcuM2483: The driver has to notify ECU State Manager by invoking the
        EcuM_SetWakeupEvent service once when a wakeup event is detected. The
        same service should also be invoked during initialization of the driver
        if a pending wakeup event is detected during the initialization.
        Preferably, the invocation is done from a callout or function stub of the
        caller, to decouple driver modules and ECU State Manager.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This requirement is redundant to FrTrcv.ASR40.FrTrcv438,
        FrTrcv.ASR40.FrTrcv362 and FrTrcv.ASR40.FrTrcv363.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv311</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_CheckWakeupByTransceiver() shall call the API service
        EcuM_SetWakeupEvent with the parameter value ECUM_WKSOURCE_FRTRCV_FR of
        EcuM_WakeupSourceType only in case a valid wakeup originated from the
        transceiver identified by FrTrcv_TrcvIdx. Thus, shared interrupts are
        easily de-multiplexed: Drivers just return doing nothing if they did not
        trigger the interrupt.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv311_1</srcid><srcstatus/><internalId>167</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv311_2</srcid><srcstatus/><internalId>168</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv311_1</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_CheckWakeupByTransceiver() shall call the API service
        EcuM_SetWakeupEvent with the parameter value ECUM_WKSOURCE_FRTRCV_FR of
        EcuM_WakeupSourceType only in case a valid wakeup originated from the
        transceiver identified by FrTrcv_TrcvIdx.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.RemoteWakeUpByBusReport -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.RemoteWakeUpByBusReport</srcid><srcstatus/><internalId>338</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv311</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv311_2</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Thus, shared interrupts are
        easily de-multiplexed: Drivers just return doing nothing if they did not
        trigger the interrupt.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Conf01051_DetectWakeUpByBus_NorToStby</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Conf01052_DetectWakeUpByBus_NorToSlp</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Conf01053_DetectWakeUpByBus_RcvToSlp</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Conf01054_DetectWakeUpByBus_RcvToStby</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DetectWakeUpByBus</srcid><srcstatus/><internalId>408</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv311</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv374</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_CheckWakeupByTransceiver() shall clear a pending wake up
        event on the transceiver identified by FrTrcv_TrcvIdx after the last call
        of EcuM (EcuM_SetWakeupEvent). Wake up by bus is always asynchronous to
        the transition to sleep and standby. In worst case wake up occurs during
        transition to sleep.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        The hardware does not support to clear the wake up flag. It will take care of that
        by its own when returning to low power mode.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv375</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall check for wake up events immediately after
        the API call FrTrcv_SetTransceiverMode if supported by hardware.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.RemoteWakeUpByBusDetection -->
        FrTrcv_SetTransceiverMode() will not check for remote wake up.
        If this is behavior is required it is adviced to call
        FrTrcv_CheckWakeupByTransceiver() afterwards.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.RemoteWakeUpByBusDetection</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv378</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If no wake up by bus is used this function need not be present in compiled code.
        See configuration parameters FRTRCV_WAKEUP_BY_NODE_USED in chapter 8.6.2
        for more details.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This statement is only an advice. In any case EB supports the
        possibility to disable the FrTrcv_CheckWakeupByTransceiver() API
        if not required. In this case the function will not be present in
        compiled code.
        Note: Configuration parameter FRTRCV_WAKEUP_BY_NODE_USED only disables
        the wake up functionality for one channel.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv379</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Calling FrTrcv_CheckWakeupByTransceiver in an interrupt context shall be
        supported. Hint: This has to be documented according to (BSW00333). Hint:
        While the ECU is in SLEEP, the main function() is not scheduled yet, but
        the wake up reason has to be identified by the FlexRay Transceiver Driver
        in the context of the wake up interrupt.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_Manual_InterruptCallable</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv380</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Calling FrTrcv_CheckWakeupByTransceiver by a polling process in sleep mode shall
        be supported.
      </description>
         <comment>
        This requirement is informational only.
        Rational:
        Upper layer is responsible for polling function FrTrcv_CheckWakeupByTransceiver.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv312</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the parameter
        FrTrcv_TrcvIdx is out of range, the function
        FrTrcv_CheckWakeupByTransceiver shall raise development error
        FRTRCV_E_FR_INVALID_TRCVIDX.
      </description>
         <comment>
        Add on: ... and shall return E_NOT_OK.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv313</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the FrTrcv module
        is not initialized, the function FrTrcv_CheckWakeupByTransceiver shall
        raise development error FRTRCV_E_FR_UNINIT.
      </description>
         <comment>
        Add on: ... and shall return E_NOT_OK.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv229</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05136 Configuration "Notification for Wake-up by Bus"
        The FlexRay Transceiver Driver shall support the compile time configuration
        of one notification to a higher layer for change notification for "wake-up by bus" events.
        One wake-up by bus event notification shall be supported to one higher layer.
        If a transceiver device does not support "wake-up by bus", this notification
        is never called for this bus.
        Efficient coupling between FlexRay Transceiver Driver and higher layer.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the FlexRay transceiver SWS and not for
        the module implementation. It might be an abstract way to explain to
        call EcuM in case of a wake up by bus occurs. This is already covered
        by other requirements.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv234</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05148 Support for Wake-up During Sleep Transition
        The FlexRay Transceiver Driver shall support situations where a wake-up by bus
        occurs at the same moment the transition to standby/sleep is executed by the driver.
        Wake-up by bus is always asynchronous to the internal transition to sleep.
        In worst case, the wake-up occurs during the transition to sleep.
        This situation must be covered by the design and explicitly tested for each ECU.
        The driver shall create a wake-up notification by bus immediately after the API
        to enter the standby/sleep mode has finished.
        The calling/controlling component (NM or ECU state manager) must be capable to
        handle the wake-up immediately after requesting the standby/sleep.
        Safe wake-up and sleep handling.
        All busses with a wake-up by bus are affected.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        The remote wake up flag of the transceiver hardware can not be
        influenced by this module. The hardware takes care of clearing
        the flag when entering a low power mode and only sets this flag
        in low power mode if a wake up is detected.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv419</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name:
        Syntax:  Std_ReturnType FrTrcv_GetTransceiverError
        (
          uint8 FrTrcv_TrcvIdx,
          uint8 FrTrcv_BranchIdx,
          uint32* FrTrcv_BusErrorState
        )
        Service ID[hex]: 0x08
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in):
        FrTrcv_TrcvIdx
          This zero based index identifies the transceiver within
          the context of the transceiver driver to which the API call has to be applied.
        FrTrcv_BranchIdx
          This zero based index identifies the branch of the (active star)
          transceiver to which the API call has to be applied.
        Parameters (inout): None
        Parameters (out):
        FrTrcv_BusErrorState
          Pointer to structure of detailed transceiver error state; -
          Parameter is reference to variable: The transceiver driver will write the current
          transceiver error state information according to FrTrcv420 there, if the
          transceiver supports this information.
        Return value: Std_ReturnType
        E_OK:
          will be returned if the transceiver error state has been provided
        E_NOT_OK:
          will be returned if the parameter FrTrcv_TrcvIdx or FrTrcv_BranchIdx
          is out of range or the transceiver error state is not available. Output parameters
          remain unchanged.
        Description:
          All mandatory errors defined by the FlexRay EPL [5] which are supported by the
          FlexRay transceiver hardware can be accessed via this API:In addition to errors
          on the physical layer and local to the ECU hardware, a global error flag is provided.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv412</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05212 Detect Error Information in Bus Driver The FlexRay Transceiver Driver
        shall provide an API that detects errors in the bus driver and notifies
        the application level. The FlexRay modules should provide information
        that only the modules can detect.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a rationale for requirement FrTrcv.ASR40.FrTrcv419 but no implementation
        requirement itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall support all mandatory errors defined by the
        FlexRay EPL [5] if supported by hardware:
        Availability Topology Description Bit
        Mandatory Global error
        Any of the mandatory errors defined in this table,
        please see FrTrcv457, FrTrcv458
        Bit 0
        Mandatory on the bus (i. e. external to the ECU):
        Short circuit between bus lines according to [5]
        Bit 1
        Mandatory on the bus (i. e. external to the ECU):
        Short circuit between positive bus line and ground according to [5]
        Bit 2
        Mandatory on the bus (i. e. external to the ECU):
        Short circuit between positive bus line and power supply according to [5]
        Bit 3
        Mandatory on the bus (i. e. external to the ECU):
        Short circuit between negative bus line and power supply according to [5]
        Bit 4
        Mandatory on the bus (i. e. external to the ECU):
        Short circuit between negative bus line and ground according to [5]
        Bit 5
        Mandatory on the bus (i. e. external to the ECU):
        Any bus fault according to [5], which cannot be resolved according to the
        description of bit 1...5
        Bit 6
        Mandatory Local error
        Under voltage of transceiver power supply according to [5]
        Bit 7
        Mandatory Local error
        FlexRay transceiver is permanently enabled according to [5]
        Bit 8
        Mandatory Local error
        Over temperature of transceiver according to [5]
        Bit 9
      </description>
         <comment> </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_0</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_1</srcid><srcstatus/><internalId>182</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_2</srcid><srcstatus/><internalId>183</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_3</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_4</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_5</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_6</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_7</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_8</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_9</srcid><srcstatus/><internalId>190</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_0</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If any mandatory error is detected bit 0 of FrTrcv_BusErrorState
        shall be set.
      </description>
         <comment>
        For FrTrcv_1_T01 ERRN is active low every time
        an error is detected. This circumstance covers both
        FrTrcv.ASR40.FrTrcv457 and FrTrcv.ASR40.FrTrcv458.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_UnderVoltage_ERRNFlag_Occurred</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Bus_ERRNFlag_Occurred</srcid><srcstatus/><internalId>399</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_PermanentEnabled_ERRNFlag_Occurred</srcid><srcstatus/><internalId>400</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_HighTemp_ERRNFlag_Occurred</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_MixedErrors_ERRNFlag_Occurred</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_RemoteWakeupWhileError_ERRNFlag_Occurred</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv457</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv458</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_1</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Error "Short circuit between bus lines according to [5]" shall
        be detected by setting bit 1 of FrTrcv_BusErrorState.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        The hardware does not provide information to detect this error.
        <!-- Linked to lim.FrTrcv.LimitedErrorDetection -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_2</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Error "Short circuit between positive bus line and ground
        according to [5]" shall be detected by setting bit 2 of
        FrTrcv_BusErrorState.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        The hardware does not provide information to detect this error.
        <!-- Linked to lim.FrTrcv.LimitedErrorDetection -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_3</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Error "Short circuit between positive bus line and power supply
        according to [5]" shall be detected by setting bit 3 of
        FrTrcv_BusErrorState.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        The hardware does not provide information to detect this error.
        <!-- Linked to lim.FrTrcv.LimitedErrorDetection -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_4</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Error "Short circuit between negative bus line and power supply
        according to [5]" shall be detected by setting bit 4 of
        FrTrcv_BusErrorState.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        The hardware does not provide information to detect this error.
        <!-- Linked to lim.FrTrcv.LimitedErrorDetection -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_5</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Error "Short circuit between negative bus line and ground according
        to [5]" shall be detected by setting bit 5 of FrTrcv_BusErrorState.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        The hardware does not provide information to detect this error.
        <!-- Linked to lim.FrTrcv.LimitedErrorDetection -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_6</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Error "Any bus fault according to [5], which cannot be resolved according
        to the description of bit 1...5" shall be detected by setting bit 6
        of FrTrcv_BusErrorState.
      </description>
         <comment>
        This bit will be used to detect a bus error.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Bus_ERRNFlag_Occurred</srcid><srcstatus/><internalId>399</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_MixedErrors_ERRNFlag_Occurred</srcid><srcstatus/><internalId>402</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_7</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Error "Under voltage of transceiver power supply according to [5]" shall
        be detected by setting bit 7 of FrTrcv_BusErrorState.
      </description>
         <comment> </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_UnderVoltage_ERRNFlag_Occurred</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_MixedErrors_ERRNFlag_Occurred</srcid><srcstatus/><internalId>402</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_8</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Error "FlexRay transceiver is permanently enabled according to [5]" shall
        be detected by setting bit 8 of FrTrcv_BusErrorState.
      </description>
         <comment> </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_PermanentEnabled_ERRNFlag_Occurred</srcid><srcstatus/><internalId>400</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv420_9</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Error "Over temperature of transceiver according to [5]" shall
        be detected by setting bit 9 of FrTrcv_BusErrorState.
      </description>
         <comment> </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_HighTemp_ERRNFlag_Occurred</srcid><srcstatus/><internalId>401</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>FrTrcv.ASR40.FrTrcv420</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv421</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Additional transceiver errors, which are supported by hardware shall be appended
        to the table in FrTrcv420.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        No additional transceiver errors are supported.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv439</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        When the caller provides a NULL pointer as a parameter value to the API
        FrTrcv_GetTransceiverError the return value shall be E_NOT_OK and the
        development error FRTRCV_E_FR_TRCV_NULL_PTR shall be reported to DET if
        development error detection is enabled.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NullPtr_GetTransceiverError</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv444</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall identify bus faults per branch on active
        star transceivers.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.ActiveStar -->
        API: FrTrcv_GetTransceiverError()
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.ActiveStar</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv449</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall ignore the parameter FrTrcv_BranchIdx in
        case the transceiver is not an active star device.
      </description>
         <comment>
        API: FrTrcv_GetTransceiverError()
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/src/FrTrcv_1_T01_GetTransceiverError.c_255</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv457</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall set bit 0 of FrTrcv_BusErrorState if the
        state of ERRN is active low for transceivers according to class A of [5]
      </description>
         <comment>
        <!-- Linked to FrTrcv.ASR40.FrTrcv420_0 -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_0</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv458</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver shall set bit 0 of FrTrcv_BusErrorState if any of
        bit 1...9 is set for transceivers according to class B of [5]
      </description>
         <comment>
        <!-- Linked to FrTrcv.ASR40.FrTrcv420_0 -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv420_0</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv459</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the FrTrcv module
        is not initialized, the function FrTrcv_GetTransceiverError shall raise
        development error FRTRCV_E_FR_UNINIT.
      </description>
         <comment>
        Add on: ... and shall return E_NOT_OK.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_GetTransceiverError</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv460</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the parameter
        FrTrcv_TrcvIdx is out of range, the function FrTrcv_GetTransceiverError
        shall raise development error FRTRCV_E_FR_INVALID_TRCVIDX.
      </description>
         <comment>
        Add on: ... and shall return E_NOT_OK.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_GetTransceiverError</srcid><srcstatus/><internalId>381</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv461</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the parameter
        FrTrcv_BranchIdx is out of range, the function FrTrcv_GetTransceiverError
        shall raise development error FRTRCV_E_FR_INVALID_BRANCHIDX.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.ActiveStar -->
        Rationale:
        Active star topology is not supported and therefore FrTrcv_BranchIdx will not
        be used and not checked.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.ActiveStar</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv442</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_DisableTransceiverBranch
        Syntax: Std_ReturnType FrTrcv_DisableTransceiverBranch
        (
          uint8 FrTrcv_TrcvIdx,
          uint8 FrTrcv_BranchIdx
        )
        Service ID[hex]: 0x0f
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in):
        FrTrcv_TrcvIdx
          This zero based index identifies the transceiver within the context
          of the transceiver driver to which the API call has to be applied.
        FrTrcv_BranchIdx
          This zero based index identifies the branch of the (active star)
          transceiver to which the API call has to be applied.
        Parameters (inout): None
        Parameters (out): None
        Return value: Std_ReturnType
        E_OK:
          will be returned if the transceiver branch has been disabled
        E_NOT_OK:
          will be returned if the parameter FrTrcv_TrcvIdx or FrTrcv_BranchIdx
          is out of range. Branch state remains unchanged.
        Description:
          This function disables the specified branch on the addressed (active star) transceiver.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv462</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the FrTrcv module
        is not initialized, the function FrTrcv_DisableTransceiverBranch shall
        raise development error FRTRCV_E_FR_UNINIT.
      </description>
         <comment>
        Add on: ... and shall return E_NOT_OK.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_DisableTransceiverBranch</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv463</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the parameter
        FrTrcv_TrcvIdx is out of range, the function
        FrTrcv_DisableTransceiverBranch shall raise development error
        FRTRCV_E_FR_INVALID_TRCVIDX.
      </description>
         <comment>
        Add on: ... and shall return E_NOT_OK.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_DisableTransceiverBranch</srcid><srcstatus/><internalId>380</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv464</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the parameter
        FrTrcv_BranchIdx is out of range, the function
        FrTrcv_DisableTransceiverBranch shall raise development error
        FRTRCV_E_FR_INVALID_BRANCHIDX. FrTrcv_EnableTransceiverBranch
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.ActiveStar -->
        Rationale:
        Active star topology is not supported and therefore FrTrcv_BranchIdx will not
        be used and not checked.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.ActiveStar</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv443</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_EnableTransceiverBranch
        Syntax: Std_ReturnType FrTrcv_EnableTransceiverBranch
        (
          uint8 FrTrcv_TrcvIdx,
          uint8 FrTrcv_BranchIdx
        )
        Service ID[hex]: 0x0e
        Sync/Async: Synchronous
        Reentrancy: Reentrant for different values of TrcvIdx
        Parameters (in):
        FrTrcv_TrcvIdx
          This zero based index identifies the transceiver within the
          context of the transceiver driver to which the API call has to be applied.
        FrTrcv_BranchIdx
          This zero based index identifies the branch of the (active star)
          transceiver to which the API call has to be applied.
        Parameters (inout): None
        Parameters (out):   None
        Return value: Std_ReturnType
        E_OK:
          will be returned if the transceiver branch has been enabled
        E_NOT_OK:
          will be returned if the parameter FrTrcv_TrcvIdx
          or FrTrcv_BranchIdx is out of range. Branch state remains
          unchanged.
        Description:
          This function enables the specified branch on the addressed (active star) transceiver.
      </description>
         <comment>
        Updated Reentrancy from 'Non Reentrant' to 'Reentrant for different values of TrcvIdx'.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv465</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the FrTrcv module
        is not initialized, the function FrTrcv_EnableTransceiverBranch shall
        raise development error FRTRCV_E_FR_UNINIT.
      </description>
         <comment>
        Add on: ... and shall return E_NOT_OK.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_EnableTransceiverBranch</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv466</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the parameter
        FrTrcv_TrcvIdx is out of range, the function
        FrTrcv_EnableTransceiverBranch shall raise development error
        FRTRCV_E_FR_INVALID_TRCVIDX.
      </description>
         <comment>
        Add on: ... and shall return E_NOT_OK.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvalidIdx_EnableTransceiverBranch</srcid><srcstatus/><internalId>379</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv467</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of module FrTrcv is enabled: if the parameter
        FrTrcv_BranchIdx is out of range, the function
        FrTrcv_EnableTransceiverBranch shall raise development error
        FRTRCV_E_FR_INVALID_BRANCHIDX. Scheduled functions This section lists
        functions that are directly called by RTE Scheduler. FrTrcv_MainFunction
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.ActiveStar -->
        Rationale:
        Active star topology is not supported and therefore FrTrcv_BranchIdx will not
        be used and not checked.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.ActiveStar</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv330</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Service name: FrTrcv_MainFunction
        Syntax: void FrTrcv_MainFunction(  void  )
        Service ID[hex]: 0x0d
        Timing: FIXED_CYCLIC
        Description: -
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv020</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00172 Compatibility and documentation of scheduling strategy: The FlexRay bus
        transceiver driver may have cyclic jobs like polling for wake up events
        (if configured). The period of the main function is defined by
        configuration.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is not a requirement for the FlexRay transceiver driver.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv072</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00373 Main processing function naming convention: The main function of the
        FlexRay transceiver driver shall be named FrTrcv_MainFunction.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a redundant requirement. The signature of the main function is defined
        in a separate requirement (see FrTrcv.ASR40.FrTrcv330)
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv075</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00376 Return type and parameters of main processing functions: The main
        processing function of the FlexRay transceiver driver shall have no
        parameters and no return value.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a redundant requirement. The signature of the main function is defined
        in a separate requirement (see FrTrcv.ASR40.FrTrcv330)
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv126</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00428 Execution order dependencies of main processing functions: The main
        processing function of the FlexRay transceiver driver shall be
        independent of the FlexRay bus schedule i. e. it may be scheduled either
        synchronous to the FlexRay bus schedule as well as asynchronous to the
        FlexRay bus schedule.
      </description>
         <comment>
        Rationale:
        FrTrcv_MainFunction() is not implemented.
        <!-- Linked to dev.FrTrcv.RemoteWakeUpByBusDetection -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.RemoteWakeUpByBusDetection</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv340</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_MainFunction shall scan all busses in STANDBY and SLEEP for
        wake up events and store them internally. Note: EcuM will invoke
        EcuM_CheckWakeup. This results in the invocation of
        FrTrcv_CheckWakeupByTransceiver. So, in case of POLLING, the API
        FrTrcv_CheckWakeupByTransceiver shall invoke the EcuM_SetWakeupEvent.
      </description>
         <comment>
        Rationale:
        FrTrcv_CheckWakeupByTransceiver() shall poll the hardware to check for
        wake up only when requested. There is no need that FrTrcv_MainFunction() is
        involved in this.
        <!-- Linked to dev.FrTrcv.RemoteWakeUpByBusDetection -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.RemoteWakeUpByBusDetection</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv122</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The function FrTrcv_MainFunction shall be implemented in such a way that it can
        run inside a basic task (scheduled by the AUTOSAR RTE).
      </description>
         <comment>
        Rationale:
        FrTrcv_MainFunction() is not implemented.
        <!-- Linked to dev.FrTrcv.RemoteWakeUpByBusDetection -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.RemoteWakeUpByBusDetection</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv372</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The Basic Software Scheduler shall execute FrTrcv_MainFunction with a period
        configured by the parameter FRTRCV_MAIN_FUNCTION_CYCLE_TIME. See
        FrTrcv343_Conf for more details. ( )
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is not a requirement for the FlexRay transceiver driver.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv373</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If a cycle time of 0 is configured in FrTrcvMainFunctionCycleTime this function
        is not executed by the Basic Software Scheduler and need not be present
        in compiled code. See FrTrcv343_Conf for more details. ( )
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is not a requirement for the FlexRay transceiver driver, but more a hint that
        the FrTrcv_MainFunction does not need to exist if FrTrcvMainFunctionCycleTime = 0.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv308</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If development error detection of the module FrTrcv is enabled: if any of the
        configured transceivers is not initialized, the function
        FrTrcv_MainFunction shall raise development error FRTRCV_E_FR_UNINIT.
      </description>
         <comment>
        As the scheduler may start before all modules are initialized, the MainFunction shall just
        return if the module has not been fully initialized.
        <!-- Linked to dev.FrTrcv.InitDetCheck -->
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.InitDetCheck</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv123</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00425 Trigger conditions for schedulable objects
        The BSW module description template shall provide means to model the following
        trigger conditions of schedulable objects:
        Cyclic timings (fixed and selectable during runtime)
        Sporadic events
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is not a requirement for the FlexRay transceiver driver.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv436</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW05203 Error Information in Bus Driver
        The FrTrcv_MainFunction shall call API of BSW05212 (FrTrcv412)
        FrTrcv_GetTransceiverError() periodically to detect error information in BD.
      </description>
         <comment>
        Instead of calling FrTrcv_GetTransceiverError(), error detection in 
        FrTrcv_MainFunction() is done by pooling ERRN bit.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DemReporting</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DemReporting_ReceiveOnly</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DemReporting_StandbySleep</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv341_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        A pre-compile configuration parameter FrTrcvDevErrorDetect shall determine
        whether this functionality FrTrcv436 is activated. Note: The FlexRay
        modules should provide information that only the modules can detect.
        Applications could take actions to recover the failure cause like
        resetting the modules when they receive this error information.
      </description>
         <comment>
        Enabiling/disabling production errors is described in the linked requirements.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_20020</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_20021</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv332</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        API function | Description
        Dem_ReportErrorStatus
        Queues the reported events from
        the BSW modules (API is only used  by BSW modules). The interface has an
        asynchronous behavior,  because the processing of the event is done
        within the Dem main  function.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a description of the behavior of the Dem_ReportErrorStatus function.
        It is not a FlexRay transceiver requirement
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv334</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FlexRay Transceiver Driver uses these optional Interfaces:
        API function Description
        Det_ReportError Service to report development errors.
        Dio_ReadChannel Returns the value of the specified DIO channel.
        Dio_ReadChannelGroup This Service reads a subset of the adjoining bits of a port.
        Dio_ReadPort Returns the level of all channels of that port.
        Dio_WriteChannel Service to set a level of a channel.
        Dio_WriteChannelGroup Service to set a subset of the adjoining bits of a port
        to a specified level.
        Dio_WritePort Service to set a value of the port.
        EcuM_SetWakeupEvent Sets the wakeup event.
        Spi_GetStatus Service returns the SPI Handler/Driver software module status.
        Spi_ReadIB Service for reading synchronously one or more data from an IB SPI
        Handler/Driver Channel specified by parameter.
        Spi_SetupEB Service to setup the buffers and the length of data for the EB
        SPI Handler/Driver Channel specified.
        Spi_SyncTransmit Service to transmit data on the SPI bus
        Spi_WriteIB Service for writing one or more data to an IB SPI Handler/Driver
        Channel specified by parameter.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is not a requirement for the FlexRay transceiver driver. This is just a
        summary of interface used by the FlexRay transceiver driver.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv475</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        If the optional configuration parameter FrTrcvDemReportErrorStatusConfiguration
        is provided in the global FlexRay Transceiver Driver configuration, the
        function defined by this configuration parameter shall be called instead
        of Dem_ReportErrorStatus with the same signature.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.FrTrcvDemReportErrorStatusConfiguration -->
        This feature is not supported. There is a common error reporting strategy for all
        EB AUTOSAR modules.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.FrTrcvDemReportErrorStatusConfiguration</srcid><srcstatus/><internalId>334</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv019</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00171 Configurability of optional functionality. Optional functionality of a
        Basic-SW component that is not required in the ECU shall be configurable
        at pre-compile-time (on/off).
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        The configuration class of optional AUTOSAR configuration parameter depend on
        the parameter specific AUTOSAR requirement. This is a requirement for the FlexRay
        transceiver driver SWS and not for the module implementation.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv106</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        [BSW00408] Configuration parameter naming convention
        All AUTOSAR Basic Software Modules configuration parameters shall be named
        according to the following naming rules:
        Naming convention: &lt;ModuleShortName&gt;&lt;ParameterName&gt;
        &lt; ModuleShortName &gt; is the prefix according to [1]
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a requirement for the FlexRay transceiver driver SWS and not for the
        module implementation.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv095</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        BSW00396 Configuration classes: Variants describe sets of configuration
        parameters. E.g., variant 1: only pre-compile time configuration
        parameters; variant 2: mix of pre-compile- and post build
        time-configuration parameters. In one variant a parameter can only be of
        one configuration class.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is no requirement, it is just some explanation text.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv087</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Containers structure the set of configuration parameters. This means:
        - all configuration parameters are kept in containers.
        - (sub-) containers can reference (sub-) containers. It is possible to
        assign a  multiplicity to these references. The multiplicity then defines
        the possible number of instances of the contained parameters.
      </description>
         <comment>
        The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):
        http://svn.ebgroup.elektrobit.com/svn/autosar/asc_Project/trunk/doc/project/templates/Module_RFI_Checklist_template.xltx,
        rev 1664, Checks='VSMD'
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv314</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        VARIANT-PRE-COMPILE: Only parameters with "Pre-compile time" configuration are
        allowed in this variant.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a description of the Variant Pre-Compile and not a FlexRay transceiver
        requirement.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv315</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        VARIANT-LINK-TIME: Only parameters with "Pre-compile time" and "Link time" are
        allowed in this variant.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a description of the Variant LinkTime and not a FlexRay transceiver
        requirement.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv316</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        VARIANT-POST-BUILD: Parameters with "Pre-compile time", "Link time" and
        "Post-build time" are allowed in this variant.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is a description of the Variant Post-Build and not a FlexRay transceiver
        requirement.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv317</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FrTrcv module shall support pre compile time configuration.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.LinkTime -->
        The module supports a mixture of pre compile time and link time configuration.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.LinkTime</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv318</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FrTrcv module shall not use link time parameters within the FlexRay
        Transceiver Driver.
      </description>
         <comment>
        <!-- Linked to dev.FrTrcv.LinkTime -->
        The module supports a mixture of pre compile time and link time configuration.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrTrcv.LinkTime</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv319</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The FrTrcv module shall not use post build time configuration changes by
        flashing within the FlexRay Transceiver Driver.
      </description>
         <comment>
        This requirement is not applicable.
        Rationale:
        Without a configuration pointer in the API signature of FrTrcv_Init()
        post build time configuration is not possible.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv010</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The following configuration is provided by a configuration tool.
        Configuration information is part of files FrTrcv.h and FrTrcv_Cfg.c:
        A configuration tool is used to generate the configuration data and code if any.
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        No requirement for implementation, just a description of the following requirements.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv011</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The following configuration is provided by a configuration tool.
        Configuration information is part of files FrTrcv.h and FrTrcv_Cfg.c:
        BSW00160 Human-readable configuration data
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        No requirement for implementation, just a incomplete information
        where configurations can be found.
        Configuration data is provided in language C and XML.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv018</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The following configuration is provided by a configuration tool.
        Configuration information is part of files FrTrcv.h and FrTrcv_Cfg.c:
        BSW00170 Data for reconfiguration of AUTOSAR SWComponents
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        This is not a requirement for the FlexRay transceiver driver itself.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv047</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The following configuration is provided by a configuration tool.
        Configuration information is part of files FrTrcv.h and FrTrcv_Cfg.c:
        BSW00334 All Basic Software Modules shall provide an XML file that contains the
        meta data which is required for the SW configuration and integration
        process.
      </description>
         <comment>
        The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):
        http://svn.ebgroup.elektrobit.com/svn/autosar/asc_Project/trunk/doc/project/templates/Module_RFI_Checklist_template.xltx,
        rev 1664, Checks='VSMD'
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv225</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The following configuration is provided by a configuration tool.
        Configuration information is part of files FrTrcv.h and FrTrcv_Cfg.c:
        BSW05131 Configuration Data for FlexRay Transceiver
      </description>
         <comment>
        This requirement is informational only.
        Rationale:
        No requirement for implementation, just a description of the following req.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv016</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The following configuration is provided by a configuration tool.
        Configuration information is part of files FrTrcv.h and FrTrcv_Cfg.c:
        The configuration tool has to check the validity of the provided input data and
        the usability in the project context.
      </description>
         <comment>
        The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):
        http://svn.ebgroup.elektrobit.com/svn/autosar/asc_Project/trunk/doc/project/templates/Module_RFI_Checklist_template.xltx,
        rev 1664, Checks='VSMD'
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv080</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The following configuration is provided by a configuration tool.
        Configuration information is part of files FrTrcv.h and FrTrcv_Cfg.c:
        The pre-compile time parameters shall be placed into a separate configuration
        header file.
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.ASR40.FrTrcv110</srcid><srcstatus/><internalId>16</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv088</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        The following configuration is provided by a configuration tool.
        Configuration information is part of files FrTrcv.h and FrTrcv_Cfg.c:
        BSW00389 Containers shall have names. The configuration of the transceiver is
        assembled in a container
      </description>
         <comment>
        The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):
        http://svn.ebgroup.elektrobit.com/svn/autosar/asc_Project/trunk/doc/project/templates/Module_RFI_Checklist_template.xltx,
        rev 1664, Checks='VSMD'
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv055_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Container Name FrTrcvGeneral{FlexRayTransceiverDriverBasic}
        Description
          Container gives FlexRay transceiver driver basic information.
        Configuration Parameters
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv455_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvDemReportErrorStatusConfiguration
        {FRTRCV_DEM_REPORT_ERROR_STATUS_CONFIGURATION}
        Description
          Name of a C function which substitutes Dem_ReportErrorStatus.
        Multiplicity 0..1
        Type EcucFunctionNameDef
        Default value -
        maxLength -
        minLength -
        regularExpression -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time        -
          Post-build time  -
        Scope / Dependency scope: Module
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv341_Conf_1</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvDevErrorDetect {FRTRCV_DEV_ERROR_DETECT}
        Description
          Switches development error detection and notification on and off. If  switched on,
          #define FRTRCV_DEV _ERROR_DETECT ON shall be  generated. If switched off,
          #define FRTRCV_DEV_ERROR _DETECT OFF shall be generated. Define shall be part of file FrTrcv_Cfg.h.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value   --
        ConfigurationClass
          Pre-compile time   X   All Variants
          Link time          -
          Post-build time    -
        Scope / Dependency scope: Module
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv447_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvErrorCheckDuringCommunication
        {FRTRCV_ERROR_CHECK_DURING_COMMUNICATION}
        Description
          Enable a functionality to check transceiver's state during communication.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope /Dependency scope: local
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv446_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvErrorCheckInInit {FRTRCV_ERROR_CHECK_IN_INIT}
        Description
          Enable a functionality to check transceiver's state while initialization  process
          of FrTrcv.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: local
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv342_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvGetVersionInfo {FRTRCV_GET_VERSION_INFO}
        Description
          Switches version information API on and off. If switched off, function need  not be
          present in compiled code.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Module
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv268_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvIndex
        Description
          Specifies the InstanceId of this module instance.
          If only one instance is  present it shall have the Id 0.
        Multiplicity 1
        Type EcucIntegerParamDef
        Range 0 .. 255
        efault value -
        ConfigurationClass
        Pre-compile time X All Variants
          Link time -
          Post-build time -
          Scope / Dependency
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv343_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvMainFunctionCycleTime  {FRTRCV_MAIN_FUNCTION_CYCLE_TIME}
        Description
          Cyclic call time for function FrTrcvMainFunction in seconds. A call time
          of  0ms indicates no calls for this function. In this case function need
          not be  present in compiled code.
        Multiplicity 1
        Type EcucFloatParamDef
        Default value -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Module
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv445_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvRetryCountInInit {FRTRCV_RETRY_COUNT_IN_INIT}
        Description
          Specifies the number of retry count when error occurs while initialization  process
          of FrTrcv.
        Multiplicity 1
        Type EcucIntegerParamDef
        Range 0 .. 255
        Default value -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: local
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv353_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvWaitCount
        Description
          Wait count for transceiver state changes.
        Multiplicity 1
        Type EcucIntegerParamDef
        Range 0 .. 4294967295
        Default value 0
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Module
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv352_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvWakeUpSupport {FRTRCV_GENERAL_WAKE_UP_SUPPORT}
        Description
          Informs whether wake up is supported by polling or whether it is not supported.
          In case no wake up is supported by FlexRay transceiver hardware setting
          has to  be always NO. Only in case wake up is supported by polling main
          function  FlexRayTrcv_main has to be present in source code and called by
          FrIf. In case  of support for wake up either by polling wake up ability
          may be switched on or off  for each channel of one FlexRay transceiver
          channel independently by FrTrcvWakeupByBusUsed.
        Multiplicity 1
        Type EcucEnumerationParamDef
        Range
          FRTRCV_WAKEUP_BY_POLLING Wake up by polling
          FRTRCV_WAKEUP_NOT_SUPPORTED Wake up is not supported
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Module  dependency: FrTrcvWakeupByBusUsed
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv091_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Container Name FrTrcvChannel{FlexRayTransceiverNode}
        Description
          Container gives FlexRay transceiver driver information about a single FlexRay
          transceiver channel. Any FlexRay transceiver driver has such FlexRay
          transceiver channels.
        Configuration Parameters
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv349_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvChannelId {FRTRCV_NODE_ID}
        Description
          Unique identifier of the FlexRay Transceiver Channel.
        Multiplicity 1
        Type EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range 0 .. 255
        Default value -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_SymbolicNameValues</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>TS_FRTRCV_SymbolicNameValues_1</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv355_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvChannelUsed {FRTRCV_CHANNEL_USED}
        Description
          Shall the related FlexRay transceiver channel be used?
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value true
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv346_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvControlsPowerSupply {FRTRCV_CONTROLS_POWER_SUPPLY}
        Description
          Is ECU power supply controlled by this transceiver?
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value false
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv456_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvEnableInterruptCallout {FRTRCV_ENABLE_INTERRUPT_CALLOUT}
        Description
          This parameter defines the existence and the name of a callout function
          that enables the interrupt pin for the wakeup. If this parameter is
          omitted  no callout shall take place.
        Multiplicity 0..1
        Type EcucFunctionNameDef
        Default value -
        maxLength -
        minLength -
        regularExpression -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv347_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvInitState {FRTRCV_INIT_STATE}
        Description
          State of FlexRay transceiver after power on. ImplementationType: FrTrcv_TrcvModeType
        Multiplicity 1
        Type EcucEnumerationParamDef
        Range
          FRTRCV_TRCVMODE_NORMAL Normal operation mode
          FRTRCV_TRCVMODE_RECEIVEONLY Receive only mode
          FRTRCV_TRCVMODE_SLEEP Sleep operation mode
          FRTRCV_TRCVMODE_STANDBY Standby operation mode
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv348_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvMaxBaudrate {FRTRCV_MAX_BAUDRATE}
        Description
          Max baudrate for transceiver hardware type. Only used for validation purposes. Value
          shall be configured by configuration tool based on FRTRCV_HARDWARE_NAME
          and internal information about ability of this  hardware typel.
        Multiplicity 1
        Type EcucEnumerationParamDef
        Range
          FR_10M   10.0 MBaud
          FR_2M5   2.5 MBaud
          FR_5M0   5.0 MBaud
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv350_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvWakeupByBusUsed {FRTRCV_WAKEUP_BY_NODE_USED}
        Description
          Is wake up by node supported? If FlexRay transceiver hardware does not  support wake
          up by node value is always FALSE. If FlexRay transceiver  hardware
          supports wake up by node value is TRUE or FALSE depending  whether it is
          used or not.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance dependency: FRTRCV_WAKEUP_POLLING
      </description>
         <comment>
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv.EB.FrTrcvWakeupByBusUsed_Disabled</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv269_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvWakeupSourceRef {FRTRCV_WAKEUP_SOURCE_REF}
        Description
          Reference to a wakeup source in the EcuM configuration. If  FrTrcvWakeUpSupport is
          configured as  FRTRCV_WAKEUP_NOT_SUPPORTED the FrTrcvWakeupSourceRef is
          not needed. Implementation Type: reference to EcuM_WakeupSourceType
        Multiplicity 0..1
        Type Reference to [ EcuMWakeupSource ]
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: ECU  dependency: FrTrcvWakeUpSupport
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv453_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FRTRCV_E_FR_BUSERROR_TRCV {FRTRCV_E_FR_BUSERROR_TRCV}
        Description
          Reference to configured DEM event to report "Error Status of Class B
          (SPI) transceiver bus errors where TrcvIdx is the transceiver index"
        Multiplicity 0..1
        Type Reference to [ DemEventParameter ]
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: ECU  dependency: Dem
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv452_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FRTRCV_E_FR_ERRN_TRCV {FRTRCV_E_FR_ERRN_TRCV}
        Description
          Reference to configured DEM event to report "Error Status of Class A  (GPIO)
          transceiver"
        Multiplicity 0..1
        Type Reference to [ DemEventParameter ]
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: ECU  dependency: Dem
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv451_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FRTRCV_E_FR_NO_CONTROL_TRCV {FRTRCV_E_FR_NO_CONTROL_TRCV}
        Description
          Reference to configured DEM event to report "No/incorrect communication
          to transceiver"
        Multiplicity 0..1
        Type Reference to [ DemEventParameter ]
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: ECU  dependency: Dem
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv357_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Container Name FrTrcvBranchIdContainer
        Description
          Only one SymbolicNameValue can be defined per container.
          Therefore  this container is necessary.
        Configuration Parameters
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv356_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvBranchId {FRTRCV_BRANCH_ID}
        Description
          Unique branch id. It is used by CDDs and internally.
        Multiplicity 1
        Type EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range 0 .. 255
        Default value -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance
      </description>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_SymbolicNameValues</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>TS_FRTRCV_SymbolicNameValues_1</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv145_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Container Name FrTrcvDioAccess {FrTransceiverDioAccess}
        Description
          Container gives FR transceiver driver information about accessing ports and port
          pins. If a FR transceiver hardware has no Dio interface, there is no
          instance of this container.
        Configuration Parameters
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv471_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Container Name FrTrcvDioChannelAccess {FrTrcvDioChannelAccess}
        Description
          In this Container the relation between FR transceiver hardware pin names and
          Dio port access information is given.
        Configuration Parameters
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv150_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvHardwareInterfaceName {FRTRCV_HARDWARE_INTERFACE_NAME}
        Description
          FR transceiver hardware interface name. It is typically the name of a
          pin.  From a Dio point of view it is either a port, a single channel or a
          channel  group. Depending on this fact either
          FRTRCV_DIO_PORT_SYMBOLIC_NAME or FRTRCV_DIO_CHANNEL_SYMBOLIC_NAME or
          FRTRCV_DIO_CHANNEL_GROUP_SYMBOLIC_NAME shall reference a Dio
          configuration. The FR transceiver driver implementation description
          shall list up this name for the appropriate FR transceiver hardware.
        Multiplicity 1
        Type EcucStringParamDef
        Default value -
        maxLength -
        minLength -
        regularExpression -
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv149_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvDioSymNameRef
        Description
          Choice Reference to a DIO Port, DIO Channel
          or DIO Channel Group. This  reference replaces the
          FRTRCV_DIO_PORT_SYM_NAME,  FRTRCV_DIO_CHANNEL_SYM_NAME and
          FRTRCV_DIO_GROUP_SYM_NAME references in the Fr Trcv SWS.
        Multiplicity 1
        Type Choice reference to [ DioChannel , DioChannelGroup , DioPort ]
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv144_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Container Name FrTrcvSpiSequence{FlexRayTransceiverSPISequences}
        Description
          Container gives FlexRay transceiver driver information about one SPI  sequence. One
          SPI sequence used by FlexRay transceiver driver is in  exclusive use for
          it. No other driver is allowed to access this sequence.  FlexRay
          transceiver driver may use one sequence to access n FlexRay
          transceiver hardwares chips of the same type or n sequences are used to
          access one single FlexRay transceiver hardware chip. If a FlexRay
          transceiver hardware has no SPI interface, there is no instance of this
          container.
        Configuration Parameters
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

      <specobject>
         <id>FrTrcv.ASR40.FrTrcv151_Conf</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_FlexRayTransceiverDriver.pdf, V1.5.0</source>
         <version>1</version>
         <description>
        Name FrTrcvSpiSequenceName {FRTRCV_SPI_SEQUENCE_NAME}
        Description
          Reference to a Spi sequence configuration container.
        Multiplicity 1
        Type Reference to [ SpiSequence ]
        ConfigurationClass
          Pre-compile time X All Variants
          Link time -
          Post-build time -
        Scope / Dependency scope: Instance  dependency: SpiSequence
      </description>
         <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
         <releases>
            <release>AUTOSAR 4.0.3</release>
         </releases>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>FrTrcv.EB.BSWMDGeneration_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrTrcv module's generator shall generate a basic software
        module description (BSWMD) based on the FrTrcv module's
        configuration containing information on the exclusive areas
        required by the FrTrcv module's implementation.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_SCHM</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.BSWMDGeneration_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrTrcv module's generator shall generate a basic software
        module description (BSWMD) based on the FrTrcv module's
        configuration containing information on the scheduled
        MainFunctions together with the scheduling period.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_SCHM</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.BSWMDGeneration_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrTrcv module's BSWMD shall be generated using a generator
        mode named "generate_swcd".
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_SCHM</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter GetTransceiverModeApiEnable is set to 'True' the
        API function FrTrcv_1_T01_GetTransceiverMode() is included in the FlexRay
        Transceiver Driver module.
        If set to 'False' the API function FrTrcv_1_T01_GetTransceiverMode() is not
        included in the FlexRay Transceiver Driver  module.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter GetTransceiverWUReasonApiEnable set to 'True' the
        API function FrTrcv_1_T01_GetTransceiverWUReason() is included in the FlexRay
        Transceiver Driver module.
        If set to 'False' the API function FrTrcv_1_T01_GetTransceiverWUReason() is not
        included in the FlexRay Transceiver Driver  module.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.ClearTransceiverWakeupApiEnable_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter ClearTransceiverWakeupApiEnable set to 'True' the
        API function FrTrcv_1_T01_ClearTransceiverWakeup()
        is included in the FlexRay Transceiver Driver module.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.ClearTransceiverWakeupApiEnable_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter ClearTransceiverWakeupApiEnable set to 'False' the
        API function FrTrcv_1_T01_ClearTransceiverWakeup()
        is not included in the FlexRay Transceiver Driver module.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20006</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        FRTRCV_1_T01_GETTRANSCEIVERMODE_API_ENABLE:
        If FrTrcv.FrTrcvGeneral.VendorSpecific.GetTransceiverModeApiEnable is 'true'
        this symbol shall be set to STD_ON, otherwise STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20007</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        FRTRCV_1_T01_GETTRANSCEIVERWUREASON_API_ENABLE:
        If FrTrcv.FrTrcvGeneral.VendorSpecific.GetTransceiverWUReasonApiEnable is 'true'
        this symbol shall be set to STD_ON, otherwise STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.FrTrcvEnableWakeUpSupport</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE:
        If FrTrcvEnableWakeUpSupport is 'true'
        this symbol shall be set to STD_ON, otherwise STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20009</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter VerifyDioOutEnable is set to 'True' output pins of
        the Dio out module are read back for functional verification. If set to 'False'
        the output pins are just set without reading them back.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_PinDioFailure_SetTransceiverMode</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>FrTrcv_ConTest02001_SetMode_VerifyDio_Disabled</srcid><srcstatus/><internalId>413</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20010</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        FRTRCV_1_T01_VERIFY_DIO_OUT_ENABLE:
        If FrTrcv.FrTrcvGeneral.VendorSpecific.VerifyDioOutEnable is 'true'
        this symbol shall be set to STD_ON, otherwise STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.Det_InvModeError_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Additionally to the development error codes specified in [SWS] the following DET
        codes are used:
        Name                        Value
        FRTRCV_1_T01_E_INV_MODE     0x81
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvMode_SetTransceiverMode</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20014</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter CheckWakeupByTransceiverApiEnable is set to 'True'
        the API function FrTrcv_1_T01_CheckWakeupByTransceiver() is included in the
        FlexRay Transceiver Driver module.
        If set to 'False' the API function FrTrcv_1_T01_CheckWakeupByTransceiver()
        is not included in the FlexRay Transceiver Driver module.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20015</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter MainFunctionApiEnable is set to 'True' the API
        function FrTrcv_1_T01_MainFunction() is included in the FlexRay Transceiver
        Driver module.
        If set to 'False' the API function FrTrcv_1_T01_MainFunction() is not included
        in the FlexRay Transceiver Driver module.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20016</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        FRTRCV_1_T01_CHECKWAKEUPBYTRANSCEIVER_API_ENABLE:
        If FrTrcv.FrTrcvGeneral.VendorSpecific.CheckWakeupByTransceiverApiEnable is 'true'
        this symbol shall be set to STD_ON, otherwise STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20017</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        FRTRCV_1_T01_MAINFUNCTION_API_ENABLE:
        If FrTrcv.FrTrcvGeneral.VendorSpecific.MainFunctionApiEnable is 'true'
        this symbol shall be set to STD_ON, otherwise STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.Det_InvModeError_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled (FRTRCV_1_T01_DEV_ERROR_DETECT == STD_ON)
        then the API argument 'FrTrcv_TrcvMode' of FrTrcv_1_T01_SetTransceiverMode() is checked for
        a valid value. If the value is invalid, FRTRCV_1_T01_E_INV_MODE is reported to DET.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_InvMode_SetTransceiverMode</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20020</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter FrTrcvDemCtrlTestResult is set to 'DEM' production errors
        are reported to the DEM.
        If set to 'DISABLE' production errors are not reported to the DEM.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DemReporting</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DemReporting_ReceiveOnly</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DemReporting_StandbySleep</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv391</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv341_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20021</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter FrTrcvDemCtrlTestResult is set to 'DET' development errors
        are reported to the DET. In addition to this it is necesasry to set configuration parameter
        ReportToDetEnable. Error code that is used to report Dem error to DET is specified with
        configuration parameter "FrTrcvDemCtrlTestResult Dem To Det error ID". 
        Only transition from error OFF to error ON is reported.
        If set to 'DISABLE' development errors are not reported to the DET.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DemToDet_Reporting</srcid><srcstatus/><internalId>388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv391</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv341_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>                
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20023</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        FRTRCV_1_T01_REPORT_TO_DET_ENABLE:
        If FrTrcv.FrTrcvGeneral.VendorSpecific.ReportToDetEnable is 'true'
        this symbol shall be set to STD_ON, otherwise STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20024</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Production errors will not be reported to the DEM for uninitialized channels.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_NoInit_DemReporting</srcid><srcstatus/><internalId>389</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20025</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE:
        If FrTrcv.FrTrcvGeneral.VendorSpecific.GetTransceiverErrorApiEnable is 'true'
        this symbol shall be set to STD_ON, otherwise STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_30014</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_FRTRCV_30015</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>EB_FRTRCV_20200</id>
      <status>approved</status>
      <source>EB: ASCCCB-1403</source>
      <version>1</version>
      <description>
        If a Main function of a un-initialized module is called from the
        BSW Scheduler, then it shall return immediately without
        performing any functionality and without raising any errors.
      </description>
      <rationale>
        Main Function processing of an un-initialized Module may result
        in undesired and non defined behaviour.

        Rationale for the deviation list: The SchM module may schedule
        the modules main function before the module is initialized.
        This would result in lots of Det errors during start up.
        Therefore the modules main function does not throw a Det error
        if the module is not yet initialized and simply returns in this
        case.
      </rationale>
      <comment>
        EB requirement is in line with the AUTOSAR 4.0 General SRS
        requirement BSW00450.

        https://issue.ebgroup.elektrobit.com/browse/ASCCCB-1403
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Det_NoInit_MainFunction</srcid><srcstatus/><internalId>373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.ReportWakeUpToEcuM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The function FrTrcv_CheckWakeupByTransceiver() shall call the API service
        EcuM_SetWakeupEvent with the parameter value specified by FRTRCV_WAKEUP_SOURCE_REF of
        EcuM_WakeupSourceType only in case a valid wakeup originated from the
        transceiver identified by FrTrcv_TrcvIdx.
      </description>
      <comment>
        Replaces SWS requirement FrTrcv.ASR40.FrTrcv311_1.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Conf01051_DetectWakeUpByBus_NorToStby</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Conf01052_DetectWakeUpByBus_NorToSlp</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Conf01053_DetectWakeUpByBus_RcvToSlp</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_Conf01054_DetectWakeUpByBus_RcvToStby</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DetectWakeUpByBus</srcid><srcstatus/><internalId>408</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_VerifyWakeUpReason</srcid><srcstatus/><internalId>409</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DetectInitWakeUpByBus</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv364</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.FrTrcvWakeupByBusUsed_Disabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter FrTrcvWakeupByBusUsed is disabled for a channel
        then no wake up detection shall occur when calling FrTrcv_CheckWakeupByTransceiver().
        The function shall:
        - not perform any hardware access (Dio calls).
        - not call EcuM_SetWakeupEvent().
      </description>
      <comment>
        This requirement is in relation to FrTrcv.ASR40.FrTrcv350_Conf.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_WakeUpPerChannel_Disabled</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv350_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.DetectingMultipleErrors</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The function FrTrcv_GetTransceiverError() shall be able to detect 2 error
        when information is provided by hardware.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_MixedErrors_ERRNFlag_Occurred</srcid><srcstatus/><internalId>402</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.DetectingNoErrors</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The actual hardware indicates an error using ERRN. Therefore when calling
        FrTrcv_GetTransceiverError() the ERRN value shall
        be read first to detect if an error is expected. If ERRN indicates that no error
        is detected, no further hardware access shall be performed and the function shall
        return E_OK with BusErrorState == 0U.
      </description>
      <comment>
        <!-- Hardware specific -->
        Rationale:
        This requirement speeds up hardware access time when no error is occurred.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_No_ERRNFlag_Occurred</srcid><srcstatus/><internalId>397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.DetectingErrorAndWakeUp</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The function FrTrcv_GetTransceiverError() shall be able to detect a wake up
        while accessing ERRN status register to check for errors. This way
        a call of FrTrcv_CheckWakeupByTransceiver() shall not lead to an hardware access
        and shall report the wake up immediately.
      </description>
      <comment>
        <!-- Hardware specific -->
        Rationale:
        Hardware access requires a exact timing which is done by busy waiting at the moment.
        Therefore hardware access shall be reduced as much as possible.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_RemoteWakeupWhileError_ERRNFlag_Occurred</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.NoTransceiverBranchSupport</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Since active star topology is not supported the functions
        FrTrcv_DisableTransceiverBranch() and FrTrcv_EnableTransceiverBranch()
        are not needed. In case that the APIs are enabled for any reason and
        called with valid parameters, the functions shall do nothing and return with
        E_NOT_OK.
      </description>
      <comment>
        Rationale:
        Active star is not supported within this implementation.
        <!-- Linked to dev.FrTrcv.ActiveStar -->
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_TestTransceiverBranch</srcid><srcstatus/><internalId>396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.NoWakeUpSupport_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If wake up support is disabled and the function FrTrcv_GetTransceiverWUReason()
        is called with valid parameters, it shall not access the hardware, shall return E_OK
        and shall provide the wake up reason FRTRCV_WU_POWER_ON.
      </description>
      <comment>
        This function is only used to detect if wake up reason was from bus or not.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_UseWakeUpDummyFunction</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.NoWakeUpSupport_ClearTransceiverWakeUp</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If wake up support is disabled and the function FrTrcv_ClearTransceiverWakeUp()
        is called with valid parameters, it shall not access the hardware, shall return E_OK
        and shall not influence the wake up reason.
      </description>
      <comment>
        This function is only used to detect if wake up reason was from bus or not.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_UseWakeUpDummyFunction</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.NoWakeUpSupport_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If wake up support is disabled and the function FrTrcv_CheckWakeupByTransceiver()
        is called with valid parameters, it shall not access the hardware, shall return E_OK
        and shall not influence the wake up reason.
      </description>
      <comment>
        This function is only used to detect if wake up reason was from bus or not.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRTRCV_UseWakeUpDummyFunction</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.EnableIcuNotification</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If an ICU channel reference is available, the transition from power mode
        (NORMAL, RECEIVE-ONLY) to low power mode (STANDBY, SLEEP) shall
        enable the ICU wake up notification using Icu_EnableNotification().
      </description>
      <comment>
        This requirement is based on CanTrcv172.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_CheckIcuCall</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_SetSameState</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.DisableIcuNotification</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If an ICU channel reference is available, the transition from low power mode
        (STANDBY, SLEEP) to power mode (NORMAL, RECEIVE-ONLY) shall disable the ICU
        wake up notification using Icu_DisableNotification().
      </description>
      <comment>
        This requirement is based on CanTrcv173.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_CheckIcuCall</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_SetSameState</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.IcuChannelId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case that Icu_EnableNotification() or Icu_DisableNotification()
        is called the corresponding ICU channel id shall be passed as parameter.
        FRTRCV_ICU_CHANNEL_REF of the actual transceiver channel shall refer to the
        ICU channel id to pass.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_CheckIcuCall</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_SetSameState</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.IcuInit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If an ICU channel reference is available, the channel shall
        enable/disable Icu the notification during initialisation.
        If the initial transceiver mode is FRTRCV_TRCVMODE_NORMAL or
        FRTRCV_TRCVMODE_RECEIVEONLY the function Icu_DisableNotification()
        shall be called.
        If the initial transceiver mode is FRTRCV_TRCVMODE_SLEEP or
        FRTRCV_TRCVMODE_STANDBY the function Icu_EnableNotification()
        shall be called.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_IcuInit</srcid><srcstatus/><internalId>417</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.SymbolicNameValue_Rev3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Macros for symbolic name values for the following parameters shall be generated as per
        ecuc_sws_2108 if the SHORT_NAME is specified for the parent container having multiplicity 1.
        FrTrcvBranchId

        For container with multiplicity greater than 1, container name itself is a SHORT-NAME.
        FrTrcvChannelId

        The naming scheme shall be:
        FrTrcvConf_&lt;Container&gt;_&lt;SHORT_NAME&gt;
      </description>
      <comment>
        see http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/Config#Symbolic_Names
        and https://issue.ebgroup.elektrobit.com/browse/ASCPROJECT-1011
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_SymbolicNameValues</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>TS_FRTRCV_SymbolicNameValues_1</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>FrTrcv.Eb.ProvideUserWaitCallout</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Shall provide the option to specify the name of a user defined callout function that further 
        should implement a custom wait time by the user.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4_75</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv_ImplTest01_User_WaitCalloutCheck</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>FrTrcv.Eb.ProvideUserWaitCallout.ReadStatusDelayCounterUser.Definition</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In order to support a user defined wait time callout, for reading the status of the tranceiver, the optional
        vendor specific parameter ReadStatusDelayCounterUser shall be introduced.
        This parameter shall be general parameter located in container VendorSpecific and type shall be STRING.
        
        Definition of parameter:
          Name                     : ReadStatusDelayCounterUser
          Description              : Configuration parameter for a user provided wait time callout function
          Type                     : STRING
          Default value            : ReadStatusWaitCallout
          Editable                 : true
          Optional                 : true
          Enable                   : false
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv_ImplTest01_User_WaitCalloutCheck</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

    <specobject>
      <id>FrTrcv.Eb.ProvideUserWaitCallout.ReadStatusDelayCounterUser.Functionality</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The function provided by this parameter shall be implemented by the user.
        It shall contain a wait timeout. The provided callback name shall be
        stored inside the macro FRTRCV_1_T01_READ_STATUS_COUNTER_USER_CBK.
        If the parameter is enabled the user defined function shall be called by 
        FRTRCV_1_T01_READ_STATUS_BUSY_WAITING(), otherwise a standard busy waiting 
        loop shall be used with the according value provided by ReadStatusDelayCounter.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrTrcv_ImplTest01_User_WaitCalloutCheck</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    
    <specobject>
      <id>FrTrcv.EB.XdmCheck.EnableReadStatusDelayCounterUser</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if ReadStatusDelayCounter and ReadStatusDelayCounterUser
        are enabled at same time.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4_24</srcid><srcstatus/><internalId>355</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01010_EnableReadStatusDelayCounterUser</srcid><srcstatus/><internalId>428</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    
    <specobject>
      <id>FrTrcv.EB.XdmCheck.DisableReadStatusDelayCounterUser</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if ReadStatusDelayCounter and ReadStatusDelayCounterUser
        are disabled at the same time.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4_24</srcid><srcstatus/><internalId>355</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01011_DisableReadStatusDelayCounterUser</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <!-- == Configuration validity (xdm checks and generator checks)============================ -->

    <specobject>
      <id>FrTrcv.EB.XdmCheck.ValidDioChannelERRNRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if DioChannelERRNRef is not configured to refer to a
        Dio channel.
      </description>
      <comment>
        Exception: If both FrTrcvEnableWakeUpSupport and GetTransceiverErrorApiEnable are
                   disabled, the configuration parameter is unused and can be empty. This exception
                   can be used if the ERRN pin is not wired at the hardware.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01001_ValidDioChannelERRNRef</srcid><srcstatus/><internalId>419</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.XdmCheck.ValidDioChannelSTBNRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if DioChannelSTBNRef is not configured to refer to a
        Dio channel.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01002_ValidDioChannelSTBNRef</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.XdmCheck.ValidDioChannelENRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if DioChannelENRef is not configured to refer to a Dio
        channel.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01003_ValidDioChannelENRef</srcid><srcstatus/><internalId>421</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.XdmCheck.ValidFrTrcvIcuChannelRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if FrTrcvIcuChannelRef is enabled and is not configured
        to refer to an Icu channel.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01004_ValidFrTrcvIcuChannelRef</srcid><srcstatus/><internalId>422</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.XdmCheck.ValidFrTrcvWakeupSourceRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if FrTrcvWakeupSourceRef is enabled and is not configured
        to refer to an EcuM wakeup source.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01005_ValidFrTrcvWakeupSourceRef</srcid><srcstatus/><internalId>423</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.XdmCheck.GlobalWakeupSupport</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if FrTrcvWakeupByBusUsed is enabled while
        FrTrcvEnableWakeUpSupport is disabled.
      </description>
      <comment>
        See also dependency of FrTrcv350_Conf. FrTrcvWakeUpSupport is replaced by 
        FrTrcvEnableWakeUpSupport.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01007_GlobalWakeupSupport</srcid><srcstatus/><internalId>425</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.XdmCheck.WUSupport_EnableWUSourceRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if FrTrcvWakeupByBusUsed is enabled while
        FrTrcvWakeupSourceRef of the same channel is disabled.
      </description>
      <comment>
        FrTrcvWakeupByBusUsed shall enable the call of EcuM_SetWakeupEvent().
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01008_WUSupport_EnableWUSourceRef</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.XdmCheck.WUSupport_DisableWUSourceRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A warning shall be reported if FrTrcvWakeupSourceRef is enabled while
        FrTrcvWakeupByBusUsed of the same channel is disabled.
      </description>
      <comment>
        FrTrcvWakeupSourceRef is not required if wake up support for the channel is disabled.
        FrTrcvWakeupSourceRef enabled while FrTrcvWakeupByBusUsed is disabled indicates a
        possible wrong configuration and shall be reported to the user.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01009_WUSupport_DisableWUSourceRef</srcid><srcstatus/><internalId>427</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.XdmCheck.FrTrcvIcuSupport</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An error message shall be reported if FrTrcvIcuChannelRef is enabled while
        FrTrcvEnableIcuSupport is disabled.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRTRCV_GEN01006_FrTrcvIcuSupport</srcid><srcstatus/><internalId>424</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.Gen.ConfigChannelOrder</id>
      <status>approved</status>
      <source>EB: ASCFRTRCV-315</source>
      <version>1</version>
      <description>
        It shall be possible to configure the FrTrcvChannels unsorted based on FrTrcvChannelId.
        The channels are unsorted in the manner of not consecutive, but still zero based and dense.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_Con03010_ChannelOrderNotConsecutive</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>FrTrcv.EB.DemReportingNoError</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If no error occured Dem_ReportErrorStatus(FRTRCV_E_FR_BUSERROR_TRCV&lt;TrcvIdx&gt;,
        DEM_EVENT_STATUS_PREPASSED) shall not be reported unless there was a transition from 
        an error state to no error.
      </description>
      <comment>
        The transceiver driver shall not flood the host with *everything ok* *errors* instead
        it will only report once that the error disappeared.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FrTrcv_DemReporting_ReceiveOnly</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>EB_FrTrcv_DemReporting_StandbySleep</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>


  </specobjects>
    <specobjects doctype="man">

    <specobject>
      <id>TS_FRTRCV_Manual_DetOff</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        Test Description:
        Verify that FrTrcv does not use the function Det_ReportError() if FRTRCV_DEV_ERROR_DETECT is
        configured as OFF.

        Test Precondition:

        Test Execution:
        Code review.
        All test steps are required to fulfil FrTrcv.ASR40.FrTrcv061_2.
        01: Verify that every API function of the FrTrcv use the macro
            FrTrcv_1_T01_Det_ReportError(nErrorID) to report Det errors instead of the API function
            Det_ReportError().
        02: Verify that the macro FrTrcv_1_T01_Det_ReportError expands to an empty macro if
            FRTRCV_1_T01_REPORT_TO_DET_ENABLE is STD_OFF (ReportToDetEnable = false).
        03: VP(EB_FRTRCV_20021): Verify if configuration parameter FrTrcvDevErrorDetect is false,
            ReportToDetEnable must be false too. (Error must be reported in Tresos Studio)
      </description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>TS_FRTRCV_Manual_FrTrcv.h</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        Test Description:
        The file FrTrcv_1_T01.h shall only contain 'external' declarations of constants, global
        data, type definitions and services that are specified in the FlexRay Transceiver SWS. 
        (BSW00302)

        Test Precondition:

        Test Execution:
        Code review.
        All test steps are required to fulfil FrTrcv.ASR40.FrTrcv023.
        It is only required to check FrTrcv module header files.
        01: Check that FrTrcv_1_T01.h and all included FrTrcv_1_T01_*.h only contain 
            declarations of constants required for the external usage outside of the 
            module.
        02: Check that FrTrcv_1_T01.h and all included FrTrcv_1_T01_*.h only contain 
            declarations of global data required for the external usage outside of 
            the module.
        03: Check that FrTrcv_1_T01.h and all included FrTrcv_1_T01_*.h only contain
            type definitions required for the external usage outside of the module.
        04: Check that FrTrcv_1_T01_.h and all included FrTrcv_1_T01__*.h only contain 
            services (APIs) required for the external usage outside of the module.
      </description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>TS_FRTRCV_Manual_NamingConvention</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        Test Description:
        File names, API names and Published Parameters shall apply to the AUTUOSAR naming
        convention. (BSW00300) 

        Test Precondition:

        Test Execution:
        Code review.
        All test steps are required to fulfil FrTrcv.ASR40.FrTrcv021.
        01: Verify that all source and header files are named according to
            FrTrcv_1_T01_&lt;FILE_NAME&gt;.c/h.
        02: Verify that all API functions of the FrTrcv are named according to
            FrTrcv_1_T01_&lt;FUNCTION_NAME&gt;().
        03: Verify that declarations of constants are named according to 
            #define FRTRCV_1_T01_&lt;CONST_NAME&gt;.
        04: Verify that type definitions are named according to FrTrcv_1_T01_&lt;TYPE_NAME&gt;.
        05: Verify that global data is named according to FrTrcv_1_T01_&lt;DATA_NAME&gt;.
      </description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    
    <specobject>
      <id>TS_FRTRCV_Manual_InterruptCallable</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        Test Description:
        Check that FrTrcv_CheckWakeupByTransceiver() is callable from interrupt context.
        
        Test Precondition:
        
        Test Execution:
        Code review.
        All test steps are required to fulfil FrTrcv.ASR40.FrTrcv379.
        01: Search the source code for "STATIC" and "static" and verify that no static
            variable exists in a function.
        02: Check that no Os calls apart from locking (via SchM's Enter/Exit calls) are used within
            FrTrcv_CheckWakeupByTransceiver() and its sub functions.
      </description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv379</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>FrTrcv.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrTrcv_VerifyCodeStub</srcid><srcstatus/><internalId>359</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.FrTrcv.InitDetCheck</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>dev.FrTrcv.Debugging</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv407</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv450</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>dev.FrTrcv.FrTrcvDemReportErrorStatusConfiguration</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>dev.FrTrcv.ActiveStar</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv444</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv454</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv455</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv464</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>dev.FrTrcv.RemoteWakeUpByBusDetection</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>dev.FrTrcv.ErrorDetectionInInit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv415</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>dev.FrTrcv.RemoteWakeUpByBusReport</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv311_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>dev.FrTrcv.LinkTime</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    <specobject>
      <id>dev.FrTrcv.FeaturesNotSupported</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>195</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv393</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv395</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    <specobject>
      <id>dev.FrTrcv.ConsistencyCheck</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/doc/Autosar_T01/public/changelog/Deviations.xml</sourcefile>
      <sourceline>220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/generate/include/FrTrcv_1_T01_Cfg.h_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/generate/include/FrTrcv_1_T01_Cfg.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/generate/src/FrTrcv_1_T01_Lcfg.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/generate/src/FrTrcv_1_T01_Lcfg.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    <specobject>
      <id>src/Autosar_T01/generate/src/FrTrcv_1_T01_Lcfg.c_63</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/generate/src/FrTrcv_1_T01_Lcfg.c</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/include/FrTrcv_1_T01.h_6</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/include/FrTrcv_1_T01.h</sourcefile>
      <sourceline>6</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    <specobject>
      <id>src/Autosar_T01/include/FrTrcv_1_T01.h_11</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/include/FrTrcv_1_T01.h</sourcefile>
      <sourceline>11</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv431</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    <specobject>
      <id>src/Autosar_T01/include/FrTrcv_1_T01.h_13</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/include/FrTrcv_1_T01.h</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    <specobject>
      <id>src/Autosar_T01/include/FrTrcv_1_T01.h_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/include/FrTrcv_1_T01.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/include/FrTrcv_1_T01_Extension.h_29</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/include/FrTrcv_1_T01_Extension.h</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/src/FrTrcv_1_T01_CheckWakeupByTransceiver.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/src/FrTrcv_1_T01_CheckWakeupByTransceiver.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/src/FrTrcv_1_T01_GetTransceiverError.c_255</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/src/FrTrcv_1_T01_GetTransceiverError.c</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/src/FrTrcv_1_T01_GetVersionInfo.c.m4_66</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/src/FrTrcv_1_T01_GetVersionInfo.c.m4</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv339</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/src/FrTrcv_1_T01_Init.c_108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/src/FrTrcv_1_T01_Init.c</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/src/FrTrcv_1_T01_SetTransceiverMode.c_186</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/src/FrTrcv_1_T01_SetTransceiverMode.c</sourcefile>
      <sourceline>186</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv352</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.EnableReadStatusDelayCounterUser</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.DisableReadStatusDelayCounterUser</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
    <specobject>
      <id>src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv361</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    <specobject>
      <id>src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4_75</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/config/FrTrcv_EBParameters.xdm.m4</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.Eb.ProvideUserWaitCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar_T01/config/FrTrcv_Extension.xdm.m4_461</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/src/Autosar_T01/config/FrTrcv_Extension.xdm.m4</sourcefile>
      <sourceline>461</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_FrTrcv_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/build/reqm/common_req/FrTrcv_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(FrTrcv.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FRTRCV_30014</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Compile/IN/FrTrcv_ComTest_1/source/application/Appl.c.m4</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test building the module source code with all pre-compile-time features set to STD_ON.
    Tests the generation of pre-compile-time configuration parameters
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Generate module configuration.
    02: Check that for config parameter input (input sequence 02) a generated
        macro is generated (output sequence 02).
    03: Compile and link the test application including the module source code
        with all configurable features enabled.
    04: VP: A binary file is created.
  
Test Input: 
    02: FrTrcvDevErrorDetect = true
        FrTrcvGetVersionInfo = true
        ReadStatusDelayCounter = 1
        VerifyDioOutEnable = true
        ReportToDemEnable =true
        ReportToDetEnable = true
        GetTransceiverModeApiEnable = true
        GetTransceiverWUReasonApiEnable = true
        ClearTransceiverWakeupApiEnable = true
        CheckWakeupByTransceiverApiEnable = true
        MainFunctionApiEnable = true
        GetTransceiverErrorApiEnable = true
        FrTrcvEnableWakeUpSupport = true
  
Test Output: 
    02: #define FRTRCV_1_T01_DEV_ERROR_DETECT STD_ON
        #define FRTRCV_1_T01_GET_VERSION_INFO STD_ON
        #define FRTRCV_1_T01_READ_STATUS_COUNTER_MAX 1U
        #define FRTRCV_1_T01_VERIFY_DIO_OUT_ENABLE STD_ON
        #define FRTRCV_1_T01_REPORT_TO_DET_ENABLE STD_ON
        #define FRTRCV_1_T01_GETTRANSCEIVERMODE_API_ENABLE STD_ON
        #define FRTRCV_1_T01_GETTRANSCEIVERWUREASON_API_ENABLE STD_ON
        #define FRTRCV_1_T01_CLEARTRANSCEIVERWAKEUP_API_ENABLE STD_ON
        #define FRTRCV_1_T01_CHECKWAKEUPBYTRANSCEIVER_API_ENABLE STD_ON
        #define FRTRCV_1_T01_MAINFUNCTION_API_ENABLE STD_ON
        #define FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE STD_ON
        #define FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE STD_ON
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv324</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv419</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv442</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv443</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv329</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv339</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv326</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.ClearTransceiverWakeupApiEnable_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.FrTrcvEnableWakeUpSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FRTRCV_30015</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Compile/IN/FrTrcv_ComTest_2/source/application/Appl.c.m4</sourcefile>
      <sourceline>117</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test building the module source code with all pre-compile-time features set to STD_OFF.
    Tests the generation of pre-compile-time configuration parameters
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Generate module configuration.
    02: Check that for config parameter input (input sequence 02) a generated macro is generated (output sequence 02) .
    03: Compile and link the test application including the module source code with all configurable features disabled.
    04: VP: A binary file is created.
  
Test Input: 
    02: FrTrcvDevErrorDetect = false
        FrTrcvGetVersionInfo = false
        ReadStatusDelayCounter = 16000
        VerifyDioOutEnable = false
        ReportToDemEnable =false
        ReportToDetEnable = false
        GetTransceiverModeApiEnable = false
        GetTransceiverWUReasonApiEnable = false
        ClearTransceiverWakeupApiEnable = false
        CheckWakeupByTransceiverApiEnable = false
        MainFunctionApiEnable = false
        GetTransceiverErrorApiEnable = false
        FrTrcvEnableWakeUpSupport = false
  
Test Output: 
    02: #define FRTRCV_1_T01_DEV_ERROR_DETECT STD_OFF
        #define FRTRCV_1_T01_GET_VERSION_INFO STD_OFF
        #define FRTRCV_1_T01_READ_STATUS_COUNTER_MAX 16000U
        #define FRTRCV_1_T01_VERIFY_DIO_OUT_ENABLE STD_OFF
        #define FRTRCV_1_T01_REPORT_TO_DEM_ENABLE STD_OFF
        #define FRTRCV_1_T01_REPORT_TO_DET_ENABLE STD_OFF
        #define FRTRCV_1_T01_GETTRANSCEIVERMODE_API_ENABLE STD_OFF
        #define FRTRCV_1_T01_GETTRANSCEIVERWUREASON_API_ENABLE STD_OFF
        #define FRTRCV_1_T01_CLEARTRANSCEIVERWAKEUP_API_ENABLE STD_OFF
        #define FRTRCV_1_T01_CHECKWAKEUPBYTRANSCEIVER_API_ENABLE STD_OFF
        #define FRTRCV_1_T01_MAINFUNCTION_API_ENABLE STD_OFF
        #define FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE STD_OFF
        #define FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE STD_OFF
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv339</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.ClearTransceiverWakeupApiEnable_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.FrTrcvEnableWakeUpSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FRTRCV_SCHM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Compile/IN/FrTrcv_ComTest_SchM/source/application/FrTrcv_ComTest_SchM.c.m4</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test checks that the FrTrcv module's generator generates a
   syntactically and semantically valid basic software module
   description (BSWMD) when the generator mode "generate_swcd" is
   invoked. It further tests that the SchM exclusive area API is
   correctly generated by the RTE generator based on the FrTrcv module's
   generated BSWMD.

Test Object: None.
Test Precondition: None.
Test Execution: 
  Ts5 build environment steps:
    The module configuration generator produces the BSWMD containing
    the information on the required exclusive areas.  This information
    is then used by the RTE generator to create the required SchM API
    for these exclusive areas. This implicitly verifies that the BSWMD
    is syntactically and semantically correct.  FrTrcv's static code
    makes use of this API (and the respective #defines) thus causing
    compile/link errors if the BSWMD does not contain the correct
    information.

Test Input: 
  Usage of a common ASR configuration having all adjacent ASR modules
  configured.

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_FRTRCV_SymbolicNameValues</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Compile/IN/FrTrcv_ComTest_SymbolicNames/source/application/Appl.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that macros are generated for configuration parameters which are specified as 
    SYMBOLICNAMEVALUES.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
      01: Check that macros are generated with the names and the values listed in output.
    
Test Input: 
        None.
    
Test Output: 
        FrTrcvConf_FrTrcvChannel_FrTrcvChannel_0                      0U
        FrTrcvChannel_0                                               0U
        FrTrcv_FrTrcvChannel_0                                        0U
        FrTrcvConf_FrTrcvChannel_FrTrcvChannel_1                      1U
        FrTrcvChannel_1                                               1U
        FrTrcv_FrTrcvChannel_1                                        1U
        FrTrcvConf_FrTrcvBranchIdContainer_FrTrcvBranchIdContainer_0  0U
        FrTrcvChannel_0_FrTrcvBranchIdContainer                       0U
        FrTrcv_FrTrcvChannel_0_FrTrcvBranchIdContainer                0U
        FrTrcvConf_FrTrcvChannel_1_FrTrcvBranchIdContainer            0U
        FrTrcvChannel_1_FrTrcvBranchIdContainer                       0U
        FrTrcv_FrTrcvChannel_1_FrTrcvBranchIdContainer                0U
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv349_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv356_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.SymbolicNameValue_Rev3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_FRTRCV_SymbolicNameValues_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Compile/IN/FrTrcv_ComTest_SymbolicNames_1/source/application/Appl.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
       Checking the generated symbolic name macros when FRTRCV_DONT_PROVIDE_LEGACY_SYMBOLIC_NAMES
       is enabled.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
      01: Check that only 4.0rev3 symbolic name macros are generated and those should be with 
      the names and the values listed in output.
    
Test Input: 
        None.
    
Test Output: 
        FrTrcvConf_FrTrcvChannel_FrTrcvChannel_0                                    0U
        FrTrcvConf_FrTrcvChannel_FrTrcvChannel_1                                    1U
        FrTrcvConf_FrTrcvBranchIdContainer_FrTrcvBranchIdContainer_0  0U
        FrTrcvConf_FrTrcvBranchIdContainer_FrTrcvBranchIdContainer_1  0U
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv349_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv356_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.SymbolicNameValue_Rev3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FrTrcv_Det_NoInit_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test DET-reporting of function FrTrcv_1_T01_SetTransceiverMode() if module is not initialized.
  
Test Object:  
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    No initialization of the FlexRay transceiver driver module.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() (module is not initialized).
    02: VP(FrTrcv.ASR40.FrTrcv277): Check function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv277): Check that FRTRCV_1_T01_E_FR_UNINIT
        was reported to the Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv277</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NoInit_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test DET-reporting of function FrTrcv_1_T01_GetTransceiverMode() if module is not initialized.
  
Test Object:  
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    No initialization of the FlexRay transceiver driver module.
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetTransceiverMode() (module is not initialized)
    02: VP(FrTrcv.ASR40.FrTrcv280): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv280): Check that FRTRCV_1_T01_E_FR_UNINIT was reported
        to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NoInit_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test DET-reporting of function FrTrcv_1_T01_GetTransceiverWUReason() if module is not initialized.
  
Test Object:  
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    No initialization of the FlexRay transceiver driver module.
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetTransceiverWUReason()
    02: VP(FrTrcv.ASR40.FrTrcv283): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv283): Check that FRTRCV_1_T01_E_FR_UNINIT was reported
        to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NoInit_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>287</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test DET-reporting of function FrTrcv_1_T01_ClearTransceiverWakeup() if module is not
    initialized.
  
Test Object:  
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    No initialization of the FlexRay transceiver driver module.
  
Test Execution: 
    01: Call FrTrcv_1_T01_ClearTransceiverWakeup() (module is not initialized).
    02: VP(FrTrcv.ASR40.FrTrcv305): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv305): Check that FRTRCV_1_T01_E_FR_UNINIT was reported
        to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NoInit_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>346</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test DET-reporting of function FrTrcv_1_T01_CheckWakeupByTransceiver() if module is not initialized.
  
Test Object:  
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    No initialization of the FlexRay transceiver driver module.
  
Test Execution: 
    01: Call FrTrcv_1_T01_CheckWakeupByTransceiver() (module is not initialized).
    02: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    03: VP(FrTrcv.ASR40.FrTrcv313): Check that FRTRCV_1_T01_E_FR_UNINIT was reported
        to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NoInit_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test DET-reporting of function FrTrcv_1_T01_EnableTransceiverBranch() if module is not initialized.
  
Test Object:  
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    No initialization of the FlexRay transceiver driver module.
  
Test Execution: 
    01: Call FrTrcv_1_T01_EnableTransceiverBranch() (module is not initialized).
    02: VP(FrTrcv.ASR40.FrTrcv465): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv465): Check that FRTRCV_1_T01_E_FR_UNINIT was reported
        to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv465</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NoInit_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>460</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test DET-reporting of function FrTrcv_1_T01_DisableTransceiverBranch() if module is not
    initialized.
  
Test Object:  
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    No initialization of the FlexRay transceiver driver module.
  
Test Execution: 
    01: Call FrTrcv_1_T01_DisableTransceiverBranch() (module is not initialized).
    02: VP(FrTrcv.ASR40.FrTrcv462): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv462): Check that FRTRCV_1_T01_E_FR_UNINIT was reported
        to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv462</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NoInit_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>520</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test DET-reporting of function FrTrcv_1_T01_GetTransceiverError() if module is not initialized.
  
Test Object:  
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    No initialization of the FlexRay transceiver driver module.
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetTransceiverError() (module is not initialized).
    02: VP(FrTrcv.ASR40.FrTrcv459): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv459): Check that FRTRCV_1_T01_E_FR_UNINIT was reported
        to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv459</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NoInit_MainFunction</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>580</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test no DET-reporting of function FrTrcv_1_T01_MainFunction() if module is not initialized.
  
Test Object:  
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    No initialization of the FlexRay transceiver driver module.
  
Test Execution: 
    01: Call FrTrcv_1_T01_MainFunction()
    02: VP(EB_FRTRCV_20200): Check function doesn't output to development error tracer.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_FRTRCV_20200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_InvalidIdx_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>620</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check function output to development error tracer in case that
    FrTrcv_1_T01_SetTransceiverMode() is called with an invalid transceiver index.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    Module is initialized.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() with invalid transceiver index.
    02: VP(FrTrcv.ASR40.FrTrcv275): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv275): Check that FRTRCV_1_T01_E_FR_INVALID_TRCVIDX
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_InvalidIdx_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>683</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check function output to development error tracer in case that
    FrTrcv_1_T01_GetTransceiverMode() is called with an invalid transceiver index.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetTransceiverMode()
    02: VP(FrTrcv.ASR40.FrTrcv279): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv279): Check that FRTRCV_1_T01_E_FR_INVALID_TRCVIDX
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv279</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_InvalidIdx_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>742</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check function output to development error tracer in case that
    FrTrcv_1_T01_GetTransceiverWUReason() is called with an invalid transceiver index.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetTransceiverWUReason() with invalid transceiver index.
    02: VP(FrTrcv.ASR40.FrTrcv282): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv282): Check that FRTRCV_1_T01_E_FR_INVALID_TRCVIDX
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv282</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_InvalidIdx_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>801</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check function output to development error tracer in case that
    FrTrcv_1_T01_ClearTransceiverWakeup() is called with an invalid transceiver index.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_ClearTransceiverWakeup()
    02: VP(FrTrcv.ASR40.FrTrcv304): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv304): Check that FRTRCV_1_T01_E_FR_INVALID_TRCVIDX
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_InvalidIdx_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>859</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check function output to development error tracer in case that
    FrTrcv_1_T01_CheckWakeupByTransceiver() is called with an invalid transceiver index.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_CheckWakeupByTransceiver() with invalid transceiver index.
    02: VP(FrTrcv.ASR40.FrTrcv312): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv312): Check that FRTRCV_1_T01_E_FR_INVALID_TRCVIDX
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv312</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_InvalidIdx_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>917</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check function output to development error tracer in case that
    FrTrcv_1_T01_EnableTransceiverBranch() is called with an invalid transceiver index.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_EnableTransceiverBranch() with invalid transceiver index.
    02: VP(FrTrcv.ASR40.FrTrcv466): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv466): Check that FRTRCV_1_T01_E_FR_INVALID_TRCVIDX
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_InvalidIdx_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>977</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check function output to development error tracer in case that
    FrTrcv_1_T01_DisableTransceiverBranch() is called with an invalid transceiver index.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_DisableTransceiverBranch()
    02: VP(FrTrcv.ASR40.FrTrcv463): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv463): Check that FRTRCV_1_T01_E_FR_INVALID_TRCVIDX
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_InvalidIdx_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>1036</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check function output to development error tracer in case that
    FrTrcv_1_T01_GetTransceiverError() is called with an invalid transceiver index.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetTransceiverError() with invalid transceiver index.
    02: VP(FrTrcv.ASR40.FrTrcv460): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv460): Check that FRTRCV_1_T01_E_FR_INVALID_TRCVIDX
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NullPtr_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>1102</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if the API function FrTrcv_1_T01_GetVersionInfo() reports
    to development error tracer in case the functions are called with an
    invalid pointer value (NULL_PTR).
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetVersionInfo() with NULL pointer.
    02: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    03: VP(FrTrcv.ASR40.FrTrcv396): Check that FRTRCV_1_T01_E_FR_TRCV_NULL_PTR
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv396</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NullPtr_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>1156</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if the API function FrTrcv_1_T01_GetTransceiverMode() reports
    to development error tracer in case the functions are called with an
    invalid pointer value (NULL_PTR).
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetTransceiverMode() with NULL pointer.
    02: VP(FrTrcv.ASR40.FrTrcv397): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv397): Check that FRTRCV_1_T01_E_FR_TRCV_NULL_PTR
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NullPtr_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>1215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if the API function FrTrcv_1_T01_GetTransceiverWUReason() reports
    to development error tracer in case the functions are called with an
    invalid pointer value (NULL_PTR).
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetTransceiverWUReason()with NULL pointer.
    02: VP(FrTrcv.ASR40.FrTrcv398): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv398): Check that FRTRCV_1_T01_E_FR_TRCV_NULL_PTR
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv398</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_NullPtr_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>1274</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if the API function FrTrcv_1_T01_GetTransceiverError() reports
    to development error tracer in case the function is called with an
    invalid pointer value (NULL_PTR).
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetTransceiverError()with NULL pointer.
    02: VP(FrTrcv.ASR40.FrTrcv439): Check that function returns with E_NOT_OK.
    03: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    04: VP(FrTrcv.ASR40.FrTrcv439): Check that FRTRCV_1_T01_E_FR_TRCV_NULL_PTR
        was reported to Det.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv439</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_InvMode_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>1334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check function output to development error tracer in case an invalid transceiver mode is passed
    to FrTrcv_1_T01_SetTransceiverMode().
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    Module must be initialized.
  
Test Execution: 
    01: Get recent transceiver mode.
    02: Call FrTrcv_SetTransceiverMode() with invalid value FrTrcv_TrcvMode == 0xAA.
    03: VP(FrTrcv.ASR40.FrTrcv273): Check that function returns with E_NOT_OK.
    04: VP(FrTrcv.ASR40.FrTrcv061_1): Since FRTRCV_1_T01_DEV_ERROR_DETECT
        is enabled the module shall use the Det API to report errors.
    05: VP(FrTrcv.EB.Det_InvModeError_1, FRTRCV.EB.Det_InvModeError_2):
        Check that FRTRCV_1_T01_E_INV_MODE was reported to Det.
    06: VP(FrTrcv.ASR40.FrTrcv273): Check that transceiver mode has not changed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.Det_InvModeError_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.Det_InvModeError_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv273</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv061_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Det_PinDioFailure_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>1420</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the behavior of API functions in case of incorrect transceiver access
    output. Reading the pin EN and STBN will bring different result than expected.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_DEV_ERROR_DETECT == ON
    FRTRCV_1_T01_REPORT_TO_DET_ENABLE == ON
    FRTRCV_1_T01_VERIFY_DIO_OUT_ENABLE == ON
    The module shall be initialized.
    only.
  
Test Execution: 
    01: Set transceiver mode according to FRTRCV_TRCVMODE_STANDBY.
    02: Call FrTrcv_1_T01_SetTransceiverMode() and request a transition to
        another state (see input section) while Dio pins are not set correctly.
    03: VP(FrTrcv.ASR40.FrTrcv278): Check that function returns with E_NOT_OK.
    04: VP(EB_FRTRCV_20009): Check that Dio_ReadChannel(9 is called to read Dio pins.
    05: VP(FrTrcv.ASR40.FrTrcv276): Check that error id according to output section was reported to
        Det.
    06: VP(FrTrcv.ASR40.FrTrcv278): Check that FRTRCV_1_T01_E_TRCV_CONTROL was reported to Det.
    07: Call FrTrcv_1_T01_GetTransceiverMode().
    08: VP(FrTrcv.ASR40.FrTrcv323_1): Check that transceiver mode has not changed.
  
Test Input: 
    i = 0: RequestedTrcvMode = FRTRCV_TRCVMODE_STANDBY;
           Return pin EN = STD_HIGH to function
    i = 1: RequestedTrcvMode = FRTRCV_TRCVMODE_NORMAL;
           Return pin EN = STD_LOW to function.
    i = 2: RequestedTrcvMode = FRTRCV_TRCVMODE_RECEIVEONLY;
           Return pin EN = STD_HIGH to function.
    i = 3: RequestedTrcvMode = FRTRCV_TRCVMODE_SLEEP;
           Return pin EN = STD_LOW to function.
    i = 4: RequestedTrcvMode = FRTRCV_TRCVMODE_STANDBY;
           Return pin STBN = STD_HIGH to function
    i = 5: RequestedTrcvMode = FRTRCV_TRCVMODE_NORMAL;
           Return pin STBN = STD_LOW to function.
    i = 6: RequestedTrcvMode = FRTRCV_TRCVMODE_RECEIVEONLY;
           Return pin STBN = STD_LOW to function.
    i = 7: RequestedTrcvMode = FRTRCV_TRCVMODE_SLEEP;
           Return pin STBN = STD_HIGH to function.
  
Test Output: 
    i = 0: ExpectedErrorId = EBTEST_FRTRCV_E_FR_TRCV_NOT_STANDBY
    i = 1: ExpectedErrorId = EBTEST_FRTRCV_E_FR_TRCV_NOT_NORMAL
    i = 2: ExpectedErrorId = EBTEST_FRTRCV_E_FR_TRCV_NOT_RECEIVEONLY
    i = 3: ExpectedErrorId = EBTEST_FRTRCV_E_FR_TRCV_NOT_SLEEP
    i = 4: ExpectedErrorId = EBTEST_FRTRCV_E_FR_TRCV_NOT_STANDBY
    i = 5: ExpectedErrorId = EBTEST_FRTRCV_E_FR_TRCV_NOT_NORMAL
    i = 6: ExpectedErrorId = EBTEST_FRTRCV_E_FR_TRCV_NOT_RECEIVEONLY
    i = 7: ExpectedErrorId = EBTEST_FRTRCV_E_FR_TRCV_NOT_SLEEP
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv323_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_DemToDet_Reporting</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest04_DetCheck/source/application/FrTrcv_ConfTest01_DetCheck.c</sourcefile>
      <sourceline>1656</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests reporting of Dem error to Det.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate normal mode.
    - Error flags shall be set based on the input section.
  
Test Execution: 
    01: Call EBTest_Dio_GetDioSetting() for channel 0 with BusError + GeneralError (ERRN low).
    02: Call EBTest_Dio_GetDioSetting() for channel 1 - High temperature occurred.
    03: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 and 1 with FRTRCV_TRCVMODE_NORMAL
    04: Call FrTrcv_1_T01_MainFunction().
    05: VP(EB_FRTRCV_20021): Check that Det_ReportError was called for 1st error.
    06: VP(EB_FRTRCV_20021): Check that Det_ReportError was called for 2nd error.
    07: Call EBTest_Dio_GetDioSetting() for channel 0 - remove 1st error.
    08: Call EBTest_Dio_GetDioSetting() for the channel 1 - Remove 2nd error.
    09: Call FrTrcv_1_T01_MainFunction().
    10: VP(EB_FRTRCV_20021): Check that Det_ReportError is not called.
  
Test Input: 
    Flag_S4_BusError = TRUE
  
Test Output: 
    BusErrorState == EBTEST_ANY_BUS_FAULT_BIT_SET_BUS_ERROR_STATE
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_FRTRCV_20021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FrTrcv_NoInit_DemReporting</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest05_DemCheck/source/application/FrTrcv_ConTest05_DemCheck.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests Dem reporting for not initialized channels.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate normal mode.
    - Error flags shall be set based on the input section.
  
Test Execution: 
    01: Set transceivers state to FRTRCV_1_T01_NOT_ACTIVE.
    02: Call EBTest_Dio_GetDioSetting() for channel 0 with BusError + GeneralError (ERRN low).
    03: Call EBTest_Dio_GetDioSetting() for channel 1 - High temperature occurred.
    04: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 and 1 with FRTRCV_TRCVMODE_NORMAL
    05: Call FrTrcv_1_T01_MainFunction().
    06: VP(): Check that Dem_ReportErrorStatus was not reported for uninitialized channels.
  
Test Input: 
    Flag_S4_BusError = TRUE
  
Test Output: 
    BusErrorState == EBTEST_ANY_BUS_FAULT_BIT_SET_BUS_ERROR_STATE
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_FRTRCV_20024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_DemReporting</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest05_DemCheck/source/application/FrTrcv_ConTest05_DemCheck.c</sourcefile>
      <sourceline>140</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Tests Dem reporting functionality.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate normal mode.
    - Error flags shall be set based on the input section.
  
Test Execution: 
    01: Call EBTest_Dio_GetDioSetting() for channel 0 with BusError + GeneralError (ERRN low).
    02: Call EBTest_Dio_GetDioSetting() for channel 1 - High temperature occurred.
    03: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 and 1 with FRTRCV_TRCVMODE_NORMAL
    04: Call FrTrcv_1_T01_MainFunction().
    05: VP(FrTrcv.ASR40.FrTrcv295, FrTrcv.ASR40.FrTrcv436, EB_FRTRCV_20020):
        Check that Dem_ReportErrorStatus was reported for EBTEST_DEMEVENT_BUSERROR_TRCV_0
        with DEM_EVENT_STATUS_PREFAILED.
    06: VP(FrTrcv.ASR40.FrTrcv295, FrTrcv.ASR40.FrTrcv436, EB_FRTRCV_20020):
        Check that Dem_ReportErrorStatus was reported for EBTEST_DEMEVENT_BUSERROR_TRCV_1
        with DEM_EVENT_STATUS_PREFAILED. Further check if DemEventIdx_BusErrTrcv can hold values larger than 255.
    07: Call EBTest_Dio_GetDioSetting() for channel 0 - remove bus error.
    08: Call FrTrcv_1_T01_MainFunction().
    09: VP(FrTrcv.ASR40.FrTrcv472, EB_FRTRCV_20020): Check that Dem_ReportErrorStatus was reported
        for TRCV_0 with DEM_EVENT_STATUS_PREPASSED.
    10: Call EBTest_Dio_GetDioSetting() for the channel 1 - Remove High temperature.
    11: Call FrTrcv_1_T01_MainFunction().
    12: VP(FrTrcv.ASR40.FrTrcv472, EB_FRTRCV_20020): Check that Dem_ReportErrorStatus was reported
        for TRCV_1 with DEM_EVENT_STATUS_PREPASSED. Further check if DemEventIdx_BusErrTrcv can hold values larger than 255.
  
Test Input: 
    Flag_S4_BusError = TRUE
  
Test Output: 
    BusErrorState == EBTEST_ANY_BUS_FAULT_BIT_SET_BUS_ERROR_STATE
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_DemReporting_ReceiveOnly</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest05_DemCheck/source/application/FrTrcv_ConTest05_DemCheck.c</sourcefile>
      <sourceline>312</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Tests Dem reporting functionality for a receiver in RECEIVEONLY mode
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate receive only mode.
    - Error flags shall be set based on the input section.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 and 1 with FRTRCV_TRCVMODE_RECEIVEONLY
    02: Call EBTest_Dio_GetDioSetting() for channel 0 with BusError + GeneralError (ERRN low).
    03: Call EBTest_Dio_GetDioSetting() for channel 1 - High temperature occurred.
    04: Call FrTrcv_1_T01_MainFunction().
    05: VP(FrTrcv.ASR40.FrTrcv295, FrTrcv.ASR40.FrTrcv436, EB_FRTRCV_20020):
        Check that Dem_ReportErrorStatus was reported for EBTEST_DEMEVENT_BUSERROR_TRCV_0
        with DEM_EVENT_STATUS_PREFAILED.
    06: VP(FrTrcv.ASR40.FrTrcv295, FrTrcv.ASR40.FrTrcv436, EB_FRTRCV_20020):
        Check that Dem_ReportErrorStatus was reported for EBTEST_DEMEVENT_BUSERROR_TRCV_1
        with DEM_EVENT_STATUS_PREFAILED.
    07: Call EBTest_Dio_GetDioSetting() for channel 0 - remove bus error.
    08: Get Dio setting for the channel 1 - keep bus error.
    09: Call FrTrcv_1_T01_MainFunction().
    10: VP(FrTrcv.ASR40.FrTrcv472, EB_FRTRCV_20020, FrTrcv.EB.DemReportingNoError): Check that Dem_ReportErrorStatus was reported
        for TRCV_0 with DEM_EVENT_STATUS_PREPASSED.
    11: Call EBTest_Dio_GetDioSetting() for the channel 1 - Remove High temperature.
    12: Call FrTrcv_1_T01_MainFunction().
    13: VP(FrTrcv.ASR40.FrTrcv472, EB_FRTRCV_20020, FrTrcv.EB.DemReportingNoError): Check that Dem_ReportErrorStatus was reported
        for TRCV_1 with DEM_EVENT_STATUS_PREPASSED.
  
Test Input: 
    Flag_S4_BusError = TRUE
  
Test Output: 
    BusErrorState == EBTEST_ANY_BUS_FAULT_BIT_SET_BUS_ERROR_STATE
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.DemReportingNoError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_DemReporting_StandbySleep</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConTest05_DemCheck/source/application/FrTrcv_ConTest05_DemCheck.c</sourcefile>
      <sourceline>534</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Tests Dem reporting functionality for a receiver in STANDBY and Sleep mode.
    No Dem reporting should occur for wakeup events.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate sleep/standby mode.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 with FRTRCV_TRCVMODE_STANDBY and 
        channel 1 with FRTRCV_TRCVMODE_SLEEP
    02: Call EBTest_Dio_GetDioSetting() for channel 0 with RemoteWakeUp flag and ERRN low (simulated wakeup).
    03: Call EBTest_Dio_GetDioSetting() for channel 1 with RemoteWakeUp flag and ERRN low (simulated wakeup).
    04: Call FrTrcv_1_T01_MainFunction().
    05: VP(FrTrcv.ASR40.FrTrcv295, FrTrcv.ASR40.FrTrcv436, EB_FRTRCV_20020, FrTrcv.EB.DemReportingNoError): Check that no DEM error was reported.     
    06: Call EBTest_Dio_GetDioSetting() for channel 0 without RemoteWakeUp flag and ERRN high (no wakeup).
    07: Call EBTest_Dio_GetDioSetting() for channel 1 without RemoteWakeUp flag and ERRN high (no wakeup).
    08: Call FrTrcv_1_T01_MainFunction().
    09: VP(FrTrcv.ASR40.FrTrcv472, EB_FRTRCV_20020, FrTrcv.EB.DemReportingNoError): Check that no DEM error was reported.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>EB_FRTRCV_20020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.DemReportingNoError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FrTrcv_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_GetVersionInfo.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks if the API function FrTrcv_1_T01_GetVersionInfo() returns
    the expected version information of the module.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GET_VERSION_INFO == STD_ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetVersionInfo().
    02: VP(FrTrcv.ASR40.FrTrcv285, FrTrcv.ASR40.FrTrcv105):
        Verification of the proper version information:
        versioninfo.vendorID == FRTRCV_1_T01_VENDOR_ID
        versioninfo.moduleID == FRTRCV_1_T01_MODULE_ID
        versioninfo.sw_major_version == FRTRCV_1_T01_SW_MAJOR_VERSION
        versioninfo.sw_minor_version == FRTRCV_1_T01_SW_MINOR_VERSION
        versioninfo.sw_patch_version == FRTRCV_1_T01_SW_PATCH_VERSION
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv285</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>FrTrcv_ConTest01001_NoInit_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_GetVersionInfo.c</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies for uninitialized module that the API function
     FrTrcv_1_T01_GetVersionInfo() returns the version information of the module.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GET_VERSION_INFO == STD_ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is not initialized.
  
Test Execution: 
    01: Call FrTrcv_1_T01_GetVersionInfo() (module is not initialized).
    02: VP(FrTrcv.ASR40.FrTrcv285, FrTrcv.ASR40.FrTrcv105):
        Verification of the proper version information:
        Versioninfo.vendorID == FRTRCV_1_T01_VENDOR_ID
        Versioninfo.moduleID == FRTRCV_1_T01_MODULE_ID
        Versioninfo.sw_major_version == FRTRCV_1_T01_SW_MAJOR_VERSION
        Versioninfo.sw_minor_version == FRTRCV_1_T01_SW_MINOR_VERSION
        Versioninfo.sw_patch_version == FRTRCV_1_T01_SW_PATCH_VERSION
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv285</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FrTrcv_TrcvModeTest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_StateMachine.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Testing the internal state machine and checks if transitions are done correctly.
  
Test Object: None.
Test Precondition: 
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Init state of both channels is FRTRCV_TRCVMODE_SLEEP
    - Dio stub callback functions are initialized.
  
Test Execution: 
    01: VP(FrTrcv.ASR40.FrTrcv272, FrTrcv.ASR40.FrTrcv226):
        FrTrcv_1_T01_SetTransceiverMode() shall successfully set both transceiver
        channels to the modes according to the input section.
    02: VP(FrTrcv.ASR40.FrTrcv253, FrTrcv.ASR40.FrTrcv226):
        FrTrcv_1_T01_GetTransceiverMode() shall confirm the actual state.
    03: VP: EN and STBN pins shall confirm the actual state.
  
Test Input: 
    i = 0:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_NORMAL
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_NORMAL
    i = 1:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_RECEIVEONLY
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_STANDBY
    i = 2:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_SLEEP
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_RECEIVEONLY
    i = 3:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_STANDBY
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_SLEEP
  
Test Output: 
    In all cases Output_TrcvMode_Channel0 = Input_TrcvMode_Channel0
    The Dio pins shall be set accordingly to the actual state.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv272</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FrTrcv_TestTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_TransceiverBranch.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    It shall be tested that the dummy functions (active star not supported)
    DisableTransceiverBranch() and EnableTransceiverBranch() do not call any
    stub function and return E_NOT_OK when called with valid parameters.
    Note: Det checks are not part this tests.
  
Test Object: None.
Test Precondition: 
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
  
Test Execution: 
    01: VP(FrTrcv.EB.NoTransceiverBranchSupport):
        The call of EnableTransceiverBranch() shall return with E_NOT_OK.
    02: VP(FrTrcv.EB.NoTransceiverBranchSupport):
        Verify that this function does not call any external (stub) functions.
    03: VP(FrTrcv.EB.NoTransceiverBranchSupport):
        The call of DisableTransceiverBranch() shall return with E_NOT_OK.
    04: VP(FrTrcv.EB.NoTransceiverBranchSupport):
        Verify that this function does not call any external (stub) functions.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.NoTransceiverBranchSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FrTrcv_No_ERRNFlag_Occurred</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_TransceiverError.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the FrTrcv_1_T01_GetTransceiverError() API service in case that no error
    is occurred.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - No error flag is set.
    - Pins are set to simulate normal mode
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 and 1 with FRTRCV_TRCVMODE_NORMAL
    02: Call FrTrcv_1_T01_GetTransceiverError()
    03: VP(FrTrcv.EB.DetectingNoErrors): FrTrcv_1_T01_GetTransceiverError() returns E_OK.
    04: VP(FrTrcv.EB.DetectingNoErrors): Check that only Dio access to pin ERRN is done. No access
        to the status register.
    05: VP(FrTrcv.EB.DetectingNoErrors): Check that no bits are set in output parameter
        FrTrcv_BusErrorState.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.DetectingNoErrors</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_UnderVoltage_ERRNFlag_Occurred</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_TransceiverError.c</sourcefile>
      <sourceline>150</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the FrTrcv_1_T01_GetTransceiverError() API service in case that under voltage error
    is occurred.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate normal mode
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() for channel 1 with FRTRCV_TRCVMODE_NORMAL
    02: Set error flags according to input section.
    03: VP: Call FrTrcv_1_T01_GetTransceiverError()
    04: VP: FrTrcv_1_T01_GetTransceiverError() returns E_OK.
    05: VP(FrTrcv.ASR40.FrTrcv420_0, FrTrcv.ASR40.FrTrcv420_7):
        For all iterations bit 0 and bit 7 FrTrcv_BusErrorState shall be set
        to indicated an under voltage error.
  
Test Input: 
    i = 0: Flag_S8_UvVbat = TRUE
    i = 1: Flag_S9_UvVcc = TRUE
    i = 2: Flag_S10_UvVio = TRUE
    i = 3: Flag_S8_UvVbat = TRUE and Flag_S10_UvVio = TRUE
  
Test Output: 
    BusErrorState == EBTEST_UNDERVOLTAGE_BIT_SET_BUS_ERROR_STATE
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Bus_ERRNFlag_Occurred</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_TransceiverError.c</sourcefile>
      <sourceline>285</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the FrTrcv_1_T01_GetTransceiverError() API service in case that bus error
    is occurred.
  
Test Object: None.
Test Precondition: 
    FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate normal mode.
    - Error flags shall be set based on the input section.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 with FRTRCV_TRCVMODE_NORMAL
    02: VP: Call FrTrcv_1_T01_GetTransceiverError()
    03: VP: FrTrcv_1_T01_GetTransceiverError() returns E_OK.
    04: VP(FrTrcv.ASR40.FrTrcv420_0, FrTrcv.ASR40.FrTrcv420_6):
        Check bit 0 (A error occurred) and bit 6 (bus fault) FrTrcv_BusErrorState.
  
Test Input: 
    Flag_S4_BusError = TRUE
  
Test Output: 
    BusErrorState == EBTEST_ANY_BUS_FAULT_BIT_SET_BUS_ERROR_STATE
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_PermanentEnabled_ERRNFlag_Occurred</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_TransceiverError.c</sourcefile>
      <sourceline>382</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the FrTrcv_1_T01_GetTransceiverError() API service in case that permanent
    enable error is occurred
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate normal mode
    - Error flags shall be set based on the input section.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 with FRTRCV_TRCVMODE_NORMAL
    02: VP: Call FrTrcv_1_T01_GetTransceiverError()
    03: VP: FrTrcv_1_T01_GetTransceiverError() returns E_OK.
    04: VP(FrTrcv.ASR40.FrTrcv420_0, FrTrcv.ASR40.FrTrcv420_8):
        Check that bit 0 and bit 8 is set in FrTrcv_BusErrorState to detect a
        permanent enable error.
  
Test Input: 
    Flag_S7_TxEn_BGE_Clamped = TRUE
  
Test Output: 
    BusErrorState == EBTEST_HIGH_TEMP_BIT_SET_BUS_ERROR_STATE
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_HighTemp_ERRNFlag_Occurred</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_TransceiverError.c</sourcefile>
      <sourceline>480</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the FrTrcv_1_T01_GetTransceiverError() API service in case that high
    temperature error is occurred.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate normal mode
    - Error flags shall be set based on the input section.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 with FRTRCV_TRCVMODE_NORMAL
    02: VP: Call FrTrcv_1_T01_GetTransceiverError()
    03: VP: FrTrcv_1_T01_GetTransceiverError() returns E_OK.
    04: VP(FrTrcv.ASR40.FrTrcv420_0, FrTrcv.ASR40.FrTrcv420_9):
        Check that bit 0 and bit 9 is set in FrTrcv_BusErrorState to detect a
        over temperature error.
  
Test Input: 
    Flag_S5_TempHigh = TRUE
  
Test Output: 
    BusErrorState == EBTEST_HIGH_TEMP_BIT_SET_BUS_ERROR_STATE
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_MixedErrors_ERRNFlag_Occurred</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_TransceiverError.c</sourcefile>
      <sourceline>579</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the FrTrcv_1_T01_GetTransceiverError() API service in case that two
    errors occur at the same time.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate normal mode
    - Error flags shall be set based on the input section.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() for channel 0 with FRTRCV_TRCVMODE_NORMAL
    02: VP: Call FrTrcv_1_T01_GetTransceiverError()
    03: VP: FrTrcv_1_T01_GetTransceiverError() returns E_OK.
    04: VP(FrTrcv.ASR40.FrTrcv420_0, FrTrcv.ASR40.FrTrcv420_6, FrTrcv.ASR40.FrTrcv420_7
        FrTrcv.EB.DetectingMultipleErrors): Check that bit 0, 6 and bit 7 are set
        in FrTrcv_BusErrorState to detect a bus error and under voltage error.
  
Test Input: 
    Flag_S4_BusError = TRUE
    Flag_S10_UvVio = TRUE
  
Test Output: 
    BusErrorState == EBTEST_VOLT_AND_BUS_BIT_SET_BUS_ERROR_STATE
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.DetectingMultipleErrors</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_RemoteWakeupWhileError_ERRNFlag_Occurred</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_TransceiverError.c</sourcefile>
      <sourceline>682</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that FrTrcv_1_T01_GetTransceiverError() will detect a remote wake up.
    The FrTrcv_1_T01_GetTransceiverError() shall be able to report a remote wake
    up while reading ERRN status register.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Pins are set to simulate standby mode
    - Error flags shall be set based on the input section.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() for channel 1 with FRTRCV_TRCVMODE_STANDBY
    02: Call FrTrcv_1_T01_CheckWakeupByTransceiver() while no remote wake up is present.
    03: VP: EcuM_SetWakeupEvent shall not be notified.
    04: FrTrcv_1_T01_GetTransceiverError() shall detect a remote wake up while
        reading an error.
    05: VP(FrTrcv.ASR40.FrTrcv420_0):
        Check that bit 0 and bit 6 are set in FrTrcv_BusErrorState to detect a
        bus error.
    06: Call FrTrcv_1_T01_CheckWakeupByTransceiver() while remote wake up is present.
    07: VP(FrTrcv.EB.DetectingErrorAndWakeUp):
        Verify that no further hardware is used to report the wake up using
        EcuM_SetWakeupEvent().
  
Test Input: 
    Step 01: Flag_S1_RemoteWakeUp = FALSE
    Step 03: Flag_S1_RemoteWakeUp = TRUE
  
Test Output: 
    BusErrorState == EBTEST_NO_BITS_SET_BUS_ERROR_STATE
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv420_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.DetectingErrorAndWakeUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FrTrcv_Conf01051_DetectWakeUpByBus_NorToStby</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_WakeUp.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case shall verify that wake up will be detected and reported after the transition
    from normal mode to standby mode.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == STD_ON
    - FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE == STD_ON
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Trcv channel under test must be in normal mode.
  
Test Execution: 
    01: Call FrTrcv_SetTransceiverMode() to initiate transition from normal mode to standby mode.
    02: VP(FrTrcv.EB.ReportWakeUpToEcuM, FrTrcv.ASR40.FrTrcv311_2): Verify that FrTrcv calls
        EcuM_SetWakeupEvent() with expected wakeup source only if remote wakeup is detected.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv311_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.ReportWakeUpToEcuM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Conf01052_DetectWakeUpByBus_NorToSlp</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_WakeUp.c</sourcefile>
      <sourceline>120</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case shall verify that wake up will be detected and reported after the transition
    from normal mode to sleep mode.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == STD_ON
    - FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE == STD_ON
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Trcv channel under test must be in normal mode.
  
Test Execution: 
    01: Call FrTrcv_SetTransceiverMode() to initiate transition from normal mode to sleep mode.
    02: VP(FrTrcv.EB.ReportWakeUpToEcuM, FrTrcv.ASR40.FrTrcv311_2): Verify that FrTrcv calls
        EcuM_SetWakeupEvent() with expected wakeup source only if remote wakeup is detected.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv311_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.ReportWakeUpToEcuM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Conf01053_DetectWakeUpByBus_RcvToSlp</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_WakeUp.c</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case shall verify that wake up will be detected and reported after the transition
    from receive only mode to sleep mode.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == STD_ON
    - FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE == STD_ON
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Trcv channel under test must be in receive only mode.
  
Test Execution: 
    01: Call FrTrcv_SetTransceiverMode() to initiate transition from receive only mode to sleep
        mode.
    02: VP(FrTrcv.EB.ReportWakeUpToEcuM, FrTrcv.ASR40.FrTrcv311_2): Verify that FrTrcv calls
        EcuM_SetWakeupEvent() with expected wakeup source only if remote wakeup is detected.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv311_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.ReportWakeUpToEcuM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Conf01054_DetectWakeUpByBus_RcvToStby</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_WakeUp.c</sourcefile>
      <sourceline>281</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case shall verify that wake up will be detected and reported after the transition
    from receive only mode to standby mode.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == STD_ON
    - FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE == STD_ON
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Trcv channel under test must be in receive only mode.
  
Test Execution: 
    01: Call FrTrcv_SetTransceiverMode() to initiate transition from receive only mode to standby
        mode.
    02: VP(FrTrcv.EB.ReportWakeUpToEcuM, FrTrcv.ASR40.FrTrcv311_2): Verify that FrTrcv calls
        EcuM_SetWakeupEvent() with expected wakeup source only if remote wakeup is detected.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv311_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.ReportWakeUpToEcuM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_DetectWakeUpByBus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_WakeUp.c</sourcefile>
      <sourceline>362</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case shall verify that wake up will be detected and reported in low power mode
    but not in power mode.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == STD_ON
    - FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE == STD_ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Trcv channel under test must be in normal mode.
    - Set Dio stub that no wake up is available.
    - EcuMWakeupSource_0 shall be configured
  
Test Execution: 
    01: Set transceiver channels in low power modes (see input section) and
        set Dio stub that no wake up is available.
    02: VP: Check that no wake up is reported to EcuM.
    03: Provide remote wake up via Dio stub.
    04: VP(FrTrcv.ASR40.FrTrcv380): Call FrTrcv_CheckWakeupByTransceiver().
        It shall be possible to call the function in sleep mode.
    05: VP(FrTrcv.EB.ReportWakeUpToEcuM):
           Check that wake up is reported to EcuM with the expected wake up source.
    06: VP(FrTrcv.ASR40.FrTrcv311_2):
        Verify that it is not checked for a wake up again.
    07: Set transceiver in power mode (see input section).
    08: VP: Verify that it is not checked for a wake up in this mode.
  
Test Input: 
    Test step 01:
      i=0: Low power mode = standby
      i=1: Low power mode = sleep
    Test step 06:
      i=0: Power mode = receive only
      i=1: Power mode = normal
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv311_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.ReportWakeUpToEcuM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_VerifyWakeUpReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_WakeUp.c</sourcefile>
      <sourceline>544</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the functionality of FrTrcv_GetTransceiverWUReason() and that
    the wake up reason is only reset when changing to low power mode or by calling
    FrTrcv_ClearTransceiverWakeup().
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == ON
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Trcv channel under test must be in normal mode.
    - Dio stub callback functions are initialized.
  
Test Execution: 
    01: Set transceiver channel to low power mode (see input section) and
        set Dio stub that no wake up is available.
    02: VP: Verify that wake up reason is FRTRCV_WU_POWER_ON.
    03: Provide remote wake up via Dio stub.
    04: VP(FrTrcv.EB.ReportWakeUpToEcuM): Check for wake up and verify that it is
        reported to EcuM.
    05: VP(FrTrcv.ASR40.FrTrcv232): Verify that wake up reason is FRTRCV_WU_BY_BUS.
    06: Set transceiver in power mode (see input section).
    07: VP: Verify that wake up reason is still FRTRCV_WU_BY_BUS.
    08: Use FrTrcv_ClearTransceiverWakeup() to clear wake up reason.
    09: VP(FrTrcv.ASR40.FrTrcv247): Verify that wake up reason is cleared to
        FRTRCV_WU_POWER_ON.
    10: Set transceiver channel to low power mode again.
    11: VP: Verify that wake up reason is still FRTRCV_WU_POWER_ON.
    12: VP(FrTrcv.EB.ReportWakeUpToEcuM) Check for wake up and verify that it is reported to EcuM.
    13: VP(FrTrcv.ASR40.FrTrcv232): Verify that wake up reason is FRTRCV_WU_BY_BUS.
    14: Set transceiver in power mode (see input section).
    15: VP: Verify that wake up reason is still FRTRCV_WU_BY_BUS.
    16: Set transceiver channel to low power mode again to clean wake up reason.
    17: VP: Verify that that wake up reason is FRTRCV_WU_POWER_ON.
  
Test Input: 
    Test step 01:
      i=0: Low power mode = standby
      i=1: Low power mode = sleep
    Test step 06:
      i=0: Power mode = receive only
      i=1: Power mode = normal
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.ReportWakeUpToEcuM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_DetectInitWakeUpByBus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_WakeUp.c</sourcefile>
      <sourceline>838</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case shall verify that during initialization wake up will be
    detected and reported in low power mode but not in power mode.
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == STD_ON
    - FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE == STD_ON
    - Configuration supporting 3 transceivers, FrTrcv_TrcvIdx = {0,1,2}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
    - Init mode of both channels is sleep mode.
    - Set Dio stub that no wake up is available.
    - EcuMWakeupSource_0 shall be configured
  
Test Execution: 
    01: Call FrTrcv_Init().
    02: VP: Check that no wake up is reported to EcuM.
    03: Provide remote wake up via Dio stub for channel 01.
    04: Call FrTrcv_Init(). The call shall detect the wake up.
    05: VP(FrTrcv.ASR40.FrTrcv363, FrTrcv.EB.ReportWakeUpToEcuM, FrTrcv.ASR40.FrTrcv438):
        The wake up shall be reported to EcuM.
    06: VP: Call FrTrcv_CheckWakeupByTransceiver()for channel 01.
    07: VP(FrTrcv.ASR40.FrTrcv362): The wake up shall not be reported to EcuM again.
    08: Call FrTrcv_Init(). The call shall re-arm wake up detection.
    09: VP(FrTrcv.EB.ReportWakeUpToEcuM, FrTrcv.ASR40.FrTrcv366, FrTrcv.ASR40.FrTrcv438):
        Check that wake up is reported to EcuM again.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv363</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv362</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.ReportWakeUpToEcuM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv366</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_WakeUpPerChannel_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest01_Config1/source/application/FrTrcv_ConfTest01_WakeUp.c</sourcefile>
      <sourceline>1011</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case shall verify for a channel with disabled configuration parameter
    FrTrcvWakeupByBusUsed that the call of FrTrcv_CheckWakeupByTransceiver() will not access the
    hardware (Dio calls) and will not call EcuM_SetWakeupEvent().
  
Test Object: None.
Test Precondition: 
    - FRTRCV_1_T01_GETTRANSCEIVERERROR_API_ENABLE == STD_ON
    - FRTRCV_1_T01_WAKEUP_SUPPORT_ENABLE == STD_ON
    - Configuration parameter FrTrcvWakeupByBusUsed is disabled for channel under test.
    - Dio stub callback functions are initialized.
    - Init mode of all channels is sleep mode.
    - Set Dio stub that no wake up is available.
  
Test Execution: 
    01: Call FrTrcv_CheckWakeupByTransceiver() to detect a wake up
    02: VP: Neither EcuM_SetWakeupEvent() nor any Dio function is called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.FrTrcvWakeupByBusUsed_Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FRTRCV_UseWakeUpDummyFunction</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest02_NoDet_NoDem_NoWakeUp/source/application/FrTrcv_ConfTest02_WakeUp.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Remote wake up by bus is disabled. Verify that the functions FrTrcv_GetTransceiverWUReason(),
    FrTrcv_CheckWakeupByTransceiver() and FrTrcv_ClearTransceiverWakeUp() do not
    check hardware for wake up, do not report wake up to EcuM and do not influence
    the actual state.
  
Test Object: None.
Test Precondition: 
    - Det, Dem and wake up not supported.
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized.
    - Dio stub callback functions are initialized.
  
Test Execution: 
    01: VP: FrTrcv_1_T01_SetTransceiverMode() shall successfully set
        both transceiver channels to the modes according to the input section.
    02: VP(FrTrcv.EB.NoWakeUpSupport_GetTransceiverWUReason):
        FrTrcv_GetTransceiverWUReason() shall return with E_OK.
        (expect to be dummy function)
    03: VP(FrTrcv.EB.NoWakeUpSupport_GetTransceiverWUReason):
        The Wake up reason shall be FRTRCV_WU_POWER_ON.
    04: VP(FrTrcv.EB.NoWakeUpSupport_ClearTransceiverWakeUp):
        FrTrcv_ClearTransceiverWakeUp() shall return with E_OK.
        (expect to be dummy function)
    05: VP(FrTrcv.EB.NoWakeUpSupport_CheckWakeupByTransceiver):
        FrTrcv_CheckWakeupByTransceiver() shall not check the hardware for
        a wake up and shall not report to EcuM (expect to be dummy function).
    06: VP: FrTrcv_1_T01_GetTransceiverMode() shall confirm the actual state.
    07: VP: EN and STBN pins shall confirm the actual state.
  
Test Input: 
    i = 0:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_NORMAL
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_NORMAL
    i = 1:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_RECEIVEONLY
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_STANDBY
    i = 2:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_SLEEP
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_RECEIVEONLY
    i = 3:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_STANDBY
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_SLEEP
  
Test Output: 
    In all cases Output_TrcvMode_Channel0 = Input_TrcvMode_Channel0
    The Dio pins shall be set accordingly to the actual state.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.NoWakeUpSupport_GetTransceiverWUReason</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.NoWakeUpSupport_ClearTransceiverWakeUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.NoWakeUpSupport_CheckWakeupByTransceiver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    <specobject>
      <id>FrTrcv_ConTest02001_SetMode_VerifyDio_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest02_NoDet_NoDem_NoWakeUp/source/application/FrTrcv_ConfTest02_WakeUp.c</sourcefile>
      <sourceline>281</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If configuration parameter VerifyDioOutEnable is disabled, the call of
    FrTrcv_SetTransceiverMode() shall not read the Dio pins again.
  
Test Object: None.
Test Precondition: 
    - VerifyDioOutEnable is disabled.
    - Module is initialized.
    - Initial mode is FRTRCV_TRCVMODE_NORMAL.
  
Test Execution: 
    01: Call FrTrcv_1_T01_SetTransceiverMode() (VerifyDioOutEnable is disabled).
    02: VP: Verify that call to Dio_ReadChannel() is not performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_FRTRCV_20009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FrTrcv_CheckIcuCall</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest03_Icu/source/application/FrTrcv_ConfTest03_CheckIcuCall.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Testing that FrTrcv_1_T01_SetTransceiverMode() calls the Icu API correctly.
  
Test Object: None.
Test Precondition: 
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized with init state FRTRCV_TRCVMODE_NORMAL for both
      channels.
    - Dio stub callback functions are initialized.
    - ICU support is disabled for channel 0
    - ICU support is enabled correctly for channel 1
  
Test Execution: 
    01: VP: FrTrcv_1_T01_SetTransceiverMode() shall
        successfully set channels 0 to the modes according to the input section.
    02: VP: Since ICU support is disabled for channel 0 no ICU API call shall be detected.
    03: VP: FrTrcv_1_T01_SetTransceiverMode() shall
        successfully set channels 1 to the modes according to the input section.
    04: VP(FrTrcv.EB.DisableIcuNotification, FrTrcv.EB.EnableIcuNotification):
        ICU API shall be called according to output section.
    05: VP(FrTrcv.EB.IcuChannelId):
        The parameter of the ICU API call shall have EBTest_ICU_CHANNEL_ID0.
  
Test Input: 
    i = 0:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_STANDBY
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_SLEEP
    i = 1:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_RECEIVEONLY
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_STANDBY
    i = 2:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_SLEEP
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_RECEIVEONLY
    i = 3:
      Input_TrcvMode_Channel0 = FRTRCV_TRCVMODE_NORMAL
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_NORMAL
  
Test Output: 
    i = 0: Transition NORMAL (initial mode) to SLEEP -&gt; Enable Icu notification expected.
    i = 1: Transition SLEEP to STANDBY -&gt; No Icu action expected.
    i = 2: Transition STANDBY to RECEIVEONLY -&gt; Disable Icu notification expected.
    i = 3: Transition RECEIVEONLY to NORMAL -&gt; No Icu action expected.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.DisableIcuNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.EnableIcuNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.IcuChannelId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_SetSameState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest03_Icu/source/application/FrTrcv_ConfTest03_CheckIcuCall.c</sourcefile>
      <sourceline>238</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Testing that FrTrcv_1_T01_SetTransceiverMode() calls the Icu API correctly.
  
Test Object: None.
Test Precondition: 
    - Configuration supporting 2 transceivers, FrTrcv_TrcvIdx = {0,1}.
    - Module is initialized with init state FRTRCV_TRCVMODE_NORMAL for
      channel 1.
    - Dio stub callback functions are initialized.
    - ICU support is enabled correctly for channel 1
  
Test Execution: 
    01: VP: FrTrcv_1_T01_SetTransceiverMode() shall
        successfully set channels 1 to the modes according to the input section.
    02: VP(FrTrcv.EB.DisableIcuNotification, FrTrcv.EB.EnableIcuNotification):
        ICU API shall be called according to output section.
    03: VP(FrTrcv.EB.IcuChannelId):
        The parameter of the ICU API call shall have EBTest_ICU_CHANNEL_ID0.
    04: VP(FrTrcv.ASR40.FrTrcv474): FrTrcv_1_T01_SetTransceiverMode() shall
        successfully set channels 1 to the same modes as already set in test step 01.
    05: VP(FrTrcv.ASR40.FrTrcv474): The reset of the same channel mode
        shall not lead an error report and shall not call Icu API.
    06: VP: Verify with FrTrcv_1_T01_GetTransceiverMode() the actual state.
  
Test Input: 
    i = 0:
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_SLEEP
    i = 1:
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_STANDBY
    i = 2:
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_RECEIVEONLY
    i = 3:
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_NORMAL
    i = 4:
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_STANDBY
    i = 5:
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_SLEEP
    i = 6:
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_NORMAL
    i = 7:
      Input_TrcvMode_Channel1 = FRTRCV_TRCVMODE_RECEIVEONLY
  
Test Output: 
    i = 0: Transition NORMAL to SLEEP -&gt; Enable Icu notification expected.
    i = 1: Transition SLEEP to STANDBY -&gt; No Icu action expected.
    i = 2: Transition STANDBY to RECEIVEONLY -&gt; Disable Icu notification expected.
    i = 3: Transition RECEIVEONLY to NORMAL -&gt; No Icu action expected.
    i = 4: Transition NORMAL to STANDBY -&gt; Enable Icu notification expected.
    i = 5: Transition STANDBY to SLEEP -&gt; No Icu action expected.
    i = 6: Transition SLEEP to NORMAL -&gt; Disable Icu notification expected.
    i = 7: Transition NORMAL to RECEIVEONLY -&gt; No Icu action expected.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.DisableIcuNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.EnableIcuNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.EB.IcuChannelId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv474</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FrTrcv_ChannelInitMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest03_Icu/source/application/FrTrcv_ConfTest03_InitFunction.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Testing that each channel is correctly set to
    its initial mode when FrTrcv_1_T01_Init() is called.
  
Test Object: None.
Test Precondition: 
    - Configuration supporting 5 transceivers, FrTrcv_TrcvIdx = {0,1,2,3,4}.
    - The init state of the channels are configured as followed:
      TrcvChannel 01: FRTRCV_TRCVMODE_NORMAL
      TrcvChannel 02: FRTRCV_TRCVMODE_RECEIVEONLY
      TrcvChannel 03: FRTRCV_TRCVMODE_SLEEP
      TrcvChannel 04: FRTRCV_TRCVMODE_STANDBY
    - Dio stub callback functions are initialized.
  
Test Execution: 
    01: Call FrTrcv_Init() (Shall set initial mode of all channels.)
    02: VP(FrTrcv.ASR40.FrTrcv270):
        Check that transceiver mode is set according to output section.
    03: Set all channels to another mode according to input section.
    04: Call FrTrcv_Init() again (Shall reset all channels to initial mode.).
    05: VP(FrTrcv.ASR40.FrTrcv270):
        Check that transceiver mode is set according to output section.
  
Test Input: 
  Test step 03:
    i = 0: TrcvChannel 01: change to FRTRCV_TRCVMODE_SLEEP
    i = 1: TrcvChannel 02: change to FRTRCV_TRCVMODE_STANDBY
    i = 2: TrcvChannel 03: change to FRTRCV_TRCVMODE_NORMAL
    i = 3: TrcvChannel 04: change to FRTRCV_TRCVMODE_RECEIVEONLY
  
Test Output: 
  Test step 02,05
    i = 0: TrcvChannel 01: Output_ChannelInitMode = FRTRCV_TRCVMODE_NORMAL
    i = 1: TrcvChannel 02: Output_ChannelInitMode = FRTRCV_TRCVMODE_RECEIVEONLY
    i = 2: TrcvChannel 03: Output_ChannelInitMode = FRTRCV_TRCVMODE_SLEEP
    i = 3: TrcvChannel 04: Output_ChannelInitMode = FRTRCV_TRCVMODE_STANDBY
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.ASR40.FrTrcv270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_IcuInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest03_Icu/source/application/FrTrcv_ConfTest03_InitFunction.c</sourcefile>
      <sourceline>188</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Testing that each channel correctly enables/disables the ICU notification
    during initialization.
  
Test Object: None.
Test Precondition: 
    - Configuration supporting 5 transceivers, FrTrcv_TrcvIdx = {0,1,2,3,4}.
    - The init state of the channels are configured as followed:
      TrcvChannel 00: FRTRCV_TRCVMODE_NORMAL
      TrcvChannel 01: FRTRCV_TRCVMODE_NORMAL
      TrcvChannel 02: FRTRCV_TRCVMODE_RECEIVEONLY
      TrcvChannel 03: FRTRCV_TRCVMODE_SLEEP
      TrcvChannel 04: FRTRCV_TRCVMODE_STANDBY
    - Dio stub callback functions are initialized.
  
Test Execution: 
    01: Call FrTrcv_Init() (Shall initialize ICU notification.)
    02: VP(): Check ICU notification is enabled/disabled according to output section.
  
Test Input: 
  
Test Output: 
  Test step 02
    TrcvChannel 00: ICU disabled -&gt; No call expected.
    TrcvChannel 01: FRTRCV_TRCVMODE_NORMAL -&gt; Disable ICU notification EBTest_ICU_CHANNEL_ID0.
    TrcvChannel 02: FRTRCV_TRCVMODE_RECEIVEONLY -&gt; Disable ICU notification EBTest_ICU_CHANNEL_ID1.
    TrcvChannel 03: FRTRCV_TRCVMODE_SLEEP -&gt; Enable ICU notification EBTest_ICU_CHANNEL_ID2.
    TrcvChannel 04: FRTRCV_TRCVMODE_STANDBY -&gt;Enable ICU notification EBTest_ICU_CHANNEL_ID3.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.IcuInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>EB_FrTrcv_Con03010_ChannelOrderNotConsecutive</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Conformance/IN/FrTrcv_ConfTest03_Icu/source/application/FrTrcv_ConfTest03_InitFunction.c</sourcefile>
      <sourceline>339</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   It shall be tested that not consecutive ordered configured FrTrcvChannels based on
   FrTrcvChannelId will be generated correct.
  
Test Object: FrTrcv_1_T01_Lcfg.c
Test Precondition: 
    - Configuration supporting 5 not consecutive ordered transceiver channels.
    - FrTrcvChannel_0 contains FrTrcvChannelId = 0 and is not the first configured channel in the
      FrTrcv.xdm file.
  
Test Execution: 
    01: VP: Verify that all entries in FrTrcv_1_T01_TrcvConfig[] are generated in consecutive order
            based on FrTrcvChannelId (even though the are not consecutive in the xdm file).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.Gen.ConfigChannelOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_FRTRCV_GEN01001_ValidDioChannelERRNRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If DioChannelERRNRef is not configured to refer to a Dio channel the generator shall report an
    error.
  
Test Object: XDM check
Test Precondition: 
     DioChannelERRNRef shall not refer to a Dio channel.
     FrTrcvEnableWakeUpSupport is TRUE.
     GetTransceiverErrorApiEnable is TRUE.
  
Test Execution: 
      VP: The generator shall report an error which states that DioChannelERRNRef must contain a
          valid reference.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.ValidDioChannelERRNRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01002_ValidDioChannelSTBNRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If DioChannelSTBNRef is not configured to refer to a Dio channel the generator shall report an
    error.
  
Test Object: XDM check
Test Precondition: 
    DioChannelSTBNRef shall not refer to a Dio channel.
  
Test Execution: 
      VP: The generator shall report an error which states that DioChannelSTBNRef must contain a
          valid reference.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.ValidDioChannelSTBNRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01003_ValidDioChannelENRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If DioChannelENRef is not configured to refer to a Dio channel the generator shall report an
    error.
  
Test Object: XDM check
Test Precondition: 
    DioChannelENRef shall not refer to a Dio channel.
  
Test Execution: 
      VP: The generator shall report an error which states that DioChannelENRef must contain a
          valid reference.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.ValidDioChannelENRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01004_ValidFrTrcvIcuChannelRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrTrcvIcuChannelRef is enabled not configured to refer to an Icu channel the generator shall
    report an error.
  
Test Object: XDM check
Test Precondition: 
    FrTrcvIcuChannelRef shall be enabled.
    FrTrcvIcuChannelRef shall not refer to an Icu channel.
  
Test Execution: 
      VP: The generator shall report an error which states that FrTrcvIcuChannelRef must contain a
          valid reference.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.ValidFrTrcvIcuChannelRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01005_ValidFrTrcvWakeupSourceRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrTrcvWakeupSourceRef is enabled and not configured to refer to a EcuMWakeupSource the
    generator shall report an error.
  
Test Object: XDM check
Test Precondition: 
    FrTrcvIcuChannelRef shall be enabled.
    FrTrcvIcuChannelRef shall not refer to an Icu channel.
  
Test Execution: 
      VP: The generator shall report an error which states that FrTrcvWakeupSourceRef must contain a
          valid reference.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.ValidFrTrcvWakeupSourceRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01006_FrTrcvIcuSupport</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrTrcvIcuChannelRef is enabled while FrTrcvEnableIcuSupport is disabled the
    generator shall report an error.
  
Test Object: XDM check
Test Precondition: 
    FrTrcvIcuChannelRef shall be enabled.
    FrTrcvEnableWakeUpSupport shall be disabled.
  
Test Execution: 
      VP: The generator shall report an error which states that FrTrcvEnableIcuSupport must
          be enabled to use the feature.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.FrTrcvIcuSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01007_GlobalWakeupSupport</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>182</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrTrcvWakeupByBusUsed is enabled while FrTrcvEnableWakeUpSupport is disabled
    the generator shall report an error.
  
Test Object: XDM check
Test Precondition: 
    FrTrcvWakeupByBusUsed shall be enabled.
    FrTrcvEnableWakeUpSupport shall be disabled.
  
Test Execution: 
      VP: The generator shall report an error which states that FrTrcvEnableWakeUpSupport must
          be enabled to use the feature.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.GlobalWakeupSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01008_WUSupport_EnableWUSourceRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrTrcvWakeupByBusUsed is enabled while FrTrcvWakeupSourceRef is disabled for the same
    channel, the generator shall report an error.
  
Test Object: XDM check
Test Precondition: 
    FrTrcvWakeupSourceRef shall be disabled.
    FrTrcvWakeupByBusUsed shall be enabled.
  
Test Execution: 
      VP: The generator shall report an error which states that FrTrcvWakeupSourceRef shall
          be enabled if wake up supported (FrTrcvWakeupByBusUsed) for the channel.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.WUSupport_EnableWUSourceRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01009_WUSupport_DisableWUSourceRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrTrcvWakeupSourceRef is enabled while FrTrcvWakeupByBusUsed is disabled for the same
    channel, the generator shall report a warning.
  
Test Object: XDM check
Test Precondition: 
    FrTrcvWakeupSourceRef shall be enabled.
    FrTrcvWakeupByBusUsed shall be disabled.
  
Test Execution: 
      VP: The generator shall report a warning which states that FrTrcvWakeupSourceRef shall not
          be enabled if wake up is not supported (FrTrcvWakeupByBusUsed is disabled) for the
          channel.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.WUSupport_DisableWUSourceRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01010_EnableReadStatusDelayCounterUser</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>261</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If ReadStatusDelayCounter is enabled while ReadStatusDelayCounterUser is also enabled,
    the generator shall report an error.
  
Test Object: XDM check
Test Precondition: 
    ReadStatusDelayCounter shall be enabled.
    ReadStatusDelayCounteruser shall be enabled.
  
Test Execution: 
      VP: The generator shall report an error which states that ReadStatusDelayCounter shall not
          be enabled if a custom user function is configured (ReadStatusDelayCounterUser is enabled).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.EnableReadStatusDelayCounterUser</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>TS_FRTRCV_GEN01011_DisableReadStatusDelayCounterUser</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Generic/IN/FrTrcv_GenTest01_XdmMcgChecks/source/application/FrTrcv_GenTest01_TestSpec.h</sourcefile>
      <sourceline>287</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If ReadStatusDelayCounter is disabled while ReadStatusDelayCounterUser is also disabled,
    the generator shall report an error.
  
Test Object: XDM check
Test Precondition: 
    ReadStatusDelayCounter shall be disabled.
    ReadStatusDelayCounteruser shall be disabled.
  
Test Execution: 
      VP: The generator shall report an error which states that ReadStatusDelayCounter shall not
          be disabled if no custom user function is configured (ReadStatusDelayCounterUser is disabled).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.EB.XdmCheck.DisableReadStatusDelayCounterUser</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>FrTrcv_ImplTest01_User_WaitCalloutCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrTrcv)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrTrcv/test/ts5/Implementation/IN/FrTrcv_ImplTest01_User_WaitCalloutCheck/source/application/FrTrcv_ImplTest01_User_WaitCalloutCheck.c.m4</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that user callback functions UserWaitCallback will be called
    (if configured) everytime a hardware access is performed to read the status register of the
    transceiver. The hardware timing is ensured by the UserWaitCallback since it should
    implement a timeout within a critical section.
  
Test Object: 
    FrTrcv_1_T01_ReadERRNStatusReg()
  
Test Precondition: 
    ReadStatusDelayCounter configured. UserWaitCallout function name set and implemented.
  
Test Execution: 
    01: Call FrTrcv_1_T01_ReadERRNStatusReg().
    02: VP(FrTrcv.Eb.ProvideUserWaitCallout):
        Verify that and how many times the user defined UserWaitCallout function is called. (if it has been enabled in the config)
        The FRTRCV_1_T01_READ_STATUS_BUSY_WAITING macro is present exactly 5 times where
        2 of those get called twice since they are within a loop (to read status bits) that counts up until
        NumberOfBitsToRead is reached, which has been set to 2.
        Resulting in a total of 7 calls for the UserWaitCallout function.
    02: Check the value of FRTRCV_1_T01_READ_STATUS_COUNTER_MAX if the UserWaitCallout has not been enabled.
    03: VP: Verify the order of function calls.
    04: VP: Check that no other function is called after that.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrTrcv.Eb.ProvideUserWaitCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.Eb.ProvideUserWaitCallout.ReadStatusDelayCounterUser.Definition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>FrTrcv.Eb.ProvideUserWaitCallout.ReadStatusDelayCounterUser.Functionality</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
