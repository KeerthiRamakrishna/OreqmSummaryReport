<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_SCrc_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/ReqM2_Native/asc_SCrc_requirements_ASR_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/ReqM2_Native/asc_SCrc_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/ReqM2_Native/asc_SCrc_requirements_TL_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/common_req/SCrc_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 20:44:00 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_SCrc_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/ReqM2_Native/asc_SCrc_requirements_ASR_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/ReqM2_Native/asc_SCrc_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/ReqM2_Native/asc_SCrc_requirements_TL_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/common_req/SCrc_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="req">

    <specobject>
      <id>ASR_SCRC020030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00030
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00030'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC8() shall be used instead of
        Crc_CalculateCRC8().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8</srcid><srcstatus/><internalId>79</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00052
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00052'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC8() shall be used instead of
        Crc_CalculateCRC8().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8</srcid><srcstatus/><internalId>79</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00042
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00042'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC8H2F() shall be used instead of
        Crc_CalculateCRC8H2F().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8H2F</srcid><srcstatus/><internalId>80</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00053
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00053'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC8H2F() shall be used instead of
        Crc_CalculateCRC8H2F().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8H2F</srcid><srcstatus/><internalId>80</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00002
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00002'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC16() shall be used instead of
        Crc_CalculateCRC16().</description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC16</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00054
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00054'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC16() shall be used instead of
        Crc_CalculateCRC16().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC16</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020067</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00067
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00067'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable. 16-bit 0x8005 polynomial CRC Calculation not supported
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020068</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00068
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00068'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable. 16-bit 0x8005 polynomial CRC Calculation not supported
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020003</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00003
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00003'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. 32-bit Ethernet CRC Calculation not supported</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020055</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00055
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00055'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. 32-bit Ethernet CRC Calculation not supported</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00056
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00056'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC32P4() shall be used instead of
        Crc_CalculateCRC32P4().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC32P4</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00057
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00057'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC32P4() shall be used instead of
        Crc_CalculateCRC32P4().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC32P4</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020062</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00062
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00062'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable.The 64-bit ECMA polynomial CRC calculation is iplemented
        in E2EP07.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020063</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00063
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00063'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable.The 64-bit ECMA polynomial CRC calculation is iplemented
        in E2EP07.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020018</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00018
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00018'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020013</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00013
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00013'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020072</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00072
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00072'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See Design Item SWS_Crc_00014
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00014'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This is not a functional requirement for the SCrc module, it is an instruction how to
        correctly use the CRC routines. The unit tests respects the correct usage, therefore the
        needscoverage attribute of this specobject is set to "tcs".
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8</srcid><srcstatus/><internalId>79</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC8H2F</srcid><srcstatus/><internalId>80</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC16</srcid><srcstatus/><internalId>81</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC32P4</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See Design Item SWS_Crc_00041
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00041'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8</srcid><srcstatus/><internalId>79</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC8H2F</srcid><srcstatus/><internalId>80</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC16</srcid><srcstatus/><internalId>81</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC32P4</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> SWS_Crc_00031
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00031'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC8() shall be used instead of
        Crc_CalculateCRC8() and every prefix "Crc_" shall be replaced with "SCrc_".
      </description>
      <comment>
        The correct handling of boundary values (i.e. data length equals 0xFFFFFFFF bytes) is
        verified via a static code review in ASCSCRC-22.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8_ComTstTable256</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC8</srcid><srcstatus/><internalId>79</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00032
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00032'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC8() shall be used instead of
        Crc_CalculateCRC8() and every prefix "Crc_" shall be replaced with "SCrc_".
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8</srcid><srcstatus/><internalId>79</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020033</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00033
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00033'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. CRC calculation via hardware not supported.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00043
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00043'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC8H2F() shall be used instead of
        Crc_CalculateCRC8H2F() and every prefix "Crc_" shall be replaced with "SCrc_".
      </description>
      <comment>
        The correct handling of boundary values (i.e. data length equals 0xFFFFFFFF bytes) is
        verified via a static code review in ASCSCRC-22.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8H2F_ComTstTable256</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC8H2F</srcid><srcstatus/><internalId>80</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00044
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00044'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC8H2F() shall be used instead of
        Crc_CalculateCRC8H2F().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC8H2F</srcid><srcstatus/><internalId>80</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020045</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00045
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00045'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. CRC calculation via hardware not supported.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00019
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00019'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC16() shall be used instead of
        Crc_CalculateCRC16().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC16_ComTstTable256</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC16</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00015
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00015'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC16() shall be used instead of
        Crc_CalculateCRC16().
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC16</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020009</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00009
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00009'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. CRC calculation via hardware not supported.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020071</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00071
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00071'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable. 16-bit 0x8005 polynomial CRC Calculation not supported
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020069</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00069
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00069'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable. 16-bit 0x8005 polynomial CRC Calculation not supported
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020070</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00070
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00070'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. CRC calculation via hardware not supported.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020020</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00020
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00020'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. 32-bit Ethernet CRC Calculation not supported</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020016</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00016
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00016'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. 32-bit Ethernet CRC Calculation not supported</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020010</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00010
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00010'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. CRC calculation via hardware not supported.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00058
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00058'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC32P4() shall be used instead of
        Crc_CalculateCRC32P4().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC32P4_ComTstTable256</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>TS_SCRC_CRC32P4</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00059
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00059'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but the function name SCrc_CalculateCRC32P4() shall be used instead of
        Crc_CalculateCRC32P4().
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_CRC32P4</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020060</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00060
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00060'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable. CRC calculation via hardware not supported.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020061</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00061
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00061'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable.The 64-bit ECMA polynomial CRC calculation is iplemented
        in E2EP07.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020064</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00064
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00064'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable.The 64-bit ECMA polynomial CRC calculation is iplemented
        in E2EP07.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020065</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00065
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00065'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. CRC calculation via hardware not supported.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020021</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00021
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00021'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable. As Scrc is not supporting since it is no ASR module.
        refer ASCSCRC-15.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020011</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00011
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00011'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is not applicable. As Scrc is not supporting since it is no ASR module.
        refer ASCSCRC-15.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020017</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_Crc_00017
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00017'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>ASR_ECUCSCRC020033</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item ECUC_Crc_00033
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_ECUC_Crc_00033'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. SCrc library shall have no configuration options.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>ASR_ECUCSCRC020006</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item ECUC_Crc_00006
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_ECUC_Crc_00006'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. SCrc library shall have no configuration options.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>ASR_ECUCSCRC020035</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item ECUC_Crc_00035
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_ECUC_Crc_00035'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. SCrc library shall have no configuration options.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>ASR_ECUCSCRC020025</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item ECUC_Crc_00025
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_ECUC_Crc_00025'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. SCrc library shall have no configuration options.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>ASR_ECUCSCRC020026</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item ECUC_Crc_00026
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_ECUC_Crc_00026'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. SCrc library shall have no configuration options.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>ASR_ECUCSCRC020032</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item ECUC_Crc_00032
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_ECUC_Crc_00032'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. SCrc library shall have no configuration options.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>ASR_ECUCSCRC020034</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item ECUC_Crc_00034
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_ECUC_Crc_00034'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. SCrc library shall have no configuration options.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>ASR_ECUCSCRC020031</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item ECUC_Crc_00031
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_ECUC_Crc_00031'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. SCrc library shall have no configuration options.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>ASR_ECUCSCRC020030</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item ECUC_Crc_00030
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_ECUC_Crc_00030'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable. SCrc library shall have no configuration options.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item CRC050
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00050'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but only module identification version and vendor id shall be published.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_PublishedInformation</srcid><srcstatus/><internalId>87</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item CRC048
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00048'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        applies, but only module identification version and vendor id shall be published.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_PublishedInformation</srcid><srcstatus/><internalId>87</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>ASR_SCRC020051</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CRCLibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item CRC051
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_CRCLibraryASR22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_Crc_00051'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>EB_SCRC020001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description><para>
        The SCrc module shall be built of the following files:
        <itemizedlist>
          <listitem><para>
            SCrc.h: provides module version macros
          </para></listitem>
          <listitem><para>
            SCrc_LocalSrcCfg.h: is a static non-generated file that contains macro definitions
            to switch between the usage of the SCrc routines and the usage of the Crc routines
            of an external Crc module.
          </para></listitem>
          <listitem><para>
            SCrc_CRC8.h: provides the function prototype for the Crc routine SCrc_CalculateCRC8
          </para></listitem>
          <listitem><para>
            SCrc_CRC8H2F.h: provides the function prototype for the Crc routine SCrc_CalculateCRC8H2F
          </para></listitem>
          <listitem><para>
            SCrc_CRC16.h: provides the function prototype for the Crc routine SCrc_CalculateCRC16
          </para></listitem>
          <listitem><para>
            SCrc_CRC32P4.h: provides the function prototype for the Crc routine SCrc_CalculateCRC32P4
          </para></listitem>
          <listitem><para>
            SCrc.c: contains the implementation of the CRC routines
          </para></listitem>
        </itemizedlist>
      </para></description>
      <comment>       The review shall verify that the file content matches with the description       and shall be performed during the code inspection.     </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCrc_ConTest_03_Files</srcid><srcstatus/><internalId>89</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>EB_SCRC020002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description><para>
             The SCrc module shall comply with the following include file structure:
        <itemizedlist>
          <listitem><para>
            SCrc_LocalSrcCfg.h shall include: Std_Types.h
          </para></listitem>
          <listitem><para>
            SCrc.h shall include: Std_Types.h, SCrc_LocalSrcCfg.h
          </para></listitem>
          <listitem><para>
            SCrc.c shall include: SCrc.h, SCrc_CRC8.h, SCrc_CRC8H2F.h, SCrc_CRC16.h, SCrc_CRC832P4.h, MemMap.h
          </para></listitem>
          <listitem><para>
            SCrc_CRC8.h shall include: SCrc.h, Crc.h (optionally if mapping to Crc routines is enabled), MemMap.h
          </para></listitem>
          <listitem><para>
            SCrc_CRC8H2F.h shall include: SCrc.h , Crc.h (optionally if mapping to Crc routines is enabled), MemMap.h
          </para></listitem>
          <listitem><para>
            SCrc_CRC16.h shall include: SCrc.h , Crc.h (optionally if mapping to Crc routines is enabled), MemMap.h
          </para></listitem>
          <listitem><para>
            SCrc_CRC32P4.h shall include: SCrc.h , Crc.h (optionally if mapping to Crc routines is enabled), MemMap.h
          </para></listitem>
        </itemizedlist>
      </para></description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCrc_ConTest_02_IncludeFiles</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>EB_SCRC020005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description><para>
        SCrc_LocalSrcCfg.h shall define a macro
        <code>SCRC_FUNCENABLED_SCRC_CRC8</code> which can be manually defined
        with the following two values:
        </para>
        <para>
          <code>STD_ON</code>: The function SCrc_CalculateCRC8() maps to
          to the function definition SCrc_CalculateCRC8() of this module.
        </para>
        <para>
          <code>STD_OFF</code>: The function SCrc_CalculateCRC8() maps to
          to an external function definition Crc_CalculateCRC8() declared in
          the Crc module.
        </para>
      </description>
      <comment>The correct usage of this macro is reviewed in ASCSCRC-22.</comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_FUNCENABLED_SCRC_CRC8</srcid><srcstatus/><internalId>83</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>EB_SCRC020006</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description><para>
        The macro
        <code>SCRC_FUNCENABLED_SCRC_CRC8</code>
        in SCrc_LocalSrcCfg.h shall be defined with <code>STD_ON</code>.
      </para></description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_FUNCENABLED_SCRC_CRC8</srcid><srcstatus/><internalId>83</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>EB_SCRC020007</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
        SCrc_LocalSrcCfg.h shall define a macro
        <code>SCRC_FUNCENABLED_SCRC_CRC8H2F</code> which can be manually defined
        with the following two values:
        </para>
        <para>
          <code>STD_ON</code>: The function SCrc_CalculateCRC8H2F() maps to
          to the function definition SCrc_CalculateCRC8H2F() of this module.
        </para>
        <para>
          <code>STD_OFF</code>: The function SCrc_CalculateCRC8H2F() maps to
          to an external function definition Crc_CalculateCRC8H2F() declared in
          the Crc module.
        </para>
      </description>
      <comment>The correct usage of this macro is reviewed in ASCSCRC-22.</comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_FUNCENABLED_SCRC_CRC8H2F</srcid><srcstatus/><internalId>84</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>EB_SCRC020008</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description><para>
        The macro
        <code>SCRC_FUNCENABLED_SCRC_CRC8H2F</code>
        in SCrc_LocalSrcCfg.h shall be defined with <code>STD_ON</code>.
      </para></description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_FUNCENABLED_SCRC_CRC8H2F</srcid><srcstatus/><internalId>84</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>EB_SCRC020011</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description><para>
        SCrc_LocalSrcCfg.h shall define a macro
        <code>SCRC_FUNCENABLED_SCRC_CRC16</code> which can be manually defined
        with the following two values:
        </para>
        <para>
          <code>STD_ON</code>: The function SCrc_CalculateCRC16() maps to
          to the function definition SCrc_CalculateCRC16() of this module.
        </para>
        <para>
          <code>STD_OFF</code>: The function SCrc_CalculateCRC16() maps to
          to an external function definition Crc_CalculateCRC16() declared in
          the Crc module.
        </para>
      </description>
      <comment>The correct usage of this macro is reviewed in ASCSCRC-TBD.</comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_FUNCENABLED_SCRC_CRC16</srcid><srcstatus/><internalId>85</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>EB_SCRC020012</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description><para>
        The macro
        <code>SCRC_FUNCENABLED_SCRC_CRC16</code>
        in SCrc_LocalSrcCfg.h shall be defined with <code>STD_ON</code>.
      </para></description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_FUNCENABLED_SCRC_CRC16</srcid><srcstatus/><internalId>85</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>EB_SCRC020013</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
        SCrc_LocalSrcCfg.h shall define a macro
        <code>SCRC_FUNCENABLED_SCRC_CRC32P4</code> which can be manually defined
        with the following two values:
        </para>
        <para>
          <code>STD_ON</code>: The function SCrc_CalculateCRC32P4() maps to
          to the function definition SCrc_CalculateCRC32P4() of this module.
        </para>
        <para>
          <code>STD_OFF</code>: The function SCrc_CalculateCRC32P4() maps to
          to an external function definition Crc_CalculateCRC32P4() declared in
          the Crc module.
        </para>
      </description>
      <comment>The correct usage of this macro is reviewed in ASCSCRC-TBD.</comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_FUNCENABLED_SCRC_CRC32P4</srcid><srcstatus/><internalId>86</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>EB_SCRC020014</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description><para>
        The macro
        <code>SCRC_FUNCENABLED_SCRC_CRC32P4</code>
        in SCrc_LocalSrcCfg.h shall be defined with <code>STD_ON</code>.
      </para></description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCRC_FUNCENABLED_SCRC_CRC32P4</srcid><srcstatus/><internalId>86</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>EB_SCRC020009</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SCrc module's BSWMD shall be generated using a generator
        mode named "generate_swcd".
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCrc_ComTest_01_Bswmd</srcid><srcstatus/><internalId>78</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>EB_SCRC020010</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SCrc module's BSWMD shall contain the specification
        of the memory abstraction used in the Basic Software.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCrc_ComTest_01_Bswmd</srcid><srcstatus/><internalId>78</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SCrc.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>SCrc.top.001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SCrc module shall implement a 8-bit CRC calculation based on the SAE-J1850 CRC8 Standard.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_SCRC020030</srcid><srcstatus/><internalId>0</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020052</srcid><srcstatus/><internalId>1</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020014</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020041</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020031</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020032</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020050</srcid><srcstatus/><internalId>52</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020048</srcid><srcstatus/><internalId>53</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020005</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020006</srcid><srcstatus/><internalId>58</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>SCrc.top.002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SCrc module shall implement a 8-bit CRC calculation based on the generator polynomial
        0x2F.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_SCRC020042</srcid><srcstatus/><internalId>2</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020053</srcid><srcstatus/><internalId>3</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020014</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020041</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020043</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020044</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020050</srcid><srcstatus/><internalId>52</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020048</srcid><srcstatus/><internalId>53</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020007</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020008</srcid><srcstatus/><internalId>60</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>SCrc.top.003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SCrc module shall implement a 16-bit CRC calculation based on the CCITT CRC16 Standard.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_SCRC020002</srcid><srcstatus/><internalId>4</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020054</srcid><srcstatus/><internalId>5</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020014</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020041</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020019</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020015</srcid><srcstatus/><internalId>26</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020050</srcid><srcstatus/><internalId>52</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020048</srcid><srcstatus/><internalId>53</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020011</srcid><srcstatus/><internalId>61</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020012</srcid><srcstatus/><internalId>62</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>SCrc.top.004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SCrc module shall implement a 32-bit CRC calculation based on the generator polynomial
        0xF4ACFB13.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_SCRC020056</srcid><srcstatus/><internalId>10</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020057</srcid><srcstatus/><internalId>11</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020014</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020041</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020058</srcid><srcstatus/><internalId>34</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020059</srcid><srcstatus/><internalId>35</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020050</srcid><srcstatus/><internalId>52</internalId></linkedfrom><linkedfrom><srcid>ASR_SCRC020048</srcid><srcstatus/><internalId>53</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020013</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020014</srcid><srcstatus/><internalId>64</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>SCrc.top.005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SCrc module shall modularly structure static implementation files and data types.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_SCRC020001</srcid><srcstatus/><internalId>55</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020002</srcid><srcstatus/><internalId>56</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020009</srcid><srcstatus/><internalId>65</internalId></linkedfrom><linkedfrom><srcid>EB_SCRC020010</srcid><srcstatus/><internalId>66</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>


  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>SCrc.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SCrc_VerifyCodeStub</srcid><srcstatus/><internalId>73</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_SCrc_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/build/reqm/common_req/SCrc_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(SCrc.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>SCrc.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_SCRC_CRC16_ComTstTable256</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Compile/IN/SCrc_CRC16_ComTstTable256/source/application/Appl.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Compile test shall check existence and correct syntax of SCrc routine SCrc_CalculateCRC16().
 
Test Object: None.
Test Precondition: 
     None.
 
Test Execution: 
   No restrictions
 
Test Input: 
   1. Call SCrc_CalculateCRC16()
 
Test Output: 
   1. SCrc_CalculateCRC16() shall be translated
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_SCRC020019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_SCRC_CRC32P4_ComTstTable256</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Compile/IN/SCrc_CRC32P4_ComTstTable256/source/application/Appl.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Compile test shall check existence and correct syntax of SCrc routine SCrc_CalculateCRC32P4().
 
Test Object: None.
Test Precondition: 
     None.
 
Test Execution: 
   No restrictions
 
Test Input: 
   1. Call SCrc_CalculateCRC32P4()
 
Test Output: 
   1. SCrc_CalculateCRC32P4() shall be translated
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_SCRC020058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_SCRC_CRC8H2F_ComTstTable256</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Compile/IN/SCrc_CRC8H2F_ComTstTable256/source/application/Appl.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Compile test shall check existence and correct syntax of SCrc routine SCrc_CalculateCRC8H2F().
 
Test Object: None.
Test Precondition: 
     None.
 
Test Execution: 
   No restrictions
 
Test Input: 
   1. Call SCrc_CalculateCRC8H2F()
 
Test Output: 
   1. SCrc_CalculateCRC8H2F() shall be translated
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_SCRC020043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_SCRC_CRC8_ComTstTable256</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Compile/IN/SCrc_CRC8_ComTstTable256/source/application/Appl.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Compile test shall check existence and correct syntax of SCrc routine SCrc_CalculateCRC8().
 
Test Object: None.
Test Precondition: 
     None.
 
Test Execution: 
   No restrictions
 
Test Input: 
   1. Call SCrc_CalculateCRC8()
 
Test Output: 
   1. SCrc_CalculateCRC8() shall be translated
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_SCRC020031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_SCrc_ComTest_01_Bswmd</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Compile/IN/SCrc_ComTest_01_Bswmd/source/application/SCrc_ComTest_01_Bswmd.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  This test checks that the SCrc module's generator generates a
  syntactically and semantically valid basic software module
  description (BSWMD), generated when the generator mode "generate_swcd" is
  invoked and containing the correct specification
  of the memory abstraction.

  Note: This test aspect is fulfilled by comparing the generated BSWMD
  with the BSWMD in the reference folder.


Test Object: None.
Test Precondition: 

  Folder 'reference' provides
    - SCrc_Bswmd.arxml (golden reference file for comparison with generated Bswmd
                       containing the expected specification of the memory
                       abstraction)


Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Invoke "generate_swcd"
  02: VP
      The generated file 'SCrc_Bswmd.arxml' in directory swcd
      equals the reference file
  03: Include the difference of the comparison of step 02 in
      this testcase

Note: If there are differences, then due to Step 03 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_SCRC020009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>EB_SCRC020010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_SCRC_CRC8</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_01/source/application/Appl.c</sourcefile>
      <sourceline>238</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   Check the CRC generation of the SCrc module by means of a
   locally calculated reference CRC.
   Since the CRC routines are implemented via a table-based
   calculation mechanisms, it is necessary to test all existing
   table entries to be correct.

   Following must be realized within this test:
   * Implement a corresponding runtime CRC calculation
   * Test this runtime calculation by the use of the Check and
     Magic values as specified in the AUTOSAR CRC SWS, this
     proofs the correct implementation of the runtime CRC
     calculation
   * Use the runtime CRC calculation to traverse all table
     entries

   Tests shall be implemented according to the test indications
   of "Specification of CRC Routines" V4.1.0 R4.0 Rev 2".
   The meaning of Check and Magic value can be found within
   this SWS.

   The test object is the function SCrc_CalculateCRC8()

 
Test Object: None.
Test Precondition: 
     None.
 
Test Execution: 

PART 1:
  01 For each input data TS_Check_Data[i], execute the following steps:
     Calculate the check value for the input set of data TS_Check_Data[i]
     with the SCrc_CalculateCRC8() API.
  02 VP(ASR_SCRC020030, ASR_SCRC020031, ASR_SCRC020032, ASR_SCRC020052):
     Calculated check value of step 01 equals output TS_Check_Data_Result[i].

PART 2:
  10 Calculate the Magic check value (0xC4U) via a local runtime test-CRC calculation function
     (For information reg. test-values for the calculation of the magic check value,
      see "Specification of CRC Routines" V4.1.0 R4.0 Rev 2", chapter 7.2 for test values,)
  11 Sanity Check for internal CRC function
     calculated Magic check value of step 11 XORed with 0xFFU equals 0xC4U
  12 Calculate the Magic check value via the SCrc_CalculateCRC8() API
     with parameter isFirstCall=FALSE
  13 VP(ASR_SCRC020030, ASR_SCRC020031, ASR_SCRC020032):
     calculated Magic check value of step 12 XORed with 0xFFU equals 0xC4U

PART 3:
  20 Calculate CRC8 value with SCrc_CalculateCRC8() API for 1-byte data with range 0...255
     with parameter isFirstCall=FALSE, and start value 0x00U (initial value then equals 0xFF)
  21 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 20
  22 VP(ASR_SCRC020030, ASR_SCRC020031, ASR_SCRC020032):
     calculated CRC8 value of step 20 and reference CRC value of step 21 are equal

PART 4:
  30 Calculate CRC8 value with SCrc_CalculateCRC8() API for a 255-byte data
     with parameter isFirstCall=FALSE, and start value 0x00U (initial value then equals 0xFF)
  31 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 30
  32 VP(ASR_SCRC020030, ASR_SCRC020031, ASR_SCRC020032):
     calculated CRC8 value of step 30 and reference CRC value of step 31 are equal

PART 5 (Test that parameter isFirstCalls is correctly implemented):
  40 Calculate CRC8 value with SCrc_CalculateCRC8() API for 1-byte data with range 0...255
     with parameter isFirstCall=TRUE, and different start values (parameter shall be ignored
     and initial value of 0xFF is used internally)
  41 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 40
  42 VP(ASR_SCRC020030, ASR_SCRC020031, ASR_SCRC020014, ASR_SCRC020041):
     calculated CRC8 value of step 40 and reference CRC value of step 41 are equal

PART 6 (Test that parameter isFirstCalls is correctly implemented):
  50 Calculate CRC8 value with SCrc_CalculateCRC8() API for a 255-byte data
     with parameter isFirstCall=TRUE, and different start values (parameter shall be ignored
     and initial value of 0xFF is used internally)
  51 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 50
  52 VP(ASR_SCRC020030, ASR_SCRC020031, ASR_SCRC020014, ASR_SCRC020041):
     calculated CRC8 value of step 50 and reference CRC value of step 51 are equal

 
Test Input: 

                        +-Data Length               Test Data
                        |      +-------------------------------------------------------+
  TS_Check_Data[0]: { 0x04U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[1]: { 0x03U, 0xF2U, 0x01U, 0x83U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[2]: { 0x04U, 0x0FU, 0xAAU, 0x00U, 0x55U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[3]: { 0x04U, 0x00U, 0xFFU, 0x55U, 0x11U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[4]: { 0x09U, 0x33U, 0x22U, 0x55U, 0xAAU, 0xBBU, 0xCCU, 0xDDU, 0xEEU, 0xFFU },
  TS_Check_Data[5]: { 0x03U, 0x92U, 0x6BU, 0x55U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[6]: { 0x04U, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U }

 
Test Output: 

  TS_Check_Data_Result[0]: 0x59U
  TS_Check_Data_Result[1]: 0x37U
  TS_Check_Data_Result[2]: 0x79U
  TS_Check_Data_Result[3]: 0xB8U
  TS_Check_Data_Result[4]: 0xCBU
  TS_Check_Data_Result[5]: 0x8CU
  TS_Check_Data_Result[6]: 0x74U

 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_SCRC020030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>TS_SCRC_CRC8H2F</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_01/source/application/Appl.c</sourcefile>
      <sourceline>512</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   Check the CRC generation of the SCrc module by means of a
   locally calculated reference CRC.
   The test shall be implemented according to the test specification
   TS_SCRC_CRC8. But in this test the test object is the function
   SCrc_CalculateCRC8H2F()

 
Test Object: None.
Test Precondition: 
     None.
 
Test Execution: 

PART 1:
  01 For each input data TS_Check_Data[i], execute the following steps:
     Calculate the check value for the input set of data TS_Check_Data[i]
     with the SCrc_CalculateCRC8H2F() API.
  02 VP(ASR_SCRC020043, ASR_SCRC020044, ASR_SCRC020044, ASR_SCRC020053):
     Calculated check value of step 01 equals output TS_Check_Data_Result[i].

PART 2:
  10 Calculate the Magic check value (0xC4U) via a local runtime test-CRC calculation function
     (For information reg. test-values for the calculation of the magic check value,
      see "Specification of CRC Routines" V4.1.0 R4.0 Rev 2", chapter 7.2 for test values,)
  11 Sanity Check
     calculated Magic check value of step 10 XORed with 0xFFU equals 0x42U
  12 Calculate the Magic check value via the SCrc_CalculateCRC8H2F() API
     with parameter isFirstCall=FALSE
  13 VP(ASR_SCRC020043, ASR_SCRC020044, ASR_SCRC020044):
     calculated Magic check value of step 12 XORed with 0xFFU equals 0x42U

PART 3:
  20 Calculate CRC8 value with SCrc_CalculateCRC8H2F() API for 1-byte data with range 0...255
     with parameter isFirstCall=FALSE, and start value 0x00U (initial value then equals 0xFF)
  21 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 20
  22 VP(ASR_SCRC020043, ASR_SCRC020044, ASR_SCRC020044):
     calculated CRC8 value of step 20 and reference CRC value of step 21 are equal

PART 4:
  30 Calculate CRC8 value with SCrc_CalculateCRC8H2F() API for a 255-byte data
     with parameter isFirstCall=FALSE, and start value 0x00U (initial value then equals 0xFF)
  31 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 30
  32 VP(ASR_SCRC020043, ASR_SCRC020044, ASR_SCRC020044):
     calculated CRC8 value of step 30 and reference CRC value of step 31 are equal

PART 5 (Test that parameter isFirstCalls is correctly implemented):
  40 Calculate CRC8 value with SCrc_CalculateCRC8H2F() API for 1-byte data with range 0...255
     with parameter isFirstCall=TRUE, and different start values (parameter shall be ignored
     and initial value of 0xFF is used internally)
  41 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 40
  42 VP(ASR_SCRC020043, ASR_SCRC020044, ASR_SCRC020041, ASR_SCRC020014):
     calculated CRC8 value of step 40 and reference CRC value of step 41 are equal

PART 6 (Test that parameter isFirstCalls is correctly implemented):
  50 Calculate CRC8 value with SCrc_CalculateCRC8H2F() API for a 255-byte data
     with parameter isFirstCall=TRUE, and different start values (parameter shall be ignored
     and initial value of 0xFF is used internally)
  51 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 50
  52 VP(ASR_SCRC020043, ASR_SCRC020044, ASR_SCRC020041, ASR_SCRC020014):
     calculated CRC8 value of step 50 and reference CRC value of step 51 are equal

 
Test Input: 

                        +-Data Length               Test Data
                        |      +-------------------------------------------------------+
  TS_Check_Data[0]: { 0x04U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[1]: { 0x03U, 0xF2U, 0x01U, 0x83U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[2]: { 0x04U, 0x0FU, 0xAAU, 0x00U, 0x55U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[3]: { 0x04U, 0x00U, 0xFFU, 0x55U, 0x11U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[4]: { 0x09U, 0x33U, 0x22U, 0x55U, 0xAAU, 0xBBU, 0xCCU, 0xDDU, 0xEEU, 0xFFU },
  TS_Check_Data[5]: { 0x03U, 0x92U, 0x6BU, 0x55U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[6]: { 0x04U, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U }

 
Test Output: 

  TS_Check_Data_Result[0]: 0x12U
  TS_Check_Data_Result[1]: 0xC2U
  TS_Check_Data_Result[2]: 0xC6U
  TS_Check_Data_Result[3]: 0x77U
  TS_Check_Data_Result[4]: 0x11U
  TS_Check_Data_Result[5]: 0x33U
  TS_Check_Data_Result[6]: 0x6CU

 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_SCRC020042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>TS_SCRC_CRC16</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_01/source/application/Appl.c</sourcefile>
      <sourceline>741</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   Check the CRC generation of the SCrc module by means of a
   locally calculated reference CRC.
   Since the CRC routines are implemented via a table-based
   calculation mechanisms, it is necessary to test all existing
   table entries to be correct.

   Following must be realized within this test:
   * Implement a corresponding runtime CRC calculation
   * Test this runtime calculation by the use of the Check and
     Magic values as specified in the AUTOSAR CRC SWS, this
     proofs the correct implementation of the runtime CRC
     calculation
   * Use the runtime CRC calculation to traverse all table
     entries

   Tests shall be implemented according to the test indications
   of "Specification of CRC Routines R4.2 Rev 1".
   The meaning of Check and Magic value can be found within
   this SWS.

   The test object is the function SCrc_CalculateCRC16()

 
Test Object: None.
Test Precondition: 
     None.
 
Test Execution: 

PART 1:
  01 For each input data TS_Check_Data[i], execute the following steps:
     Calculate the check value for the input set of data TS_Check_Data[i]
     with the SCrc_CalculateCRC16() API.
  02 VP(ASR_SCRC020002,ASR_SCRC020054,ASR_SCRC020019,ASR_SCRC020015):
     Calculated check value of step 01 equals output TS_Check_Data_Result[i].

PART 2:
  10 Calculate the Magic check value (0x0000U) via a local runtime test-CRC calculation function
     (See "Specification of CRC Routines" R4.2 Rev 1", chapter 7.2 for test values)
  11 Sanity Check for internal CalculateCRC16() function:
     Calculated Magic check value of step 10 equals 0x0000
  12 Calculate the Magic check value via the SCrc_CalculateCRC16() API
     with parameter isFirstCall = FALSE
  13 VP(ASR_SCRC020002, ASR_SCRC020019, ASR_SCRC020015):
     Calculated Magic check value of step 12 equals 0x0000

PART 3:
  20 Calculate CRC16 value with SCrc_CalculateCRC16() API for 1-byte data with range 0...255
     with parameter isFirstCall=FALSE, and start value 0xFFFF
  21 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 10
  22 VP(ASR_SCRC020002, ASR_SCRC020019, ASR_SCRC020015):
     Calculated CRC16 value of step 20 and reference CRC value of step 21 are equal

PART 4:
  30 Calculate CRC8 value with SCrc_CalculateCRC16() API for a 255-byte data
     with parameter isFirstCall=FALSE, and start value 0xFFFF
  31 Calculate reference CRC16 value via the local runtime test-CRC calculation function
     based on the same input data as used in step 30
  32 VP(ASR_SCRC020002, ASR_SCRC020019, ASR_SCRC020015):
     Calculated CRC16 value of step 30 and reference CRC value of step 31 are equal

PART 5 (Test that parameter isFirstCall is correctly implemented):
  40 Calculate CRC16 value with SCrc_CalculateCRC16() API for 1-byte data with range 0...255
     with parameter isFirstCall=TRUE, and different start values (parameter shall be ignored
     and initial value of 0xFFFF is used internally)
  41 Calculate reference CRC16 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 40
  42 VP(ASR_SCRC020002, ASR_SCRC020019, ASR_SCRC020041, ASR_SCRC020014):
     Calculated CRC16 value of step 40 and reference CRC value of step 41 are equal

PART 6 (Test that parameter isFirstCall is correctly implemented):
  50 Calculate CRC16 value with SCrc_CalculateCRC16() API for a 255-byte data
     with parameter isFirstCall=TRUE, and different start values (parameter shall be ignored
     and initial value of 0xFFFF is used internally)
  51 Calculate reference CRC16 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 50
  52 VP(ASR_SCRC020002, ASR_SCRC020019, ASR_SCRC020041, ASR_SCRC020014):
     Calculated CRC16 value of step 50 and reference CRC value of step 51 are equal

 
Test Input: 

                        +-Data Length               Test Data
                        |      +-------------------------------------------------------+
  TS_Check_Data[0]: { 0x04U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[1]: { 0x03U, 0xF2U, 0x01U, 0x83U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[2]: { 0x04U, 0x0FU, 0xAAU, 0x00U, 0x55U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[3]: { 0x04U, 0x00U, 0xFFU, 0x55U, 0x11U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[4]: { 0x09U, 0x33U, 0x22U, 0x55U, 0xAAU, 0xBBU, 0xCCU, 0xDDU, 0xEEU, 0xFFU },
  TS_Check_Data[5]: { 0x03U, 0x92U, 0x6BU, 0x55U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[6]: { 0x04U, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U }

 
Test Output: 

  TS_Check_Data_Result[0]: 0x84C0U
  TS_Check_Data_Result[1]: 0xD374U
  TS_Check_Data_Result[2]: 0x2023U
  TS_Check_Data_Result[3]: 0xB8F9U
  TS_Check_Data_Result[4]: 0xF53FU
  TS_Check_Data_Result[5]: 0x0745U
  TS_Check_Data_Result[6]: 0x1D0FU

 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_SCRC020002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>TS_SCRC_CRC32P4</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_01/source/application/Appl.c</sourcefile>
      <sourceline>1049</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   Check the CRC generation of the SCrc module by means of a
   locally calculated reference CRC.
   Since the CRC routines are implemented via a table-based
   calculation mechanisms, it is necessary to test all existing
   table entries to be correct.

   Following must be realized within this test:
   * Implement a corresponding runtime CRC calculation
   * Test this runtime calculation by the use of the Check and
     Magic values as specified in the AUTOSAR CRC SWS, this
     proofs the correct implementation of the runtime CRC
     calculation
   * Use the runtime CRC calculation to traverse all table
     entries

   Tests shall be implemented according to the test indications
   of "Specification of CRC Routines R4.2 Rev 1".
   The meaning of Check and Magic value can be found within
   this SWS.

   The test object is the function SCrc_CalculateCRC32P4()

 
Test Object: None.
Test Precondition: 
     None.
 
Test Execution: 

PART 1:
  01 For each input data TS_Check_Data[i], execute the following steps:
     Calculate the check value for the input set of data TS_Check_Data[i]
     with the SCrc_CalculateCRC32P4() API.
  02 VP(ASR_SCRC020056,ASR_SCRC020057,ASR_SCRC020058,ASR_SCRC020059):
     Calculated check value of step 01 equals output TS_Check_Data_Result[i].

PART 2:
  10 Calculate the Magic check value (0x6FB32240) via a local runtime test-CRC calculation function
     (See "Specification of CRC Routines" R4.2 Rev 1", chapter 7.2 for test values)
  11 Sanity Check for internal CalculateCRC32P4() function:
     Calculated Magic check value of step 10 equals 0x6FB32240
  12 Calculate the Magic check value via the SCrc_CalculateCRC32P4() API
     with parameter isFirstCall = FALSE
  13 VP(ASR_SCRC020056, ASR_SCRC020058, ASR_SCRC020059):
     Calculated Magic check value of step 12 equals 0x6FB32240

PART 3:
  20 Calculate CRC32 value with SCrc_CalculateCRC32P4() API for 1-byte data with range 0...255
     with parameter isFirstCall=FALSE, and start value 0 (initial value is then 0xFFFFFFFF)
  21 Calculate reference CRC8 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 10
  22 VP(ASR_SCRC020056, ASR_SCRC020058, ASR_SCRC020059):
     Calculated CRC32 value of step 20 and reference CRC value of step 21 are equal

PART 4:
  30 Calculate CRC8 value with SCrc_CalculateCRC32P4() API for a 255-byte data
     with parameter isFirstCall=FALSE, and start value 0 (initial value is then 0xFFFFFFFF)
  31 Calculate reference CRC32 value via the local runtime test-CRC calculation function
     based on the same input data as used in step 30
  32 VP(ASR_SCRC020056, ASR_SCRC020058, ASR_SCRC020059):
     Calculated CRC32 value of step 30 and reference CRC value of step 31 are equal

PART 5 (Test that parameter isFirstCall is correctly implemented):
  40 Calculate CRC32 value with SCrc_CalculateCRC32P4() API for 1-byte data with range 0...255
     with parameter isFirstCall=TRUE, and different start values (parameter shall be ignored
     and initial value of 0xFFFFFFFF is used internally)
  41 Calculate reference CRC32 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 40
  42 VP(ASR_SCRC020056, ASR_SCRC020058, ASR_SCRC020041, ASR_SCRC020014):
     Calculated CRC32 value of step 40 and reference CRC value of step 41 are equal

PART 6 (Test that parameter isFirstCall is correctly implemented):
  50 Calculate CRC32 value with SCrc_CalculateCRC32P4() API for a 255-byte data
     with parameter isFirstCall=TRUE, and different start values (parameter shall be ignored
     and initial value of 0xFFFFFFFF is used internally)
  51 Calculate reference CRC32 value via the local runtime test-CRC calculation function
     based on the same input data as used ins step 50
  52 VP(ASR_SCRC020056, ASR_SCRC020058, ASR_SCRC020041, ASR_SCRC020014):
     Calculated CRC32 value of step 50 and reference CRC value of step 51 are equal

 
Test Input: 

                        +-Data Length               Test Data
                        |      +-------------------------------------------------------+
  TS_Check_Data[0]: { 0x04U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[1]: { 0x03U, 0xF2U, 0x01U, 0x83U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[2]: { 0x04U, 0x0FU, 0xAAU, 0x00U, 0x55U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[3]: { 0x04U, 0x00U, 0xFFU, 0x55U, 0x11U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[4]: { 0x09U, 0x33U, 0x22U, 0x55U, 0xAAU, 0xBBU, 0xCCU, 0xDDU, 0xEEU, 0xFFU },
  TS_Check_Data[5]: { 0x03U, 0x92U, 0x6BU, 0x55U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U },
  TS_Check_Data[6]: { 0x04U, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U }

 
Test Output: 

  TS_Check_Data_Result[0]: 0x6FB32240U
  TS_Check_Data_Result[1]: 0x4F721A25U
  TS_Check_Data_Result[2]: 0x20662DF8U
  TS_Check_Data_Result[3]: 0x9BD7996EU
  TS_Check_Data_Result[4]: 0xA65A343DU
  TS_Check_Data_Result[5]: 0xEE688A78U
  TS_Check_Data_Result[6]: 0xFFFFFFFFU

 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_SCRC020056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
    <specobject>
      <id>TS_SCRC_FUNCENABLED_SCRC_CRC8</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_01/source/application/Appl.c</sourcefile>
      <sourceline>1360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   This test shall check the correct definitions of the macro
   SCRC_FUNCENABLED_SCRC_CRC8 and the function SCrc_CalculateCRC8.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

01 VP (EB_SCRC020006)
   SCRC_FUNCENABLED_SCRC_CRC8 shall be defined
   as a macro with STD_ON

02 VP (EB_SCRC020005)
   SCrc_CalculateCRC8 is not defined as a macro
   (i.e. SCrc_CalculateCRC8 is not mapped
   to a different function)


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_SCRC020005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>EB_SCRC020006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>TS_SCRC_FUNCENABLED_SCRC_CRC8H2F</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_01/source/application/Appl.c</sourcefile>
      <sourceline>1413</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   This test shall check the correct definition of the macro
   SCRC_FUNCENABLED_SCRC_CRC8H2F.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

01 VP (EB_SCRC020008)
   SCRC_FUNCENABLED_SCRC_CRC8H2F shall be defined
   as a macro with STD_ON

02 VP (EB_SCRC020007)
   SCrc_CalculateCRC8H2F is not defined as a macro
   (i.e. SCrc_CalculateCRC8H2F is not mapped
   to a different function)


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_SCRC020007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>EB_SCRC020008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>TS_SCRC_FUNCENABLED_SCRC_CRC16</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_01/source/application/Appl.c</sourcefile>
      <sourceline>1466</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   This test shall check the correct definitions of the macro
   SCRC_FUNCENABLED_SCRC_CRC16 and the function SCrc_CalculateCRC16.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

01 VP (EB_SCRC020012)
   SCRC_FUNCENABLED_SCRC_CRC16 shall be defined
   as a macro with STD_ON

02 VP (EB_SCRC020011)
   SCrc_CalculateCRC8 is not defined as a macro
   (i.e. SCrc_CalculateCRC16 is not mapped
   to a different function)


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_SCRC020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>EB_SCRC020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>TS_SCRC_FUNCENABLED_SCRC_CRC32P4</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_01/source/application/Appl.c</sourcefile>
      <sourceline>1519</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   This test shall check the correct definition of the macro
   SCRC_FUNCENABLED_SCRC_CRC32P4.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

01 VP (EB_SCRC020014)
   SCRC_FUNCENABLED_SCRC_CRC32P4 shall be defined
   as a macro with STD_ON

02 VP (EB_SCRC020013)
   SCrc_CalculateCRC32P4 is not defined as a macro
   (i.e. SCrc_CalculateCRC32P4 is not mapped
   to a different function)


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_SCRC020013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>EB_SCRC020014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>TS_SCRC_PublishedInformation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_01/source/application/Appl.c</sourcefile>
      <sourceline>1572</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check the correct definition of the common published information
    provided in the module header file.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: 
1. macro definition SCRC_VENDOR_ID
2. macro definition SCRC_SW_MAJOR_VERSION
3. macro definition SCRC_SW_MINOR_VERSION
4. macro definition SCRC_SW_PATCH_VERSION

Test Output: 
Test Pass Criteria:
1. SCRC_VENDOR_ID shall be defined
   with the value globally provided by the tooling
   environment
2. SCRC_SW_MAJOR_VERSION shall be defined
   with the value specified in config.mk
3. SCRC_SW_MINOR_VERSION shall be defined
   with the value specified in config.mk
4. SCRC_SW_PATCH_VERSION shall be defined
   with the value specified in config.mk
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_SCRC020050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>ASR_SCRC020048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_SCrc_ConTest_02_IncludeFiles</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_02_Includes/source/application/SCrc_ConTest_02_Includes.c</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check that:
   SCrc.h exclusively includes the files: Std_Types.h, SCrc_LocalSrcCfg.h
   SCrc_LocalSrcCfg.h exclusively includes the files: Std_Types.h;
   SCrc_CRC8.h exclusively includes the files: SCrc.h, MemMap.h;
   SCrc_CRC8H2F.h exclusively includes the files: SCrc.h, MemMap.h;
   SCrc_CRC16.h exclusively includes the files: SCrc.h, MemMap.h;
   SCrc_CRC32P4.h exclusively includes the files: SCrc.h, MemMap.h;
   SCrc.c exclusively includes the files: SCrc.h, SCrc_CRC8.h, SCrc_CRC8H2F.h,
                                          SCrc_CRC16.h, SCrc_CRC32P4.h;
 
Test Object: None.
Test Precondition: 
 
Test Execution: 

TS5 build process steps and verification points:
 1) Provide a reference file includesOf_SCrc.h.txt
    that contains the includes:
    Std_Types.h, SCrc_LocalSrcCfg.h
 2) Provide a reference file includesOf_SCrc_LocalSrcCfg.h.txt
    that contains the includes:
    Std_Types.h
 3) Provide a reference file includesOf_SCrc_CRC8.h.txt
    that contains the includes:
    SCrc.h, Crc.h, MemMap.h
 4) Provide a reference file includesOf_SCrc_CRC8H2F.h.txt
    that contains the includes:
    SCrc.h, Crc.h, MemMap.h
 5) Provide a reference file includesOf_SCrc_CRC16.h.txt
    that contains the includes:
    SCrc.h, Crc.h, MemMap.h
 6) Provide a reference file includesOf_SCrc_CRC32P4.h.txt
    that contains the includes:
    SCrc.h, Crc.h, MemMap.h
 7) Provide a reference file includesOf_SCrc.c.txt
    that contains the includes:
    SCrc.h, SCrc_CRC8.h, SCrc_CRC8H2F.h, MemMap.h
 8) Extract all includes of SCrc.h
 9) Extract all includes of SCrc_LocalSrcCfg.h
 10) Extract all includes of SCrc_CRC8.h
 11) Extract all includes of SCrc_CRC8H2F.h
 12) Extract all includes of SCrc_CRC16.h
 13) Extract all includes of SCrc_CRC32P4.h
 14) Extract all includes of SCrc.c
 15) Compare all includes of Step 8 with the
    reference file includesOf_SCrc.h.txt
    and store difference
    in file includesOf_SCrc.h.txt.diff.
 16) VP (EB_SCRC020002)
    Step 15 reveals no difference
    (i.e. includesOf_SCrc.h.txt.diff is empty)
 17) Compare all includes of Step 9 with the
    reference file includesOf_SCrc_LocalSrcCfg.h.txt
    and store difference
    in file includesOf_SCrc_LocalSrcCfg.h.txt.diff.
 18) VP (EB_SCRC020002)
    Step 17 reveals no difference
    (i.e. includesOf_SCrc_LocalSrcCfg.h.txt.diff is empty)
 19) Compare all includes of Step 10 with the
    reference file includesOf_SCrc_CRC8.h.txt
    and store difference
    in file includesOf_SCrc_CRC8.h.txt.diff.
 20) VP (EB_SCRC020002)
    Step 19 reveals no difference
    (i.e. includesOf_SCrc_CRC8.h.txt.diff is empty)
 21) Compare all includes of Step 11 with the
    reference file includesOf_SCrc_CRC8H2F.h.txt
    and store difference
    in file includesOf_SCrc_CRC8H2F.h.txt.diff.
 22) VP (EB_SCRC020002)
    Step 21 reveals no difference
    (i.e. includesOf_SCrc_CRC8H2F.h.txt.diff is empty)
 23) Compare all includes of Step 12 with the
    reference file includesOf_SCrc_CRC16.h.txt
    and store difference
    in file includesOf_SCrc_CRC16.h.txt.diff.
 24) VP (EB_SCRC020002)
    Step 23 reveals no difference
    (i.e. includesOf_SCrc_CRC16.h.txt.diff is empty)
 25) Compare all includes of Step 13 with the
    reference file includesOf_SCrc_CRC32P4.h.txt
    and store difference
    in file includesOf_SCrc_CRC32P4.h.txt.diff.
 26) VP (EB_SCRC020002)
    Step 25 reveals no difference
    (i.e. includesOf_SCrc_CRC32P4.h.txt.diff is empty)
 27) Compare all includes of Step 14 with the
    reference file includesOf_SCrc.c.txt
    and store difference
    in file includesOf_SCrc.c.txt.diff.
 28) VP (EB_SCRC020002)
    Step 27 reveals no difference
    (i.e. includesOf_SCrc.c.txt.diff is empty)
 29) Include comparison differences
    (i.e. includesOf_SCrc.h.txt.diff,
     includesOf_SCrc.h.txt.diff,
     includesOf_SCrc_LocalSrcCfg.h.txt.diff,
     includesOf_SCrc_CRC8.h.txt.diff,
     includesOf_SCrc_CRC8H2F.h.txt.diff,
     includesOf_SCrc_CRC16.h.txt.diff,
     includesOf_SCrc_CRC32P4.h.txt.diff,
     includesOf_SCrc.c.txt.diff)
 30) Compile this file
 31) VP (EB_SCRC020002)
     This file compiles without errors.
 32) Execute this test case
     Note:
     The test case always returns TS5ATL_RESULT_SUCCESS,
     because if one of the previous verification points
     fails, then the build process is aborted and an
     error is reported.

 
Test Input: 
 
Test Output: 
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_SCRC020002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_SCrc_ConTest_03_Files</id>
      <status>approved</status>
      <source>EB test case specification (asc_SCrc)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SCrc/test/ts5/Conformance/IN/SCrc_ConTest_03_Files/source/application/TS_E2E_ConTest_03_Files.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check that the SCrc module
   is built of the following files: SCrc.h, SCrc_LocalSrcCfg.h,
   SCrc_CRC8.h, SCrc_CRC8H2F.h, SCrc.c
 
Test Object: None.
Test Precondition: 
 
Test Execution: 

 TS5 build process steps and verification points:
  1) Provide a reference file SCrc_HeaderFiles.txt
     that contains: SCrc.h, SCrc_CRC8.h, SCrc_CRC16.h,
     SCrc_CRC8H2F.h, SCrc_CRC32P4.h, SCrc_LocalSrcCfg.h,
  2) Provide a reference file SCrc_SourceFiles.txt
     that contains: SCrc.c
  3) Search for all header files existing in the
     installed Tresos plugin of SCrc
  4) Search for all source files existing in the
     installed Tresos plugin of SCrc
  5) Compare the found files of Step 3 with the
     files listed in SCrc_HeaderFiles.txt
     and store the difference into
     SCrc_HeaderFiles.txt.diff.
  6) VP (EB_SCRC020001)
     Step 5 reveals no difference
     (i.e. SCrc_HeaderFiles.txt.diff is empty)
  7) Compare the found files of Step 4 with the
     files listed in SCrc_SourceFiles.txt
     and store the difference into
     SCrc_SourceFiles.txt.diff.
  8) VP (EB_SCRC020001)
     Step 7 reveals no difference
     (i.e. SCrc_SourceFiles.txt.diff is empty)
  9) Include comparison differences of Step 5 and Step 7
     (i.e. SCrc_HeaderFiles.txt.diff and
     SCrc_SourceFiles.txt.diff) within this file.
  10) Compile this file
  11) VP (EB_SCRC020001)
      This file compiles without errors.
  12) Execute this test case
      Note:
      The test case always returns TS5ATL_RESULT_SUCCESS,
      because if one of the previous verification points
      fails, then the build process is aborted and an
      error is reported.

 
Test Input: 
 
Test Output: 
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_SCRC020001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
